% Encoding: UTF-8

@InProceedings{Shin2021,
  author    = {Shin, Yong-Jun and Liu, Lingjun and Hyun, Sangwon and Bae, Doo-Hwan},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {Platooning LEGOs: An Open Physical Exemplar for Engineering Self-Adaptive Cyber-Physical Systems-of-Systems},
  year      = {2021},
  month     = {May},
  pages     = {231-237},
  abstract  = {Many modern systems interact with both cyber and physical environments. They are complex systems in which multiple constituent systems work together to achieve higher-level goals. These systems are called cyber-physical systems of systems (CPSoS). As the interest in CPSoS, such as platooning vehicles and robot-based smart factories, increases, engineering for adaptive goal achievement of CPSoS is needed. Common exemplars of a research community can facilitate research; however, existing exemplars of CPSoS are mostly based on virtual simulations. Although this allows researchers to share experimental scenarios and environments, it has the limitation that it is difficult to conduct experiments that reflect actual physical environments. To overcome this limitation, we propose a physical exemplar of an industrial CPSoS, called Platooning LEGOs, which employs platooning technology that is actively being developed by the autonomous driving industry. A platoon, in which independent vehicles drive together, achieves SoS-level goals through adaptive behavioral decisions of the vehicles. This exemplar provides a physical experimental environment that can be implemented with LEGOs. A simple LEGO assembly allows the use of real data from sensors and actuators, facilitating a focus on software engineering without considerable mechanical knowledge. Moreover, as this is an open exemplar, researchers can implement the same physical experimental environment with a limited budget and expand its physical or software elements. We provide system descriptions, physical and software implementation manuals, and sample experimental results of Platooning LEGOs.},
  doi       = {10.1109/SEAMS51251.2021.00038},
  issn      = {2157-2321},
  keywords  = {Mechanical sensors;Knowledge engineering;Adaptation models;Uncertainty;Manuals;Software;Autonomous vehicles;Platooning LEGOs;Self-adaptive system;Cyber-Physical System;System-of-Systems;Cyber-physical System-of-Systems;Lego;Exemplar;Experimental environment},
}

@InProceedings{Petrovska2021,
  author    = {Petrovska, Ana and Neuss, Malte and Gerostathopoulos, Ilias and Pretschner, Alexander},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {Run-time Reasoning from Uncertain Observations with Subjective Logic in Multi-Agent Self-Adaptive Cyber-Physical Systems},
  year      = {2021},
  month     = {May},
  pages     = {130-141},
  abstract  = {Modern society has become increasingly reliant on the omnipresent cyber-physical systems (CPSs), making it paramount that the contemporary autonomous and decentralized CPSs (e.g., robots, drones and self-driving cars) act reliably despite their exposure to a variety of run-time uncertainties. The sources of uncertainties could be internal, i. e., originating from the systems themselves, or external-unpredictable environments. Self-adaptive CPSs (SACPSs) modify their behavior or structure at run-time in response to the uncertainties mentioned above. The adaptation relies on gained knowledge from the observations that the SACPSs make during their operation. As a result, to build the knowledge, the need for run-time observations aggregation and reasoning emerges since the observations made by decentralized CPSs are uncertain, partial, and potentially conflicting. In response, in this paper, we propose a novel methodological approach for deriving or aggregating knowledge from uncertain observations in SACPSs utilizing the Subjective Logic. The effectiveness of the proposed approach is demonstrated through extensive evaluation on an in-house, multi-agent system from the robotics domain.},
  doi       = {10.1109/SEAMS51251.2021.00026},
  issn      = {2157-2321},
  keywords  = {Uncertainty;Cyber-physical systems;Cognition;Autonomous automobiles;Reliability;Robots;Software engineering;uncertainties;subjective logic;knowledge aggregation;self-adaptive systems;cyber-physical systems},
}

@InProceedings{Narayanankutty2021,
  author    = {Narayanankutty, Hrishikesh},
  booktitle = {2021 IEEE 18th International Conference on Software Architecture Companion (ICSA-C)},
  title     = {Self-Adapting Model-Based SDSec For IoT Networks Using Machine Learning},
  year      = {2021},
  month     = {March},
  pages     = {92-93},
  abstract  = {IoT networks today face a myriad of security vulnerabilities in their infrastructure due to its wide attack surface. Large-scale networks are increasingly adopting a Software-Defined Networking approach, it allows for simplified network control and management through network virtualization. Since traditional security mechanisms are incapable of handling virtualized environments, SDSec or Software-Defined Security is introduced as a solution to support virtualized infrastructure, specifically aimed at providing security solutions to SDN frameworks. To further aid large scale design and development of SDN frameworks, Model-Driven Engineering (MDE) has been proposed to be used at the design phase, since abstraction, automation and analysis are inherently key aspects of MDE. This provides an efficient approach to reducing large problems through models that abstract away the complex technicality of the total system. Making adaptations to these models to address security issues faced in IoT networks, largely reduces cost and improves efficiency. These models can be simulated, analysed and supports architecture model adaptation; model changes are then reflected back to the real system. We propose a model-driven security approach for SDSec networks that can self-adapt using machine learning to mitigate security threats. The overall design time changes can be monitored at run time through machine learning techniques (e.g. deep, reinforcement learning) for real time analysis. This approach can be tested in IoT simulation environments, for instance using the CAPS IoT modeling and simulation framework. Using self-adaptation of models and advanced machine learning for data analysis would ensure that the SDSec architecture adapts and improves over time. This largely reduces the overall attack surface to achieve improved end-to-end security in IoT environments.},
  doi       = {10.1109/ICSA-C52384.2021.00023},
  keywords  = {Adaptation models;Analytical models;Software architecture;Computer architecture;Reinforcement learning;Real-time systems;Model driven engineering;Model-Driven Engineering;SDN;SDSec;IoT;Self-Adaptation;Machine Learning;Security},
}

@InProceedings{Petrovska2021a,
  author    = {Petrovska, Ana and Weick, Julian},
  booktitle = {2021 IEEE International Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C)},
  title     = {Bayesian Optimization-Based Analysis and Planning Approach for Self-Adaptive Cyber-Physical Systems},
  year      = {2021},
  month     = {Sep.},
  pages     = {293-294},
  abstract  = {Modern cyber-physical systems (CPSs) operate in dynamic and uncertain environments or operational contexts. Therefore, it is necessary to design systems that self-adapt according to context changes at run-time. However, making a decision on the optimal adaptation in a changing and uncertain context is a complex task. This paper proposes a modular approach for analysis and planning, which generates the optimal system adaptations based on individual sub-decisions. Each sub-decision corresponds to a model @ RT that deals with specific aspects of the context relevant for the concrete adaptation. As a proof-of-concept, we introduce a multi-robot use case to show the possible performance gains of the suggested approach compared with non-adaptive analysis and planning.},
  doi       = {10.1109/ACSOS-C52956.2021.00077},
  keywords  = {Adaptation models;Computational modeling;Conferences;Cyber-physical systems;Performance gain;Planning;Bayes methods;models@RT;context;analysis and planning;Bayesian optimization;robotics system},
}

@InProceedings{Zhang2021,
  author    = {Zhang, Mingyue},
  booktitle = {2021 IEEE/ACM 43rd International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)},
  title     = {System Component-Level Self-Adaptations for Security via Bayesian Games},
  year      = {2021},
  month     = {May},
  pages     = {102-104},
  abstract  = {Security attacks present unique challenges to self-adaptive system design due to the adversarial nature of the environment. However, modeling the system as a single player, as done in prior works in security domain, is insufficient for the system under partial compromise and for the design of fine-grained defensive strategies where the rest of the system with autonomy can cooperate to mitigate the impact of attacks. To deal with such issues, we propose a new self-adaptive framework incorporating Bayesian game and model the defender (i.e., the system) at the granularity of components in system architecture. The system architecture model is translated into a Bayesian multi-player game, where each component is modeled as an independent player while security attacks are encoded as variant types for the components. The defensive strategy for the system is dynamically computed by solving the pure equilibrium to achieve the best possible system utility, improving the resiliency of the system against security attacks.},
  doi       = {10.1109/ICSE-Companion52605.2021.00047},
  issn      = {2574-1926},
  keywords  = {Computational modeling;Systems architecture;Games;Bayes methods;Security;System analysis and design;Software engineering;Self-adaptation;Bayesian game;Security},
}

@InProceedings{Gerostathopoulos2021,
  author    = {Gerostathopoulos, Ilias and Vogel, Thomas and Weyns, Danny and Lago, Patricia},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {How do we Evaluate Self-adaptive Software Systems?: A Ten-Year Perspective of SEAMS},
  year      = {2021},
  month     = {May},
  pages     = {59-70},
  abstract  = {With the increase of research in self-adaptive systems, there is a need to better understand the way research contributions are evaluated. Such insights will support researchers to better compare new findings when developing new knowledge for the community. However, so far there is no clear overview of how evaluations are performed in self-adaptive systems. To address this gap, we conduct a mapping study. The study focuses on experimental evaluations published in the last decade at the prime venue of research in software engineering for self-adaptive systems-the International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Results point out that specifics of self-adaptive systems require special attention in the experimental process, including the distinction of the managing system (i.e., the target of evaluation) and the managed system, the presence of uncertainties that affect the system behavior and hence need to be taken into account in data analysis, and the potential of managed systems to be reused across experiments, beyond replications. To conclude, we offer a set of suggestions derived from our study that can be used as input to enhance future experiments in self-adaptive systems.},
  doi       = {10.1109/SEAMS51251.2021.00018},
  issn      = {2157-2321},
  keywords  = {Uncertainty;Adaptive systems;Data analysis;Software systems;Reflection;Standards;Software engineering;self adaptive systems;evaluation;mapping study},
}

@InProceedings{Ayala2021a,
  author    = {Ayala, Inmaculada and Amor, Mercedes and Fuentes, Lidia and Papadopoulos, Alessandro V.},
  booktitle = {2021 26th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA )},
  title     = {Self-adapting Industrial Augmented Reality Applications with Proactive Dynamic Software Product Lines},
  year      = {2021},
  month     = {Sep.},
  pages     = {01-08},
  abstract  = {Industrial Augmented Reality (IAR) is a key enabling technology for Industry 4.0. However, its adoption poses several challenges because it requires the execution of computing-intensive tasks in devices with poor computational resources, which contributes to a faster draining of the device batteries. Proactive self-adaptation techniques could overcome these problems that affect the quality of experience by optimizing computational resources and minimizing user disturbance. In this work, we propose to apply ProDSPL, a proactive Dynamic Software Product Line, for the self-adaptation of IAR applications to satisfy the quality requirements. PRODSPL is compared against MODAGAME, a multi-objective DSPL approach that uses a genetic algorithm to generate quasi-optimal feature model configurations at runtime. The evaluation with randomly generated feature models running on mobile devices shows that PRODSPL gives results closer to the Pareto optimal than MODAGAME.},
  doi       = {10.1109/ETFA45728.2021.9613392},
  keywords  = {Runtime;Wearable computers;Pareto optimization;Software;Mobile handsets;Software product lines;Time factors;Industrial Augmented Reality;Dynamic Software Product Lines;Proactive Control;Self-Adaptation;Optimization},
}

@InProceedings{Bolender2021,
  author    = {Bolender, Tim and Bürvenich, Gereon and Dalibor, Manuela and Rumpe, Bernhard and Wortmann, Andreas},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {Self-Adaptive Manufacturing with Digital Twins},
  year      = {2021},
  month     = {May},
  pages     = {156-166},
  abstract  = {Digital Twins are part of the vision of Industry 4.0 to represent, control, predict, and optimize the behavior of Cyber-Physical Production Systems (CPPSs). These CPPSs are long-living complex systems deployed to and configured for diverse environments. Due to specific deployment, configuration, wear and tear, or other environmental effects, their behavior might diverge from the intended behavior over time. Properly adapting the configuration of CPPSs then relies on the expertise of human operators. Digital Twins (DTs) that reify this expertise and learn from it to address unforeseen challenges can significantly facilitate self-adaptive manufacturing where experience is very specific and, hence, insufficient to employ deep learning techniques. We leverage the explicit modeling of domain expertise through case-based reasoning to improve the capabilities of Digital Twins for adapting to such situations. To this effect, we present a modeling framework for self-adaptive manufacturing that supports modeling domain-specific cases, describing rules for case similarity and case-based reasoning within a modular Digital Twin. Automatically configuring Digital Twins based on explicitly modeled domain expertise can improve manufacturing times, reduce wastage, and, ultimately, contribute to better sustainable manufacturing.},
  doi       = {10.1109/SEAMS51251.2021.00029},
  issn      = {2157-2321},
  keywords  = {Deep learning;Adaptation models;Production systems;Runtime;Digital twin;Computer architecture;Cognition;Self-Adaptive Manufacturing;Digital Twins;Case-Based Reasoning;Domain-Specific Languages},
}

@InProceedings{Cardozo2021,
  author    = {Cardozo, Nicolás and Dusparic, Ivana},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {Adaptation to Unknown Situations as the Holy Grail of Learning-Based Self-Adaptive Systems: Research Directions},
  year      = {2021},
  month     = {May},
  pages     = {252-253},
  abstract  = {Self-adaptive systems continuously adapt to changes in their execution environment. Capturing all possible changes to define suitable behaviour beforehand is unfeasible, or even impossible in the case of unknown changes, hence human intervention may be required. We argue that adapting to unknown situations is the ultimate challenge for self-adaptive systems. Learning-based approaches are used to learn the suitable behaviour to exhibit in the case of unknown situations, to minimize or fully remove human intervention. While such approaches can, to a certain extent, generalize existing adaptations to new situations, there is a number of breakthroughs that need to be achieved before systems can adapt to general unknown and unforeseen situations. We posit the research directions that need to be explored to achieve unanticipated adaptation from the perspective of learning-based self-adaptive systems. At minimum, systems need to define internal representations of previously unseen situations on-the-fly, extrapolate the relationship to the previously encountered situations to evolve existing adaptations, and reason about the feasibility of achieving their intrinsic goals in the new set of conditions. We close discussing whether, even when we can, we should indeed build systems that define their own behaviour and adapt their goals, without involving a human supervisor.},
  doi       = {10.1109/SEAMS51251.2021.00041},
  issn      = {2157-2321},
  keywords  = {Adaptive systems;Software engineering;Self-adaptive systems;Reinforcement Learning},
}

@InProceedings{Bellini2021,
  author    = {Bellini, Emanuele and Bagnoli, Franco and Caporuscio, Mauro and Damiani, Ernesto and Flammini, Francesco and Linkov, Igor and Liò, Pietro and Marrone, Stefano},
  booktitle = {2021 IEEE International Conference on Cyber Security and Resilience (CSR)},
  title     = {Resilience learning through self adaptation in digital twins of human-cyber-physical systems},
  year      = {2021},
  month     = {July},
  pages     = {168-173},
  abstract  = {Human-Cyber-Physical-Systems (HPCS), such as critical infrastructures in modern society, are subject to several systemic threats due to their complex interconnections and interdependencies. Management of systemic threats requires a paradigm shift from static risk assessment to holistic resilience modeling and evaluation using intelligent, data-driven and run-time approaches. In fact, the complexity and criticality of HCPS requires timely decisions considering many parameters and implications, which in turn require the adoption of advanced monitoring frameworks and evaluation tools. In order to tackle such challenge, we introduce those new paradigms in a framework named RESILTRON, envisioning Digital Twins (DT) to support decision making and improve resilience in HCPS under systemic stress. In order to represent possibly complex and heterogeneous HCPS, together with their environment and stressors, we leverage on multi-simulation approaches, combining multiple formalisms, data-driven approaches and Artificial Intelligence (AI) modelling paradigms, through a structured, modular and compositional framework. DT are used to provide an adaptive abstract representation of the system in terms of multi-layered spatially-embedded dynamic networks, and to apply self-adaptation to time-warped What-If analyses, in order to find the best sequence of decisions to ensure resilience under uncertainty and continuous HPCS evolution.},
  doi       = {10.1109/CSR51186.2021.9527913},
  keywords  = {Adaptation models;Uncertainty;Digital twin;Decision making;Tools;Time factors;Artificial intelligence},
}

@Article{Zhou2020,
  author   = {Zhou, Peng and Zuo, Decheng and Hou, Kunmean and Zhang, Zhan and Dong, Jian},
  journal  = {IEEE Transactions on Reliability},
  title    = {Improving the Dependability of Self-Adaptive Cyber Physical System With Formal Compositional Contract},
  year     = {2020},
  issn     = {1558-1721},
  month    = {Sep.},
  number   = {3},
  pages    = {1130-1146},
  volume   = {69},
  abstract = {To adapt to the uncertain environment smartly and timely, cyber physical systems (CPSs) have to interact with the physical world in a decentralized but rigorous, organized way. Guaranteeing the timing reliability is key to achieve consensus on the order of distributed events, as well as dependable cooperative decision processing. Based on our hierarchically decentralized compositional self-adaptive framework, we propose a formal compositional reliability-contract-based solution to guarantee the timing reliability of event observation and decision processing in a large-scale, geographically distributed CPS. As the prophetic decision may not fit the local situation well because of the uncertainties, we propose a gradual contract optimization solution to refine the dependability, timeliness, and energy consumption. Following the seven proposed composition schemes, we employ the nondominated sorting genetic algorithm II (NSGA-II) algorithm to optimize arrangement of decision. Moreover, a topology-aware time reserving solution is applied to improve the resilience of processing time and to tolerance timing failures. Both simulation results and real-world testing are introduced to evaluate the efficacy of our proposal. We believe that the formal compositional contract will be a competitive CPS solution to analyze requirements and optimize the self-adaptation decision at runtime.},
  doi      = {10.1109/TR.2019.2930009},
  keywords = {Contracts;Timing;Actuators;Sensors;Runtime;Redundancy;Compositional contract;cyber physical systems (CPSs);model@run.time;NSGA-II;self-adaptation;timing reliability},
}

@InProceedings{Bures2021,
  author    = {Bureš, Tomáš},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {Self-Adaptation 2.0},
  year      = {2021},
  month     = {May},
  pages     = {262-263},
  abstract  = {This motion on the question whether “handling unanticipated changes is the ultimate challenge for self-adaptation” positions the research on self-adaptive systems in the broader context of the current research agenda (in the frame of Horizon Europe). It discusses the relation to AI and the need to align with and gain more prominence by building on the AI movement and bringing self-adaptation to the next level.},
  doi       = {10.1109/SEAMS51251.2021.00046},
  issn      = {2157-2321},
  keywords  = {Adaptive systems;Buildings;Europe;Artificial intelligence;Software engineering;self-adaptation;machine learning;position statement},
}

@InProceedings{Engels2021,
  author    = {Engels, Gregor},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {Predict the Future: Preventing unanticipated changes is the ultimate challenge for self-adaptive systems},
  year      = {2021},
  month     = {May},
  pages     = {260-261},
  abstract  = {Systems interact with their environment. This might lead to unanticipated events as system models usually cover only to a certain extent the dependencies of a system with the environment. We argue that many of these unanticipated events might become predictable in case we handle current and in particular past behavior of the environment by digital twins. We propose to refine the traditional MAPE-K architecture towards a MAPE-Twin architecture. Thus, the traditional knowledge component becomes an analyzable repository of behavior which allows to predict potential events in the future and to deal with them in a predefined way. Thus, the ultimate challenge for self-adaptive systems are not unanticipated changes, but the prediction of future behavior of a system and its environment.},
  doi       = {10.1109/SEAMS51251.2021.00045},
  issn      = {2157-2321},
  keywords  = {Adaptive systems;Digital twin;Computer architecture;Software engineering;digital twin;predictive analytics;MAPE-K;MAPE-Twin;unanticipated change},
}

@InProceedings{Elkhatib2021,
  author    = {Elkhatib, Yehia and Elhabbash, Abdessalam},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {If a System is Learning to Self-adapt, Who's Teaching?},
  year      = {2021},
  month     = {May},
  pages     = {256-257},
  abstract  = {Self-adaptation is increasingly driven by machine-learning methods. We argue that the ultimate challenge for self-adaptation currently is to retain the human in the loop just enough to ensure sound evolution of automated self-adaptation.},
  doi       = {10.1109/SEAMS51251.2021.00043},
  issn      = {2157-2321},
  keywords  = {Adaptive systems;Education;Machine learning;Software engineering;self-adaptation;self-adaptive systems;autonomous systems;machine learning;deep learning},
}

@InProceedings{Cheng2021,
  author    = {Cheng, Shang-Wen},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {Change Is the Ultimate Self-Adaptive Challenge},
  year      = {2021},
  month     = {May},
  pages     = {254-255},
  abstract  = {This paper argues that change alone is sufficiently difficult; simply, handling change, i.e., anticipated changes, remains the ultimate challenge of self-adaptation.},
  doi       = {10.1109/SEAMS51251.2021.00042},
  issn      = {2157-2321},
  keywords  = {Adaptive systems;Software engineering;self adaptive system;ultimate challenge;anticipated change},
}

@InProceedings{Riaz2021,
  author    = {Riaz, Abdur Rehman and Rauf, Asma and Gilani, Syed Mushhad M. and Bashir, Muhammad Bilal},
  booktitle = {2021 4th International Conference on Computing Information Sciences (ICCIS)},
  title     = {Techniques and Methodologies of Self-Adaptive Software and its Architecture: A Survey},
  year      = {2021},
  month     = {Nov},
  pages     = {1-5},
  abstract  = {Nowadays, due to the continuously changing en-vironment, modern software systems can work in a dynamic environment. But many changes occur at runtime so, to handle the changes self-adaptive mechanism plays an important role. To encounter the requirement of rapid application development adaptive software is used widely. Adaptive software architecture is based on three steps speculate, collaborate, learn. There are a lot of techniques for adaptive software architecture most appropriate technique is selected by comparing them. In this paper, we perform a survey on different research papers related to the self-adaptive system and self-adaptive architecture. After studied the techniques gaps in the literature are identified and compare those techniques. Different common parameters are identified and considered by studying literature. Then these parameters are used to analyze survey techniques which is helpful for researchers and future directions in this area.},
  doi       = {10.1109/ICCIS54243.2021.9676190},
  keywords  = {Adaptive systems;Runtime;Software architecture;Computer architecture;Software systems;Adaptive system;Adaptive Software;Software Architecture;Self-Adaptation;Dynamically adaptive systems},
}

@InProceedings{Junior2021,
  author    = {Junior, Evilasio Costa and de Castro Andrade, Rossana Maria and Rocha, Leonardo Sampaio},
  booktitle = {2021 IEEE 9th International Conference on Healthcare Informatics (ICHI)},
  title     = {Development Process for Self-adaptive Applications of the Internet of Health Things based on Movement Patterns},
  year      = {2021},
  month     = {Aug},
  pages     = {437-438},
  abstract  = {This study proposes a development process for self-adaptive IoHT applications based on movement pattern data for mobile devices. The proposed process adapts the component reuse-oriented development process by adding elements related to the construction of self-adaptive systems. Also, we propose five artifacts to support this process: a taxonomy relating data from sensors and health status to assist; a correlation graph between sensor data, movement features, and health situations, to assist the choice of components and serving as a knowledge base for self-adaptive application; a template for building adaptation rules; a model based on the MAPE-K adaptation cycle; and a framework based on the model, for assisting the implementation phase. The evaluation of the proposed process will be done using proofs of concept and an experiment.},
  doi       = {10.1109/ICHI52183.2021.00073},
  issn      = {2575-2634},
  keywords  = {Adaptation models;Taxonomy;Knowledge based systems;Medical services;Sensor phenomena and characterization;Data models;Software;Software Engineering;Internet of Health Things;Self-Adaptive Systems;Digital Health},
}

@InProceedings{Suresh2020a,
  author    = {Suresh, Geethu M and Madhavu, Minu Lalitha},
  booktitle = {2020 11th International Conference on Computing, Communication and Networking Technologies (ICCCNT)},
  title     = {AI Based Intrusion Detection System Using Self-Adaptive Energy Efficient BAT Algorithm for Software Defined IoT Networks},
  year      = {2020},
  month     = {July},
  pages     = {1-6},
  abstract  = {A software defined IoT network can be considered as global controller managing all the tasks of the network like resource sharing, traffic management and effective utilization of individual IoT devices connected to the network. As the network involves transmission of potential data intrusions and other vulnerabilities may arise. Traditional systems uses a standard dataset and uses evolutionary and population based algorithms for feature selection like BAT and well known classification algorithms to classify traffic as normal or attack. We propose a novel self-adaptive energy efficient BAT algorithm for achieving optimization in BAT Algorithm for Feature selection. Existing system uses swarm division for dataset clustering. But when the network traffic increases the number of features increases and non-continuous features will result. Hence swarm division doesn't works well. So a self-adaptive parallel processing strategy with energy efficiency is proposed which optimizes the existing BAT algorithm. To handle complex batch process loops within BAT algorithms, a fitness based task parallelism is implemented to get the most benefit in terms of scalability and energy efficiency.},
  doi       = {10.1109/ICCCNT49239.2020.9225415},
  keywords  = {Feature extraction;Classification algorithms;Intrusion detection;Energy efficiency;Software;Task analysis;Software algorithms;Artificial Intelligence;IoT;Software Defined Networks;Self-Adaptive;Energy Efficient;BAT Algorithm},
}

@InProceedings{Liu2020,
  author    = {Liu, Renping and Chen, Xianzhang and Tan, Yujuan and Zhang, Runyu and Liang, Liang and Liu, Duo},
  booktitle = {2020 IEEE International Parallel and Distributed Processing Symposium (IPDPS)},
  title     = {SSDKeeper: Self-Adapting Channel Allocation to Improve the Performance of SSD Devices},
  year      = {2020},
  month     = {May},
  pages     = {966-975},
  abstract  = {Solid state drives (SSDs) have been widely deployed in high performance data center environments, where multiple tenants usually share the same hardware. However, traditional SSDs distribute the users' incoming data uniformly across all SSD channels, which leads to numerous access conflicts. Meanwhile, SSDs that statically allocate one or several channels to one tenant sacrifice device parallelism and capacity. When SSDs are shared by tenants with different access patterns, inappropriate channel allocation results in SSDs performance degradation. In this paper, we propose a self-adapting channel allocation mechanism, named SSDKeeper, for multiple tenants to share one SSD. SSDKeeper employs a machine learning assisted algorithm to take full advantage of SSD parallelism while providing performance isolation. By collecting multi-tenant access patterns and training a model, SSDKeeper selects an optimal channel allocation strategy for multiple tenants with the lowest overall response latency. Experimental results show that SSDKeeper improves the overall performance by 24% with negligible overhead.},
  doi       = {10.1109/IPDPS47924.2020.00103},
  issn      = {1530-2075},
  keywords  = {Channel allocation;Performance evaluation;Hardware;Parallel processing;Optimization;Training;Neural networks},
}

@InProceedings{Petrovska2021b,
  author    = {Petrovska, Ana},
  booktitle = {2021 IEEE International Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C)},
  title     = {Self-Awareness as a Prerequisite for Self-Adaptivity in Computing Systems},
  year      = {2021},
  month     = {Sep.},
  pages     = {146-149},
  abstract  = {Establishing a better understanding of self-aware and self-adaptive systems is the first step towards specifying, modelling, designing and engineering these systems in the future. Although there might be some intuition behind the notions of awareness and adaptivity, there is a lack of clear definition and differentiation of these terms. In particular, the notion of awareness has been extensively studied in psychology and philosophy; however, a more rigorous understanding of this terminology is necessary for scientific debates in engineering. In this paper, by giving insights into how self-adaptive systems differ from the ordinary systems that are considered as non-adaptive, we set the foundation for understanding and differentiating self-awareness and self-adaptivity as two correlated but still different terms. We identify the system's self-awareness as a prerequisite for self-adaptivity and define two levels of awareness in computing systems.},
  doi       = {10.1109/ACSOS-C52956.2021.00039},
  keywords  = {Adaptation models;Philosophical considerations;Terminology;Conferences;Psychology;Focusing;Modeling;self-awareness;self-adaptivity;computing systems;software and systems engineering},
}

@InProceedings{Scheerer2021,
  author    = {Scheerer, Max and Reussner, Ralf},
  booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  title     = {Reliability Prediction of Self-Adaptive Systems Managing Uncertain AI Black-Box Components},
  year      = {2021},
  month     = {May},
  pages     = {111-117},
  abstract  = {Advances in Artificial Intelligence (AI) are associated with a growing complexity of AI models, at the expense of transparency and comprehensibility. The black-box nature of AI components is of particular concern in safety-critical applications, as it can not be guaranteed whether a prediction is correct or not. Incorrect predictions, however, can have serious consequences, e.g., fatal collisions in autonomous driving. Therefore, we propose a novel method for safeguarding AI black-box components based on monitoring input data by using Self-Adaptive Systems (SAS). The presented concepts serve not only as a starting point for runtime approaches (e.g., models at runtime), but also for design-time approaches. As second contribution, we propose an approach for the validation of reconfiguration strategies of SAS's managing uncertain AI black-box components w.r.t. reliability objectives at design-time. We demonstrate the applicability of our approach by a proof-of-concept.},
  doi       = {10.1109/SEAMS51251.2021.00024},
  issn      = {2157-2321},
  keywords  = {Analytical models;Runtime;Predictive models;Reliability engineering;Software reliability;Complexity theory;Artificial intelligence;Self-adaptive systems;reliable machine learning;model-based reliability analysis;design-time analysis;AI black-box models},
}

@InProceedings{Alkhabbas2020,
  author    = {Alkhabbas, Fahed and Murturi, Ilir and Spalazzese, Romina and Davidsson, Paul and Dustdar, Schahram},
  booktitle = {2020 IEEE International Conference on Software Architecture (ICSA)},
  title     = {A Goal-Driven Approach for Deploying Self-Adaptive IoT Systems},
  year      = {2020},
  month     = {March},
  pages     = {146-156},
  abstract  = {Engineering Internet of Things (IoT) systems is a challenging task partly due to the dynamicity and uncertainty of the environment including the involvement of the human in the loop. Users should be able to achieve their goals seamlessly in different environments, and IoT systems should be able to cope with dynamic changes. Several approaches have been proposed to enable the automated formation, enactment, and self-adaptation of goal-driven IoT systems. However, they do not address deployment issues. In this paper, we propose a goal-driven approach for deploying self-adaptive IoT systems in the Edge-Cloud continuum. Our approach supports the systems to cope with the dynamicity and uncertainty of the environment including changes in their deployment topologies, i.e., the deployment nodes and their interconnections. We describe the architecture and processes of the approach and the simulations that we conducted to validate its feasibility. The results of the simulations show that the approach scales well when generating and adapting the deployment topologies of goal-driven IoT systems in smart homes and smart buildings.},
  doi       = {10.1109/ICSA47634.2020.00022},
  keywords  = {Topology;Cloud computing;Computer architecture;Internet of Things;Buildings;Adaptation models;Software;Deploying Self adaptive IoT Systems;Goal driven IoT Systems;Edge-Cloud Continuum;Software Architecture},
}

@InProceedings{VanDeSijpe2020,
  author    = {Van De Sijpe, Jelle and Weyns, Danny},
  booktitle = {2020 IEEE International Conference on Autonomic Computing and Self-Organizing Systems Companion (ACSOS-C)},
  title     = {dTAS: A Decentralized Self-Adaptive Service-Based System Exemplar},
  year      = {2020},
  month     = {Aug},
  pages     = {224-225},
  abstract  = {Research of self-adaptive systems can benefit from different exemplars to test and compare research methods and results. Although the number of exemplars for this area is rising, the exemplars for decentralized self-adaptive systems are limited. To that end, we introduce dTAS (decentralized Tele-Assistance System), an exemplar in the domain of service-based systems that targets decentralized adaptation of entities equipped with a classic MAPE-K feedback loop. dTAS offers predefined features that enable users to specify systems and plug in MAPE components with protocols to coordinate adaptation using different coordination patterns. We illustrate the exemplar for a scenario with three entities where the planner components coordinate the adaptation to realize their adaptation goals.},
  doi       = {10.1109/ACSOS-C51401.2020.00060},
  keywords  = {Feedback loop;Protocols;Monitoring;Biomedical monitoring;Adaptation models;Reliability;Drugs;self-adaptation;MAPE-K loop;decentralized adaptation;coordination patterns;service-based system},
}

@Article{Krupitzer2020,
  author   = {Krupitzer, Christian and Temizer, Timur and Prantl, Thomas and Raibulet, Claudia},
  journal  = {IEEE Access},
  title    = {An Overview of Design Patterns for Self-Adaptive Systems in the Context of the Internet of Things},
  year     = {2020},
  issn     = {2169-3536},
  pages    = {187384-187399},
  volume   = {8},
  abstract = {The Internet of Things (IoT) requires the integration of all available, highly specialized, and heterogeneous devices, ranging from embedded sensor nodes to servers in the cloud. The self-adaptive research domain provides adaptive capabilities that can support the integration in IoT systems. However, developing such systems is a challenging, error-prone, and time-consuming task. In this context, design patterns propose already used and optimized solutions to specific problems in various contexts. Applying design patterns might help to reuse existing knowledge about similar development issues. However, so far, there is a lack of taxonomies on design patterns for self-adaptive systems. To tackle this issue, in this paper, we provide a taxonomy on design patterns for self-adaptive systems that can be transferred to support adaptivity in IoT systems. Besides describing the taxonomy and the design patterns, we discuss their applicability in an Industrial IoT case study.},
  doi      = {10.1109/ACCESS.2020.3031189},
  keywords = {Synthetic aperture sonar;Software;Internet of Things;Monitoring;Taxonomy;Uncertainty;Software engineering;Design patterns;Internet of Things;IoT;self-adaptive systems;software engineering},
}

@InProceedings{2020,
  booktitle = {2020 Seventh International Conference on Software Defined Systems (SDS)},
  title     = {Keynote 3: Towards a hybrid Edge-Cloud platform for Self-Adaptive Machine Learning based IoT applications},
  year      = {2020},
  month     = {April},
  pages     = {3-3},
  abstract  = {Provides an abstract of the keynote presentation and may include a brief professional biography of the presenter. The complete presentation was not made available for publication as part of the conference proceedings.},
  doi       = {10.1109/SDS49854.2020.9143905},
}

@Article{Flammini2020,
  author   = {Francesco Flammini and Stefano Marrone and Roberto Nardone and Mauro Caporuscio and Mirko D’Angelo},
  journal  = {Future Generation Computer Systems},
  title    = {Safety integrity through self-adaptation for multi-sensor event detection: Methodology and case-study},
  year     = {2020},
  issn     = {0167-739X},
  pages    = {965-981},
  volume   = {112},
  abstract = {Traditional safety-critical systems are engineered in a way to be predictable in all operating conditions. They are common in industrial automation and transport applications where uncertainties (e.g., fault occurrence rates) can be modeled and precisely evaluated. Furthermore, they use high-cost hardware components to increase system reliability. On the contrary, future systems are increasingly required to be “smart” (or “intelligent”) that is to adapt to new scenarios, learn and react to unknown situations, possibly using low-cost hardware components. In order to move a step forward to fulfilling those new expectations, in this paper we address run-time stochastic evaluation of quantitative safety targets, like hazard rate, in self-adaptive event detection systems by using Bayesian Networks and their extensions. Self-adaptation allows changing correlation schemes on diverse detectors based on their reputation, which is continuously updated to account for performance degradation as well as modifications in environmental conditions. To that aim, we introduce a specific methodology and show its application to a case-study of vehicle detection with multiple sensors for which a real-world data-set is available from a previous study. Besides providing a proof-of-concept of our approach, the results of this paper pave the way to the introduction of new paradigms in the dynamic safety assessment of smart systems.},
  doi      = {https://doi.org/10.1016/j.future.2020.06.036},
  keywords = {Decision fusion, Performance evaluation, Run-time models, Bayesian networks, Cyber–physical systems, Intelligent transportation},
  url      = {https://www.sciencedirect.com/science/article/pii/S0167739X19333734},
}

@Article{Chen2020,
  author   = {Xing Chen and Haijiang Wang and Yun Ma and Xianghan Zheng and Longkun Guo},
  journal  = {Future Generation Computer Systems},
  title    = {Self-adaptive resource allocation for cloud-based software services based on iterative QoS prediction model},
  year     = {2020},
  issn     = {0167-739X},
  pages    = {287-296},
  volume   = {105},
  abstract = {Emerging cloud-based software services have proposed request for self-adaptive resource allocation that provides to dynamically adjust resources on demand. Traditional self-adaptive resource allocation methods are rule-driven that they combine expert knowledge with a separate set of management rules for each software, leading to high implementation complexity and administrative cost. Recent researches on self-adaptive resource allocation mainly focus on machine learning and control theory. However, machine learning techniques require plenty training data, which in many cases is insufficient and leads to low accuracy of QoS prediction model as well as the ineffectiveness of resource allocation, while resource allocation based on control theory needs a large number of iterations, resulting in a high overhead such as frequent virtual machine switches. This paper proposes a self-adaptive resource allocation method that is actually a framework composed of feedback loops, each of which goes through our designed iterative QoS prediction model and PSO-based runtime decision algorithm. In contrast to previous QoS prediction models which predict a QoS value once and for all, ours improves the predicted QoS value in iterations towards the best one. In the prediction, we first use the workload, the allocated resource, the real QoS value and an operation of resource allocation to produce a QoS value. Then we employ PSO-based runtime decision algorithm together with the predicted QoS value to determine future resource allocation operations. The loops iterate until the PSO-based algorithm suggests no further improvement over the current resource allocation. We evaluate our approach on RUBiS benchmark, illustrating that based on the same historical data, our method can achieve a better QoS prediction accuracy that is 15% higher than the current state of the art. Moreover, it is also shown the effectiveness of cloud application resource allocation is improved by roughly 5%–6%.},
  doi      = {https://doi.org/10.1016/j.future.2019.12.005},
  keywords = {Cloud computing, Self-adaptive resource allocation, QoS prediction model, Runtime decision algorithm},
  url      = {https://www.sciencedirect.com/science/article/pii/S0167739X19302894},
}
@article{PIMENTEL2021102594,
title = {Preface to the Special Issue on Coordination and Self-Adaptiveness of Software Applications},
journal = {Science of Computer Programming},
volume = {204},
pages = {102594},
year = {2021},
issn = {0167-6423},
doi = {https://doi.org/10.1016/j.scico.2020.102594},
url = {https://www.sciencedirect.com/science/article/pii/S0167642320302021},
author = {Ernesto Pimentel and Jacopo Soldani}
}
@article{BESPALOV2021373,
title = {T-IFISS: a toolbox for adaptive FEM computation},
journal = {Computers & Mathematics with Applications},
volume = {81},
pages = {373-390},
year = {2021},
note = {Development and Application of Open-source Software for Problems with Numerical PDEs},
issn = {0898-1221},
doi = {https://doi.org/10.1016/j.camwa.2020.03.005},
url = {https://www.sciencedirect.com/science/article/pii/S0898122120301036},
author = {Alex Bespalov and Leonardo Rocchi and David Silvester},
keywords = {Finite elements, Stochastic Galerkin methods, A posteriori error estimation, Adaptive methods, Goal-oriented adaptivity, Mathematical software},
abstract = {T-IFISS is a finite element software package for studying finite element solution algorithms for deterministic and parametric elliptic partial differential equations. The emphasis is on self-adaptive algorithms with rigorous error control using a variety of a posteriori error estimation techniques. The open-source MATLAB framework provides a computational laboratory for experimentation and exploration, enabling users to quickly develop new discretizations and test alternative algorithms. The package is also valuable as a teaching tool for students who want to learn about state-of-the-art finite element methodology.}
}
@article{ZAVALA2020607,
title = {HAFLoop: An architecture for supporting Highly Adaptive Feedback Loops in self-adaptive systems},
journal = {Future Generation Computer Systems},
volume = {105},
pages = {607-630},
year = {2020},
issn = {0167-739X},
doi = {https://doi.org/10.1016/j.future.2019.12.026},
url = {https://www.sciencedirect.com/science/article/pii/S0167739X19318448},
author = {Edith Zavala and Xavier Franch and Jordi Marco and Christian Berger},
keywords = {Self-adaptive system, Smart vehicle, IoT system, Adaptive monitoring, Adaptive feedback loop, Self-improvement},
abstract = {Most of the current self-adaptive systems (SASs) rely on static feedback loops such as the IBM’s MAPE-K loop for managing their adaptation process. Static loops do not allow SASs to react to runtime events such as changing adaptation requirements or MAPE-K elements’ faults. In order to address this issue, some solutions have emerged for manually or automatically perform changes on SASs’ feedback loops. However, from the software engineering perspective, most of the proposals cannot be reused or extended by other SASs. In this paper, we present HAFLoop (Highly Adaptive Feedback control Loop), a generic architectural proposal that aims at easing and fastening the design and implementation of adaptive feedback loops in modern SASs. Our solution enables both structural and parameter adaptation of the loop elements. Moreover, it provides a highly modular design that allows SASs’ owners to support a variety of feedback loop settings from centralized to fully decentralized. In this work, HAFLoop has been implemented as a framework for Java-based systems and evaluated in two emerging software application domains: self-driving vehicles and IoT networks. Results demonstrate that our proposal easies and accelerates the development of adaptive feedback loops as well as how it could help to address some of the most relevant challenges of self-driving vehicles and IoT applications. Concretely, HAFLoop has demonstrated to improve SASs’ feedback loops’ runtime availability and operation.}
}
@article{RESTREPO2021111010,
title = {A sustainable-development approach for self-adaptive cyber–physical system’s life cycle: A systematic mapping study},
journal = {Journal of Systems and Software},
volume = {180},
pages = {111010},
year = {2021},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2021.111010},
url = {https://www.sciencedirect.com/science/article/pii/S0164121221001072},
author = {Luisa Restrepo and Jose Aguilar and Mauricio Toro and Elizabeth Suescún},
keywords = {Self-adaptive systems, Sustainability, Cyber–physical systems, Systems-development life-cycle},
abstract = {Cyber–Physical Systems (CPS) refer to a new generation of systems where the cyber and physical layers are –strongly– interconnected. The development of these systems requires two fundamental parts. First, the design of sustainable architectures –centered on adaptation, throughout a System-Development Life-Cycle (SDLC)– to develop robust and economically profitable products. Second, the use of self-adaptive techniques to adjust CPSs to the evolving circumstances of their operation context. This work presents a systematic mapping study (SMS) that discusses different approaches used to develop self-adaptive CPSs (SA-CPSs) at each stage of the SDLC, focused on sustainability. The results show trends such as (i) Designs are not limited to particular application domains, (ii) Performance was the most commonly used attribute, and (iii) Monitor–Analyze–Plan–Execute over a shared Knowledge (MAPE-K) is the predominant feedback loop applied in the cyber layer. The results also raise challenges such as (i) How to design and evaluate sustainable SA-CPSs, (ii) How to apply unit and integration testing in the development of SA-CPSs, and (iii) How to develop feedback loops on SA-CPSs with the integration of machine-learning techniques.}
}
@article{ALIDOOSTNIA2021102177,
title = {Resilient monitoring in self-adaptive systems through behavioral parameter estimation},
journal = {Journal of Systems Architecture},
volume = {118},
pages = {102177},
year = {2021},
issn = {1383-7621},
doi = {https://doi.org/10.1016/j.sysarc.2021.102177},
url = {https://www.sciencedirect.com/science/article/pii/S1383762121001272},
author = {Mehran {Alidoost Nia} and Mehdi Kargahi and Alessandro Abate},
keywords = {Self-adaptive systems, Monitoring faults, Runtime verification, Pattern-matching, Parameter estimation},
abstract = {Cyber-physical systems need self-adaptation as a mean to autonomously deal with changes. For runtime adaptation, a cyber-physical system repeatedly monitors the environment for detecting possible changes. Faults in the monitoring devices due to the dynamic and uncertain environment is very likely, necessitating resilient monitoring. In this paper, we discuss imperfect monitoring in self-adaptive systems, and propose a model-driven methodology to represent the self-adaptive system using a parametric Markov decision process, where the changes are reflected by a set of model parameters. Fault in the monitoring device may result in some parameter valuation miss. We propose a comprehensive framework for parameter estimation using behavioral patterns of the system implemented by a pattern-matching component. The proposed method simulates the current behavior of the system using random walk patterns, and matches it to a history of patterns for estimating the valuation of the omitted data. The results show that the accuracy of the framework is evaluated about 96% under imperfect monitoring. In addition, we elaborate a set of theoretical proofs to support rigorous error analysis, and determine a certain upper-bound of errors to guarantee an accurate decision-making outcome. We establish a logical connection between the error and the accuracy of decisions, and introduce tolerable error metric that is used to guarantee the accuracy of decisions under estimation.}
}
@article{BALLESTEROS2020103494,
title = {Evolving dynamic self-adaptation policies of mHealth systems for long-term monitoring},
journal = {Journal of Biomedical Informatics},
volume = {108},
pages = {103494},
year = {2020},
issn = {1532-0464},
doi = {https://doi.org/10.1016/j.jbi.2020.103494},
url = {https://www.sciencedirect.com/science/article/pii/S1532046420301222},
author = {Joaquin Ballesteros and Inmaculada Ayala and Juan Rafael Caro-Romero and Mercedes Amor and Lidia Fuentes},
keywords = {Context awareness, Fuzzy systems, Mobile applications, Reconfigurable architectures, Internet of Things, Activity recognition, Wearable computers, Ubiquitous computing, Software product lines, Adaptive systems, Assistive technology},
abstract = {Tele-rehabilitation can complement traditional rehabilitation therapies by providing valuable information that can help in the evaluation, monitoring, and treatment of patients. Many patient tele-monitoring systems that integrate wearable technology are emerging as an effective tool for the long-term surveillance of rehabilitation progression, enabling continuous sampling of patient real-time movement in a non-invasive way, without affecting the normal daily activity of the outpatient, who, therefore, will not need to make frequent clinic visits. One of the main challenges of tele-rehabilitation systems is to pay special attention to the diversity of dysfunctions in patients by offering devices with customized behaviours adaptable to the physical conditions of each patient at the different stages of the rehabilitation therapy. Long-term monitoring systems need an adaptation policy to autonomously reconfigure their behaviour according to vital signs read during the physical activity of the patient, the remaining battery level, or the required accuracy of collected data. However, it would alsobe desirable to adjust such adaptation policies over time, according to the patient’s evolution. This work presents a wearable patient-monitoring system for tele-rehabilitation that is able to dynamically self-configure its internal behaviour to the current context of the outpatient according to a set of adaptation policies that optimize battery consumption, taking into account other QoS parameters at the same time. Our system is also able to self-adapt its internal adaptation policies as a patient’s condition improves, while maintaining the system’s efficiency. We illustrate our proposal with a real mHealth case study. The results of the experiments show that the system updates the adaptation policies, taking into account specific indicators of the disease. The validation results show that the evolution of the self-adaptation policies correlates with the progression of different patients.}
}
@article{DENIZIAK2021114184,
title = {Synthesis of self-adaptable energy aware software for heterogeneous multicore embedded systems},
journal = {Microelectronics Reliability},
volume = {123},
pages = {114184},
year = {2021},
issn = {0026-2714},
doi = {https://doi.org/10.1016/j.microrel.2021.114184},
url = {https://www.sciencedirect.com/science/article/pii/S0026271421001505},
author = {Stanisław Deniziak and Leszek Ciopiński},
keywords = {Self-adaptivity, Embedded system, Developmental genetic programing, Multicore system},
abstract = {Contemporary embedded systems work in changing environments, some features (e.g., execution time, power consumption) of the system are often not completely predictable. Therefore, for systems with strong constraints, a worst-case design is applied. We observed that by enabling the self-adaptivity we may obtain highly optimized systems still guaranteeing the high quality of service. This paper presents a method of synthesis of real-time software for self-adaptive multicore systems. The method assumes that the system specification is given as a task graph. Then, the tasks are scheduled on a multicore architecture consisting of low-power and high-performance cores. We apply the developmental genetic programming to generate the self-adaptive scheduler and the initial schedule. The initial schedule is optimized, taking into consideration the power consumption, the real-time constraints as well as the self-adaptivity. The scheduler modifies the schedule during the system execution, whenever execution time of the recently finished task occurs other than assumed during the initial scheduling. We propose two models of self-adaptivity: self-optimization of power consumption and self-adaptivity of real-time scheduling. We present some experimental results for standard benchmarks, showing the advantages of our method in comparison with the worst case design used in existing approaches.}
}
@article{PIUMATTI2020113962,
title = {An efficient strategy for the development of software test libraries for an automotive microcontroller family},
journal = {Microelectronics Reliability},
volume = {115},
pages = {113962},
year = {2020},
issn = {0026-2714},
doi = {https://doi.org/10.1016/j.microrel.2020.113962},
url = {https://www.sciencedirect.com/science/article/pii/S0026271420307939},
author = {D. Piumatti and E. Sanchez and P. Bernardi and R. Martorana and M.A. Pernice},
keywords = {Automotive microcontroller ISO26262 test, In-field self-test, On-line self-test, Reliability and testing},
abstract = {With the introduction of the ISO26262 standard in the automotive field, numerous solutions for the in-field and on-line testing have been proposed. Among the several test solutions available, the Built-In Self-Test (BIST) approach is the most used for manufacturing test of chips, while the Software-Based Self-Test (SBST) approach is the most commonly used for on-line test the modern processors. This paper faces a very concrete problem concerning SBST development. In order to address more market demands, semiconductor industries are usually developing families of microcontroller, usually based on similar processors, instead of a single instance. This variety of architectures makes the development of SBST programs a repetitive, time and human consuming activity. The main aim of this work is to propose a methodology according with the SBST paradigm that permits to develop test programs able to achieve high coverage on different microcontrollers of the same family. The developed test programs are not showing any significant drop in coverage performance when they are used on different processors included in product of the same microcontroller family. The approach is based on the analysis of the processor hierarchy to identify the common units between the processors of the same family, first of all looking at those that show design differences. The module classification permits than to plan the most effective SBST development. A segment of industrial microcontrollers developed by STMicroelectronics for the automotive field, adapting many processors belonging to the same processor family, is used as a case of study. The experimental results demonstrate the effectiveness of the proposed approach, i.e., to reach the same fault coverage figures over many processors while dramatically reducing the development time.}
}
@article{PORTER2021106476,
title = {A decentralized approach for discovering runtime software architectural models of distributed software systems},
journal = {Information and Software Technology},
volume = {131},
pages = {106476},
year = {2021},
issn = {0950-5849},
doi = {https://doi.org/10.1016/j.infsof.2020.106476},
url = {https://www.sciencedirect.com/science/article/pii/S0950584920302202},
author = {Jason Porter and Daniel A. Menascé and Hassan Gomaa},
keywords = {Software architecture, Distributed software architecture discovery, Gossiping, Message tracing},
abstract = {Context:
Runtime software architectural models of self-adaptive systems are needed for making adaptation decisions in architecture-based self-adaptive systems. However, when these systems are distributed and highly dynamic, there is an added need to discover the system’s software architecture model at runtime. Current methods of runtime architecture discovery use a centralized approach, in which the process is carried out from a single location. These methods are inadequate for large distributed software systems because they do not scale up well and have a single point of failure.
Objective and Method:
This paper describes DeSARM (Decentralized Software Architecture discoveRy Mechanism), a completely decentralized and automated approach, based on gossiping and message tracing, for runtime discovery of software architecture models of distributed software systems. DeSARM is able to identify at runtime important architectural characteristics such as components and connectors, in addition to synchronous and asynchronous communication patterns. Furthermore, through its use of gossiping, DeSARM exhibits the properties of scalability, global consistency among participating nodes, and resiliency to failures. This paper demonstrates DeSARM’s properties and answers key research questions through experimentation with software architectures of varying sizes and complexities executing within a computer cluster.
Results:
DeSARM enables the decentralized discovery of runtime software architectural models of distributed software systems while exhibiting the properties of scalability, global consistency among participating nodes and resiliency to failures. Scalability is achieved through DeSARM’s ability to successfully discover software architectures of increasing sizes and complexities executing across node counts of increasing sizes. Global consistency among participating nodes is achieved by each node within the system discovering the complete software architecture independently but in coordination with each other. Finally, resiliency to failures is achieved by DeSARM successfully discovering the software architecture of the system in the presence of component failures.}
}
@incollection{AMANN2021293,
title = {Chapter 13 - Tactile computing: Essential building blocks for the Tactile Internet},
editor = {Frank H.P. Fitzek and Shu-Chen Li and Stefanie Speidel and Thorsten Strufe and Meryem Simsek and Martin Reisslein},
booktitle = {Tactile Internet},
publisher = {Academic Press},
pages = {293-317},
year = {2021},
isbn = {978-0-12-821343-8},
doi = {https://doi.org/10.1016/B978-0-12-821343-8.00025-3},
url = {https://www.sciencedirect.com/science/article/pii/B9780128213438000253},
author = {Uwe Aßmann and Christel Baier and Clemens Dubslaff and Dominik Grzelak and Simon Hanisch and Ardhi Putra Pratama Hartono and Stefan Köpsell and Tianfang Lin and Thorsten Strufe},
keywords = {Context adaptive software, machine learning surgical, scalable computation, security and privacy, self-explanation, tactile computing, world capturing and modeling},
abstract = {In this chapter, we present essential building blocks for developing applications in the domain of the Tactile Internet. Our building blocks belong to the fields of (i) safe, secure, and scalable computing infrastructures; (ii) world capturing and modeling; and (iii) context adaptive software and self-explanation. They cover topics, such as resource allocation and scheduling, secure machine learning, network security, privacy, world modeling, programmability, and self-explanation of software. We will report about the current state of the art, open research questions, our methodology to approach them, and expected results.}
}
@article{ZHANG2021107240,
title = {Self-learning soft computing algorithms for prediction machines of estimating crowd density},
journal = {Applied Soft Computing},
volume = {105},
pages = {107240},
year = {2021},
issn = {1568-4946},
doi = {https://doi.org/10.1016/j.asoc.2021.107240},
url = {https://www.sciencedirect.com/science/article/pii/S1568494621001630},
author = {Tao Zhang and Jiawei Yuan and Yeh-Cheng Chen and Wenjing Jia},
keywords = {Prediction machines, Artificial intelligence, Soft computing, Generative adversarial networks, Cyber–physical systems},
abstract = {Human needs motivate the improvement of computing paradigms, the emergence of soft computing is more effective in dealing with daily problems, while reducing costs, it also solves the problem of robustness and becomes easier to handle. Examples of this include collecting data on video data from smart sensors and can use that information to predict and monitor the behavior of crowd. Nowadays, with the development of cyber–physical systems and artificial intelligence, the traditional data collection and analysis system faces the risks of low transparency and high data security, making it difficult to obtain an accurate prediction result. Therefore, in this paper a novel prediction machine via self-learning generative adversarial network for soft computing application is proposed, which collects data through a series of high-precision IoT sensor devices and makes preliminary preprocessing, and further solves the crowd prediction problem based on deep learning algorithms and obtains a reliable and accurate prediction result by continuously optimizing internal parameters. The focus of this work is on the accuracy and preprocessing of data collection and crowd prediction algorithms. The prediction algorithm can be used to estimate and monitor the crowd flow in public places, and can prevent crowding, trampling and other traffic jams, such as stations, airports, large exhibitions, tourist attractions and other places. Therefore, the new prediction machine includes video capture, upload and display, data analysis and early warning operations in embedded devices, and automatically predicts crowd density. In terms of constructing the network, first, in order to obtain a clearer generated density map, the feature self-learning module is merged in the generator feature extraction stage. Secondly, in order to avoid the blur of the generated image, an adversarial loss is constructed between the generator and the discriminator, and finally to deal with multiple scales, two generator networks are constructed to adapt to large scale and small scale respectively in order to extract semantic information of different scales and use cross-scale consistency loss constraints to generate density maps.}
}
@article{AUDRITO2021110908,
title = {Adaptive distributed monitors of spatial properties for cyber–physical systems},
journal = {Journal of Systems and Software},
volume = {175},
pages = {110908},
year = {2021},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2021.110908},
url = {https://www.sciencedirect.com/science/article/pii/S0164121221000054},
author = {Giorgio Audrito and Roberto Casadei and Ferruccio Damiani and Volker Stolz and Mirko Viroli},
keywords = {Spatial logics, Runtime verification, Self-adaptive systems, Field calculus},
abstract = {Cyber–physical systems increasingly feature highly-distributed and mobile deployments of devices spread over large physical environments: in these contexts, it is generally very difficult to engineer trustworthy critical services, mostly because formal methods generally hardly scale with the number of involved devices, especially when faults, continuous changes, and dynamic topologies are the norm. To start addressing this problem, in this paper we devise a formally correct and self-adaptive implementation of distributed monitors for spatial properties. We start from the Spatial Logic of Closure Spaces, and provide a compositional translation that takes a formula and yields a distributed program that provides runtime verification of its validity. Such programs are expressed in terms of the field calculus, a recently emerged computational model that focusses on global-level outcomes instead of single-device behaviour, and expresses distributed computations by pure functions and the functional composition mechanism. By reusing previous results and tools of the field calculus, we prove correctness of the translation, self-stabilisation of the derived monitors, and empirically evaluate adaptivity of such monitors in a realistic smart city scenario of safe crowd monitoring and control.}
}
@article{SOBECKI20203506,
title = {Self-adaptation of Workflow Business Software to the User’s Requirements and Behavior},
journal = {Procedia Computer Science},
volume = {176},
pages = {3506-3513},
year = {2020},
note = {Knowledge-Based and Intelligent Information & Engineering Systems: Proceedings of the 24th International Conference KES2020},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2020.09.046},
url = {https://www.sciencedirect.com/science/article/pii/S1877050920319414},
author = {Janusz Sobecki and Adam Wasilewski and Grzegorz Kołaczek},
keywords = {Systems Design, User Interface, User Experience, Artificial Intelligence},
abstract = {The main goal of the presented paper is to propose a method for adaptation of the user interface of workflow software to increase its efficiency, reduce the number of errors, and improve its UX. The authors assumed that the system adaptation will be achieved by application to intelligent methods for modeling user as well as system. In order to do this, a special tool for data gathering has been designed and in the next steps of the research, this tool will be also implemented in a real environment. A unique value of the paper is that after many years of theoretical research, the first attempt to implement a practical solution for self-adapting and the personalized interface for workflow systems was done.}
}
@article{KIM2020884,
title = {Adaptive resource management using many-core processing for fault tolerance based on cyber–physical cloud systems},
journal = {Future Generation Computer Systems},
volume = {105},
pages = {884-893},
year = {2020},
issn = {0167-739X},
doi = {https://doi.org/10.1016/j.future.2017.07.010},
url = {https://www.sciencedirect.com/science/article/pii/S0167739X17314747},
author = {Hyun-Woo Kim and Gangman Yi and Jong Hyuk Park and Young-Sik Jeong},
keywords = {Adaptive resource management, Cyber–physical system, Cloud computing, Fault-tolerance},
abstract = {With the increasing utilization of cloud computing and cyber–physical systems (CPSs), which allow the expression and control of the real world in a virtual environment, researches related to these subjects are being actively conducted in various areas. The convergence of CPS and cloud computing is being researched primarily because of their high availability, high-performance computing, and high-throughput computing. CPS consisting of numerous sensors, actuators, controllers, and control managers requires optimized modeling, simulation, and resource management technologies to integrate physical elements with computing elements for processing, which will provide high-throughput computing and high-reliability services. But the main problem of sensor resource management is that information of sensors cannot be approached in case that a sensor failure occurs at the sensing target area. Thus, various researches have been done to reconstruct the topology, but the self-topology configuration of sensors causes unnecessary events and battery consumption from various sensor nodes. In this paper, adaptive resource management (ARM) is proposed to 1) minimize information loss due to the irregular lifespan of resources, such as sensors and actuators; and 2) quickly respond to any problems. ARM uses the many-core of GPU to speed up fault handling, parallelizes the sensor information to select an alternate node of the fault node, and presents the performance evaluation results of the execution time of CPU and GPU.}
}
@article{ALIDOOSTNIA2020102943,
title = {Probabilistic approximation of runtime quantitative verification in self-adaptive systems},
journal = {Microprocessors and Microsystems},
volume = {72},
pages = {102943},
year = {2020},
issn = {0141-9331},
doi = {https://doi.org/10.1016/j.micpro.2019.102943},
url = {https://www.sciencedirect.com/science/article/pii/S0141933118303843},
author = {Mehran {Alidoost Nia} and Mehdi Kargahi and Fathiyeh Faghih},
keywords = {Self-adaptive systems, Probabilistic model checking, Runtime verification, Markov decision process, Approximation techniques, Cyber-physical systems},
abstract = {Cyber-physical systems (CPS) are expected to continuously monitor the physical components to autonomously calculate appropriate runtime reactions to deal with the uncertain environmental conditions. Self-adaptation, as a promising concept to fulfill a set of provable rules, majorly needs runtime quantitative verification (RQV). Taking a few probabilistic variables into account to represent the uncertainties, the system configuration will be extremely large. Thus, efficient approaches are needed to reduce the model state-space, preferably with certain bounds on the approximation error. In this paper, we propose an approximation framework to efficiently approximate the entire model of a self-adaptive system. We split up the large model into strongly-connected components (SCCs), apply the approximation algorithm separately on each SCC, and integrate the result of each part using a centralized algorithm. Due to a number of changes in probabilistic variables, it is not possible to use static models. Addressing this issue, we have deployed parametric Markov decision process. In order to apply approximation on the model, the notion of ε-approximate probabilistic bisimulation is utilized that introduces the approximation level ε. We show that our approximation framework offers a certain error bound on each level of approximation. Then, we denote that the approximation framework is appropriate to be applied in decision-making process of self-adaptive systems where the models are relatively large. The results reveal that we can achieve up to 50% size reduction in the approximate model while maintaining the accuracy about 95%. In addition, we discuss about the trade-off between efficiency and accuracy of our approximation framework.}
}
@article{LI20201069,
title = {Perception-enhancement based task learning and action scheduling for robotic limb in CPS environment},
journal = {Future Generation Computer Systems},
volume = {108},
pages = {1069-1083},
year = {2020},
issn = {0167-739X},
doi = {https://doi.org/10.1016/j.future.2018.04.001},
url = {https://www.sciencedirect.com/science/article/pii/S0167739X17311676},
author = {Shijian Li and Minhao Shi and Runhe Huang and Xinwei Chen and Gang Pan},
keywords = {CPS, Perception, Task learning, Robotic limb, Semantic, Service robot},
abstract = {As an important application of a Cyber–Physical–Social System, a smart service robot has enormous potential to facilitate service for humans. However, there are still some challenges especially in performing daily life tasks because of the complicated physical environment and the various demands of humans during daily activities. Therefore, it is essential for a service robot to have high adaption to a changing physical environment and the capability of performing new-task learning. In this paper, a perception-enhanced smart robotic limb is presented to realize deeper incorporation of information in physical layers by deploying a three-channel perception and a semantic reasoning model to allow comprehensive perception of related objects, human actions and commands, for better adaption and robustness to environment changes. Based on the perception system, the robotic limb is capable of self-learning skill of new tasks from human demonstrations, The learning times and robustness to environment change were evaluated by a 50-task experiment.}
}
@article{FERNANDEZ2021102298,
title = {Towards functional safety compliance of matrix–matrix multiplication for machine learning-based autonomous systems},
journal = {Journal of Systems Architecture},
volume = {121},
pages = {102298},
year = {2021},
issn = {1383-7621},
doi = {https://doi.org/10.1016/j.sysarc.2021.102298},
url = {https://www.sciencedirect.com/science/article/pii/S138376212100206X},
author = {Javier Fernández and Jon Perez and Irune Agirre and Imanol Allende and Jaume Abella and Francisco J. Cazorla},
keywords = {Machine learning, Functional safety, Error detection},
abstract = {Autonomous systems execute complex tasks to perceive the environment and take self-aware decisions with limited human interaction. This autonomy is commonly achieved with the support of machine learning algorithms. The nature of these algorithms, that need to process large data volumes, poses high-performance demands on the underlying hardware. As a result, the embedded critical real-time domain is adopting increasingly powerful processors that combine multi-core processors with accelerators such as GPUs. The resulting hardware and software complexity makes it difficult to demonstrate that the system will run safely and reliably. This is the main objective of functional safety standards, such as IEC 61508 or ISO 26262, that deal with the avoidance, detection and control of hardware or software errors. In this paper, we adopt those measures for the safe inference of machine learning libraries on multi-core devices, two topics that are not explicitly covered in the current version of standards. To this end, we adapt the matrix-matrix multiplication function, a central element of existing machine learning libraries, according to the recommendations of functional safety standards. The paper makes the following contributions: (i) adoption of recommended programming practices for the avoidance of programming errors in the matrix-matrix multiplication, (ii) inclusion of diagnostic mechanisms based on widely used checksums to control runtime errors, and (iii) evaluation of the impact of previous measures in terms of performance and a quantification of the achieved diagnostic coverage. For this purpose, we implement the diagnostic mechanisms on one of the ARM R5 cores of a Zynq UltraScale+ multi-processor system-on-chip and we then adapt them to an Intel i7 processor with native code employing vectorization for the sake of performance.}
}
@article{PIANINI202144,
title = {Partitioned integration and coordination via the self-organising coordination regions pattern},
journal = {Future Generation Computer Systems},
volume = {114},
pages = {44-68},
year = {2021},
issn = {0167-739X},
doi = {https://doi.org/10.1016/j.future.2020.07.032},
url = {https://www.sciencedirect.com/science/article/pii/S0167739X20304775},
author = {Danilo Pianini and Roberto Casadei and Mirko Viroli and Antonio Natali},
keywords = {Coordination, Distributed systems, Design patterns, Self-organisation, Self-improving integration, Edge computing, Aggregate programming},
abstract = {In software engineering, knowledge about recurrent problems, along with blueprints of associated solutions for diverse design contexts, are often captured in so-called design patterns. Identifying design patterns is particularly valuable for novel and still largely unexplored application contexts such as the Internet of Things, Cyber–Physical Systems, and Edge Computing, as it would help keeping a balanced trade-off between generality and applicability, guiding the mainstream development of language mechanisms, algorithms, architectures, and supporting platforms. Based on recurrence of related solutions found in the literature, in this work we present a design pattern for self-adaptive systems, named Self-organising Coordination Regions (SCR): its goal is to organise a process of interconnecting devices into teams, to solve local tasks in cooperation. Specifically, it is a decentralised coordination pattern for partitioned integration and coordination of devices, which relies on continuous adaptivity to context change to provide resilient distributed decision-making in large-scale situated systems. It leverages the divide-and-conquer principle, partitioning (in a self-organising fashion) the network of devices into regions, where internal coordination activities are regulated via feedback/control flows among leaders and subordinate nodes. We present the pattern, provide a template implementation in the Aggregate Computing framework, and evaluate it through simulation of two case studies in edge computing and hierarchical, heterogeneous networks.}
}
@article{ARCELLI2020498,
title = {Exploiting Queuing Networks to Model and Assess the Performance of Self-Adaptive Software Systems: A Survey},
journal = {Procedia Computer Science},
volume = {170},
pages = {498-505},
year = {2020},
note = {The 11th International Conference on Ambient Systems, Networks and Technologies (ANT) / The 3rd International Conference on Emerging Data and Industry 4.0 (EDI40) / Affiliated Workshops},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2020.03.108},
url = {https://www.sciencedirect.com/science/article/pii/S1877050920305469},
author = {Davide Arcelli},
keywords = {Self-Adaptive Software Systems, Software Architectures, Autonomous Systems, Performance Engineering, Queuing Networks},
abstract = {Self-adaptation has emerged as a primary concern in the context of modern software systems, due to the high dynamicity of the environments where they operate, which implies the need for such systems to properly face significant degrees of uncertainty. To this aim, much work has been done, mainly by coupling autonomic managers to the managed subsystem which perceives and affects the environment through its sensors and actuators, respectively. Such coupling often results into MAPE-K feedback loop(s), i.e. a Knowledge (K)-based architectural model that divides the adaptation process into four activities, namely Monitor (M), Analyze (A), Plan (P) and Execute (E). Performance modeling notations, analysis methods and tools, have been exploited and coupled to other kinds of techniques (e.g. control theory, machine learning) for modeling and assessing the performance of autonomic managers, possibly aimed at supporting the identification of more convenient architectural alternatives. Since moving in such a big arena is not trivial and it is easy to be overwhelmed, in this literature survey, we focus on a particular performance modeling paradigm, namely Queuing Networks, with the aim of clarifying the state-of-art in exploiting such a notation to model and assess performance of Self-Adaptive Software Systems. We conclude by bringing out some research opportunities that may be worth exploring in the near future.}
}
@article{KHEBBEB2020101821,
title = {A Maude-Based rewriting approach to model and verify Cloud/Fog self-adaptation and orchestration},
journal = {Journal of Systems Architecture},
volume = {110},
pages = {101821},
year = {2020},
issn = {1383-7621},
doi = {https://doi.org/10.1016/j.sysarc.2020.101821},
url = {https://www.sciencedirect.com/science/article/pii/S1383762120301132},
author = {Khaled Khebbeb and Nabil Hameurlain and Faiza Belala},
keywords = {Self-adaptation, Orchestration, Fog computing, Cloud computing, Formal methods, Rewriting logic, Linear temporal logic, Maude},
abstract = {In the IoT-Fog-Cloud landscape, IoT devices are connected to numerous software applications in order to fully operate. Some applications are deployed on the Fog layer, providing low-latency access to resource, whilst others are deployed on the Cloud to provide important resource capabilities and process heavy computation. In this distributed landscape, the deployment infrastructure has to adapt to the highly dynamic requirements of the IoT layer. However, due to their intrinsic properties, the Fog layer may lack of providing sufficient amount of resource while the Cloud layer fails ensuring low-latency requirements. In this paper, we present a rewriting-based approach to design and verify the Cloud-Fog self-adaption and orchestration behaviors in order to manage infrastructure reconfiguration towards achieving low-latency and resources quantity trade-offs. We rely of the formal specification language Maude to provide an executable solution of these behaviors basing on the rewriting logic and we express properties with linear temporal logic (LTL) to qualitatively verify the adaptations correctness.}
}
@article{ZENKOVICH2021852,
title = {Industrial plants investment projects efficiency estimation based on simulation and artificial intelligence methods},
journal = {Procedia Computer Science},
volume = {190},
pages = {852-862},
year = {2021},
note = {2020 Annual International Conference on Brain-Inspired Cognitive Architectures for Artificial Intelligence: Eleventh Annual Meeting of the BICA Society},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2021.06.107},
url = {https://www.sciencedirect.com/science/article/pii/S187705092101365X},
author = {Mikhail V. Zenkovich and Yury G. Drevs and Valentina S. Inozemtseva and Nadezhda A. Shevchenko},
keywords = {Simulation, Multi-Agent Systems, MAS, Artificial Intelligence, AI, Decision-Making Support, Investment Projects Estimation Of Efficiency, Automated Manufacturing System.},
abstract = {Methods and software enabling the estimation of efficiency and the comparisons of alternative designs of industrial plants are discussed. Problem of efficiency estimation for investment projects of industrial plants is formulated in the terms of decision theory. Presented approach is based on the reduction of multicriterion problem of investment project estimating to one-criterion problem. Application of simulation and artificial intelligence (AI) methods for estimation of technological and structural decisions, is the central feature of presented approach. Designed simulation model refers to discrete-event class. Object-oriented approach was applied for designing of the model and programming language C++ for its implementation. After it’s successful implementation this model was improved, in order to obtain robust, adaptive, re-configurable and responsive system. That was done with self-organization, self-learning, self-adaptation, self-optimization. This approach is based on application of AI methods (multi-agent systems (MAS), in particular) for simulation model development. MAS is a bio-inspired paradigm that allows to design systems based on autonomous and cooperative agents, exhibiting modularity, robustness, flexibility, adaptability and re-configurability. Presented methodology is tried-and-true method which applies on the phase of designing and engineering of industrial plant. This approach is discussed on the example of foundry plant with moulding line.}
}
@article{SEMWAL2020105920,
title = {A decentralized Artificial Immune System for solution selection in Cyber–Physical Systems},
journal = {Applied Soft Computing},
volume = {86},
pages = {105920},
year = {2020},
issn = {1568-4946},
doi = {https://doi.org/10.1016/j.asoc.2019.105920},
url = {https://www.sciencedirect.com/science/article/pii/S156849461930701X},
author = {Tushar Semwal and Shivashankar B. Nair},
keywords = {Artificial Immune System, Immune Network, Decentralized and distributed system, Self-adaptive},
abstract = {Centralization has become a de facto standard for implementing networked environments such as the Cyber–Physical Systems (CPS). Though easy to implement and control, centralized systems are difficult and expensive to scale in terms of the number of devices and the flow of information. This set of circumstances calls for a decentralized and distributed architecture for realizing such networked systems. However, due to the absence of global information in decentralized systems, one of the primary challenges is to find the best solution for problems distributed across the devices which are part of the CPS. Since the problems are distributed and no participating device has access to the full information, the devices may need to interact and share the information to select the best solution for a problem occurred. In this paper, we present a decentralized and distributed mechanism, which adapts to a stream of varying problems and continuously evolves and learns the best mappings between the problems and their associated solutions. The proposed approach integrates the concepts propounded in the three major Immune theories and can cater to real-world situations. The evolved mappings are shared across the physical network, thereby accelerating the search for the best set of solutions. In order to validate the performance of the proposed mechanism, we present the results obtained from solving a problem of sorting a stream of varying data in an emulated decentralized and distributed manner. To substantiate its working in real-world scenarios, we also describe the results obtained by embodying the system in real robots that discover the best path-following algorithms.}
}

Scopus
EXPORT DATE: 22 January 2022

@ARTICLE{Restrepo2021,
author={Restrepo, L. and Aguilar, J. and Toro, M. and Suescún, E.},
title={A sustainable-development approach for self-adaptive cyber–physical system's life cycle: A systematic mapping study},
journal={Journal of Systems and Software},
year={2021},
volume={180},
doi={10.1016/j.jss.2021.111010},
art_number={111010},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85107766571&doi=10.1016%2fj.jss.2021.111010&partnerID=40&md5=d448645aacc3ff1b088bd1b3a1cb12db},
document_type={Article},
source={Scopus},
}

@CONFERENCE{Tong2021168,
author={Tong, Y. and Qin, Y. and Jiang, Y. and Xu, C. and Cao, C. and Ma, X.},
title={Timely and accurate detection of model deviation in self-adaptive software-intensive systems},
journal={ESEC/FSE 2021 - Proceedings of the 29th ACM Joint Meeting European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
year={2021},
pages={168-180},
doi={10.1145/3468264.3468548},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85116204462&doi=10.1145%2f3468264.3468548&partnerID=40&md5=3c478f7321c8b34921ac8eaf67499150},
document_type={Conference Paper},
source={Scopus},
}

@CONFERENCE{Bellini2021168,
author={Bellini, E. and Bagnoli, F. and Caporuscio, M. and Damiani, E. and Flammini, F. and Linkov, I. and Lio, P. and Marrone, S.},
title={Resilience learning through self adaptation in digital twins of human-cyber-physical systems},
journal={Proceedings of the 2021 IEEE International Conference on Cyber Security and Resilience, CSR 2021},
year={2021},
pages={168-173},
doi={10.1109/CSR51186.2021.9527913},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85115697412&doi=10.1109%2fCSR51186.2021.9527913&partnerID=40&md5=aeac8bdf929cfcc772b9340886d3cfbc},
document_type={Conference Paper},
source={Scopus},
}

@CONFERENCE{Gerostathopoulos202159,
author={Gerostathopoulos, I. and Vogel, T. and Weyns, D. and Lago, P.},
title={How do we Evaluate Self-adaptive Software Systems?: A Ten-Year Perspective of SEAMS},
journal={Proceedings - 2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2021},
year={2021},
pages={59-70},
doi={10.1109/SEAMS51251.2021.00018},
art_number={9462043},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85113500936&doi=10.1109%2fSEAMS51251.2021.00018&partnerID=40&md5=a09ddd224220f343ac7f9bec2def002f},
document_type={Conference Paper},
source={Scopus},
}

@ARTICLE{Ayala2021,
author={Ayala, I. and Papadopoulos, A.V. and Amor, M. and Fuentes, L.},
title={ProDSPL: Proactive self-adaptation based on Dynamic Software Product Lines},
journal={Journal of Systems and Software},
year={2021},
volume={175},
doi={10.1016/j.jss.2021.110909},
art_number={110909},
note={cited By 2},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85100049475&doi=10.1016%2fj.jss.2021.110909&partnerID=40&md5=3354f9aa77347ede9e9f1441ed9cc2a2},
document_type={Article},
source={Scopus},
}

@ARTICLE{Pimentel2021,
author={Pimentel, E. and Soldani, J.},
title={Preface to the Special Issue on Coordination and Self-Adaptiveness of Software Applications},
journal={Science of Computer Programming},
year={2021},
volume={204},
doi={10.1016/j.scico.2020.102594},
art_number={102594},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85098768538&doi=10.1016%2fj.scico.2020.102594&partnerID=40&md5=f3260890a358459c2a23620972e1a61b},
document_type={Editorial},
source={Scopus},
}

@ARTICLE{Ismail20211,
author={Ismail, S. and Shah, K. and Reza, H. and Marsh, R. and Grant, E.},
title={Toward management of uncertainty in self-adaptive software systems: Iot case study},
journal={Computers},
year={2021},
volume={10},
number={3},
pages={1-19},
doi={10.3390/computers10030027},
art_number={27},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85102435844&doi=10.3390%2fcomputers10030027&partnerID=40&md5=7a9af02ed42be00e50fef2e1d708f328},
document_type={Review},
source={Scopus},
}

@ARTICLE{Mandrioli2021,
author={Mandrioli, C. and Maggio, M.},
title={Testing Self-Adaptive Software with Probabilistic Guarantees on Performance Metrics: Extended and Comparative Results},
journal={IEEE Transactions on Software Engineering},
year={2021},
doi={10.1109/TSE.2021.3101130},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85112591299&doi=10.1109%2fTSE.2021.3101130&partnerID=40&md5=a9124bcc0529cf328c450db4b354c070},
document_type={Article},
source={Scopus},
}

@ARTICLE{Raibulet2021386,
author={Raibulet, C. and Fontana, F.A. and Carettoni, S.},
title={Internal Software Quality Evaluation of Self-adaptive Systems Using Metrics, Patterns, and Smells},
journal={Communications in Computer and Information Science},
year={2021},
volume={1375},
pages={386-419},
doi={10.1007/978-3-030-70006-5_16},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85103232322&doi=10.1007%2f978-3-030-70006-5_16&partnerID=40&md5=439aa434058cf2140dff9b0bcd2999fa},
document_type={Conference Paper},
source={Scopus},
}

@ARTICLE{Szabo202110711,
author={Szabo, C. and Sims, B. and McAtee, T. and Lodge, R. and Hunjet, R.},
title={Self-adaptive software systems in contested and resource-constrained environments: Overview and challenges},
journal={IEEE Access},
year={2021},
volume={9},
pages={10711-10728},
doi={10.1109/ACCESS.2020.3043440},
art_number={9288789},
note={cited By 1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097938611&doi=10.1109%2fACCESS.2020.3043440&partnerID=40&md5=b5ead4beca437ddadbf605429ba95438},
document_type={Review},
source={Scopus},
}

@CONFERENCE{Grigoras2020,
author={Grigoras, C.C. and Chirita, B. and Brabie, G.},
title={A Python and Java software approach for 2.5 axes, self-adaptive stretch forming process and IoT solution},
journal={IOP Conference Series: Materials Science and Engineering},
year={2020},
volume={968},
number={1},
doi={10.1088/1757-899X/968/1/012029},
art_number={012029},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85096505280&doi=10.1088%2f1757-899X%2f968%2f1%2f012029&partnerID=40&md5=714e5f076c3944f9cd92f353dd5bee5e},
document_type={Conference Paper},
source={Scopus},
}

@CONFERENCE{Mandrioli20201002,
author={Mandrioli, C. and Maggio, M.},
title={Testing self-adaptive software with probabilistic guarantees on performance metrics},
journal={ESEC/FSE 2020 - Proceedings of the 28th ACM Joint Meeting European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
year={2020},
pages={1002-1014},
doi={10.1145/3368089.3409685},
note={cited By 3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097138944&doi=10.1145%2f3368089.3409685&partnerID=40&md5=f7785bc957aeb65cec274db337858601},
document_type={Conference Paper},
source={Scopus},
}

@ARTICLE{Han20201016,
author={Han, D.-S. and Yang, Q.-L. and Xing, J.-C. and Ma, G.-L.},
title={EasyModel: A Refinement-Based Modeling and Verification Approach for Self-Adaptive Software},
journal={Journal of Computer Science and Technology},
year={2020},
volume={35},
number={5},
pages={1016-1046},
doi={10.1007/s11390-020-0499-x},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85094646667&doi=10.1007%2fs11390-020-0499-x&partnerID=40&md5=cbba00d65fa994c2741fc6877331aaf5},
document_type={Article},
source={Scopus},
}

@ARTICLE{Abbas2020,
author={Abbas, N. and Andersson, J. and Weyns, D.},
title={ASPLe: A methodology to develop self-adaptive software systems with systematic reuse},
journal={Journal of Systems and Software},
year={2020},
volume={167},
doi={10.1016/j.jss.2020.110626},
art_number={110626},
note={cited By 4},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85084955201&doi=10.1016%2fj.jss.2020.110626&partnerID=40&md5=26781baf75679b07712b33cfab41a69e},
document_type={Article},
source={Scopus},
}

@ARTICLE{Zhou20201130,
author={Zhou, P. and Zuo, D. and Hou, K. and Zhang, Z. and Dong, J.},
title={Improving the Dependability of Self-Adaptive Cyber Physical System with Formal Compositional Contract},
journal={IEEE Transactions on Reliability},
year={2020},
volume={69},
number={3},
pages={1130-1146},
doi={10.1109/TR.2019.2930009},
art_number={8842606},
note={cited By 1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072520553&doi=10.1109%2fTR.2019.2930009&partnerID=40&md5=71ad07d8ab85240bf62c66e97cd188ec},
document_type={Article},
source={Scopus},
}

@ARTICLE{Zhang20202404,
author={Zhang, M.-Y. and Jin, Z. and Zhao, H.-Y. and Luo, Y.-X.},
title={Survey of Machine Learning Enabled Software Self-adaptation [机器学习赋能的软件自适应性综述]},
journal={Ruan Jian Xue Bao/Journal of Software},
year={2020},
volume={31},
number={8},
pages={2404-2431},
doi={10.13328/j.cnki.jos.006076},
note={cited By 2},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85089897087&doi=10.13328%2fj.cnki.jos.006076&partnerID=40&md5=7d6c7ebc2ac2f5c5ef17b3ea9ba8a4df},
document_type={Review},
source={Scopus},
}

@CONFERENCE{Suresh2020,
author={Suresh, G.M. and Madhavu, M.L.},
title={AI Based Intrusion Detection System Using Self-Adaptive Energy Efficient BAT Algorithm for Software Defined IoT Networks},
journal={2020 11th International Conference on Computing, Communication and Networking Technologies, ICCCNT 2020},
year={2020},
doi={10.1109/ICCCNT49239.2020.9225415},
art_number={9225415},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85096616316&doi=10.1109%2fICCCNT49239.2020.9225415&partnerID=40&md5=1986c4a1f8515e0297342369fb73052d},
document_type={Conference Paper},
source={Scopus},
}

@CONFERENCE{Petrovska2020149,
author={Petrovska, A. and Quijano, S. and Gerostathopoulos, I. and Pretschner, A.},
title={Knowledge aggregation with subjective logic in multi-agent self-adaptive cyber-physical systems},
journal={Proceedings - 2020 IEEE/ACM 15th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2020},
year={2020},
pages={149-155},
doi={10.1145/3387939.3391600},
note={cited By 4},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85093122120&doi=10.1145%2f3387939.3391600&partnerID=40&md5=32e797ce1b92c2d4e0514c9018136b14},
document_type={Conference Paper},
source={Scopus},
}

@CONFERENCE{Kluge2020120,
author={Kluge, T.},
title={A role-based architecture for self-adaptive cyber-physical systems},
journal={Proceedings - 2020 IEEE/ACM 15th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2020},
year={2020},
pages={120-124},
doi={10.1145/3387939.3391601},
note={cited By 2},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091534613&doi=10.1145%2f3387939.3391601&partnerID=40&md5=56976219d543d047b43b71a24d09f59f},
document_type={Conference Paper},
source={Scopus},
}

@ARTICLE{Chen2020287,
author={Chen, X. and Wang, H. and Ma, Y. and Zheng, X. and Guo, L.},
title={Self-adaptive resource allocation for cloud-based software services based on iterative QoS prediction model},
journal={Future Generation Computer Systems},
year={2020},
volume={105},
pages={287-296},
doi={10.1016/j.future.2019.12.005},
note={cited By 41},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076161568&doi=10.1016%2fj.future.2019.12.005&partnerID=40&md5=285f48475225975de0496f9090253a59},
document_type={Article},
source={Scopus},
}

@ARTICLE{Algabroun20201067,
author={Algabroun, H.},
title={Dynamic sampling rate algorithm (DSRA) implemented in self-adaptive software architecture: a way to reduce the energy consumption of wireless sensors through event-based sampling},
journal={Microsystem Technologies},
year={2020},
volume={26},
number={4},
pages={1067-1074},
doi={10.1007/s00542-019-04631-9},
note={cited By 2},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074424015&doi=10.1007%2fs00542-019-04631-9&partnerID=40&md5=88ff50d7f4b3afe67e3f1636da13933b},
document_type={Article},
source={Scopus},
}

@CONFERENCE{Sobecki20203506,
author={Sobecki, J. and Wasilewski, A. and Kolaczek, G.},
title={Self-adaptation of workflow business software to the user's requirements and behavior},
journal={Procedia Computer Science},
year={2020},
volume={176},
pages={3506-3513},
doi={10.1016/j.procs.2020.09.046},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85093364063&doi=10.1016%2fj.procs.2020.09.046&partnerID=40&md5=8f91f8913eecac78ec22446c4d0f7cfb},
document_type={Conference Paper},
source={Scopus},
}

@CONFERENCE{Alfonso2020,
author={Alfonso, I.},
title={Software deployment and self-adaptation of IoT systems},
journal={23rd Iberoamerican Conference on Software Engineering, CIbSE 2020},
year={2020},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85092286178&partnerID=40&md5=ca5a92a16a7451b0d8edac3b1c1593c3},
document_type={Conference Paper},
source={Scopus},
}

@ARTICLE{NoAuthor2020,
title={3rd International Workshop on Formal Co-Simulation of Cyber-Physical Systems, CoSim-CPS 2019, International Workshop on Automated and verifiable Software System Development, ASYDE 2019, International Workshop on Cognition: Interdisciplinary Foundations, Models and Applications, CIFMA 2019 and 17th International Workshop on Foundations of Coordination Languages and Self-Adaptiveness of Software Applications, FOCLASA 2019, co-located with the 17th International Conference on Software Engineering and Formal Methods, SEFM 2019},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2020},
volume={12226 LNCS},
page_count={275},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091602227&partnerID=40&md5=e3ae9475c14d969581266724ff915d33},
document_type={Conference Review},
source={Scopus},
}

@ARTICLE{Gummalla2020601,
author={Gummalla, S. and Rao, G.V. and Swamy, G.V.},
title={Esadsa: Enhanced self-adaptive dynamic software architecture},
journal={Advances in Intelligent Systems and Computing},
year={2020},
volume={1090},
pages={601-617},
doi={10.1007/978-981-15-1480-7_51},
note={cited By 0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083970964&doi=10.1007%2f978-981-15-1480-7_51&partnerID=40&md5=e7c34299b9ae05158cac18dbaddecfc2},
document_type={Conference Paper},
source={Scopus},
}

@CONFERENCE{Arcelli2020457,
author={Arcelli, D.},
title={Towards a generalized queuing network model for self-adaptive software systems},
journal={MODELSWARD 2020 - Proceedings of the 8th International Conference on Model-Driven Engineering and Software Development},
year={2020},
pages={457-464},
note={cited By 3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85082982480&partnerID=40&md5=db922d79c47ce466a65bac6c84bb4a5e},
document_type={Conference Paper},
source={Scopus},
}

@Article{Zimmermann,
  author   = {Zimmermann, Martin and Wotawa, Franz and Pill, Ingo},
  journal  = {Advanced Intelligent Systems},
  title    = {Pursuing Intelligent Behavior in Cyber−Physical Systems by Lightweight Diagnosis},
  number   = {n/a},
  pages    = {2100224},
  volume   = {n/a},
  abstract = {Intelligence in its decisions is a trait that people have grown to expect from a cyber−physical system, in particular that it makes the right choices at runtime, that is, those that allow it to fulfill its tasks, even in case of faults or unexpected interactions with its environment. Analyzing how to continuously achieve the currently desired (and possibly continuously changing) goals and adapting its behavior to reach these goals is undoubtedly a serious challenge. This becomes even more challenging if the atomic actions a system can implement become unreliable due to faulty components or some exogenous event out of its control. Herein, a solution for the presented challenge is proposed. In particular, it is shown how to adopt a lightweight diagnosis concept to cope with such situations. The approach is based on rules coupled with means for rule selection that is based on previous information regarding success or failure of rule executions. Furthermore, Java-based framework of the lightweight diagnosis concept is presented, and the results obtained from an experimental evaluation considering several application scenarios are discussed. At the end, a qualitative comparison with other related approaches that should help the readers decide which approach works best for them is presented. An interactive preprint version of the article can be found here: https://www.authorea.com/doi/full/10.22541/au.163578445.51350502.},
  doi      = {https://doi.org/10.1002/aisy.202100224},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/aisy.202100224},
  keywords = {diagnostic reasoning, replanning, self-adaptation, spectrum-based fault localizations},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/aisy.202100224},
}

@Article{AraujodeOliveira2021,
  author   = {Araújo-de-Oliveira, Patrícia and Durán, Francisco and Pimentel, Ernesto},
  journal  = {Software: Practice and Experience},
  title    = {A procedural and flexible approach for specification, modeling, definition, and analysis for self-adaptive systems},
  year     = {2021},
  number   = {6},
  pages    = {1387-1415},
  volume   = {51},
  abstract = {Abstract An adaptive system can modify its settings at runtime as a response to changes in its operational environment. To analyse this kind of systems at design time is a difficult task since it requires considering the system together with the adaptation operations, and taking into account how such adaptations act on the system. In order to use simulation-based techniques for the analysis of such systems, we not only need precise executable models of the systems to be analyzed, but also to capture the semantics of their adaptation mechanisms. Given the wide range and flexibility of adaptation operations, we need ways to allow the definition of new operations. We present a flexible approach for the definition and simulation-based analysis in design-time of adaptive component-based systems. Our approach combines an extension of the Palladio component model in e-Motions, a model of the adaptation mechanisms, and elastic requirements specification using the SYBL language. From the model of the system, its adaptation mechanisms, and its requirements, an executable Maude specification is generated for simulation. The application of the approach is illustrated on a use case that comprises some components and adaptations rules. The example is then analyzed using simulations. It is also shown that it is indeed possible to define additional metrics, specify adaptation requirements and rules which conduct simulations of the models in a more flexible way, and that the results of the simulation performed from these definitions can be used to carry on a valuable predictive performance analysis.},
  doi      = {https://doi.org/10.1002/spe.2962},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2962},
  keywords = {adaptation specification, design-time analysis, modeling, self-adaptive behavior, self-adaptive models},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2962},
}

@Article{Santana2021,
  author   = {Santana, Alexandre and Freitas, Vinicius and Castro, Márcio and Pilla, Laércio L. and Méhaut, Jean-François},
  journal  = {Software: Practice and Experience},
  title    = {ARTful: A model for user-defined schedulers targeting multiple high-performance computing runtime systems},
  year     = {2021},
  number   = {7},
  pages    = {1622-1638},
  volume   = {51},
  abstract = {Abstract Global schedulers are components in parallel runtime libraries that distribute the application's workload across physical resources. More often than not, applications showcase dynamic load imbalance and require customized scheduling solutions to avoid wasting resources. Some libraries lack support for user-defined schedulers and developers resort to unofficial extensions that are harder to reuse and maintain. We propose a global scheduler software design, entitled ARTful model, to create user-defined solutions with minimal alterations in the runtime library. Our model uses a component-based design to separate components from the runtime library and the scheduling policy implementation. The ARTful modeldescribes the interface of a portable scheduler library, allowing policies to operate on different runtime libraries. We study the overhead induced by our design through our ARTful library implementation metaprogramming-oriented global scheduling library using workload-aware scheduling policies. We experiment with two different policies from OpenMP and Charm++ runtime systems, also presenting evaluations of the policies outside of their original library context. We observe that our portable schedulers can sometimes perform decisions faster than their native counterparts with negligible overhead in the execution times of synthetic applications and molecular dynamics kernels.},
  doi      = {https://doi.org/10.1002/spe.2977},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2977},
  keywords = {code complexity, component, portability, runtime systems, scheduling, self-adaptable},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2977},
}

@Article{FilisbinoPassini2022,
  author   = {Filisbino Passini, William and Aparecida Lana, Cristiane and Pfeifer, Vinicius and Affonso, Frank José},
  journal  = {Software: Practice and Experience},
  title    = {Design of frameworks for self-adaptive service-oriented applications: A systematic analysis},
  year     = {2022},
  number   = {1},
  pages    = {5-38},
  volume   = {52},
  abstract = {Abstract Self-adaptive service-oriented Applications (Self-Apps) must be able to understand themselves or the environment in which they are executed, and propose solutions to meet changing conditions. The development of these applications is not a trivial task, since it encompasses issues from different research areas. Despite the importance of frameworks for Self-Apps, there is a lack of comprehensive analysis of how the design of such applications is performed, and regarding the standardization of concepts and coverage of minimum requirements for Self-Apps. The main contribution of this article is to present this comprehensive analysis, providing the state of the art for this subject. This analysis was built through a Systematic Mapping Study, based on a total of 65 studies, from which we identify the main attributes for Quality of Service (QoS), search strategies, and service management strategies employed in the design of frameworks for Self-Apps. The main aspects of requirements involved in the design of Self-Apps were pointed out to stakeholders. For example, these applications must implement a method for evaluation of QoS based on metrics. We also put forward the S-Frame, a modular solution that brings together the main features for the design of Self-Apps, and describe the main challenges concerning these applications.},
  doi      = {https://doi.org/10.1002/spe.3013},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.3013},
  keywords = {framework, self-adaptive service, self-apps, systematic mapping},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.3013},
}

@Article{Samir2021,
  author   = {Samir, Areeg and Pahl, Claus},
  journal  = {Concurrency and Computation: Practice and Experience},
  title    = {Autoscaling recovery actions for container-based clusters},
  year     = {2021},
  number   = {23},
  pages    = {e5955},
  volume   = {33},
  abstract = {Summary In cloud computing, resizing component resources is often limited by the available resources offered by a provider. After reaching a resource limit, a component cannot acquire more resources, which can badly affect the load situation. This article presents multiple predictable recovery actions of a self-healing model for an identified anomalous behavior (eg, overload, underload) to auto-scale compute resources in a containerized cluster environment according to various workload conditions. The efficacy of the model is demonstrated through an evaluation with different auto-scaling strategies based on the number of created/terminated containers, container migration, resource utilization, and response time. The results show that the proposed model provides promising overall performance under dynamic workloads compared to other auto-scaling strategies.},
  doi      = {https://doi.org/10.1002/cpe.5955},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.5955},
  keywords = {autoscaling, cluster, container, recovery, reliability, self-adaptive systems},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.5955},
}

@Article{Vogel2021,
  author   = {Vogel, Adriano and Griebler, Dalvan and Fernandes, Luiz Gustavo},
  journal  = {Software: Practice and Experience},
  title    = {Providing high-level self-adaptive abstractions for stream parallelism on multicores},
  year     = {2021},
  number   = {6},
  pages    = {1194-1217},
  volume   = {51},
  abstract = {Abstract Stream processing applications are common computing workloads that demand parallelism to increase their performance. As in the past, parallel programming remains a difficult task for application programmers. The complexity increases when application programmers must set nonintuitive parallelism parameters, that is, the degree of parallelism. The main problem is that state-of-the-art libraries use a static degree of parallelism and are not sufficiently abstracted for developing stream processing applications. In this article, we propose a self-adaptive regulation of the degree of parallelism to provide higher-level abstractions. Flexibility is provided to programmers with two new self-adaptive strategies, one is for performance experts, and the other abstracts the need to set a performance goal. We evaluated our solution using compiler transformation rules to generate parallel code with the SPar domain-specific language. The experimental results with real-world applications highlighted higher abstraction levels without significant performance degradation in comparison to static executions. The strategy for performance experts achieved slightly higher performance than the one that works without user-defined performance goals.},
  doi      = {https://doi.org/10.1002/spe.2948},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2948},
  keywords = {parallelism abstractions, parallel programming, self-adaptive systems, stream parallelism, stream processing applications},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2948},
}

@Article{Vogel,
  author   = {Vogel, Adriano and Griebler, Dalvan and Danelutto, Marco and Fernandes, Luiz Gustavo},
  journal  = {Concurrency and Computation: Practice and Experience},
  title    = {Self-adaptation on parallel stream processing: A systematic review},
  number   = {n/a},
  pages    = {e6759},
  volume   = {n/a},
  abstract = {Summary A recurrent challenge in real-world applications is autonomous management of the executions at run-time. In this vein, stream processing is a class of applications that compute data flowing in the form of streams (e.g., video feeds, images, and data analytics), where parallel computing can help accelerate the executions. On the one hand, stream processing applications are becoming more complex, dynamic, and long-running. On the other hand, it is unfeasible for humans to monitor and manually change the executions continuously. Hence, self-adaptation can reduce costs and human efforts by providing a higher-level abstraction with an autonomic/seamless management of executions. In this work, we aim at providing a literature review regarding self-adaptation applied to the parallel stream processing domain. We present a comprehensive revision using a systematic literature review method. Moreover, we propose a taxonomy to categorize and classify the existing self-adaptive approaches. Finally, applying the taxonomy made it possible to characterize the state-of-the-art, identify trends, and discuss open research challenges and future opportunities.},
  doi      = {https://doi.org/10.1002/cpe.6759},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.6759},
  keywords = {autonomic computing, distributed systems, parallel computing, self-adaptive systems, stream processing},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.6759},
}

@Article{Hazarika2020,
  author   = {Hazarika, Anakhi and Poddar, Soumyajit and Rahaman, Hafizur},
  journal  = {IET Computers \& Digital Techniques},
  title    = {Survey on memory management techniques in heterogeneous computing systems},
  year     = {2020},
  number   = {2},
  pages    = {47-60},
  volume   = {14},
  abstract = {A major issue faced by data scientists today is how to scale up their processing infrastructure to meet the challenge of big data and high-performance computing (HPC) workloads. With today's HPC domain, it is required to connect multiple graphics processing units (GPUs) to accomplish large-scale parallel computing along with CPUs. Data movement between the processor and on-chip or off-chip memory creates a major bottleneck in overall system performance. The CPU/GPU processes all the data on a computer's memory and hence the speed of the data movement to/from memory and the size of the memory affect computer speed. During memory access by any processing element, the memory management unit (MMU) controls the data flow of the computer's main memory and impacts the system performance and power. Change in dynamic random access memory (DRAM) architecture, integration of memory-centric hardware accelerator in the heterogeneous system and Processing-in-Memory (PIM) are the techniques adopted from all the available shared resource management techniques to maximise the system throughput. This survey study presents an analysis of various DRAM designs and their performances. The authors also focus on the architecture, functionality, and performance of different hardware accelerators and PIM systems to reduce memory access time. Some insights and potential directions toward enhancements to existing techniques are also discussed. The requirement of fast, reconfigurable, self-adaptive memory management schemes in the high-speed processing scenario motivates us to track the trend. An effective MMU handles memory protection, cache control and bus arbitration associated with the processors.},
  doi      = {https://doi.org/10.1049/iet-cdt.2019.0092},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-cdt.2019.0092},
  keywords = {multiprocessing systems, parallel processing, cache storage, computer architecture, graphics processing units, DRAM chips, large-scale parallel computing, off-chip memory, memory management unit, data flow, dynamic random access memory architecture, memory-centric hardware accelerator, heterogeneous system, processing-in-memory, PIM systems, memory access time, self-adaptive memory management schemes, high-speed processing scenario, memory protection, memory management techniques, heterogeneous computing systems, data scientists today, processing infrastructure, big data, high-performance computing workloads, HPC workloads, MMU controls, resource management techniques, DRAM architecture, multiple graphics processing units, CPU/GPU processes, cache control},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-cdt.2019.0092},
}

@InProceedings{Leitao2013,
  author    = {Leitao, Antonio and Machado, Penousal},
  title     = {Self-Adaptive Mate Choice for Cluster Geometry Optimization},
  booktitle = {Proceedings of the 15th Annual Conference on Genetic and Evolutionary Computation},
  year      = {2013},
  series    = {GECCO ’13},
  pages     = {957–964},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Sexual Selection through Mate Choice has, over the past few decades, attracted the attention of researchers from various fields. They have gathered numerous supporting evidence, establishing Mate Choice as a major driving force of evolution, capable of shaping complex traits and behaviours. Despite its wide acceptance and relevance across various research fields, the impact of Mate Choice in Evolutionary Computation is still far from understood, both regarding performance and behaviour. In this study we describe a nature-inspired self-adaptive mate choice model, relying on a Genetic Programming representation tailored for the optimization of Morse clusters, a relevant and widely accepted problem for benchmarking new algorithms, which provides a set of hard test instances. The model is coupled with a state-of-the-art hybrid steady-state approach and both its performance and behaviour are assessed with a particular interest on the replacement strategy's acceptance rate and diversity handling.},
  doi       = {10.1145/2463372.2463494},
  groups    = {acm},
  isbn      = {9781450319638},
  keywords  = {mate choice, genetic programming, sexual selection, self-adaption, evolutionary algorithms, cluster geometry optimization},
  location  = {Amsterdam, The Netherlands},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2463372.2463494},
}

@InProceedings{Baeck2014,
  author    = {B\"{a}ck, Thomas},
  title     = {Introduction to Evolution Strategies},
  booktitle = {Proceedings of the Companion Publication of the 2014 Annual Conference on Genetic and Evolutionary Computation},
  year      = {2014},
  series    = {GECCO Comp ’14},
  pages     = {251–280},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This tutorial gives a basic introduction to evolution strategies, a class of evolutionary algorithms. Key features such as mutation, recombination and selection operators are explained, and specifically the concept of self-adaptation of strategy parameters is introduced. All algorithmic concepts are explained to a level of detail such that an implementation of basic evolution strategies is possible. In addition, the tutorial also presents a brief taxonomy of contemporary evolution strategy variants, including e.g. the CMA-ES and variations thereof, and compares their performance for a small number of function evalutions - which represents many of today's practical application cases.Some guidelines for utilization as well as some application examples are also given.},
  doi       = {10.1145/2598394.2605337},
  groups    = {acm},
  isbn      = {9781450328814},
  keywords  = {evolution strategies, self-adaptation},
  location  = {Vancouver, BC, Canada},
  numpages  = {30},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2598394.2605337},
}

@InProceedings{Giannakou2015,
  author    = {Giannakou, Anna and Rilling, Louis and Pazat, Jean-Louis and Majorczyk, Fr\'{e}d\'{e}ric and Morin, Christine},
  title     = {Towards Self Adaptable Security Monitoring in IaaS Clouds},
  booktitle = {Proceedings of the 15th IEEE/ACM International Symposium on Cluster, Cloud, and Grid Computing},
  year      = {2015},
  series    = {CCGRID ’15},
  pages     = {737–740},
  publisher = {IEEE Press},
  abstract  = {Traditional intrusion detection systems are not adaptive enough to cope with the dynamic characteristics of cloud-hosted virtual infrastructures. This makes them unable to address new cloud-oriented security issues. In this paper we introduce SAIDS, a self-adaptable intrusion detection system tailored for cloud environments. SAIDS is designed to re-configure its components based on environmental changes. A prototype of SAIDS is described.},
  doi       = {10.1109/CCGrid.2015.133},
  groups    = {acm},
  isbn      = {9781479980062},
  keywords  = {IDS, self-adaptation, security, cloud},
  location  = {Shenzhen, China},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/CCGrid.2015.133},
}

@InProceedings{Xu2019,
  author    = {Xu, Qingfei and Yang, Xinyu and Saintonge, Gilles},
  title     = {Self-Adaptive Algorithm for Asynchronous Multi-Task Communication on Time-Triggered Avionics System},
  booktitle = {Proceedings of the 3rd International Conference on High Performance Compilation, Computing and Communications},
  year      = {2019},
  series    = {HP3C ’19},
  pages     = {165–172},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Avionics communication system has multiple ending equipment with safety-critical data exchanges which require high reliability, low latency, and no data loss. Time-Triggered Architecture which is prevalent in that safety-critical system is a synchronized real-time system with fault-tolerance ability, but most host applications usually work at asynchronous fashion, their execution speed is heavily dependent on the temperature and supply voltage. It's difficult for asynchronous host applications to synchronize with Time-Triggered communication Architecture. This paper introduced a novel algorithm which could periodically synchronize host applications with the global clock of Time-Triggered Architecture; furthermore, we introduced three different implementation alternatives, evaluated them in the same test board, and gave a performance comparison of them. The result showed our design worked fine in the embedded platform.},
  doi       = {10.1145/3318265.3318277},
  groups    = {acm},
  isbn      = {9781450366380},
  keywords  = {asynchronous, self-adaptive, multi-task, time-triggered architecture},
  location  = {Xi'an, China},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3318265.3318277},
}

@InProceedings{Trewin2003,
  author    = {Trewin, Shari},
  title     = {Automating Accessibility: The Dynamic Keyboard},
  booktitle = {Proceedings of the 6th International ACM SIGACCESS Conference on Computers and Accessibility},
  year      = {2003},
  series    = {Assets ’04},
  pages     = {71–78},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {People with motor disabilities may need to adjust the configuration of their input devices, but often find this an obscure and difficult process. The Dynamic Keyboard exemplifies a potential solution. It continuously adjusts fundamental keyboard accessibility features to suit the requirements of the current user, based on a keyboard use model. Early field results indicate that users have not chosen to take control of these accessibility features from the Dynamic Keyboard, and that a variety of settings are being used. A more detailed ongoing study suggests that automatic adjustment of the key repeat delay feature is acceptable to users, while the debounce feature may not be appropriate for dynamic adjustment.},
  doi       = {10.1145/1028630.1028644},
  groups    = {acm},
  isbn      = {158113911X},
  keywords  = {self-adapting systems, configuration, acessibility, keyboards},
  location  = {Atlanta, GA, USA},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1028630.1028644},
}

@InProceedings{Stouffs2002,
  author    = {Stouffs, Alexandre},
  booktitle = {Proceedings of the 4th IEEE International Conference on Multimodal Interfaces},
  title     = {Interruptions as Multimodal Outputs: Which Are the Less Disruptive?},
  year      = {2002},
  address   = {USA},
  pages     = {479},
  publisher = {IEEE Computer Society},
  series    = {ICMI ’02},
  abstract  = {This paper describes exploratory studies of interruption modalities and disruptiveness. Five interruption modalities were compared: heat, smell, sound, vibration, and light. Much more notable than the differences between modalities was the differences between people. We found that subjects' sensitiveness depended on their previous life exposure to the modalities. Individual differences greatly control the effect of interrupting stimuli. We show that is possible to build a multimodal adaptive interruption interface, such interfaces would dynamically select the output interruption modality to use based on its effectiveness on a particular user.},
  doi       = {10.1109/ICMI.2002.1167043},
  groups    = {acm},
  isbn      = {0769518346},
  keywords  = {Interruption modalities, modalities of interaction, self-adaptive interfaces, interface design, multimodal interfaces},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/ICMI.2002.1167043},
}

@InProceedings{Preen2009,
  author    = {Preen, Richard and Bull, Larry},
  title     = {Discrete Dynamical Genetic Programming in XCS},
  booktitle = {Proceedings of the 11th Annual Conference on Genetic and Evolutionary Computation},
  year      = {2009},
  series    = {GECCO ’09},
  pages     = {1299–1306},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A number of representation schemes have been presented for use within Learning Classifier Systems, ranging from binary encodings to neural networks. This paper presents results from an investigation into using a discrete dynamical system representation within the XCS Learning Classifier System. In particular, asynchronous random Boolean networks are used to represent the traditional condition-action production system rules. It is shown possible to use self-adaptive, open-ended evolution to design an ensemble of such discrete dynamical systems within XCS to solve a number of well-known test problems.},
  doi       = {10.1145/1569901.1570075},
  groups    = {acm},
  isbn      = {9781605583259},
  keywords  = {random boolean networks, xcs, learning classifier systems, self-adaptation, reinforcement learning},
  location  = {Montreal, Qu\'{e}bec, Canada},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1569901.1570075},
}

@Article{Huebscher2008,
  author     = {Huebscher, Markus C. and McCann, Julie A.},
  title      = {A Survey of Autonomic Computing—Degrees, Models, and Applications},
  journal    = {ACM Comput. Surv.},
  year       = {2008},
  volume     = {40},
  number     = {3},
  month      = aug,
  issn       = {0360-0300},
  abstract   = {Autonomic Computing is a concept that brings together many fields of computing with the purpose of creating computing systems that self-manage. In its early days it was criticised as being a “hype topic” or a rebadging of some Multi Agent Systems work. In this survey, we hope to show that this was not indeed ‘hype’ and that, though it draws on much work already carried out by the Computer Science and Control communities, its innovation is strong and lies in its robust application to the specific self-management of computing systems. To this end, we first provide an introduction to the motivation and concepts of autonomic computing and describe some research that has been seen as seminal in influencing a large proportion of early work. Taking the components of an established reference model in turn, we discuss the works that have provided significant contributions to that area. We then look at larger scaled systems that compose autonomic systems illustrating the hierarchical nature of their architectures. Autonomicity is not a well defined subject and as such different systems adhere to different degrees of Autonomicity, therefore we cross-slice the body of work in terms of these degrees. From this we list the key applications of autonomic computing and discuss the research work that is missing and what we believe the community should be considering.},
  address    = {New York, NY, USA},
  articleno  = {7},
  doi        = {10.1145/1380584.1380585},
  groups     = {acm},
  issue_date = {August 2008},
  keywords   = {Autonomic computing, self-healing systems, self-adaptive},
  numpages   = {28},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/1380584.1380585},
}

@Article{Semenov2003,
  author     = {Semenov, Mikhail A. and Terkel, Dmitri A.},
  title      = {Analysis of Convergence of an Evolutionary Algorithm with Self-Adaptation Using a Stochastic Lyapunov Function},
  journal    = {Evol. Comput.},
  year       = {2003},
  volume     = {11},
  number     = {4},
  pages      = {363–379},
  month      = dec,
  issn       = {1063-6560},
  abstract   = {This paper analyses the convergence of evolutionary algorithms using a technique which is based on a stochastic Lyapunov function and developed within the martingale theory. This technique is used to investigate the convergence of a simple evolutionary algorithm with self-adaptation, which contains two types of parameters: fitness parameters, belonging to the domain of the objective function; and control parameters, responsible for the variation of fitness parameters. Although both parameters mutate randomly and independently, they converge to the floptimumfl due to the direct (for fitness parameters) and indirect (for control parameters) selection. We show that the convergence velocity of the evolutionary algorithm with self-adaptation is asymptotically exponential, similar to the velocity of the optimal deterministic algorithm on the class of unimodal functions. Although some martingale inequalities have not be proved analytically, they have been numerically validated with 0.999 confidence using Monte-Carlo simulations.},
  address    = {Cambridge, MA, USA},
  doi        = {10.1162/106365603322519279},
  groups     = {acm},
  issue_date = {Winter 2003},
  keywords   = {stochastic Lyapunov function, martingale, convergence, self-adaptation},
  numpages   = {17},
  publisher  = {MIT Press},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1162/106365603322519279},
}

@InProceedings{Wagner2010,
  author    = {Wagner, Michael},
  title     = {Context as a Service},
  booktitle = {Proceedings of the 12th ACM International Conference Adjunct Papers on Ubiquitous Computing - Adjunct},
  year      = {2010},
  series    = {UbiComp ’10 Adjunct},
  pages     = {489–492},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Context-aware self-adaptive applications monitor and exploit knowledge about external operating conditions and adapt to changes in the execution context. Modern smartphones are equipped with several sensors, like GPS sensor or accelerometer. Additionally, context reasoners and external context providers exist. Thereby, it's possible that several context providers offer information of the same type (e.g. location) but differ in quality levels (e.g. accuracy), representations (e.g. position represented in coordinates and as an address) and cost (e.g. battery consumption) for providing the information. Therefore comprehensive support is required for selecting and activating ((de-)activation of local providers to save resources) one of the context providers.},
  doi       = {10.1145/1864431.1864494},
  groups    = {acm},
  isbn      = {9781450302838},
  keywords  = {self-adaptation, context-awareness, ubiquitous computing, context-service},
  location  = {Copenhagen, Denmark},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1864431.1864494},
}

@InProceedings{Puerta1993,
  author    = {Puerta, Angel R.},
  title     = {The Study of Models of Intelligent Interfaces},
  booktitle = {Proceedings of the 1st International Conference on Intelligent User Interfaces},
  year      = {1993},
  series    = {IUI ’93},
  pages     = {71–78},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/169891.169905},
  groups    = {acm},
  isbn      = {0897915569},
  keywords  = {machine learning, intelligent-interface modeling, user-interface management, self-adaptation},
  location  = {Orlando, Florida, USA},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/169891.169905},
}

@Article{Howard2014,
  author     = {Howard, Gerard and Bull, Larry and de Lacy Costello, Ben and Gale, Ella and Adamatzky, Andrew},
  title      = {Evolving Spiking Networks with Variable Resistive Memories},
  journal    = {Evol. Comput.},
  year       = {2014},
  volume     = {22},
  number     = {1},
  pages      = {79–103},
  month      = mar,
  issn       = {1063-6560},
  abstract   = {Neuromorphic computing is a brainlike information processing paradigm that requires adaptive learning mechanisms. A spiking neuro-evolutionary system is used for this purpose; plastic resistive memories are implemented as synapses in spiking neural networks. The evolutionary design process exploits parameter self-adaptation and allows the topology and synaptic weights to be evolved for each network in an autonomous manner. Variable resistive memories are the focus of this research; each synapse has its own conductance profile which modifies the plastic behaviour of the device and may be altered during evolution. These variable resistive networks are evaluated on a noisy robotic dynamic-reward scenario against two static resistive memories and a system containing standard connections only. The results indicate that the extra behavioural degrees of freedom available to the networks incorporating variable resistive memories enable them to outperform the comparative synapse types.},
  address    = {Cambridge, MA, USA},
  doi        = {10.1162/EVCO_a_00103},
  groups     = {acm},
  issue_date = {Spring 2014},
  keywords   = {self-adaptation, neural networks, nonvolatile memory, memristors, hebbian learning, Genetic algorithms},
  numpages   = {25},
  publisher  = {MIT Press},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1162/EVCO_a_00103},
}

@InProceedings{Howard2011,
  author    = {Howard, Gerard David and Gale, Ella and Bull, Larry and de Lacy Costello, Benjamin and Adamatzky, Andrew},
  title     = {Evolving Spiking Networks with Variable Memristors},
  booktitle = {Proceedings of the 13th Annual Conference on Genetic and Evolutionary Computation},
  year      = {2011},
  series    = {GECCO ’11},
  pages     = {1275–1282},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper presents a spiking neuro-evolutionary system which implements memristors as neuromodulatory connections, i.e. whose weights can vary during a trial. The evolutionary design process exploits parameter self-adaptation and a constructionist approach, allowing the number of neurons, connection weights, and inter-neural connectivity pattern to be evolved for each network. Additionally, each memristor has its own conductance profile, which alters the neuromodulatory behaviour of the memristor and may be altered during the application of the GA. We demonstrate that this approach allows the evolutionary process to discover beneficial memristive behaviours at specific points in the networks. We evaluate our approach against two phenomenological real-world memristive implementations, a theoretical "linear memristor", and a system containing standard connections only. Performance is evaluated on a simulated robotic navigation task.},
  doi       = {10.1145/2001576.2001748},
  groups    = {acm},
  isbn      = {9781450305570},
  keywords  = {self-adaptation, constructivism, memristors, neuro-evolution, STDP},
  location  = {Dublin, Ireland},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2001576.2001748},
}

@InProceedings{Howard2009,
  author    = {Howard, Gerard David and Bull, Larry and Lanzi, Pier-Luca},
  title     = {Towards Continuous Actions in Continuous Space and Time Using Self-Adaptive Constructivism in Neural XCSF},
  booktitle = {Proceedings of the 11th Annual Conference on Genetic and Evolutionary Computation},
  year      = {2009},
  series    = {GECCO ’09},
  pages     = {1219–1226},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper presents a Learning Classifier System (LCS) where each classifier condition is represented by a feed-forward multi-layered perceptron (MLP) network. Adaptive behavior is realized through the use of self-adaptive parameters and neural constructivism, providing the system with a flexible knowledge representation. The approach allows for the evolution of networks of appropriate complexity to solve a continuous maze environment, here using either discrete-valued actions, continuous-valued actions, or continuous-valued actions of continuous duration. In each case, it is shown that the neural LCS employed is capable of developing optimal solutions to the reinforcement learning task presented in this paper.},
  doi       = {10.1145/1569901.1570065},
  groups    = {acm},
  isbn      = {9781605583259},
  keywords  = {neural networks, learning classifier systems, self-adaptation, constructivism, continuous environments},
  location  = {Montreal, Qu\'{e}bec, Canada},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1569901.1570065},
}

@InProceedings{Melkozerov2015,
  author    = {Melkozerov, Alexander and Beyer, Hans-Georg},
  title     = {Towards an Analysis of Self-Adaptive Evolution Strategies on the Noisy Ellipsoid Model},
  booktitle = {Proceedings of the 2015 Annual Conference on Genetic and Evolutionary Computation},
  year      = {2015},
  series    = {GECCO ’15},
  pages     = {297–304},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper analyzes the multi-recombinant self-adaptive evolution strategy (ES), denoted as(μ/μI, λ)-σSA-ES on the convex-quadratic function class under the influence of noise, which is referred to as noisy ellipsoid model. Asymptotically exact progress rate and self-adaptation response measures are derived (i.e., for N → ∞, N - search space dimensionality) for the considered objective function model and verified using experimental ES runs.},
  doi       = {10.1145/2739480.2754800},
  groups    = {acm},
  isbn      = {9781450334723},
  keywords  = {progress rate, self-adaptation, noise, evolution strategy, ellipsoid model, mutation strength},
  location  = {Madrid, Spain},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2739480.2754800},
}

@InProceedings{Abe2010,
  author    = {Abe, Rey and Honiden, Shinichi},
  title     = {Adaptive Geographic Routing in Wireless Sensor Networks},
  booktitle = {Proceedings of the 13th ACM International Conference on Modeling, Analysis, and Simulation of Wireless and Mobile Systems},
  year      = {2010},
  series    = {MSWIM ’10},
  pages     = {91–100},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Geographic routing protocols exploit node positions on the Euclidean plane to route packets in multi-hop networks. Their potential lies in forgoing the overhead of building routing structures for instance in the form of link-state tables. At the same time their performance suffers from local dead ends and missing or inaccurate node coordinates. These issues have been addressed by various means, most notably by falling back to face routing on a planarized network graph or to a backup routing infrastructure such as a minimum spanning tree. Existing solutions however are not geared towards finding efficient paths or result in a considerable -- often upfront and global -- communication overhead. We propose assisting geographic routing adaptively by resorting to an on-demand route discovery only when and where it becomes necessary to sustain its greedy forwarding functionality. Simulating practically relevant qualities of dead ends and location inaccuracies, we show how the overhead of our method to deal with such cases remains localized and limited. We claim that our results make geographic routing more practicable particularly in wireless sensor networks that are deployed in immobile large-scale meshes and characterized by locally varying network conditions},
  doi       = {10.1145/1868521.1868538},
  groups    = {acm},
  isbn      = {9781450302746},
  keywords  = {wireless sensor network, position-based routing, geographic routing, self-adaptation, adaptability, geometric routing},
  location  = {Bodrum, Turkey},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1868521.1868538},
}

@Article{Roy2017,
  author     = {Roy, Arijit and Misra, Sudip and Kar, Pushpendu and Mondal, Ayan},
  title      = {Topology Control for Self-Adaptation in Wireless Sensor Networks with Temporary Connection Impairment},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2017},
  volume     = {11},
  number     = {4},
  month      = jan,
  issn       = {1556-4665},
  abstract   = {In this work, the problem of topology control for self-adaptation in stationary Wireless Sensor Networks (WSNs) is revisited, specifically for the case of networks with a subset of nodes having temporary connection impairment between them. This study focuses on misbehaviors arising due to the presence of\enskip “dumb” nodes [Misra et al. 2014; Roy et al. 2014a, 2014b, 2014c; Kar and Misra 2015], which can sense its surroundings but cannot communicate with its neighbors due to shrinkage in its communication range by the environmental effects attributed to change in temperature, rainfall, and fog. However, a dumb node is expected to behave normally on the onset of favorable environmental conditions. Therefore, the presence of such dumb nodes in the network gives rise to impaired connectivity between a subset of nodes and, consequently, results in change in topology. Such phenomena are dynamic in nature and are thus distinct from the phenomena attributed to traditional isolation problems considered in stationary WSNs. Activation of all the sensor nodes simultaneously is not necessarily energy efficient and cost-effective. In order to maintain self-adaptivity of the network, two algorithms, named Connectivity Re-establishment in the presence of Dumb nodes (CoRD) and Connectivity Re-establishment in the presence of Dumb nodes Without Applying Constraints (CoRDWAC), are designed. The performance of these algorithms is evaluated through simulation-based experiments. Further, it is also observed that the performance of CoRD is better than the existing topology control protocols—LETC and A1—with respect to the number of nodes activated, overhead, and energy consumption.},
  address    = {New York, NY, USA},
  articleno  = {21},
  doi        = {10.1145/2979680},
  groups     = {acm},
  issue_date = {February 2017},
  keywords   = {connectivity, Dumb node, self-adaptivity, wireless sensor network, dynamic shrinkage},
  numpages   = {34},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2979680},
}

@InProceedings{McGurren2002,
  author    = {McGurren, Finbar},
  title     = {Toward a Management Framework for Self-Adaptive Systems},
  booktitle = {Companion of the 17th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  year      = {2002},
  series    = {OOPSLA ’02},
  pages     = {12–13},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper outlines the major problems that need to be addressed when providing support for self-adaptive systems. A reflexive architecture that provides facilities for managing system adaptation is then described.},
  doi       = {10.1145/985072.985079},
  groups    = {acm},
  isbn      = {1581136269},
  keywords  = {reflexive architecture, self-adaptive},
  location  = {Seattle, Washington},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/985072.985079},
}

@InProceedings{Foerster2007,
  author    = {F\"{o}rster, Manuel and Bickel, Bettina and Hardung, Bernd and K\'{o}kai, Gabriella},
  title     = {Self-Adaptive Ant Colony Optimisation Applied to Function Allocation in Vehicle Networks},
  booktitle = {Proceedings of the 9th Annual Conference on Genetic and Evolutionary Computation},
  year      = {2007},
  series    = {GECCO ’07},
  pages     = {1991–1998},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Modern vehicles possess an increasing number of softwareand hardware components that are integrated in electroniccontrol units (ECUs). Finding an optimal allocation forall components is a multi-objective optimisation problem,since every valid allocation can be rated according to multipleobjectives like costs, busload, weight, etc. Additionally,several constraints mainly regarding the availability of resourceshave to be considered. This paper introduces a newvariant of the well-known ant colony optimisation, whichhas been applied to the real-world problem described above.Since it concerns a multi-objective optimisation problem,multiple ant colonies are employed. In the course of thiswork, pheromone updating strategies specialised on constrainthandling are developed. To reduce the effort neededto adapt the algorithm to the optimisation problem by tuningstrategic parameters, self-adaptive mechanisms are establishedfor most of them. Besides the reduction of theeffort, this step also improves the algorithm's convergencebehaviour.},
  doi       = {10.1145/1276958.1277352},
  groups    = {acm},
  isbn      = {9781595936974},
  keywords  = {automobile industry, ant colony optimization, self-adaptation, multi-objective optimisation},
  location  = {London, England},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1276958.1277352},
}

@InProceedings{Park2008,
  author    = {Park, Jeongmin and Lee, Joonhoon and Lee, Eunseok},
  title     = {Goal Graph Based Performance Improvement for Self-Adaptive Modules},
  booktitle = {Proceedings of the 2nd International Conference on Ubiquitous Information Management and Communication},
  year      = {2008},
  series    = {ICUIMC ’08},
  pages     = {58–62},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Much effort is required to manage complex computing environments. Self-healing systems, adapted to their computing environments, offer a solution to this problem. Additional resources are required to use these systems. In our previous study, we proposed an approach that controls the behaviors of the self-adaptive components. This approach used switches to reduce the amount of resources required and enhance system performance. However, it did not include an abstraction approach to control the behavior of the self-adaptive modules. Specific code needs to be included when designing and implementing self-adaptive modules to utilize abstraction. In this study, we propose a method of 1) analyzing the behavioral levels of the self-adaptive modules through a goal graph 2) generating a behavior level activation switch using the specified levels. Through this approach, we can reduce additional resources required by the self-adaptive modules, and the effort involved in creating the code required for improving their performance. In order to evaluate the proposed approach, we draw a goal graph of a file transfer module used in a video conference system. This approach generates the template code of the behavior switch based on the goal graph that can improve the performance of self-adaptive modules. Through these processes, the generated code is applied to the modules, while verifying that the switches function properly. We compare the number of concurrent active components before and after applying this approach. In this way, we make certain that the code generated from the goal graph improves the performance of self-adaptive modules.},
  doi       = {10.1145/1352793.1352806},
  groups    = {acm},
  isbn      = {9781595939937},
  keywords  = {self-adaptive module, activation switch, goal graph},
  location  = {Suwon, Korea},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1352793.1352806},
}

@Article{Deb2010,
  author     = {Deb, Kalyanmoy and Sinha, Ankur},
  title      = {An Efficient and Accurate Solution Methodology for Bilevel Multi-Objective Programming Problems Using a Hybrid Evolutionary-Local-Search Algorithm},
  journal    = {Evol. Comput.},
  year       = {2010},
  volume     = {18},
  number     = {3},
  pages      = {403–449},
  month      = sep,
  issn       = {1063-6560},
  abstract   = {Bilevel optimization problems involve two optimization tasks (upper and lower level), in which every feasible upper level solution must correspond to an optimal solution to a lower level optimization problem. These problems commonly appear in many practical problem solving tasks including optimal control, process optimization, game-playing strategy developments, transportation problems, and others. However, they are commonly converted into a single level optimization problem by using an approximate solution procedure to replace the lower level optimization task. Although there exist a number of theoretical, numerical, and evolutionary optimization studies involving single-objective bilevel programming problems, not many studies look at the context of multiple conflicting objectives in each level of a bilevel programming problem. In this paper, we address certain intricate issues related to solving multi-objective bilevel programming problems, present challenging test problems, and propose a viable and hybrid evolutionary-cum-local-search based algorithm as a solution methodology. The hybrid approach performs better than a number of existing methodologies and scales well up to 40-variable difficult test problems used in this study. The population sizing and termination criteria are made self-adaptive, so that no additional parameters need to be supplied by the user. The study indicates a clear niche of evolutionary algorithms in solving such difficult problems of practical importance compared to their usual solution by a computationally expensive nested procedure. The study opens up many issues related to multi-objective bilevel programming and hopefully this study will motivate EMO and other researchers to pay more attention to this important and difficult problem solving activity.},
  address    = {Cambridge, MA, USA},
  doi        = {10.1162/EVCO_a_00015},
  groups     = {acm},
  issue_date = {Fall 2010},
  keywords   = {problem difficulties, NSGA-II, sequential quadratic programming, test problem development, hybrid evolutionary algorithms, evolutionary multi-objective optimization, self-adaptive algorithm, Bilevel optimization},
  numpages   = {47},
  publisher  = {MIT Press},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1162/EVCO_a_00015},
}

@InProceedings{Lemonnier2012,
  author    = {Lemonnier, Fabrice and Millet, Philippe},
  title     = {FlexTiles: Self Adaptive Heterogeneous Manycore Based on Flexible Tiles (FP7 Project)},
  booktitle = {Proceedings of the 2012 Interconnection Network Architecture: On-Chip, Multi-Chip Workshop},
  year      = {2012},
  series    = {INA-OCMC ’12},
  pages     = {37–38},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {We present the FP7 project FlexTiles which main objective is to develop a heterogeneous manycore with self adaptive capabilities.},
  doi       = {10.1145/2107763.2107773},
  groups    = {acm},
  isbn      = {9781450310109},
  keywords  = {3D stacking, NoC, reconfigurable architecture, virtualisation layer, self-adaptive architecture, heterogeneous manycore, parallelisation and compilation tools},
  location  = {Paris, France},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2107763.2107773},
}

@InProceedings{Perez-Puigdemont2016,
  author    = {P\'{e}rez-Puigdemont, Jordi and Moll, Francesc},
  title     = {ASIC Implementation of An All-Digital Self-Adaptive PVTA Variation-Aware Clock Generation System},
  booktitle = {Proceedings of the 26th Edition on Great Lakes Symposium on VLSI},
  year      = {2016},
  series    = {GLSVLSI ’16},
  pages     = {381–384},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {An all-digital self-adaptive clock generation system capable of autonomously adapt the clock frequency to compensate the effects of static spatially heterogeneous (SSHet) PVTA variations is presented. The design uses time-to-digital converters (TDCs) as delay sensors and a variable length ring oscillator (VLRO) as clock generator. The VLRO naturally adapts its frequency to the PVTA variations suffered by its logic gates while the TDCs are used to track these variations across the chip and modify the VLRO length in order to allocate them. The proposed system has been implemented in a silicon chip using a 65nm process. The fabricated chip has been used to test the system adaptive capabilities under SSHet voltage variations. Measurement results show that it effectively adapts the VLRO length, and hence the clock frequency, to the supply voltage variations.},
  doi       = {10.1145/2902961.2903006},
  groups    = {acm},
  isbn      = {9781450342742},
  keywords  = {design for testability, voltage and temperature variations, time to digital converter, adaptive clock, hardware test, hardware reliability, self-adaptive timing, ring oscillator},
  location  = {Boston, Massachusetts, USA},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2902961.2903006},
}

@InProceedings{Ancona2015,
  author    = {Ancona, Davide and Briola, Daniela and Ferrando, Angelo and Mascardi, Viviana},
  title     = {Global Protocols as First Class Entities for Self-Adaptive Agents},
  booktitle = {Proceedings of the 2015 International Conference on Autonomous Agents and Multiagent Systems},
  year      = {2015},
  series    = {AAMAS ’15},
  pages     = {1019–1029},
  address   = {Richland, SC},
  publisher = {International Foundation for Autonomous Agents and Multiagent Systems},
  abstract  = {We describe a framework for top-down centralized self-adaptive MASs where adaptive agents are "protocol-driven" and adaptation consists in runtime protocol switch. Protocol specifications take a global, rather than a local, perspective and each agent, before starting to follow a new (global) protocol, projects it for obtaining a local version. If all the agents in the MAS are driven by the same global protocol, the compliance of the MAS execution to the protocol is obtained by construction.},
  groups    = {acm},
  isbn      = {9781450334136},
  keywords  = {interaction protocols, self-adaptiveness},
  location  = {Istanbul, Turkey},
  numpages  = {11},
}

@Article{Rudolph2019,
  author     = {Rudolph, Stefan and Tomforde, Sven and H\"{a}hner, J\"{o}rg},
  title      = {Mutual Influence-Aware Runtime Learning of Self-Adaptation Behavior},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2019},
  volume     = {14},
  number     = {1},
  month      = sep,
  issn       = {1556-4665},
  abstract   = {Self-adaptation has been proposed as a mechanism to counter complexity in control problems of technical systems. A major driver behind self-adaptation is the idea to transfer traditional design-time decisions to runtime and into the responsibility of systems themselves. To deal with unforeseen events and conditions, systems need creativity—typically realized by means of machine learning capabilities. Such learning mechanisms are based on different sources of knowledge. Feedback from the environment used for reinforcement purposes is probably the most prominent one within the self-adapting and self-organizing (SASO) systems community. However, the impact of other (sub-)systems on the success of the individual system’s learning performance has mostly been neglected in this context. In this article, we propose a novel methodology to identify effects of actions performed by other systems in a shared environment on the utility achievement of an autonomous system. Consider smart cameras (SC) as illustrating example: For goals such as 3D reconstruction of objects, the most promising configuration of one SC in terms of pan/tilt/zoom parameters depends largely on the configuration of other SCs in the vicinity. Since such mutual influences cannot be pre-defined for dynamic systems, they have to be learned at runtime. Furthermore, they have to be taken into consideration when self-improving their own configuration decisions based on a feedback loop concept, e.g., known from the SASO domain or the Autonomic and Organic Computing initiatives. We define a methodology to detect such influences at runtime, present an approach to consider this information in a reinforcement learning technique, and analyze the behavior in artificial as well as real-world SASO system settings.},
  address    = {New York, NY, USA},
  articleno  = {4},
  doi        = {10.1145/3345319},
  groups     = {acm},
  issue_date = {September 2019},
  keywords   = {interwoven systems, self-integration, Mutual influences, self-adaption, machine learning, self-organization, organic computing},
  numpages   = {37},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3345319},
}

@InProceedings{Huang2001,
  author    = {Huang, Tao-Yuan and Chen, Yung-Yaw},
  title     = {Diversity-Based Selection Pooling Scheme in Evolution Strategies},
  booktitle = {Proceedings of the 2001 ACM Symposium on Applied Computing},
  year      = {2001},
  series    = {SAC ’01},
  pages     = {351–355},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/372202.372363},
  groups    = {acm},
  isbn      = {1581132875},
  keywords  = {diversity measures, selection pooling schemes, evolutionary algorithms, evolution strategies, self-adaptive mutation},
  location  = {Las Vegas, Nevada, USA},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/372202.372363},
}

@InProceedings{Mora2014,
  author    = {Mora, A. M. and De las Cuevas, P. and Merelo, J. J. and Zamarripa, S. and Juan, M. and Esparcia-Alc\'{a}zar, A. I. and Burvall, M. and Arfwedson, H. and Hodaie, Z.},
  title     = {MUSES: A Corporate User-Centric System Which Applies Computational Intelligence Methods},
  booktitle = {Proceedings of the 29th Annual ACM Symposium on Applied Computing},
  year      = {2014},
  series    = {SAC ’14},
  pages     = {1719–1723},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This work presents the description of the architecture of a novel enterprise security system, still in development, which can prevent and deal with the security flaws derived from the users in a company. Thus, the Multiplatform Usable Endpoint Security system (MUSES) considers diverse factors such as the information distribution, the type of accesses, the context where the users are, the category of users, or the mix between personal and private data, among others. This system includes an event correlator and a risk and trust analysis engine to perform the decision process. MUSES follows a set of defined security rules, according to the enterprise security policies, but it is able to self-adapt the decisions and even create new security rules depending on the user behaviour, the specific device, and the situation or context. To this aim MUSES applies machine learning and computational intelligence techniques which can also be used to predict potential unsafe or dangerous user's behaviour.},
  doi       = {10.1145/2554850.2555059},
  groups    = {acm},
  isbn      = {9781450324694},
  keywords  = {BYOD, risk and trust analysis, multiplatform, security policies, enterprise security, user-centric system, event correlation, self-adaptation},
  location  = {Gyeongju, Republic of Korea},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2554850.2555059},
}

@InProceedings{Belluz2015,
  author    = {Belluz, Jany and Gaudesi, Marco and Squillero, Giovanni and Tonda, Alberto},
  title     = {Operator Selection Using Improved Dynamic Multi-Armed Bandit},
  booktitle = {Proceedings of the 2015 Annual Conference on Genetic and Evolutionary Computation},
  year      = {2015},
  series    = {GECCO ’15},
  pages     = {1311–1317},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Evolutionary algorithms greatly benefit from an optimal application of the different genetic operators during the optimization process: thus, it is not surprising that several research lines in literature deal with the self-adapting of activation probabilities for operators. The current state of the art revolves around the use of the Multi-Armed Bandit (MAB) and Dynamic Multi-Armed bandit (D-MAB) paradigms, that modify the selection mechanism based on the rewards of the different operators. Such methodologies, however, update the probabilities after each operator's application, creating possible issues with positive feedbacks and impairing parallel evaluations, one of the strongest advantages of evolutionary computation in an industrial perspective. Moreover, D-MAB techniques often rely upon measurements of population diversity, that might not be applicable to all real-world scenarios. In this paper, we propose a generalization of the D-MAB approach, paired with a simple mechanism for operator management, that aims at removing several limitations of other D-MAB strategies, allowing for parallel evaluations and self-adaptive parameter tuning. Experimental results show that the approach is particularly effective with frameworks containing many different operators, even when some of them are ill-suited for the problem at hand, or are sporadically failing, as it commonly happens in the real world.},
  doi       = {10.1145/2739480.2754712},
  groups    = {acm},
  isbn      = {9781450334723},
  keywords  = {multi-armed bandit, self-adapting, evolutionary algorithms, operator selection, adaptivity},
  location  = {Madrid, Spain},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2739480.2754712},
}

@InProceedings{Ochoa2011,
  author    = {Ochoa, Gabriela and Hyde, Matthew V. and Burke, Edmund K.},
  title     = {Automated Heuristic Design},
  booktitle = {Proceedings of the 13th Annual Conference Companion on Genetic and Evolutionary Computation},
  year      = {2011},
  series    = {GECCO ’11},
  pages     = {1321–1342},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This tutorial will discuss state-of-the-art techniques for automating the design of heuristic search methods, in order to remove or reduce the need for a human expert in the process of designing an effective algorithm to solve a search problem. Using machine learning or meta-level search, several approaches have been proposed in computer science, artificial intelligence and operational research. The aim is to develop methodologies which can adapt to different environments without manually having to customise the search, or its parameters, for each particular problem domain. This can be seen as one of the drawbacks of many current metaheuristic and evolutionary implementations, which tend to have to be customised for a particular class of problems or even specific problem instances. We have identified two main types of approaches to this challenge: heuristic selection, and heuristic generation. In heuristic selection the idea is to automatically combine fixed pre-existing simple heuristics or neighbourhood structures to solve the problem at hand; whereas in heuristic generation the idea is to automatically create new heuristics (or heuristic components) suited to a given problem or class of problems. This latter approach is typically achieved by combining, through the use of genetic programming for example, components or building-blocks of human designed heuristics. This tutorial will go over the intellectual roots and origins of both automated heuristic selection and generation, before discussing work carried out to date in these two directions and then focusing on some observations and promising research directions.},
  doi       = {10.1145/2001858.2002139},
  groups    = {acm},
  isbn      = {9781450306904},
  keywords  = {adaptation, metaheuristics, self-adaptation, hyper-heuristics, online learning, offline learning},
  location  = {Dublin, Ireland},
  numpages  = {22},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2001858.2002139},
}

@Article{Deb2002,
  author     = {Deb, Kalyanmoy and Anand, Ashish and Joshi, Dhiraj},
  title      = {A Computationally Efficient Evolutionary Algorithm for Real-Parameter Optimization},
  journal    = {Evol. Comput.},
  year       = {2002},
  volume     = {10},
  number     = {4},
  pages      = {371–395},
  month      = dec,
  issn       = {1063-6560},
  abstract   = {Due to increasing interest in solving real-world optimization problems using evolutionary algorithms (EAs), researchers have recently developed a number of real-parameter genetic algorithms (GAs). In these studies, the main research effort is spent on developing an efficient recombination operator. Such recombination operators use probability distributions around the parent solutions to create an offspring. Some operators emphasize solutions at the center of mass of parents and some around the parents. In this paper, we propose a generic parent-centric recombination operator (PCX) and a steady-state, elite-preserving, scalable, and computationally fast population-alteration model (we call the G3 model). The performance of the G3 model with the PCX operator is investigated on three commonly used test problems and is compared with a number of evolutionary and classical optimization algorithms including other real-parameter GAs with the unimodal normal distribution crossover (UNDX) and the simplex crossover (SPX) operators, the correlated self-adaptive evolution strategy, the covariance matrix adaptation evolution strategy (CMA-ES), the differential evolution technique, and the quasi-Newton method. The proposed approach is found to consistently and reliably perform better than all other methods used in the study. A scale-up study with problem sizes up to 500 variables shows a polynomial computational complexity of the proposed approach. This extensive study clearly demonstrates the power of the proposed technique in tackling real-parameter optimization problems.},
  address    = {Cambridge, MA, USA},
  doi        = {10.1162/106365602760972767},
  groups     = {acm},
  issue_date = {December 2002},
  keywords   = {parent-centric recombination, covariance matrix adaptation, scalable evolutionary algorithms, self-adaptive evolution strategy, quasi-Newton method, simulated binary crossover, real-parameter optimization, differential evolution},
  numpages   = {25},
  publisher  = {MIT Press},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1162/106365602760972767},
}

@InProceedings{Harada2017,
  author    = {Harada, Tomohiro and Takadama, Keiki},
  title     = {A Study of Self-Adaptive Semi-Asynchronous Evolutionary Algorithm on Multi-Objective Optimization Problem},
  booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference Companion},
  year      = {2017},
  series    = {GECCO ’17},
  pages     = {1812–1819},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper proposes a self-adaptive semi-asynchronous evolutionary algorithm, SA2EA for short, and verifies its effectiveness on multi-objective optimization problems. SA2EA is an extension of an asynchronous EA that continuously evolves solutions whenever one solution completes its evaluation in a parallel computation environment, unlike a conventional generation-based synchronous EA needs to wait for evaluations of all solutions in a population, which causes to waste much idle time of parallel computation nodes. In contrast to such asynchronous EA, SA2EA adequately controls its asynchrony, which means the number of waited solutions, depends on the variance of evaluation time of solutions. To investigate the effectiveness of the proposed SA2EA, this paper conducts the experiment on benchmark problems of multi-objective optimization where several variations of the variance of evaluation time are tested in pseudo-parallel computation environment. The experimental result reveals that the proposed SA2EA outperforms the synchronous and the asynchronous EA with constant asynchrony not depends on the variance of evaluation time of solutions.},
  doi       = {10.1145/3067695.3084221},
  groups    = {acm},
  isbn      = {9781450349390},
  keywords  = {asynchrony, multi-objective optimization, self-adaptation, asynchronous evolutionary algorithm, parallelization},
  location  = {Berlin, Germany},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3067695.3084221},
}

@InProceedings{Ishioh2016,
  author    = {Ishioh, Takuto and Koda, Tomoko},
  title     = {Cross-Cultural Study of Perception and Acceptance of Japanese Self-Adaptors},
  booktitle = {Proceedings of the Fourth International Conference on Human Agent Interaction},
  year      = {2016},
  series    = {HAI ’16},
  pages     = {71–74},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper reports our preliminary results of a cross-cultural study of perception and acceptance of cultural specific self-adaptors performed by a virtual agent. There are culturally-defined preferences in self-adaptors and other bodily expressions, and allowance level of expressing such non-verbal behavior are culture-dependent. We conducted a web experiment to evaluate the impression and acceptance of Japanese culture specific self-adaptors and gathered participants from 8 countries. The results indicated non-Japanese participants' insensitivity to the different types of self-adaptors and over sensitivity to Japanese participants' to stressful self-adaptors.},
  doi       = {10.1145/2974804.2980491},
  groups    = {acm},
  isbn      = {9781450345088},
  keywords  = {cross-culture, human-agent interaction, hai, non-verbal behavior, intelligent virtual agents, self-adaptors, culture-specific behavior, gesture, evaluation},
  location  = {Biopolis, Singapore},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2974804.2980491},
}

@Article{Galan2013,
  author     = {Gal\'{a}n, Severino F. and Mengshoel, Ole J. and Pinter, Rafael},
  title      = {A Novel Mating Approach for Genetic Algorithms},
  journal    = {Evol. Comput.},
  year       = {2013},
  volume     = {21},
  number     = {2},
  pages      = {197–229},
  month      = may,
  issn       = {1063-6560},
  abstract   = {Genetic algorithms typically use crossover, which relies on mating a set of selected parents. As part of crossover, random mating is often carried out. A novel approach to parent mating is presented in this work. Our novel approach can be applied in combination with a traditional similarity-based criterion to measure distance between individuals or with a fitness-based criterion. We introduce a parameter called the mating index that allows different mating strategies to be developed within a uniform framework: an exploitative strategy called best-first, an explorative strategy called best-last, and an adaptive strategy called self-adaptive. Self-adaptive mating is defined in the context of the novel algorithm, and aims to achieve a balance between exploitation and exploration in a domain-independent manner. The present work formally defines the novel mating approach, analyzes its behavior, and conducts an extensive experimental study to quantitatively determine its benefits. In the domain of real function optimization, the experiments show that, as the degree of multimodality of the function at hand grows, increasing the mating index improves performance. In the case of the self-adaptive mating strategy, the experiments give strong results for several case studies.},
  address    = {Cambridge, MA, USA},
  doi        = {10.1162/EVCO_a_00067},
  groups     = {acm},
  issue_date = {Summer 2013},
  keywords   = {self-adaptive mating, Genetic algorithms, mating index, mating strategies, premature convergence},
  numpages   = {33},
  publisher  = {MIT Press},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1162/EVCO_a_00067},
}

@InProceedings{Li2009,
  author    = {Li, Sikun and Lu, Xiaoxia},
  title     = {A Self-Adaptive HVS-Optimized Texture Compression Algorithm},
  booktitle = {Proceedings of the 8th International Conference on Virtual Reality Continuum and Its Applications in Industry},
  year      = {2009},
  series    = {VRCAI ’09},
  pages     = {209–214},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A self-adaptive HVS-optimized textures compression algorithm based on Vector Quantization (VQ) is presented. Utilizing the property of Human Visual System (HVS), a function judging the similarity between blocks is designed instead of using Euclid distance between pixels in block. Correlated threshold in the judgment is computed using the property of image. With the novel quantizer, different resolution images can be handled automatically. In addition, a self-adaptive threshold adjustment during the compression is designed to improve the reconstruct quality for textures with different regional correlation. To enhance the efficiency of the code-words, lateral association is used through the compression process. Experiment on various resolution images indicates that the algorithm can achieve satisfied compression rate and reconstruct quality at the same time. Furthermore, the compression and decompression process is speed up with the usage of GPU, on account of their parallelism.},
  doi       = {10.1145/1670252.1670296},
  groups    = {acm},
  isbn      = {9781605589121},
  keywords  = {texture compression, HVS-optimized, self-adaptive, GPU, quantizer},
  location  = {Yokohama, Japan},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1670252.1670296},
}

@Article{Tuson1998,
  author     = {Tuson, Andrew and Ross, Peter},
  title      = {Adapting Operator Settings in Genetic Algorithms},
  journal    = {Evol. Comput.},
  year       = {1998},
  volume     = {6},
  number     = {2},
  pages      = {161–184},
  month      = jun,
  issn       = {1063-6560},
  abstract   = {In the majority of genetic algorithm implementations, the operator settings are fixed throughout a given run. However, it has been argued that these settings should vary over the course of a genetic algorithm run—so as to account for changes in the ability of the operators to produce children of increased fitness. This paper describes an investigation into this question. The effect upon genetic algorithm performance of two adaptation methods upon both well-studied theoretical problems and a hard problem from operations research, the flowshop sequencing problem, are therefore examined. The results obtained indicate that the applicability of operator adaptation is dependent upon three basic assumptions being satisfied by the problem being tackled.},
  address    = {Cambridge, MA, USA},
  doi        = {10.1162/evco.1998.6.2.161},
  groups     = {acm},
  issue_date = {Summer 1998},
  keywords   = {operator adaptation, COBRA, self-adaptation, Co-evolution, operator settings},
  numpages   = {24},
  publisher  = {MIT Press},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1162/evco.1998.6.2.161},
}

@InProceedings{Martinez2017,
  author    = {Martinez, Richard Gil and Lopes, Ant\'{o}nia and Rodrigues, Lu\'{\i}s},
  title     = {Automated Generation of Policies to Support Elastic Scaling in Cloud Environments},
  booktitle = {Proceedings of the Symposium on Applied Computing},
  year      = {2017},
  series    = {SAC ’17},
  pages     = {450–455},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Cloud computing has enabled myriad of applications to benefit from dynamic allocation of resources. Yet, as the offer of resources and pricing schema varies, the selection of the best configuration to adapt to environment conditions and business goals becomes a harder problem to solve manually. Humans may fail to anticipate conditions that arise at run-time or to elaborate complex adaptation plans. Hence, expert's know-how should be complemented with the use of intelligent tools. Automated planning presents itself as a promising solution to complex decision-making, when finding strategic plans over a multidimensional space is required. We address the challenges of relying on adaptation planning for the generation of high-level policies, namely: representing the adaptation problem using a planning language, taking advantage of off-the-shelf planners to generate and select adequate plans, and incorporating techniques to scan initial system states and merge plans under common conditions.},
  doi       = {10.1145/3019612.3019658},
  groups    = {acm},
  isbn      = {9781450344869},
  keywords  = {automated planning, resource management, self-adaptation, cloud computing, policies},
  location  = {Marrakech, Morocco},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3019612.3019658},
}

@Article{Qian2020,
  author     = {Qian, Fengyu and Gong, Yanping and Wang, Lei},
  title      = {A Memristor-Based Compressive Sampling Encoder with Dynamic Rate Control for Low-Power Video Streaming},
  journal    = {J. Emerg. Technol. Comput. Syst.},
  year       = {2020},
  volume     = {16},
  number     = {2},
  month      = jan,
  issn       = {1550-4832},
  abstract   = {Image sensors are widely used in various applications. With the increasing requirement for high resolutions and frame rates, power consumption has become a critical issue, which limits the use of image sensors in mobile devices and IoT applications. Compressive sensing (CS) techniques can achieve a sub-Nyquist sampling rate to reduce the power consumption in hardware circuits. Currently, most compressive measurements are implemented in digital CMOS circuits, leading to high hardware complexity and power consumption, as well as the limited sampling speed. Furthermore, CS applications with large image sizes are usually based on block-wise methods, which require real-time rate controls during practical operations. In this article, we propose a memristor-based CS encoder that can be integrated with conventional image sensors to achieve high performance with low power consumption and hardware overheads. A self-adaptive compressing rate control mechanism is also devised to maximize the performance of the proposed technique. Simulation results of wireless video streaming demonstrate the advantages of the proposed technique.},
  address    = {New York, NY, USA},
  articleno  = {12},
  doi        = {10.1145/3365836},
  groups     = {acm},
  issue_date = {April 2020},
  keywords   = {low power, Memristor, sparsity estimation, compressive sensing, self-adaptive},
  numpages   = {16},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3365836},
}

@InProceedings{Krentz2015,
  author    = {Krentz, Konrad-Felix and Meinel, Christoph},
  title     = {Handling Reboots and Mobility in 802.15.4 Security},
  booktitle = {Proceedings of the 31st Annual Computer Security Applications Conference},
  year      = {2015},
  series    = {ACSAC 2015},
  pages     = {121–130},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {To survive reboots, 802.15.4 security normally requires an 802.15.4 node to store both its anti-replay data and its frame counter in non-volatile memory. However, the only non-volatile memory on most 802.15.4 nodes is flash memory, which is energy consuming, slow, as well as prone to wear. Establishing session keys frees 802.15.4 nodes from storing anti-replay data and frame counters in non-volatile memory. For establishing pairwise session keys for use in 802.15.4 security in particular, Krentz et al. proposed the Adaptable Pairwise Key Establishment Scheme (APKES). Yet, APKES neither supports reboots nor mobile nodes. In this paper, we propose the Adaptive Key Establishment Scheme (AKES) to overcome these limitations of APKES. Above all, AKES makes 802.15.4 security survive reboots without storing data in non-volatile memory. Also, we implemented AKES for Contiki and demonstrate its memory and energy efficiency. Of independent interest, we resolve the issue that 802.15.4 security stops to work if a node's frame counter reaches its maximum value, as well as propose a technique for reducing the security-related per frame overhead.},
  doi       = {10.1145/2818000.2818002},
  groups    = {acm},
  isbn      = {9781450336826},
  keywords  = {6LoWPAN, link layer security, Internet of things, self-adaptiveness, rejuvenation},
  location  = {Los Angeles, CA, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2818000.2818002},
}

@InProceedings{Wang2004,
  author    = {Wang, Chao and Parthasarathy, Srinivasan},
  title     = {Parallel Algorithms for Mining Frequent Structural Motifs in Scientific Data},
  booktitle = {Proceedings of the 18th Annual International Conference on Supercomputing},
  year      = {2004},
  series    = {ICS ’04},
  pages     = {31–40},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Discovery of important substructures from molecules is an important data mining problem. The basic motivation is that the structure of a molecule has a role to play in its biochemical function. There is interest in finding important, often recurrent, substructures both within a single molecule and across a class of molecules.Recently, we have developed a general purpose suite of algorithms -- the MotifMiner Toolkit -- that can mine for structural motifs in a wide area of biomolecular datasets. While the algorithms have proven to be extremely useful in their ability to identify novel substructures, the algorithms themselves are quite time consuming. There are two reasons for this: i) inherently the algorithm suffers from the curse of subgraph isomorphism; and ii) handling noise effects (e.g. protein structure data) results in a significant slowdown.To address this problem in this paper we propose parallelization strategies in a cluster environment for the above algorithms. We identify key optimizations that handle load imbalance, scheduling, and communication overheads. Results show that the optimizations are quite effective and that we are able to obtain good speedup on moderate sized clusters.},
  doi       = {10.1145/1006209.1006215},
  groups    = {acm},
  isbn      = {1581138393},
  keywords  = {backward pruning, bitonic partitioning, motif, recursive fuzzy hashing, self-adaptive expansion, atomset},
  location  = {Malo, France},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1006209.1006215},
}

@Article{Serpell2010,
  author     = {Serpell, Martin and Smith, James E.},
  title      = {Self-Adaptation of Mutation Operator and Probability for Permutation Representations in Genetic Algorithms},
  journal    = {Evol. Comput.},
  year       = {2010},
  volume     = {18},
  number     = {3},
  pages      = {491–514},
  month      = sep,
  issn       = {1063-6560},
  abstract   = {The choice of mutation rate is a vital factor in the success of any genetic algorithm (GA), and for permutation representations this is compounded by the availability of several alternative mutation operators. It is now well understood that there is no one “optimal choice”; rather, the situation changes per problem instance and during evolution. This paper examines whether this choice can be left to the processes of evolution via self-adaptation, thus removing this nontrivial task from the GA user and reducing the risk of poor performance arising from (inadvertent) inappropriate decisions. Self-adaptation has been proven successful for mutation step sizes in the continuous domain, and for the probability of applying bitwise mutation to binary encodings; here we examine whether this can translate to the choice and parameterisation of mutation operators for permutation encodings. We examine one method for adapting the choice of operator during runtime, and several different methods for adapting the rate at which the chosen operator is applied. In order to evaluate these algorithms, we have used a range of benchmark TSP problems. Of course this paper is not intended to present a state of the art in TSP solvers; rather, we use this well known problem as typical of many that require a permutation encoding, where our results indicate that self-adaptation can prove beneficial. The results show that GAs using appropriate methods to self-adapt their mutation operator and mutation rate find solutions of comparable or lower cost than algorithms with “static” operators, even when the latter have been extensively pretuned. Although the adaptive GAs tend to need longer to run, we show that is a price well worth paying as the time spent finding the optimal mutation operator and rate for the nonadaptive versions can be considerable. Finally, we evaluate the sensitivity of the self-adaptive methods to changes in the implementation, and to the choice of other genetic operators and population models. The results show that the methods presented are robust, in the sense that the performance benefits can be obtained in a wide range of host algorithms.},
  address    = {Cambridge, MA, USA},
  doi        = {10.1162/EVCO_a_00006},
  groups     = {acm},
  issue_date = {Fall 2010},
  keywords   = {self-adaptation, permutation encodings, mutation, Genetic algorithms},
  numpages   = {24},
  publisher  = {MIT Press},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1162/EVCO_a_00006},
}

@InProceedings{Amara-Hachmi2005,
  author    = {Amara-Hachmi, Nejla},
  title     = {A Framework for Building Adaptive Mobile Agents},
  booktitle = {Proceedings of the Fourth International Joint Conference on Autonomous Agents and Multiagent Systems},
  year      = {2005},
  series    = {AAMAS ’05},
  pages     = {1369},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In our work, we propose a component-based generic architecture for adaptable mobile agents. These agents can be either adapted statically by a user who adds new components, or self-adaptive by being aware of their execution context and dynamically customizing their architecture.},
  doi       = {10.1145/1082473.1082777},
  groups    = {acm},
  isbn      = {1595930930},
  keywords  = {mobile agents, intelligent agents, context-awareness, self-adaptation, component-based software engineering},
  location  = {The Netherlands},
  numpages  = {1},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1082473.1082777},
}

@InProceedings{Caporuscio2017,
  author    = {Caporuscio, Mauro},
  title     = {Towards Fully Decentralized Self-Adaptive Reactive Systems},
  booktitle = {Proceedings of the 8th ACM/SPEC on International Conference on Performance Engineering Companion},
  year      = {2017},
  series    = {ICPE ’17 Companion},
  pages     = {17},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {With the growing demand for real-time data originating from myriads of Internet-connected devices, the number of requests hitting today's computing infrastructures goes beyond what is manageable for operations and affordable for management. Coping with these challenges requires a modernization of the application architectures and the underlying infrastructures. The mobile nature inherent to modern communications and interactions requires a radical shift towards new computing paradigms that reflect the fully decentralized perspective of the emerging execution environment. To this end, the trend is to switch thinking from assembling components into systems to dynamically composing autonomous systems into systems-of-systems. Indeed, systems-of-systems possibly emerge dynamically as an opportunistic aggregation of systems available at a given time. Since these systems operate under highly dynamic conditions where both the entities and their interconnections are subject to continuous change, the traditional stability assumptions made on distributed systems' design are no longer valid. Indeed, the dynamic operating conditions introduce uncertainty, which may harm the dependability of the system. In order to guarantee the provision of dependable functionality in such an unknown, ever-changing execution environment, systems should be fluid and able to self-adapt their structure depending on the changing situation. This talk examines a set of principles and techniques facilitating the design and development of fully decentralized systems that leverage on self-adaptivity to mitigate run-time uncertainty. Specifically, the key objective is to efficiently and effectively provide engineers with proper abstractions to develop self-adaptive systems capable of being at the same time fluid, as well as dependable.},
  doi       = {10.1145/3053600.3053607},
  groups    = {acm},
  isbn      = {9781450348997},
  keywords  = {pure-edge computing, self-adaptation, fluid architecture, reactive systems},
  location  = {L'Aquila, Italy},
  numpages  = {1},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3053600.3053607},
}

@InProceedings{Yang2013,
  author    = {Yang, Wenhua and Xu, Chang and Zhang, Linghao},
  title     = {IDEA: Improving Dependability for Self-Adaptive Applications},
  booktitle = {Proceedings of the 2013 Middleware Doctoral Symposium},
  year      = {2013},
  series    = {MDS ’13},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive applications are becoming popular since they are able to adapt their behavior based on changes of environments. However, possible faults in these applications may result in runtime failures, which reduce their dependability. We propose a novel approach to improving the dependability of self-adaptive applications. The approach uses a rematching process to make self-adaptive applications consistent with their environments. In the rematching process, consistency failures are automatically detected and fixed at runtime to reduce application failures. The strategy for fixing consistency failures includes backward rematching and forward rematching. Proper strategies can be selected according to rematching ability analysis results for concerned applications. As a result, applications can thus achieve consistency with their environments and failures can be significantly avoided. We developed a tool named IDEA to support this process and the experimental results confirmed the effectiveness of our IDEA.},
  articleno = {1},
  doi       = {10.1145/2541534.2541590},
  groups    = {acm},
  isbn      = {9781450325486},
  keywords  = {rematching, self-adaptive application, failure},
  location  = {Beijing, China},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2541534.2541590},
}

@InProceedings{Gonzalez2010,
  author    = {Gonz\'{a}lez, Laura and Ruggia, Ra\'{u}l},
  title     = {Towards Dynamic Adaptation within an ESB-Based Service Infrastructure Layer},
  booktitle = {Proceedings of the 3rd International Workshop on Monitoring, Adaptation and Beyond},
  year      = {2010},
  series    = {MONA ’10},
  pages     = {40–47},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Service-oriented systems increasingly need to be self-adaptive in order to respond to dynamic business requirements and to satisfy quality of service conditions in a highly distributed context. Achieving such self-adaptive behavior requires a comprehensive approach throughout the different service-oriented architecture (SOA) layers to avoid, for example, conflicting adaptation actions. In turn, Enterprise Service Buses (ESBs) provide several out-of-the-box mediation features (e.g. message transformation, routing, monitoring) that enable adaptation at the infrastructure layer. However, dynamic adaptation (i.e. adaptation at runtime), a fundamental requirement in self-adaptive systems, is still an open issue in ESB-based platforms. This paper presents an approach that leverages ESBs mediation features to provide dynamic adaptation capabilities within an ESB-based service infrastructure layer. This work, which is based on concepts and frameworks defined within the S-Cube project, intends to be a step forward in developing a comprehensive approach to support self-adaptive service-oriented systems.},
  doi       = {10.1145/1929566.1929572},
  groups    = {acm},
  isbn      = {9781450304221},
  keywords  = {enterprise service bus, service oriented architecture, mediation, self-adaptation, dynamic adaptation},
  location  = {Ayia Napa, Cyprus},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1929566.1929572},
}

@Article{Ruaro2019,
  author     = {Ruaro, Marcelo and Jantsch, Axel and Moraes, Fernando Gehm},
  title      = {Self-Adaptive QoS Management of Computation and Communication Resources in Many-Core SoCs},
  journal    = {ACM Trans. Embed. Comput. Syst.},
  year       = {2019},
  volume     = {18},
  number     = {4},
  month      = jun,
  issn       = {1539-9087},
  abstract   = {Providing quality of service (QoS) for many-core systems with dynamic application admission is challenging due to the high amount of resources to manage and the unpredictability of computation and communication events. Related works propose a self-adaptive QoS mechanism concerned either in communication or computation resources, lacking, however, a comprehensive QoS management of both. Assuming a many-core system with QoS monitoring, runtime circuit-switching establishment, task migration, and a soft real-time task scheduler, this work fills this gap by proposing a novel self-adaptive QoS management. The contribution of this proposal comes with the following features in the QoS management: (i) comprehensiveness, by covering communication and computation resources; (ii) online, adopting the ODA (Observe, Decide, Act) runtime closed-loop adaptation; and (iii) reactive and proactive decisions, by using a dynamic application profile extraction technique, which enables the QoS management to be aware of the profile of running applications, allowing it to take proactive decisions based on a prediction analysis. The proposed QoS management adopts a decentralized organization by partitioning the system in clusters, each one managed by a dedicated processor, making the proposal scalable. Results show that the proactive feature accurately extracts the applications’ profile, and can prevent future QoS violations. The synergy of reactive and proactive decisions was able to sustain QoS, reducing the deadline miss rate by 99.5% with a severe disturbance in communication and computation levels, and avoiding deadline misses up to 70% of system utilization.},
  address    = {New York, NY, USA},
  articleno  = {37},
  doi        = {10.1145/3328755},
  groups     = {acm},
  issue_date = {August 2019},
  keywords   = {prediction, self-adaptation, many-core, Quality of service},
  numpages   = {21},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3328755},
}

@Article{DeSensi2016,
  author     = {De Sensi, Daniele and Torquati, Massimo and Danelutto, Marco},
  title      = {A Reconfiguration Algorithm for Power-Aware Parallel Applications},
  journal    = {ACM Trans. Archit. Code Optim.},
  year       = {2016},
  volume     = {13},
  number     = {4},
  month      = dec,
  issn       = {1544-3566},
  abstract   = {In current computing systems, many applications require guarantees on their maximum power consumption to not exceed the available power budget. On the other hand, for some applications, it could be possible to decrease their performance, yet maintain an acceptable level, in order to reduce their power consumption. To provide such guarantees, a possible solution consists in changing the number of cores assigned to the application, their clock frequency, and the placement of application threads over the cores. However, power consumption and performance have different trends depending on the application considered and on its input. Finding a configuration of resources satisfying user requirements is, in the general case, a challenging task. In this article, we propose Nornir, an algorithm to automatically derive, without relying on historical data about previous executions, performance and power consumption models of an application in different configurations. By using these models, we are able to select a close-to-optimal configuration for the given user requirement, either performance or power consumption. The configuration of the application will be changed on-the-fly throughout the execution to adapt to workload fluctuations, external interferences, and/or application’s phase changes. We validate the algorithm by simulating it over the applications of the Parsec benchmark suit. Then, we implement our algorithm and we analyse its accuracy and overhead over some of these applications on a real execution environment. Eventually, we compare the quality of our proposal with that of the optimal algorithm and of some state-of-the-art solutions.},
  address    = {New York, NY, USA},
  articleno  = {43},
  doi        = {10.1145/3004054},
  groups     = {acm},
  issue_date = {December 2016},
  keywords   = {dynamic concurrency throttling, online learning, self-adaptive runtime, Power-aware computing, multi-core, power capping, DVFS},
  numpages   = {25},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3004054},
}

@InProceedings{Serrano-Alvarado2005,
  author    = {Serrano-Alvarado, Patricia and Rouvoy, Romain and Merle, Philippe},
  title     = {Self-Adaptive Component-Based Transaction Commit Management},
  booktitle = {Proceedings of the 4th Workshop on Reflective and Adaptive Middleware Systems},
  year      = {2005},
  series    = {ARM ’05},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Traditionally, when implementing a transaction service, a protocol is chosen and it remains the same during the system execution. Nevertheless, the dynamic nature of nowadays application contexts (e.g., mobile, ad-hoc, peer-to-peer) and behaviour variations (semantic-related aspects) motivates the needs for application adaptation. Next generation of system applications should be adaptive or even better self-adaptive. This paper proposes (1) a component-based architecture of standard 2PC-based protocols and (2) a self-Adaptive Component-based cOmmit Management, named ACOM. Self-adaptation is obtained by behaviour awareness and component-based reconfiguration. This allows ACOM to select the most appropriate protocol according to the context. We show that using ACOM performs better than using only one commit protocol in a variable system and that the reconfiguration cost can be negligible.},
  doi       = {10.1145/1101516.1101527},
  groups    = {acm},
  isbn      = {1595932704},
  keywords  = {transaction management, commit protocols, non-functional services, self-adaptive systems, component-based systems},
  location  = {Grenoble, France},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1101516.1101527},
}

@InProceedings{Chacin2007,
  author    = {Chacin, Pablo and Navarro, Leandro},
  title     = {Collectives: A Framework for Self-Adaptive P2P Applications},
  booktitle = {Proceedings of the 6th International Workshop on Adaptive and Reflective Middleware: Held at the ACM/IFIP/USENIX International Middleware Conference},
  year      = {2007},
  series    = {ARM ’07},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The development of a self-adaptive P2P applications faces many challenges ranging from the proper modeling of the application's behavior to the definition of the distributed algorithms required to support its functionalities and finally to its implementation in a particular platform. Collectives is a framework that addresses this issues by providing the modeling concepts and the implementation architecture required to separate the diverse adaptation concerns at the proper level of abstraction.},
  articleno = {7},
  doi       = {10.1145/1376780.1376787},
  groups    = {acm},
  isbn      = {9781595939319},
  keywords  = {overlay, self-adaptive, middleware, architecture, peer-to-peer},
  location  = {Newport Beach, CA},
  numpages  = {3},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1376780.1376787},
}

@InProceedings{Kasinger2010,
  author    = {Kasinger, Holger and Bauer, Bernhard and Denzinger, J\"{o}rg and Holvoet, Tom},
  title     = {Adapting Environment-Mediated Self-Organizing Emergent Systems by Exception Rules},
  booktitle = {Proceedings of the Second International Workshop on Self-Organizing Architectures},
  year      = {2010},
  series    = {SOAR ’10},
  pages     = {35–42},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Due to the absence of global knowledge, elements in a self-organizing emergent system tend to make suboptimal local decisions that result in globally inefficient solutions. However, improving the solutions of such systems, which work in a bottom-up style, by the principles of self-adaptive systems, which work in a top-down style, is not a straight forward process. In this paper, we present challenges and constraints that have to be respected during this process and describe early work on an approach, how to autonomously adapt the local behavior of self-organizing elements by so-called exception rules in order to improve the performance of the global solution. In particular, we present a set of exception rules that can be employed in different situations for the improvement of environment-mediated, self-organizing emergent solutions to pickup and delivery problems.},
  doi       = {10.1145/1809036.1809045},
  groups    = {acm},
  isbn      = {9781450300872},
  keywords  = {efficiency, rules, emergence, self-adaptation, self-organization},
  location  = {Washington, DC, USA},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1809036.1809045},
}

@InProceedings{Rouvoy2008,
  author    = {Rouvoy, Romain and Beauvois, Mika\"{e}l and Lozano, Laura and Lorenzo, Jorge and Eliassen, Frank},
  title     = {MUSIC: An Autonomous Platform Supporting Self-Adaptive Mobile Applications},
  booktitle = {Proceedings of the 1st Workshop on Mobile Middleware: Embracing the Personal Communication Device},
  year      = {2008},
  series    = {MobMid ’08},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {With the continuous improvement of device capabilities, mobile applications are becoming not only context-aware, but also self-adaptive. This new trend of applications are capable of tuning their behavior depending on changes observed in the surrounding environment. However, these adaptations are often restrained by the static features of the supporting middleware, which is not able to exploit the opportunities offered by the environment in order to improve the quality of the adaptations. The MUSIC platform offers a modular support maximizing the user satisfaction by adapting dynamically mobile applications. Beyond this support, the MUSIC platform can itself be adapted towards the evolving environment (e.g., location, network connectivity) in order to satisfy both the user requirements and the device properties. In this paper, we focus on three complementary approaches for adapting the MUSIC platform, namely i) the distribution of the adaptation process among the neighboring devices, ii) the assignment of the devices responsibilities, and iii) the adaptation of the platform components. Thus, MUSIC leverages the adaptation of mobile applications by changing autonomously the middleware characteristics.},
  articleno = {6},
  doi       = {10.1145/1462689.1462697},
  groups    = {acm},
  isbn      = {9781605583624},
  keywords  = {planning-based adaptation, self-adaptive middleware},
  location  = {Leuven, Belgium},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1462689.1462697},
}

@InProceedings{Hummel2005,
  author    = {Hummel, Karin Anna and P\'{o}ta, Szabolcs and Schusterreiter, Christian},
  title     = {Supporting Terminal Mobility by Means of Self-Adaptive Communication Object Migration},
  booktitle = {Proceedings of the 3rd ACM International Workshop on Wireless Mobile Applications and Services on WLAN Hotspots},
  year      = {2005},
  series    = {WMASH ’05},
  pages     = {88–91},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Mobile devices, like PDAs or smart phones, exhibit limited capabilities in terms of processing power and memory. Supported by advanced WLAN hotspot grid infrastructures, mobile terminals may enhance their computing capabilities significantly by utilizing remote resources in virtually shared spaces. Due to privacy and performance issues, the shared communication objects should be kept in proximity to the roaming owner which requires object migration.We propose a novel self-adaptive decision algorithm for object migration based on a cost-benefit function. This function considers parameters describing the expected latency caused by migration and the expected response time saved by local access. The importance of each parameter is determined by a weight and adapted using Bayesian concept learning. The feasibility of the approach is demonstrated by a prototypical implementation for PDAs based on the space-based middleware CORSO. We further investigate the decision algorithm by means of simulation.},
  doi       = {10.1145/1080730.1080746},
  groups    = {acm},
  isbn      = {1595931430},
  keywords  = {self-adaptiveness, mobile grid computing, terminal mobility, object migration},
  location  = {Cologne, Germany},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1080730.1080746},
}

@InProceedings{Binotto2014,
  author    = {Binotto, Al\'{e}cio P. D. and Tizzei, Leonardo P. and Cerqueira, Renato F. G.},
  title     = {A Self-Tuning Scientific Framework Using Model-Driven Engineering for Heterogeneous Execution Platforms},
  booktitle = {Proceedings of International Workshop on Adaptive Self-Tuning Computing Systems},
  year      = {2014},
  series    = {ADAPT ’14},
  pages     = {17–20},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This article presents an ongoing work towards the extension of Sm@rtConfig -- a dynamic scheduling tool with self-tuning load-balancing functionalities targeting CPUs, GPUs, and other co-processors. This extension is based on the introduction of a high-level modeling phase for scientific applications. These applications are commonly complex, use (heterogeneous) high performance execution platforms, and require stakeholders of several disciplines. This way, it is important to raise abstraction level in earlier stages of development in order to deal with such complexities in an efficient way. By using Model-Driven Engineering, we propose an approach to transform Sm@rtConfig into a scientific framework comprising requirements engineering up to code generation for the target Processing Unit in which a task is scheduled at runtime. We advocate that our envisioned methodology facilitates not just cross-stakeholders development, but also replication of experimentations by the research community.},
  doi       = {10.1145/2553062.2553066},
  groups    = {acm},
  isbn      = {9781450325141},
  keywords  = {Model-driven engineering, load-balancing, co-processors, scheduling, self-adaptation},
  location  = {Vienna, Austria},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2553062.2553066},
}

@InProceedings{Jiang2010,
  author    = {Jiang, Shanshan and Hallsteinsen, Svein and Barone, Paolo and Mamelli, Alessandro and Mehlhase, Stephan and Scholz, Ulrich},
  title     = {Hosting and Using Services with Qos Guarantee in Self-Adaptive Service Systems},
  booktitle = {Proceedings of the 10th IFIP WG 6.1 International Conference on Distributed Applications and Interoperable Systems},
  year      = {2010},
  series    = {DAIS’10},
  pages     = {15–28},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  abstract  = {In service-oriented computing, the vision is a market of services with alternative providers offering the same services with different cost and quality of service (QoS) properties, where applications form and adapt dynamically through dynamic service discovery and binding. To ensure decent and stable QoS to end users and efficient use of resources, it is required that both client applications and service implementations are able to adapt both their internal configuration and their binding to other actors in response to changes in the environment. To this end, service level negotiation and agreements (SLA) are important to ensure coordinated end to end adaptation. In this paper we propose a solution based on the integration of an SLA mechanism into a compositional adaptation planning framework and describe a simple yet powerful implementation targeted for resource constrained mobile devices. As validation we include a case study based on a peer-to-peer distributed mobile application.},
  doi       = {10.1007/978-3-642-13645-0_2},
  groups    = {acm},
  isbn      = {3642136443},
  keywords  = {self-adaptation, service level agreement, service-oriented architecture, adaptation planning, service level negotiation},
  location  = {Amsterdam, The Netherlands},
  numpages  = {14},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1007/978-3-642-13645-0_2},
}

@Article{Tziakouris2018,
  author     = {Tziakouris, Giannis and Bahsoon, Rami and Babar, Muhammad Ali},
  title      = {A Survey on Self-Adaptive Security for Large-Scale Open Environments},
  journal    = {ACM Comput. Surv.},
  year       = {2018},
  volume     = {51},
  number     = {5},
  month      = oct,
  issn       = {0360-0300},
  abstract   = {Contemporary software systems operate in heterogeneous, dynamic, and distributed environments, where security needs change at runtime. The security solutions for such systems need to be adaptive for the continuous satisfaction of the software systems’ security goals. Whilst the existing research on self-adaptive security has made notable advancement towards designing and engineering self-adaptive security solutions, there exists little work on the taxonomic analysis of the architectures of the reported research and its applicability for open and ultra-large environments. We propose an architecture-centric taxonomy for mapping and comparing the current research and identifying the future research directions in this field. The proposed taxonomy has been used to review the representative work on the architectural characteristics that self-adaptive security systems must maintain for their effective application in large-scale open environments. We reflect on the findings from the taxonomic analysis and discuss the design principles, research challenges and limitations reported in the state of the art and practice. We outline the directions for the future research on architectural level support for self-adaptive security systems for large-scale open environments.},
  address    = {New York, NY, USA},
  articleno  = {100},
  doi        = {10.1145/3234148},
  groups     = {acm},
  issue_date = {January 2019},
  keywords   = {ultra-large environments, Self-adaptive systems},
  numpages   = {42},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3234148},
}

@InProceedings{Xu2017,
  author    = {Xu, Shuo and Li, ShuQin and Meng, Kun and Wu, LiJun and Ding, Meng},
  title     = {An Adaptive Malicious Domain Detection Mechanism with DNS Traffic},
  booktitle = {Proceedings of the 2017 VI International Conference on Network, Communication and Computing},
  year      = {2017},
  series    = {ICNCC 2017},
  pages     = {86–91},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A domain in Internet represents an address where some services may be provided, and the domain providing malicious service, such as Botnet communication and nonexistent service etc., is called malicious. Once the security system cannot detect and block a family of malicious domain, they will soon flood the whole Internet with request and threaten the network security. Hence, the efficiency and accuracy are always used to evaluate malicious detection models. In this paper, a universal grammar structure detection model with the Markov chain is discussed, which has the benefit of flexibly extracting all kinds of grammar features. Moreover, this paper propose a hybrid malicious domain detection model with techniques of grammar structures and traffic temporal features. The detection backbone is a grammar structure based model which ensure the efficiency, meanwhile traffic temporal feature are timely extracted and used to train the backbone model. Given collected test sample sets and one-month campus network real-time traffic, the proposed model is verified through comparing with enterprise C&C detection tools. The experiment result show that the efficiency, accuracy and scalability all achieve much progress.},
  doi       = {10.1145/3171592.3171595},
  groups    = {acm},
  isbn      = {9781450353663},
  keywords  = {Botnet, Self-adaption, Domain Generation Algorithm, Markov Chain},
  location  = {Kunming, China},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3171592.3171595},
}

@Article{Derin2009,
  author     = {Derin, Onur and Ferrante, Alberto},
  title      = {Enabling Self-Adaptivity in Component-Based Streaming Applications},
  journal    = {SIGBED Rev.},
  year       = {2009},
  volume     = {6},
  number     = {3},
  month      = oct,
  abstract   = {Self-adaptivity is the capability of a system to adapt itself dynamically to achieve its goals. By means of this mechanism the system is able to autonomously modify its behavior or the way in which applications are run and implemented to achieve the goals set. In this paper we propose a framework that uses a componentbased approach to implement self-adaptivity at application level. By using this mechanism, the framework provides the ability to perform both adaptation on the structure of the application (i.e., how the components are connected together) and on internal parameters of each component. At application level, there is a mechanism to monitor different parameters and to check whether the system is meeting the assigned goals or not. A controller drives adaptations when goals are not met.},
  address    = {New York, NY, USA},
  articleno  = {14},
  doi        = {10.1145/1851340.1851356},
  groups     = {acm},
  issue_date = {October 2009},
  keywords   = {self-adaptive systems, component-based design},
  numpages   = {4},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/1851340.1851356},
}

@InProceedings{Maia2013,
  author    = {Maia, Marcio E. F. and Fonteles, Andre and Neto, Benedito and Gadelha, Romulo and Viana, Windson and Andrade, Rossana M. C.},
  title     = {LOCCAM - Loosely Coupled Context Acquisition Middleware},
  booktitle = {Proceedings of the 28th Annual ACM Symposium on Applied Computing},
  year      = {2013},
  series    = {SAC ’13},
  pages     = {534–541},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Sensors of all kinds are being integrated with mobile and portable devices (tablets, smartphones). This opens up the possibility of context-aware applications to effectively be able to adapt their behavior, user interfaces and content according to the current user's situation. Frequently, context-aware applications require an infrastructure for acquisition, aggregation and reasoning of contextual information. However, existing context management infrastructures are not always appropriated to the heterogeneous and particular environment of mobile devices. In this paper, we present a context management middleware called LoCCAM (Loosely Coupled Context Acquisition Middeware) to provide self-adaptive acquisition of contextual information. It can execute both locally, on a single device, or distributed among nearby devices. The middleware proposes a model for publication, and notification of contextual information based on tuple spaces. As consequence, it offers a lower coupling among applications and the context acquisition layer. In this paper, we also present a performance evaluation of the adaptation mechanism.},
  doi       = {10.1145/2480362.2480465},
  groups    = {acm},
  isbn      = {9781450316569},
  keywords  = {OSGi, self-adaptation, Android, context-awareness},
  location  = {Coimbra, Portugal},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2480362.2480465},
}

@Article{Sabatucci2019,
  author     = {Sabatucci, Luca and Cossentino, Massimo},
  title      = {Supporting Dynamic Workflows with Automatic Extraction of Goals from BPMN},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2019},
  volume     = {14},
  number     = {2},
  month      = oct,
  issn       = {1556-4665},
  abstract   = {Organizations willing to employ workflow technology have to be prepared to undertake a significant investment of time and effort due to the exceptionally dynamic nature of the business environment. Today, it is unlikely that processes are modeled once to be repeatedly executed without any changes. Goal-oriented dynamic workflows are a promising approach to provide flexibility to the execution of business processes. Many goal-oriented frameworks exist in the literature to be used for the purpose. However, modeling goals is a burden for the business analyst. This work proposes an automatic approach for extracting goals from a business process for supporting adaptive workflows. The approach consists of a static analysis of the global workflow state. Goals derive from individual BPMN elements and their interactions. For validating the theory, we developed the BPMN2Goals tool, which has been used for supporting a middleware for self-adaptation.},
  address    = {New York, NY, USA},
  articleno  = {7},
  doi        = {10.1145/3355488},
  groups     = {acm},
  issue_date = {December 2019},
  keywords   = {Dynamic Workflow, Self-Adaptive Systems, Business Process Goals},
  numpages   = {38},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3355488},
}

@InProceedings{Oudenstad2007,
  author    = {Oudenstad, Johannes and Eliassen, Frank and Gj\o{}rven, Eli and Rouvoy, Romain},
  title     = {Peer-to-Peer Brokering of Planning Meta-Data},
  booktitle = {Proceedings of the 6th International Workshop on Adaptive and Reflective Middleware: Held at the ACM/IFIP/USENIX International Middleware Conference},
  year      = {2007},
  series    = {ARM ’07},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In self-adaptive systems, metadata about resources in the system (e.g., services, nodes) must be dynamically published, updated, and removed. Current middleware approaches use statically configured, centralised repositories for storing and retrieving of such metadata. However, in the context of peer-to-peer (P2P) environments, we can not assume the existence of server nodes that are always available for hosting such centralised services. Thus, in our planning-based adaptation middleware, we introduce a P2P broker, which is a metadata advertisement service based on P2P technology. We use a structured P2P protocol that distributes the service metadata over a set of nodes based on service type and property information. Initial experiments show that the metadata distributes well over the nodes in the network, thus enabling scalability and robustness to node failures.},
  articleno = {6},
  doi       = {10.1145/1376780.1376786},
  groups    = {acm},
  isbn      = {9781595939319},
  keywords  = {resource brokering, self-adaptive middleware, service planning, peer-to-peer systems},
  location  = {Newport Beach, CA},
  numpages  = {3},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1376780.1376786},
}

@InProceedings{Affenzeller2009,
  author    = {Affenzeller, Michael and Beham, Andreas and Wagner, Stefan and Winkler, Stephan M.},
  title     = {About the Dynamics of Essential Genetic Information: An Empirical Analysis for Selected GA-Variants},
  booktitle = {Proceedings of the First ACM/SIGEVO Summit on Genetic and Evolutionary Computation},
  year      = {2009},
  series    = {GEC ’09},
  pages     = {787–790},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper exemplarily points out how essential genetic information evolves during the runs of selected GA-variants. The algorithmic enhancements to a standard genetic algorithm certify the survival of essential genetic information by supporting the survival of relevant alleles rather than the survival of above average chromosomes. This is achieved by defining the survival probability of a new child chromosome depending on the child's fitness in comparison to the fitness values of its own parents. The main aim of this paper is to explain important properties of the discussed algorithm variants in a rather intuitive way. Aspects for meaningful and practically more relevant generalizations as well as more sophisticated experimental analyses are indicated.},
  doi       = {10.1145/1543834.1543943},
  groups    = {acm},
  isbn      = {9781605583266},
  keywords  = {selection, self-adaptivity, genetic algorithms, premature convergence, population diversity analysis},
  location  = {Shanghai, China},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1543834.1543943},
}

@InProceedings{Luque2013,
  author    = {Luque, Gabriel and Alba, Enrique},
  title     = {Math Oracles: A New Way of Designing Efficient Self-Adaptive Algorithms},
  booktitle = {Proceedings of the 15th Annual Conference Companion on Genetic and Evolutionary Computation},
  year      = {2013},
  series    = {GECCO ’13 Companion},
  pages     = {217–218},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this paper we present a new general methodology to develop self-adaptive methods at a low computational cost. Instead of going purely ad-hoc we define several simple steps to include theoretical models as additional information in our algorithm. Our idea is to incorporate the predictive information (future behavior) provided by well-known mathematical models or other prediction systems (the oracle) to build enhanced methods. We show the main steps which should be considered to include this new kind of information into any algorithm. In addition, we actually test the idea on a specific algorithm, a genetic algorithm (GA). Experiments show that our proposal is able to obtain similar, or even better results when it is compared to the traditional algorithm. We also show the benefits in terms of saving time and a lower complexity of parameter settings.},
  doi       = {10.1145/2464576.2464683},
  groups    = {acm},
  isbn      = {9781450319645},
  keywords  = {methodology, self-adaptive techniques, mathematical oracles},
  location  = {Amsterdam, The Netherlands},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2464576.2464683},
}

@InProceedings{Hamadi2005,
  author    = {Hamadi, Rachid and Benatallah, Boualem},
  title     = {Dynamic Restructuring of Recovery Nets},
  booktitle = {Proceedings of the 16th Australasian Database Conference - Volume 39},
  year      = {2005},
  series    = {ADC ’05},
  pages     = {37–46},
  address   = {AUS},
  publisher = {Australian Computer Society, Inc.},
  abstract  = {A Self-Adaptive Recovery Net (SARN) is an extended Petri net model for specifying exceptional behavior in workflow systems. SARN caters for high-level recovery policies that are incorporated either with a single task or a set of tasks, called a recovery region. A recovery region delimits the part of the workflow from which the associated recovery policies take place. In this paper, we assume that SARN is initially partitioned into recovery regions by workflow designers who have a priori expectations for how exceptions will be handled. We propose a pattern-based approach to dynamically restructure SARN partition. The objective is to continuously restructure recovery regions within SARN partition to reflect the dynamic changes in handling exceptions. The restructuring of SARN partition is based on the observation of predefined recovery patterns.},
  doi       = {10.5555/1082222.1082227},
  groups    = {acm},
  isbn      = {192068221X},
  keywords  = {predefined recovery patterns, workflow systems, region restructuring operations, self-adaptive recovery net (SARN), recovery region},
  location  = {Newcastle, Australia},
  numpages  = {10},
  url       = {https://dl.acm.org/doi/10.5555/1082222.1082227},
}

@InProceedings{Dodd2006,
  author    = {Dodd, Robert},
  title     = {Self-Adapting User Interfaces as Assistive Technology for Handheld Mobile Devices},
  booktitle = {Proceedings of the 8th International ACM SIGACCESS Conference on Computers and Accessibility},
  year      = {2006},
  series    = {Assets ’06},
  pages     = {297–298},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The accessibility of handheld mobile devices is a unique problem domain. They present with a small form factor, constraining display size, and making serious demands on user mobility. Existing assistive technology tackles these problems with bespoke solutions and text-to-speech augmentation, bulking out the device, and forcing visual metaphors upon blind users. Stepping away from such "bolt-on" accessibility, this research revisits the processes by which user interfaces are designed, constructing a model of user interface development that allows for dynamic adaptation of the interface to match individual user capability profiles. In doing so, it abstracts content meaning from presentation, mapping interaction metaphors to categorized user capabilities within individual design spaces (visual, sonic, and haptic) and interaction metaphors to relevant content meaning.},
  doi       = {10.1145/1168987.1169064},
  groups    = {acm},
  isbn      = {1595932909},
  keywords  = {self-adaptation, capability model, design space, accessibility},
  location  = {Portland, Oregon, USA},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1168987.1169064},
}

@InProceedings{Li2015,
  author    = {Li, Xiang and Feng, Zhiyong and Huang, Keman and Chen, Shizhan},
  title     = {Ajax API Self-Adaptive Framework for End-to-End User},
  booktitle = {Proceedings of the 24th International Conference on World Wide Web},
  year      = {2015},
  series    = {WWW ’15 Companion},
  pages     = {211–214},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Web developers often use Ajax API to build the rich Internet application (RIA). Due to the uncertainty of the environment, automatically switching among different Ajax APIs with similar functionality is important to guarantee the end-to-end performance. However, it is challenging and time-consuming because it needs to manually modify codes based on the API documentation. In this paper, we propose a framework to address the self-adaption and difficulty in invoking Ajax API. The Ajax API wrapping model, consisting of the specific and abstract components, is proposed to automatically construct the grammatical and functional semantic relations between Ajax APIs. Then switching module is introduced to support the automatic switching among different Ajax APIs, according to the user preference and QoS of Ajax APIs. Taking the map APIs, i.e. Google Map, Baidu Map, Gaode Map, 51 Map and Tencent Map as an example, the demo shows that the framework can facilitate the construction of RIA and improve adaptability of the application. The process of selection and switching in the different Ajax APIs is automatic and transparent to the users.},
  doi       = {10.1145/2740908.2742834},
  groups    = {acm},
  isbn      = {9781450334730},
  keywords  = {ajax api, end-user development, self-adaption, dynamic components composition},
  location  = {Florence, Italy},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2740908.2742834},
}

@InProceedings{Wang2014,
  author    = {Wang, Mingfei and Jia, Jinyuan and Zhongchu, Yunxiao and Zhang, Chenxi},
  title     = {Organizing Neighbors Self-Adaptively Based on Avatar Interest for Transmitting Huge DVE Scenes},
  booktitle = {Proceedings of the 13th ACM SIGGRAPH International Conference on Virtual-Reality Continuum and Its Applications in Industry},
  year      = {2014},
  series    = {VRCAI ’14},
  pages     = {105–111},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Due to the free roaming behaviors of avatars in virtual scenes, the logical topology of the nodes may change dramatically in real large scale scene transmissions. In order to address the above problem, we are the first to use the avatar interest to improve the transmission of virtual scenes. First, we analyzed common social behaviors of avatars in the virtual world and quantified the characteristics of avatars' interest. Then, we proposed an algorithm to compute the interest similarity, and divided the nodes in the virtual world into diverse clusters. Next, we also proposed an algorithm to build a stable neighbor mesh for each node. Finally, we conducted extensive simulation experiments that simulate the behaviors of avatars in the popular MMOG; the simulation results showed that the node organizing mechanism that we proposed could mitigate the impact of the neighbor churn effectively, at the same time the message exchange between nodes have reduced significantly and other performance metrics such as fill ratio etc. have improved greatly.},
  doi       = {10.1145/2670473.2670477},
  groups    = {acm},
  isbn      = {9781450332545},
  keywords  = {neighbors mesh, avatar interest, P2P transmission, DVE, self-adaptive organization},
  location  = {Shenzhen, China},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2670473.2670477},
}

@InProceedings{Eiben2007,
  author    = {Eiben, E. A. and Schoenauer, M. and Laredo, J. L. J. and Castillo, P. A. and Mora, A. M. and Merelo, J. J.},
  title     = {Exploring Selection Mechanisms for an Agent-Based Distributed Evolutionary Algorithm},
  booktitle = {Proceedings of the 9th Annual Conference Companion on Genetic and Evolutionary Computation},
  year      = {2007},
  series    = {GECCO ’07},
  pages     = {2801–2808},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this paper we propose an agent-based model of evolutionary algorithms (EAs) which extends seamlessly from concurrent single-host to distributed multi-host installations. Since the model is based on locally executable selection, we focus on the comparison of two selection mechanisms which accomplish with such a restriction: the classical tournament method and a new one called autonomous selection. Using the latter method the population size changes during runtime, hence it is not only interesting as a new selection mechanism, but also from the perspective of scalable networks.},
  doi       = {10.1145/1274000.1274086},
  groups    = {acm},
  isbn      = {9781595936981},
  keywords  = {performance analysis, parallelization, self-adaptation, genetic algorithms, multi-agents systems},
  location  = {London, United Kingdom},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1274000.1274086},
}

@InProceedings{Pinto2012,
  author    = {Pinto, Leandro Sales and Cugola, Gianpaolo and Ghezzi, Carlo},
  title     = {Dealing with Changes in Service Orchestrations},
  booktitle = {Proceedings of the 27th Annual ACM Symposium on Applied Computing},
  year      = {2012},
  series    = {SAC ’12},
  pages     = {1961–1967},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Service Oriented Computing (SOC) allows programmers to build distributed applications by putting together (i.e., orchestrating) existing services exported by remote providers. The main source of complexity in building such kind of orchestrations is the need for anticipating and explicitly handling (i.e., programming ad-hoc countermeasures) possible changes in the external environment that may affect them, like faults invoking services removed by their providers. To ease the job of programmers we developed DSOL, an innovative infrastructure supporting design and execution of service orchestrations. It combines a declarative approach to model the orchestration with planning mechanisms to actually run it. In this paper we focus on the mechanisms provided by DSOL and its associated execution engine to deal with changes that may happen at runtime. In particular, we show how the declarative nature, the modularity, and the dynamism inherent in the DSOL approach allows changes to be easily managed, both those that were forecasted at design time and those that require the workflow to be changed while the orchestration is running.},
  doi       = {10.1145/2245276.2232100},
  groups    = {acm},
  isbn      = {9781450308571},
  keywords  = {service oriented programming, changes management, service orchestration, self-adaptation, exception handling},
  location  = {Trento, Italy},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2245276.2232100},
}

@InProceedings{Capra2019,
  author    = {Capra, Lorenzo and Camilli, Matteo},
  title     = {Formalizing Distributed Self-Adaptive Systems Using High-Level Petri Nets},
  booktitle = {Proceedings of the 2019 Summer Simulation Conference},
  year      = {2019},
  series    = {SummerSim ’19},
  address   = {San Diego, CA, USA},
  publisher = {Society for Computer Simulation International},
  abstract  = {Formal models must be adequately supported by software tools in order to aid both the design and development of modern distributed systems. Such systems have a growing complexity due to advanced features, such as adaptive mechanisms, they are equipped with to deal with the dynamical environments in which they operate. In this paper, we introduce a two-layer formal model for self-adaptive distributed discrete-event systems, based on standard (Low- and High-level) Petri nets. This formal framework, supported by a modular software library called PNemu, can be thought of as a baseline to formalize self-adaptation having a decentralized control. This paper focuses on the description of the model's operational semantics. Moreover, it outlines the structure and basic usage of PNemu.},
  articleno = {28},
  doi       = {10.5555/3374138.3374166},
  groups    = {acm},
  keywords  = {model checking, high-level petri nets, decentralized control, self-adaptation},
  location  = {Berlin, Germany},
  numpages  = {12},
  url       = {https://dl.acm.org/doi/10.5555/3374138.3374166},
}

@InProceedings{Zhu2010,
  author    = {Zhu, Xiaomin and Zhu, Jianghan and Ma, Manhao and Qiu, Dishan},
  title     = {SAQA: A Self-Adaptive QoS-Aware Scheduling Algorithm for Real-Time Tasks on Heterogeneous Clusters},
  booktitle = {Proceedings of the 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing},
  year      = {2010},
  series    = {CCGRID ’10},
  pages     = {224–232},
  address   = {USA},
  publisher = {IEEE Computer Society},
  abstract  = {Nowadays, providing quality of service (QoS) guarantees for some applications such as signal data processing has become a critical issue. In this paper, we propose a novel self-adaptive QoS-aware scheduling algorithm called SAQA that sufficiently considers the adaptability for real-time tasks with QoS demands on heterogeneous clusters. When the system is in heavy load, the SAQA algorithm can degrade the QoS levels of new tasks or tasks waiting in local queues of nodes to guarantee high schedulability. The minimum QoS level is acceptable for each task. In contrast, when the system is in light load, SAQA can use slack time to adequately improve the QoS of new tasks. We compare SAQA with SAEDF algorithm by simulations. The experimental results indicate that SAQA has admirable adaptability while providing timing and QoS guarantees.},
  doi       = {10.1109/CCGRID.2010.64},
  groups    = {acm},
  isbn      = {9780769540399},
  keywords  = {self-adaptive, heterogeneous clusters, real-time, scheduling},
  numpages  = {9},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/CCGRID.2010.64},
}

@Article{Lama2013,
  author     = {Lama, Palden and Zhou, Xiaobo},
  title      = {Autonomic Provisioning with Self-Adaptive Neural Fuzzy Control for Percentile-Based Delay Guarantee},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2013},
  volume     = {8},
  number     = {2},
  month      = jul,
  issn       = {1556-4665},
  abstract   = {Autonomic server provisioning for performance assurance is a critical issue in Internet services. It is challenging to guarantee that requests flowing through a multi-tier system will experience an acceptable distribution of delays. The difficulty is mainly due to highly dynamic workloads, the complexity of underlying computer systems, and the lack of accurate performance models. We propose a novel autonomic server provisioning approach based on a model-independent self-adaptive Neural Fuzzy Control (NFC). Existing model-independent fuzzy controllers are designed manually on a trial-and-error basis, and are often ineffective in the face of highly dynamic workloads. NFC is a hybrid of control-theoretical and machine learning techniques. It is capable of self-constructing its structure and adapting its parameters through fast online learning. We further enhance NFC to compensate for the effect of server switching delays. Extensive simulations demonstrate that, compared to a rule-based fuzzy controller and a Proportional-Integral controller, the NFC-based approach delivers superior performance assurance in the face of highly dynamic workloads. It is robust to variation in workload intensity, characteristics, delay target, and server switching delays. We demonstrate the feasibility and performance of the NFC-based approach with a testbed implementation in virtualized blade servers hosting a multi-tier online auction benchmark.},
  address    = {New York, NY, USA},
  articleno  = {9},
  doi        = {10.1145/2491465.2491468},
  groups     = {acm},
  issue_date = {July 2013},
  keywords   = {server virtualization, Resource allocation, percentile-based delay guarantee, multi-tier internet services, self-adaptation, neural fuzzy control},
  numpages   = {31},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2491465.2491468},
}

@InProceedings{Zhu2013,
  author    = {Zhu, Junxing and Li, Aiping and Xu, Xiaoning},
  title     = {A Structure Free Self-Adaptive Piecewise Hashing Algorithm for Spam Filtering},
  booktitle = {Proceedings of the Fifth International Conference on Internet Multimedia Computing and Service},
  year      = {2013},
  series    = {ICIMCS ’13},
  pages     = {335–340},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Nowadays, email spam problem continues growing drastically and many spam detection algorithms have been developed at the same time. However, there are several shortcomings shared by most of these algorithms. In order to solve these shortcomings, we present a structure free Self-adaptive piecewise hashing algorithm(SFSPH) together with its super method(SFSPH-S, which is much faster than SFSPH but has lower accuracy). Both of them are based on the extremum characteristic theory, robin fingerprint algorithm and optimization theory. Then we designed several experiments to evaluate the algorithms' performance, including accuracy, speed and robustness, by comparing them with the famous DSC algorithm and the Email Remove-duplicate Algorithm Based on SHA-1(ERABS). Our extensive experiments demonstrated the good performance and accuracy of our algorithm for spam filtering.},
  doi       = {10.1145/2499788.2499799},
  groups    = {acm},
  isbn      = {9781450322522},
  keywords  = {robin fingerprint, email spam, extremum characteristic, self-adaptive piecewise hashing, optimization},
  location  = {Huangshan, China},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2499788.2499799},
}

@InProceedings{Provensi2008,
  author    = {Provensi, Lucas L. and Costa, F\'{a}bio M. and Sacramento, Vagner},
  title     = {Self-Adaptive Middleware for Digital Ink Based Applications},
  booktitle = {Proceedings of the 7th Workshop on Reflective and Adaptive Middleware},
  year      = {2008},
  series    = {ARM ’08},
  pages     = {29–34},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Some aspects of the mobile environment, like lower bandwidth and higher error rates, can affect distributed applications that have real-time requirements. In order to maintain the quality of service expected by such applications, a middleware platform can monitor its execution environment and perform dynamic adaptations on its structure and behavior. To do this, the middleware must know which QoS attributes affect the application and act in accordance with policies described in a specific language. In this paper we propose a self-adaptive architecture, based on the Meta-ORB approach, which uses adaptation policies described in the same modeling language used for the definition of middleware configurations. The paper also presents a study on the use of this architecture for applications based on digital ink.},
  doi       = {10.1145/1462716.1462721},
  groups    = {acm},
  isbn      = {9781605583679},
  keywords  = {self-adaptive middleware, digital ink, distributed multimedia, reflective middleware},
  location  = {Leuven, Belgium},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1462716.1462721},
}

@InProceedings{Zhao2003,
  author    = {Zhao, Ying and Zhou, Wanlei and Lanham, Elicia J. and Yu, Shui and Lan, Mingjun},
  title     = {Self-Adaptive Clock Synchronization Based on Clock Precision Difference},
  booktitle = {Proceedings of the 26th Australasian Computer Science Conference - Volume 16},
  year      = {2003},
  series    = {ACSC ’03},
  pages     = {181–187},
  address   = {AUS},
  publisher = {Australian Computer Society, Inc.},
  abstract  = {This paper presents an innovative strategy to synchronize
all virtual clocks in asynchronous Internet environments.
Our model is based on the architecture of one reference
clock and many slave clocks communicating with each
other over the Internet. The paper makes three major
contributions to this research area. Firstly, one-way
information transmission is applied to reduce traffic
overhead on the Internet for the purpose of clock
synchronization. Secondly, the slave nodes use local
virtual time and the arrival timestamp, from the reference
node, to create linear mathematical trend models and to
retrieve the clock precision differences between reference
clock and slave clocks. Finally, a fault-tolerant and selfadaptive model executed by each slave node based on the
above linear trend model is created in order to ensure that
the virtual clock is running normally, even when the link
between the reference node and this slave node has
crashed. We also present detailed simulations of this
strategy and mathematical analysis on real Internet
environments.},
  doi       = {10.5555/783106.783127},
  groups    = {acm},
  isbn      = {0909925941},
  keywords  = {self-adaptive, precision difference, asynchronous environments, clock synchronization},
  location  = {Adelaide, Australia},
  numpages  = {7},
  url       = {https://dl.acm.org/doi/pdf/10.5555/783106.783127},
}

@InProceedings{Yigitbas2017,
  author    = {Yigitbas, Enes and Sauer, Stefan and Engels, Gregor},
  title     = {Adapt-UI: An IDE Supporting Model-Driven Development of Self-Adaptive UIs},
  booktitle = {Proceedings of the ACM SIGCHI Symposium on Engineering Interactive Computing Systems},
  year      = {2017},
  series    = {EICS ’17},
  pages     = {99–104},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive UIs (SAUIs) have been promoted as a solution for context variability due to their ability to automatically adapt to the context-of-use at runtime. The development of SAUIs is a complex task since self-adaptivity and context management aspects have to be incorporated in the UI development process. In this paper, we present an integrated development environment (IDE) for model-driven development of SAUIs. This IDE, named Adapt-UI, provides integrated views for UI, context and adaptation modeling. Based on the specified models, final UI code and context as well as adaptation services are generated and integrated in an overall UI framework. This allows runtime UI adaptation realized by an automatic reaction to context-of-use changes. The benefit of our approach is demonstrated by a case study, showing the development of self-adaptive UIs for a university library application, utilizing the Angular 2 JavaScript framework.},
  doi       = {10.1145/3102113.3102144},
  groups    = {acm},
  isbn      = {9781450350839},
  keywords  = {model-driven UI development, UI adaptation, self-adaptive UIs, context-management},
  location  = {Lisbon, Portugal},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3102113.3102144},
}

@InProceedings{Zhang2013,
  author    = {Zhang, Feiku and Li, Hui and Yang, Xudong},
  title     = {Application of AMESim and Matlab Simulation on Hydraulic Servo Control System of Spinning Lathe},
  booktitle = {Proceedings of the 2013 Summer Computer Simulation Conference},
  year      = {2013},
  series    = {SCSC ’13},
  address   = {Vista, CA},
  publisher = {Society for Modeling \& Simulation International},
  abstract  = {This paper conducts a joint simulation on the hydraulic servo control system with AMESim and Matlab for a spinning lathe design project. A PID hydraulic servo control system model and a self-adaptive one are built with AMESim and Matlab. Comparison and analysis of both control systems performances are conducted by changing the parameters (input, load added, etc.) and introducing an external disturbance. The results reveal the self-adaptive hydraulic servo control system with the self-adaptive controller has better performance than the system with PID controller. The self-adaptive hydraulic servo control system can reduce or even eliminate the system model parameters' changing effects and random external disturbance fast. The self-adaptive hydraulic servo control system doesn't oscillate when large load added or input signal changing; besides, the system self-tuning process is fast when constant external disturbance introduced. The self-adaptive hydraulic control system satisfies the spinning process specification well.},
  articleno = {11},
  doi       = {10.5555/2557696.2557710},
  groups    = {acm},
  isbn      = {9781627482769},
  keywords  = {spinning lathe, hydraulic servo control system, Matlab, self-adaptive, AMESim},
  location  = {Toronto, Ontario, Canada},
  numpages  = {6},
  url       = {https://dl.acm.org/doi/10.5555/2557696.2557710},
}

@InProceedings{Yu2007,
  author    = {Yu, Tina},
  title     = {Program Evolvability under Environmental Variations and Neutrality},
  booktitle = {Proceedings of the 9th Annual Conference Companion on Genetic and Evolutionary Computation},
  year      = {2007},
  series    = {GECCO ’07},
  pages     = {2973–2978},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Biological organisms employ various mechanisms to cope with the dynamic environments they live in. One recent research reported that depending on the rates of environmental variation, populations evolve toward genotypes in different regions of the neutral networks to adapt to the changes. Inspired by that work, we used a genetic programming system to study the evolution of computer programs under environmental variation. Similar to biological evolution, the genetic programming populations exploit neutrality to cope with environmental fluctuations and evolve evolvability. We hope this work sheds new light on the design of open-ended evolutionary systems which are able to provide consistent evolvability under variable conditions.},
  doi       = {10.1145/1274000.1274041},
  groups    = {acm},
  isbn      = {9781595936981},
  keywords  = {self-adaptation, neutral networks, environmental variations, genotype, open-ended evolution, dynamical environment, genetic drift, redundancy, neutrality, evolvability, phenotype},
  location  = {London, United Kingdom},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1274000.1274041},
}

@InProceedings{Wrzesinska2007,
  author    = {Wrzesinska, Gosia and Maassen, Jason and Bal, Henri E.},
  title     = {Self-Adaptive Applications on the Grid},
  booktitle = {Proceedings of the 12th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
  year      = {2007},
  series    = {PPoPP ’07},
  pages     = {121–129},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Grids are inherently heterogeneous and dynamic. One important problemin grid computing is resource selection, that is, finding anappropriate resource set for the application. Another problem is adaptation to the changing characteristics of the grid environment. Existing solutions to these two problems require that a performance model for an application is known. However, constructing such models is a complex task. In this paper, we investigate an approach that does not require performance models. We start an application on any set of resources. During the application run, we periodically collect the statistics about the application run and deduce application requirements from these statistics. Then, we adjustthe resource set to better fit the application needs. This approach allows us to avoid performance bottlenecks, such as overloaded WAN links or very slow processors, and therefore can yield significant performance improvements. We evaluate our approach in a number of scenarios typical for the Grid.},
  doi       = {10.1145/1229428.1229449},
  groups    = {acm},
  isbn      = {9781595936028},
  keywords  = {grid computing, self-adaptivity},
  location  = {San Jose, California, USA},
  numpages  = {9},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1229428.1229449},
}

@InProceedings{Chacin2011,
  author    = {Chacin, Pablo and Navarro, Leando},
  title     = {Utility Driven Elastic Services},
  booktitle = {Proceedings of the 11th IFIP WG 6.1 International Conference on Distributed Applications and Interoperable Systems},
  year      = {2011},
  series    = {DAIS’11},
  pages     = {122–135},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  abstract  = {To address the requirements of scalability it has become a common practice to deploy large scale services over infrastructures of non-dedicated servers, multiplexing instances of multiple services at a fine grained level. This tendency has recently been popularized thanks to the utilization of virtualization technologies. As these infrastructures become more complex, large, heterogeneous ad distributed, a manual allocation of resources becomes unfeasible and some form of self-management is required. However, traditional closed loop control mechanisms seems unsuitable for this platforms. The main contribution of this paper is the proposal of an Elastic Utility Driven Overlay Network (eUDON) for dynamically scaling the number of instances of a service to ensure a target QoS objective in highly dynamic large-scale infrastructures of non-dedicated servers. This overlay combines an application provided utility function to express the service’s QoS, with an epidemic protocol for state information dissemination, and simple local decisions on each instance to adapt to changes in the execution conditions. These elements give the overlay robustness, flexibility, scalability and a low overhead. We show, by means of simulation experiments, that the proposed mechanisms can adapt to a diverse range of situations like flash crowds and massive failures, while maintaining the QoS objectives of the service.},
  groups    = {acm},
  isbn      = {9783642213861},
  keywords  = {self-adaptive, web services, QoS, epidemic algorithm, overlay},
  location  = {Reykjavik, Iceland},
  numpages  = {14},
  url       = {https://link.springer.com/chapter/10.1007/978-3-642-21387-8_10},
}

@InProceedings{Ayora2012,
  author    = {Ayora, Clara and Torres, Victoria and Pelechano, Vicente and Alf\'{e}rez, Germ\'{a}n H.},
  title     = {Applying CVL to Business Process Variability Management},
  booktitle = {Proceedings of the VARiability for You Workshop: Variability Modeling Made Useful for Everyone},
  year      = {2012},
  series    = {VARY ’12},
  pages     = {26–31},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Business Processes (BP) exist in many variants depending on the application context. The use of variability mechanisms in BPs becomes essential for organizations to reduce development and maintenance efforts. However, such mechanisms entail big challenges. At design time, poor model specifications can turn process variants into difficult-to-maintain and understand artifacts. At runtime, process variants require continuous adaptations to achieve business goals in highly dynamic execution contexts. In order to address these challenges, in this paper we present a proposal to manage process variants at design time and runtime. At design time, process variants are modeled by combining a BP modeling language with the Common Variability Language. Then, at runtime, based on the created models and on the current context, process variants are adapted by means of MoRE-BP, a reconfiguration engine that is capable of performing dynamic adaptations automatically. An online-shop scenario illustrates our proposal and a proof-of-concept prototype validates its feasibility.},
  doi       = {10.1145/2425415.2425421},
  groups    = {acm},
  isbn      = {9781450318099},
  keywords  = {models at runtime, self-adaptive business processes, business process variability, CVL},
  location  = {Innsbruck, Austria},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2425415.2425421},
}

@InProceedings{Hammoudeh2009,
  author    = {Hammoudeh, Mohammad and Newman, Robert and Mount, Sarah and Dennett, Christopher},
  title     = {A Combined Inductive and Deductive Sense Data Extraction and Visualisation Service},
  booktitle = {Proceedings of the 2009 International Conference on Pervasive Services},
  year      = {2009},
  series    = {ICPS ’09},
  pages     = {159–168},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Wireless sensor networks (WSNs) have an intimate interaction, via sensors, with the physical environment they operate within. Application domains have a significant effect on applications performance because WSNs are usually deployed to perform application specific tasks. The part of the world with which an application is concerned is defined as that application's domain. The application domain may help scientists to leverage computational power to simulate, visualise, manipulate, predict and gain intuition about monitored phenomenon. In this paper we propose a new visualisation framework, called Multi-Dimensional Application Domain-driven (M-DAD), that elevates the capabilities of the sense data extraction and visualisation mapping service proposed in [1]. M- DAD exploits the application domain to dynamically minimise the mapping service predictive error. It is capable of visualising an arbitrary number of sense modalities. In M-DAD the visualisation performance is improved by utilising the relations between independent sense modalities as well as other parameters of the application domain. M-DAD can meet the goal of reliability and reactivity, and demonstrates satisfactory robustness using the information they collect about the environment they operate within to adapt its behaviour to changes in the environment. Self-adaptation is a fundamental capability of M-DAD which is required to operate in dynamic environments that impose varying functional and performance requirements on WSNs applications. This self-adaptation scheme makes M-DAD more resilient to faults by substituting for faulty nodes, auto-calibrate sensors, and recover form modelling errors. The experimental results demonstrate that M-DAD performs as well or better than mapping services without its extended capabilities.},
  doi       = {10.1145/1568199.1568228},
  groups    = {acm},
  isbn      = {9781605586441},
  keywords  = {self-adaptation, wireless sensor networks, application domain, sense data extraction and visualisation},
  location  = {London, United Kingdom},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1568199.1568228},
}

@InProceedings{Freitas2010,
  author    = {Freitas, Andr\'{e} Lage and Parlavantzas, Nikos and Pazat, Jean-Louis},
  title     = {A QoS Assurance Framework for Distributed Infrastructures},
  booktitle = {Proceedings of the 3rd International Workshop on Monitoring, Adaptation and Beyond},
  year      = {2010},
  series    = {MONA ’10},
  pages     = {1–8},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Enforcing SLAs (Service Level Agreements) for services deployed on large-scale distributed infrastructures, such as grids and clouds, is complex owing to fluctuating customer demand and unpredictable resource availability. Current systems either address specific application domains or fail to provide a complete QoS assurance solution. This work proposes a generic framework to assist service providers in enforcing quality properties in distributed environments. The framework provides a rich set of QoS management functions, including negotiation, translation, and resource provisioning. Importantly, the framework supports dynamic adaptation; that is, it automatically modifies service behavior and resource usage in order to maintain agreed service levels while satisfying service provider-specific constraints. We have implemented an initial prototype in a grid environment and demonstrated its effectiveness in minimizing SLA violations.},
  doi       = {10.1145/1929566.1929567},
  groups    = {acm},
  isbn      = {9781450304221},
  keywords  = {QoS assurance, self-adaptation, service-oriented architecture},
  location  = {Ayia Napa, Cyprus},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1929566.1929567},
}

@Article{Mertz2017,
  author     = {Mertz, Jhonny and Nunes, Ingrid},
  title      = {Understanding Application-Level Caching in Web Applications: A Comprehensive Introduction and Survey of State-of-the-Art Approaches},
  journal    = {ACM Comput. Surv.},
  year       = {2017},
  volume     = {50},
  number     = {6},
  month      = nov,
  issn       = {0360-0300},
  abstract   = {A new form of caching, namely application-level caching, has been recently employed in web applications to improve their performance and increase scalability. It consists of the insertion of caching logic into the application base code to temporarily store processed content in memory and then decrease the response time of web requests by reusing this content. However, caching at this level demands knowledge of the domain and application specificities to achieve caching benefits, given that this information supports decisions such as what and when to cache content. Developers thus must manually manage the cache, possibly with the help of existing libraries and frameworks. Given the increasing popularity of application-level caching, we thus provide a survey of approaches proposed in this context. We provide a comprehensive introduction to web caching and application-level caching, and present state-of-the-art work on designing, implementing, and managing application-level caching. Our focus is not only on static solutions but also approaches that adaptively adjust caching solutions to avoid the gradual performance decay that caching can suffer over time. This survey can be used as a start point for researchers and developers, who aim to improve application-level caching or need guidance in designing application-level caching solutions, possibly with humans out-of-the-loop.},
  address    = {New York, NY, USA},
  articleno  = {98},
  doi        = {10.1145/3145813},
  groups     = {acm},
  issue_date = {January 2018},
  keywords   = {web application, self-adaptive systems, web caching, adaptation, Application-level caching},
  numpages   = {34},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3145813},
}

@InProceedings{Wagner2018,
  author    = {Wagner, Ryan and Garlan, David and Fredrikson, Matt},
  title     = {Quantitative Underpinnings of Secure, Graceful Degradation: Poster},
  booktitle = {Proceedings of the 5th Annual Symposium and Bootcamp on Hot Topics in the Science of Security},
  year      = {2018},
  series    = {HoTSoS ’18},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {System administrators are slowly coming to accept that nearly all systems are vulnerable and many should be assumed to be compromised. Rather than preventing all vulnerabilities in complex systems, the approach is changing to protecting systems under the assumption that they are already under attack.Administrators do not know all the latent vulnerabilities in the systems they are charged with protecting. This work builds on prior approaches that assume more a priori knowledge. [5]. Additionally, prior research does not necessarily guide administrators to gracefully degrade systems in response to threats [4]. Sophisticated attackers with high levels of resources, like advanced persistent threats (APTs), might use zero day exploits against novel vulnerabilities or be slow and stealthy to evade initial lines of detection.However, defenders often have some knowledge of where attackers are. Additionally, it is possible to reasonably bound attacker resourcing. Exploits have a cost to create [1], and even the most sophisticated attacks use limited number of zero day exploits [3].However, defenders need a way to reason about and react to the impact of an attacker with existing presence in a system. It may not be possible to maintain one hundred percent of the system's original utility; instead, the attacker might need to gracefully degrade the system, trading off some functional utility to keep an attacker away from the most critical functionality.We propose a method to "think like an attacker" to evaluate architectures and alternatives in response to knowledge of attacker presence. For each considered alternative architecture, our approach determines the types of exploits an attacker would need to achieve particular attacks using the Datalog declarative logic programming language in a fashion that draws adapts others' prior work [2][4]. With knowledge of how difficult particular exploits are to create, we can approximate the cost to an attacker of a particular attack trace. A bounded search of traces within a limited cost provides a set of hypothetical attacks for a given architecture. These attacks have varying impacts to the system's ability to achieve its functions. Using this knowledge, our approach outputs an architectural alternative that optimally balances keeping an attacker away from critical functionality while preserving that functionality. In the process, it provides evidence in the form of hypothetical attack traces that can be used to explain the reasoning.This thinking enables a defender to reason about how potential defensive tactics could close off avenues of attack or perhaps enable an ongoing attack. By thinking at the level of architecture, we avoid assumptions of knowledge of specific vulnerabilities. This enables reasoning in a highly uncertain domain.We applied this to several small systems at varying levels of abstraction. These systems were chosen as exemplars of various "best practices" to see if the approach could quantitatively validate the underpinnings of general rules of thumb like using perimeter security or trading off resilience for security. Ultimately, our approach successfully places architectural components in places that correspond with current best practices and would be reasonable to system architects. In the process of applying the approach at different levels of abstraction, we were able to fine tune our understanding attacker movement through systems in a way that provides security-appropriate architectures despite poor knowledge of latent vulnerabilities; the result of the fine-tuning is a more granular way to understand and evaluate attacker movement in systems.Future work will explore ways to enhance performance to this approach so it can provide real time planning to gracefully degrade systems as attacker knowledge is discovered. Additionally, we plan to explore ways to enhance expressiveness to the approach to address additional security related concerns; these might include aspects like timing and further levels of uncertainty.},
  articleno = {25},
  doi       = {10.1145/3190619.3191695},
  groups    = {acm},
  isbn      = {9781450364553},
  keywords  = {security, advanced persistent threat, self-adaptive systems},
  location  = {Raleigh, North Carolina},
  numpages  = {1},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3190619.3191695},
}

@InProceedings{Shafique2013,
  author    = {Shafique, Muhammad and Henkel, J\"{o}rg},
  title     = {Agent-Based Distributed Power Management for Kilo-Core Processors},
  booktitle = {Proceedings of the International Conference on Computer-Aided Design},
  year      = {2013},
  series    = {ICCAD ’13},
  pages     = {153–160},
  publisher = {IEEE Press},
  abstract  = {Power management for Kilo-core processors have become an intricate problem due to the scalability issues and mixed-workloads of massively multi-threaded applications. This paper highlights the power related issues in Kilo-core processors and presents two emerging trends towards agent-based distributed and self-adaptive power management for Kilo-core processors. Agent-based power management allows applications to autonomously control the power states of their resources while operate efficiently as a whole to improve the overall system's energy efficiency. The first approach based on our concept of virtual power gating that allows applications to temporarily reserve their resources to locally optimize for power efficiency. The second approach is game-theoretic power management to achieve fair resource allocations while maximizing the energy efficiency. We present results for scalability and energy efficiency.},
  groups    = {acm},
  isbn      = {9781479910694},
  keywords  = {kilo-core, processor, scalability, low-power, architecture, cross-layer, game theory, decentralized, distributed, invasive computing, many-core, DPM, agents, power management, self-adaptive},
  location  = {San Jose, California},
  numpages  = {8},
}

@InProceedings{Costa2010,
  author    = {da Costa, Andrew Diniz and Nunes, Camila and da Silva, Viviane Torres and Fonseca, Baldoino and de Lucena, Carlos J. P.},
  title     = {JAAF+T: A Framework to Implement Self-Adaptive Agents That Apply Self-Test},
  booktitle = {Proceedings of the 2010 ACM Symposium on Applied Computing},
  year      = {2010},
  series    = {SAC ’10},
  pages     = {928–935},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Appropriate implementation of self-adaptive software systems able not only to check the needs for the adaptations and perform them but also to ensure their compliance with new environment requirements is still an open issue. Therefore, this paper proposes an extension to the Java self-Adaptive Agent Framework (JAAF) in order to apply the self-test concept. This framework allows for the creation of self-adaptive agents based on a process composed of a set of four main activities (monitor, analyze, plan and execute). In this paper we extend the process and framework by including the test activity that will check the adapted behavior before its execution. The applicability of the proposed process is demonstrated by a case study where a system responsible for generating susceptibility maps, i.e., maps that show locations with landslides risks in a given area, searches to adapt its behavior and checks the adaptations before using them.},
  doi       = {10.1145/1774088.1774280},
  groups    = {acm},
  isbn      = {9781605586397},
  keywords  = {control loop, self-adaptation, dynamic environment, self-testing},
  location  = {Sierre, Switzerland},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1774088.1774280},
}

@InProceedings{Pereira2009,
  author    = {Pereira, Gon\c{c}alo and Santos, Pedro A. and Prada, Rui},
  title     = {Self-Adapting Dynamically Generated Maps for Turn-Based Strategic Multiplayer Browser Games},
  booktitle = {Proceedings of the International Conference on Advances in Computer Enterntainment Technology},
  year      = {2009},
  series    = {ACE ’09},
  pages     = {353–356},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this paper we describe a method to create strategically and visually rich game map environments for turn-based strategy multiplayer browser games. Our method creates dynamic maps which expand according to the players' subscriptions pattern and adapt to the players' choices. This method mitigates current level designer limitations and contributes to the solution of balancing problems in turn-based massively multiplayer browser games.},
  doi       = {10.1145/1690388.1690457},
  groups    = {acm},
  isbn      = {9781605588643},
  keywords  = {self-adapting maps, strategy browser game, expanding maps, multiplayer game balance, dynamic maps},
  location  = {Athens, Greece},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1690388.1690457},
}

@InProceedings{Lemouzy2011,
  author    = {Lemouzy, Sylvain and Camps, Valerie and Glize, Pierre},
  title     = {Principles and Properties of a MAS Learning Algorithm: A Comparison with Standard Learning Algorithms Applied to Implicit Feedback Assessment},
  booktitle = {Proceedings of the 2011 IEEE/WIC/ACM International Conferences on Web Intelligence and Intelligent Agent Technology - Volume 02},
  year      = {2011},
  series    = {WI-IAT ’11},
  pages     = {228–235},
  address   = {USA},
  publisher = {IEEE Computer Society},
  abstract  = {The purpose of this paper is to present a new learning algorithm based on an adaptive multi-agent system and to compare it with classical learning algorithms such as the Multi-Layer Perceptron (MLP), the Support Vector Machine (SVM), and the Decision Tree (DT). This comparison is made using data extracted from logs of a local citizen information search engine, called iSAC. It is based on the learning and the inference of the assessment of a real user with regard to the documents provided by iSAC in response to his request. The experimental evaluations show that our algorithm provides results at least as good as those achieved with classical learning approaches, in addition to its capability to function in dynamic and time constrained environments.},
  doi       = {10.1109/WI-IAT.2011.190},
  groups    = {acm},
  isbn      = {9780769545134},
  keywords  = {Personalization, Self-organization, Multi-agent learning, Self-adaptive systems, Implicit assessment of user’s feedback},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/WI-IAT.2011.190},
}

@InProceedings{Itmi2011,
  author    = {Itmi, M. and Cardon, A.},
  title     = {A Basic Proactive System Model for the Self-Adaptive Systems of Systems Approach},
  booktitle = {Proceedings of the 2011 Grand Challenges on Modeling and Simulation Conference},
  year      = {2011},
  series    = {GCMS ’11},
  pages     = {1–5},
  address   = {Vista, CA},
  publisher = {Society for Modeling \& Simulation International},
  abstract  = {We describe systems basically composed of simply reactive elements in the intention of representing system's proactive components. Then we introduce the basic proactive system notion and unify those proactive components to organize an auto-adaptive meta-system. The proposed approach allows going up from proactive components to a self-adaptive system thanks to the basic proactive systems.},
  groups    = {acm},
  isbn      = {9781617829512},
  keywords  = {reactivity, proactivity, self-adaptive systems, basic proactive system, SoS},
  location  = {Hague, Netherlands},
  numpages  = {5},
}

@InProceedings{Tong2016,
  author    = {Tong, Qianqian and Yuan, Zhiyong and Zheng, Mianlun and Zhu, Weixu and Zhang, Guian and Liao, Xiangyun},
  title     = {A Novel Magnetic Levitation Haptic Device for Augmentation of Tissue Stiffness Perception},
  booktitle = {Proceedings of the 22nd ACM Conference on Virtual Reality Software and Technology},
  year      = {2016},
  series    = {VRST ’16},
  pages     = {143–152},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In medical training especially in palpation surgery, it is important for surgeons to perceive tissue stiffness. We design a novel magnetic levitation haptic device based on electromagnetic principles to enhance the perception of tissue stiffness in a virtual environment. The user can directly sense virtual tissues by moving a magnetic stylus in the magnetic field generated by the coil array of our device. To fully use the effective magnetic field, we devise an adjustable coil array and provide a reasonable explanation for such design. Moreover, we design a control interface circuit and present a self-adaptive fuzzy proportion integration differentiation (PID) algorithm to precisely control the coil current. The quantitative experiment shows that the experimental and simulation data of our device are consistent and the proposed control algorithm contributes to increasing the accuracy of tissue stiffness perception. In qualitative experiment, we recruit 22 participants to distinguish tissues of different stiffness and detect tissue abnormality. The experimental results demonstrate that our magnetic levitation haptic device can provide accurate perception of tissue stiffness.},
  doi       = {10.1145/2993369.2993377},
  groups    = {acm},
  isbn      = {9781450344913},
  keywords  = {self-adaptive fuzzy PID, adjustable coil array, stiffness perception augmentation, magnetic levitation haptic device},
  location  = {Munich, Germany},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2993369.2993377},
}

@InProceedings{Weyns2013,
  author    = {Weyns, Danny and Andersson, Jesper},
  title     = {On the Challenges of Self-Adaptation in Systems of Systems},
  booktitle = {Proceedings of the First International Workshop on Software Engineering for Systems-of-Systems},
  year      = {2013},
  series    = {SESoS ’13},
  pages     = {47–51},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2489850.2489860},
  groups    = {acm},
  isbn      = {9781450320481},
  keywords  = {decentralized control, self-adaptation, feedback loops, systems of systems},
  location  = {Montpellier, France},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2489850.2489860},
}

@InProceedings{Tajalli2012,
  author    = {Tajalli, Hossein and Medvidovi\'{c}, Nenad},
  title     = {A Reference Architecture for Integrated Development and Run-Time Environments},
  booktitle = {Proceedings of the Second International Workshop on Developing Tools as Plug-Ins},
  year      = {2012},
  series    = {TOPI ’12},
  pages     = {19–24},
  publisher = {IEEE Press},
  abstract  = {The need to support different stages of a software system's life-cycle in a software development environment has resulted in the emergence of plug-ins that can monitor and adapt the resulting system's run-time environment. In several recent self-adaptive systems, the existence of these plug-ins has resulted in the integration of the development and runtime environments. We introduce a novel reference architecture that captures the architectures of disparate development environments - from those, such as traditional development environments, that have no run-time plug-ins, to the ones, such as the recently emerging development environments, that are fully integrated with the run-time environments. This reference architecture aids the study and understanding of development environments. More importantly, adherence to the architecture improves the run-time availability of certain critical system facilities while reducing the resource consumption of the integrated development and run-time environments.},
  groups    = {acm},
  isbn      = {9781467318204},
  keywords  = {reference architecture, life-cycle, integrated development environments, tools, self-adaptation, run-time environments, run-time plug-ins},
  location  = {Zurich, Switzerland},
  numpages  = {6},
}

@InProceedings{Ghezzi2010,
  author    = {Ghezzi, Carlo and Pradella, Matteo and Salvaneschi, Guido},
  title     = {Context Oriented Programming in Highly Concurrent Systems},
  booktitle = {Proceedings of the 2nd International Workshop on Context-Oriented Programming},
  year      = {2010},
  series    = {COP ’10},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Context Oriented Programming (COP) allows modularization of programs according to the cross-cutting concern of contexts. Context depending features are grouped in layers which can be activated at run time by triggering the associated behavioral variations. COP extensions have been provided for different languages. However all of them enforce a thread, shared-memory based concurrency model. In this paper we discuss how the COP paradigm can be applied to message-based concurrent systems which support the agents paradigm. The discussion is supported by the case of ContextErlang, our COP-inspired contextual version of Erlang.},
  articleno = {1},
  doi       = {10.1145/1930021.1930022},
  groups    = {acm},
  isbn      = {9781450305310},
  keywords  = {self-adaptive software, Erlang, OTP platform, context, context-oriented programming},
  location  = {Maribor, Slovenia},
  numpages  = {3},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1930021.1930022},
}

@InProceedings{Tun2018,
  author    = {Tun, T. T. and Yang, M. and Bandara, A. K. and Yu, Y. and Nhlabatsi, A. and Khan, N. and Khan, K. M. and Nuseibeh, B.},
  title     = {Requirements and Specifications for Adaptive Security: Concepts and Analysis},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {161–171},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In an adaptive security-critical system, security mechanisms change according to the type of threat posed by the environment. Specifying the behavior of these systems is difficult because conditions of the environment are difficult to describe until the system has been deployed and used for a length of time. This paper defines the problem of adaptation in security-critical systems, and outlines the RELAIS approach for expressing requirements and specifying the behavior in a way that helps identify the need for adaptation, and the appropriate adaptation behavior at runtime. The paper introduces the notion of adaptation via input approximation and proposes statistical machine learning techniques for realizing it. The approach is illustrated with a running example and is applied to a realistic security example from a cloud-based file-sharing application. Bayesian classification and logistic regression methods are used to implement adaptive specifications and these methods offer different levels of adaptive security and usability in the file-sharing application.},
  doi       = {10.1145/3194133.3194155},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {self-adaptation, security requirements},
  location  = {Gothenburg, Sweden},
  numpages  = {11},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194155},
}

@InProceedings{Becker2008,
  author    = {Becker, Basil and Giese, Holger},
  title     = {Modeling of Correct Self-Adaptive Systems: A Graph Transformation System Based Approach},
  booktitle = {Proceedings of the 5th International Conference on Soft Computing as Transdisciplinary Science and Technology},
  year      = {2008},
  series    = {CSTST ’08},
  pages     = {508–516},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Software is always embedded in a social and technical context which change over time and therefore also the software has to be adjusted over time to preserve its value. Self-adaptive systems provide a vision how the systems can become capable of doing a large fraction of the required adaptations autonomously. In this paper we first discuss what is required to model correct self-adaptive systems. We then present the formal model of graph transformation systems which serves most of the identified needs. Based on this findings we outline how UML class and object diagrams as well as extensions for the modeling of behavior based upon graph transformation systems can be employed to model correct self-adaptive system. An application example is used to present how the approach can be employed to model self-adaptive systems at a high level of abstraction and means to ensure its correctness are discussed.},
  doi       = {10.1145/1456223.1456326},
  groups    = {acm},
  isbn      = {9781605580463},
  keywords  = {invariant checking, graph transformations, correctness, self-adaptive systems, modeling},
  location  = {Cergy-Pontoise, France},
  numpages  = {9},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1456223.1456326},
}

@InProceedings{Portocarrero2015,
  author    = {Portocarrero, Jes\'{u}s M. T. and Delicato, Fl\'{a}via C. and Pires, Paulo F. and Nakagawa, Elisa Y. and Oquendo, Flavio},
  title     = {Self-Adaptive Middleware for Wireless Sensor Networks: A Reference Architecture},
  booktitle = {Proceedings of the 2015 European Conference on Software Architecture Workshops},
  year      = {2015},
  series    = {ECSAW ’15},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Wireless Sensor Networks (WSN) are networks composed by tiny devices equipped with sensing, processing, storage, and wireless communication capabilities. WSN are used in highly dynamic environments. Applications for WSN should have an autonomous behavior to adapt their operation and achieve the best network performance. Such adaptation should preferably be performed by a middleware layer tailored to the limited resources of WSN. In this paper, we introduce a Reference Architecture (RA) of a self-adaptive middleware for WSN to contribute for the development of solutions enabling autonomic behavior in WSN. Our RA follows an autonomic computing model (MAPE-K) proposed by IBM and it was specified using a formal description language (pi-ADL) that enables the specification of dynamic architectures. ProSA-RA was used to systematize the design, representation and evaluation of our RA.},
  articleno = {12},
  doi       = {10.1145/2797433.2797445},
  groups    = {acm},
  isbn      = {9781450333931},
  keywords  = {Autonomic computing, reference architecture, pi-ADL, wireless sensor network, self-adaptive system},
  location  = {Dubrovnik, Cavtat, Croatia},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2797433.2797445},
}

@InProceedings{Zhao2014,
  author    = {Zhao, Tianqi and Zhao, Haiyan and Zhang, Wei and Jin, Zhi},
  title     = {User Preference Based Autonomic Generation of Self-Adaptive Rules},
  booktitle = {Proceedings of the 6th Asia-Pacific Symposium on Internetware on Internetware},
  year      = {2014},
  series    = {INTERNETWARE 2014},
  pages     = {25–34},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The internetware system is a complex and distributed self-adaptive system, which challenges the method for making adaptation plans. Rule based approaches are very efficient to make plans in adaptive systems. To enable effective rule-based adaptation, we need to write a set of well behaved self-adaptive rules which could always lead to desirable states. This adaptive rules-set needs to be correct, com- plete, conflicts-free and well satisfy user goals, and it should updates according to user preferences. However, it is a difficult task for sys- tem users to define such a set of rules. To resolve this problem, we provide an rule generation engine, which could automatically generate well behaved self-adaptive rules according to user pref- erences. The rule generation engine is realized by a three-stage algorithm: stage 1 integrates user goals and user preferences, stage 2 establishes 1-1 tracing relationship between a context state and its desirable software configuration, stage 3 extracts self-adaptive rules from the tracing relationship between context states and software configurations. We will apply this engine to generate self-adaptive rules for a smart phone system, and evaluate the quality of generated self-adaptive rules.},
  doi       = {10.1145/2677832.2677835},
  groups    = {acm},
  isbn      = {9781450333030},
  keywords  = {User Preference, Automatic Generation, User Goals, Self-adaptive Rules},
  location  = {Hong Kong, China},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2677832.2677835},
}

@InProceedings{DiMarzoSerugendo2010,
  author    = {Di Marzo Serugendo, Giovanna and Fitzgerald, John and Romanovsky, Alexander},
  title     = {MetaSelf: An Architecture and a Development Method for Dependable Self-* Systems},
  booktitle = {Proceedings of the 2010 ACM Symposium on Applied Computing},
  year      = {2010},
  series    = {SAC ’10},
  pages     = {457–461},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper proposes a software architecture and a development process for engineering dependable and controllable self-organising (SO) systems. Our approach addresses dependability by exploiting metadata to support decision making and adaptation based on the dynamic enforcement of explicitly defined policies. Control is obtained by actively modifying metadata, policies or components. We show how this applies to two different systems: (1) a dynamically resilient Web service system; and (2) an industrial assembly system with self-adaptive and SO capabilities.},
  doi       = {10.1145/1774088.1774184},
  groups    = {acm},
  isbn      = {9781605586397},
  keywords  = {self-adaptation, self-organisation, metadata, policies, control loop, design-time and run-time adaptation},
  location  = {Sierre, Switzerland},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1774088.1774184},
}

@InProceedings{Hebig2010,
  author    = {Hebig, Regina and Giese, Holger and Becker, Basil},
  title     = {Making Control Loops Explicit When Architecting Self-Adaptive Systems},
  booktitle = {Proceedings of the Second International Workshop on Self-Organizing Architectures},
  year      = {2010},
  series    = {SOAR ’10},
  pages     = {21–28},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Many self-adaptive systems include control loops between the core system and specific control elements which realize the self-adaptation capabilities. This is also true albeit at a higher level of abstraction for decentralized architectures. However, the available techniques to describe the software architecture of such systems do not support to make the control loops explicit. Therefore, architecting self-adaptive systems and their self-adaptation logic is today not well supported. In this paper, we present a UML profile for control loops that extends UML modeling concepts such that control loops become first class elements of the architecture. This enables that the architecture reflects control loops as crucial elements of the software architecture of these systems. Furthermore, it supports to design control loops as well as the interplay of multiple control loops at the architectural level. In addition, warning signals and related analysis activities are presented that can be used to analyze whether a given architectural UML model using the profile includes potentially problematic occurrences of control loops.},
  doi       = {10.1145/1809036.1809042},
  groups    = {acm},
  isbn      = {9781450300872},
  keywords  = {feedback control, self-adaptive systems, uml profile},
  location  = {Washington, DC, USA},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1809036.1809042},
}

@InProceedings{Collet2010,
  author    = {Collet, Philippe and K\v{r}ikava, Filip and Montagnat, Johan and Blay-Fornarino, Mireille and Manset, David},
  title     = {Issues and Scenarios for Self-Managing Grid Middleware},
  booktitle = {Proceedings of the 2nd Workshop on Grids Meets Autonomic Computing},
  year      = {2010},
  series    = {GMAC ’10},
  pages     = {1–10},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Despite significant efforts to achieve reliable grid middlewares, grid infrastructures still encounter important difficulties to implement the promise of ubiquitous, seamless and transparent computing. Identified causes are numerous, such as the complexity of middleware stacks, dependence to many distributed resources, heterogeneity of hardware and software operated or incompatibilities between software components declared as interoperable. Based on failures that occurred during a large data challenge run on a grid dedicated to neuroscience, we identify scenarios that can be handled through autonomic management associated to the grid middleware. We also outline a flexible self-adaptive framework that aims at using model-driven development to facilitate the engineering, integration and reuse of MAPE-K loops in large scale distributed systems.},
  doi       = {10.1145/1809029.1809033},
  groups    = {acm},
  isbn      = {9781450301008},
  keywords  = {SALTY, self-adaptive systems, autonomic computing, neuGRID, medical image analysis, SCA, model driven engineering, grid computing},
  location  = {Washington, DC, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1809029.1809033},
}

@InProceedings{Klus2006,
  author    = {Klus, Holger and Rausch, Andreas},
  title     = {A General Architecture for Self-Adaptive AmI Components Applied in Speech Recognition},
  booktitle = {Proceedings of the 2006 International Workshop on Self-Adaptation and Self-Managing Systems},
  year      = {2006},
  series    = {SEAMS ’06},
  pages     = {72–78},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Ambient Intelligence (AmI) is a new technological paradigm which aims at improving everyday life. The vision of Ambient Intelligence is to augment almost every artifact with some kind of intelligence and communication ability and thus to provide an intelligent environment which is able to make life easier in an ambient way. Several aspects play an important role in order to realize such systems. One aspect is that components within such a system have to react in an intelligent manner on its environment in order to provide a reasonable contribution. Self-adaptive components can accomplish this challenge. In this paper we will present a general architecture for self-adaptive systems which can be used to implement and structure these kinds of components. Subsequently we will apply this general architecture to implement a self-adaptive AmI-component in the form of a self-adaptive speech recognition system. This system has already been integrated into an AmI scenario called "Assisted Bicycle Team Training" which will be outlined in this paper, too.},
  doi       = {10.1145/1137677.1137692},
  groups    = {acm},
  isbn      = {1595934030},
  keywords  = {speech recognition, ambient intelligence, self-adaptation},
  location  = {Shanghai, China},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1137677.1137692},
}

@InProceedings{Portaluri2019,
  author    = {Portaluri, Giuseppe and Tamburello, Marialaura and Giordano, Stefano},
  title     = {From Sensors to the Cloud: A Real-Time Use-Case on Vertical Integration},
  booktitle = {Proceedings of the 23rd IEEE/ACM International Symposium on Distributed Simulation and Real Time Applications},
  year      = {2019},
  series    = {DS-RT ’19},
  pages     = {318–319},
  publisher = {IEEE Press},
  abstract  = {We present a vertical integration of a real-time Industrial Internet of Things environment with Cloud computing functionalities. We designed our testbed to implement self-adaptive wings for motorbikes using pressure values sensed in specific locations of the motorbike as input data collected exploiting open-hardware devices called OpenMotes which communicate through a low-power, delay-constrained wireless network based on the 6LoWPAN protocol stack. Our real-time on-board unit elaborates the data, and it computes the new angle of attack of two wings. The total response time of the system is in the order of 100 ms and meets the real-time requirements that constrains our scenario. Finally, we integrate our system with Cloud functionalities that we use for storing the acquired data on a time-series database.},
  doi       = {10.1109/DS-RT47707.2019.8958685},
  groups    = {acm},
  isbn      = {9781728129235},
  keywords  = {I2C, IoT, self-adaptive fluid-dynamics, 6LoWPAN, time-series database, controller area network, cloud computing},
  location  = {Cosenza, Italy},
  numpages  = {2},
}

@InProceedings{Liu2017,
  author    = {Liu, Hongjing and Ren, Ming and Huang, Wenguang and Li, Wei and Ren, Zhigang and Dong, Ming},
  title     = {Insulation Status Diagnosis on Metal-Enclosed Switchgear via TEV Sensing Network},
  booktitle = {Proceedings of the 2017 2nd International Conference on Communication and Information Systems},
  year      = {2017},
  series    = {ICCIS 2017},
  pages     = {54–58},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Metal enclosed switchgears, which have been widely used, play an important role in power distribution network, their safety operation is directively related to the reliability of power system as well as the power quality in consumer side. Partial discharges (PDs) detection is an effective way to identify potential faults and it can be detected for insulation diagnosis for metal-enclosed switchgear. Transient earth voltage(TEV) method as a non-intrusive method has the great engineering application value for estimating insulation condition of switchgear. In this present work, an innovative on-line insulation status diagnosis on metal-enclosed switchgear is proposed and performed with a self-adapting TEV sensing network. The built of TEV sensing network and PD diagnosis in three modes based on the self-adapting TEV sensing network are described in this paper.},
  doi       = {10.1145/3158233.3159336},
  groups    = {acm},
  isbn      = {9781450353489},
  keywords  = {self-adapting, sensing network, Partial discharges, insulation diagnosis, transient earth voltage},
  location  = {Wuhan, China},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3158233.3159336},
}

@InProceedings{Diaconescu2003,
  author    = {Diaconescu, Ada},
  title     = {A Framework for Using Component Redundancy for Self-Adapting and Self-Optimising Component-Based Enterprise Systems},
  booktitle = {Companion of the 18th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  year      = {2003},
  series    = {OOPSLA ’03},
  pages     = {390–391},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {We propose a framework that uses component redundancy for enabling self-adaptation, self-optimisation and self-healing capabilities in component-based enterprise software systems.},
  doi       = {10.1145/949344.949450},
  groups    = {acm},
  isbn      = {1581137516},
  keywords  = {self-adaptation, middleware, decision policy, redundancy, component-based enterprise systems, self-optimisation},
  location  = {Anaheim, CA, USA},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/949344.949450},
}

@Article{Iglesia2015,
  author     = {Iglesia, Didac Gil De La and Weyns, Danny},
  title      = {MAPE-K Formal Templates to Rigorously Design Behaviors for Self-Adaptive Systems},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2015},
  volume     = {10},
  number     = {3},
  month      = sep,
  issn       = {1556-4665},
  abstract   = {Designing software systems that have to deal with dynamic operating conditions, such as changing availability of resources and faults that are difficult to predict, is complex. A promising approach to handle such dynamics is self-adaptation that can be realized by a MAPE-K feedback loop (Monitor-Analyze-Plan-Execute plus Knowledge). To provide evidence that the system goals are satisfied, given the changing conditions, the state of the art advocates the use of formal methods. However, little research has been done on consolidating design knowledge of self-adaptive systems. To support designers, this paper contributes with a set of formally specified MAPE-K templates that encode design expertise for a family of self-adaptive systems. The templates comprise: (1) behavior specification templates for modeling the different components of a MAPE-K feedback loop (based on networks of timed automata), and (2) property specification templates that support verification of the correctness of the adaptation behaviors (based on timed computation tree logic). To demonstrate the reusability of the formal templates, we performed four case studies in which final-year Masters students used the templates to design different self-adaptive systems.},
  address    = {New York, NY, USA},
  articleno  = {15},
  doi        = {10.1145/2724719},
  groups     = {acm},
  issue_date = {October 2015},
  keywords   = {Formal templates, self-adaptation, MAPE-K},
  numpages   = {31},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2724719},
}

@InProceedings{Adjoyan2017,
  author    = {Adjoyan, Seza and Seriai, Abdelhak-Djamel},
  title     = {Reconfigurable Service-Based Architecture Based on Variability Description},
  booktitle = {Proceedings of the Symposium on Applied Computing},
  year      = {2017},
  series    = {SAC ’17},
  pages     = {1154–1161},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems evolve during system's execution against changes in operating environment. Such evolution and reconfiguration can be specified at architecture level using a syntactical expressive language such as Architecture Description Languages (ADLs). Variability modeling is an excellent instrument to model variations of software artifacts and their behavior within a self-adaptive system. However, existing ADLs that support dynamic reconfiguration do not explicitly model variation points on which the reconfiguration is based. This constitutes a barrier for a flexible management of reconfiguration at architecture level as well as traceability issues between a dynamic description given at architectural level and its counterpart at other abstraction levels. In this paper, we propose a variant-rich service-oriented ADL that enables system to reconfigure itself at runtime in response to a context change. To this end, our modular ADL, called Dynamic Service-Oriented Product Lines Architecture Description Language (DSOPL-ADL), specifies dynamic reconfigurations at architecture level besides specifying structural, variability and context information. Among several specified variable configurations at architecture level, one concrete configuration is generated at runtime triggered by a context value. Furthermore, an implementation code can be automatically generated from the architectural description.},
  doi       = {10.1145/3019612.3019767},
  groups    = {acm},
  isbn      = {9781450344869},
  keywords  = {self-adaptive service-based systems, architecture description language (ADL), variability, context-aware, architecture-centric reconfiguration, dynamic reconfiguration},
  location  = {Marrakech, Morocco},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3019612.3019767},
}

@InProceedings{SousaDuarte2015,
  author    = {de Sousa Duarte, Paulo Artur and Barreto, Felipe Mota and de Almada Gomes, Francisco Anderson and de Carvalho, Windson Viana and Trinta, Fernando Antonio Mota},
  title     = {Towards Context-Aware Behaviour Generation},
  booktitle = {Proceedings of the 30th Annual ACM Symposium on Applied Computing},
  year      = {2015},
  series    = {SAC ’15},
  pages     = {596–598},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Development of Context-Aware and Mobile (CAM) applications requires software engineers to write complex code (e.g., adaptation mechanisms, context management) and deal with heterogeneity issues regarding devices and sensors. A promise to deal with this issue approach is the combination of MDE (Model-Driven Engineering) design principles and CAM middleware platforms. Following this approach, we present in this paper CRITiCAL, a ConfiguRation Tool for Context Aware and mobiLe applications. This tool enables visual modelling of contextual information and adaptive behaviour of a CAM application. From visual models, a code generation is performed and its result contains all methods required for communication between the application and a context management middleware. We aim at offering a simplified and visual way to define context acquisition mechanisms (e.g., get user location) and context rules in order to accelerate the development of CAM applications.},
  doi       = {10.1145/2695664.2696057},
  groups    = {acm},
  isbn      = {9781450331968},
  keywords  = {android, self-adaptation, middleware, DSL, MDE, context-aware},
  location  = {Salamanca, Spain},
  numpages  = {3},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2695664.2696057},
}

@InProceedings{Chen2018,
  author    = {Chen, Tao and Bahsoon, Rami and Wang, Shuo and Yao, Xin},
  title     = {To Adapt or Not to Adapt? Technical Debt and Learning Driven Self-Adaptation for Managing Runtime Performance},
  booktitle = {Proceedings of the 2018 ACM/SPEC International Conference on Performance Engineering},
  year      = {2018},
  series    = {ICPE ’18},
  pages     = {48–55},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive system (SAS) can adapt itself to optimize various key performance indicators in response to the dynamics and uncertainty in environment. In this paper, we present Debt Learning Driven Adaptation (DLDA), an framework that dynamically determines when and whether to adapt the SAS at runtime. DLDA leverages the temporal adaptation debt, a notion derived from the technical debt metaphor, to quantify the time-varying money that the SAS carries in relation to its performance and Service Level Agreements. We designed a temporal net debt driven labeling to label whether it is economically healthier to adapt the SAS (or not) in a circumstance, based on which an online machine learning classifier learns the correlation, and then predicts whether to adapt under the future circumstances. We conducted comprehensive experiments to evaluate DLDA with two different planners, using 5 online machine learning classifiers, and in comparison to 4 state-of-the-art debt-oblivious triggering approaches. The results reveal the effectiveness and superiority of DLDA according to different metrics.},
  doi       = {10.1145/3184407.3184413},
  groups    = {acm},
  isbn      = {9781450350952},
  keywords  = {self-adaptive systems, performance, technical debt, machine learning},
  location  = {Berlin, Germany},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3184407.3184413},
}

@InProceedings{Kremer2019,
  author    = {Kremer, Kevin and Brinkmann, Andr\'{e}},
  title     = {FADaC: A Self-Adapting Data Classifier for Flash Memory},
  booktitle = {Proceedings of the 12th ACM International Conference on Systems and Storage},
  year      = {2019},
  series    = {SYSTOR ’19},
  pages     = {167–178},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Solid state drives (SSDs) implement a log-structured write pattern, where obsolete data remains stored on flash pages until the flash translation layer (FTL) erases them. erase() operations, however, cannot erase a single page, but target entire flash blocks. Since these victim blocks typically store a mix of valid and obsolete pages, FTLs have to copy the valid data to a new block before issuing an erase() operation. This process therefore increases the latencies of concurrent I/Os and reduces the lifetime of flash memory. Data classification schemes identify data pages with similar update frequencies and group them together. FTLs can use this grouping to design garbage collection strategies to find victim blocks that have less valid data with respect to having no data classification, and therefore to significantly reduce the number of additional I/Os. Previous data classification algorithms have been designed without leveraging special features of flash memory and often rely on workload-specific configurations. Our classifier FADaC tunes its parameters online and operates on any given amount of memory by storing additional information within the metadata of flash pages. Additional read() requests for the classification are so few that FADaC reduces the internal flash overhead by up to 45% compared to the best classifier from previous work.},
  doi       = {10.1145/3319647.3325829},
  groups    = {acm},
  isbn      = {9781450367493},
  keywords  = {self-adapting, data classification, online algorithm, flash memory},
  location  = {Haifa, Israel},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3319647.3325829},
}

@Article{Arcaini2015,
  author     = {Arcaini, Paolo and Riccobene, Elvinia and Scandurra, Patrizia},
  title      = {Modeling and Validating Self-Adaptive Service-Oriented Applications},
  journal    = {SIGAPP Appl. Comput. Rev.},
  year       = {2015},
  volume     = {15},
  number     = {3},
  pages      = {35–48},
  month      = oct,
  issn       = {1559-6915},
  abstract   = {Self-adaptive and autonomous behaviors are becoming more and more important in the context of service-oriented applications, and formal modeling self-adaptive service-oriented components is highly required to assure quality properties. This paper enhances the formal framework SCA-ASM for modeling and validating distributed self-adaptive service-oriented applications. We explain how modeling an SCA-ASM component able to monitor and react to environmental changes (context-awareness) and to internal changes (self-awareness), and present the operators for expressing and coordinating self-adaptive behaviors in a distributed setting. We also support techniques for validating adaptation scenarios, and getting feedback of the correctness of the adaptation logic as implemented by the managing SCA-ASM components over the managed ones. As a proof-of-concepts, we use self-adaptive SCA-ASMs for modeling and validating a decentralized traffic monitoring system.},
  address    = {New York, NY, USA},
  doi        = {10.1145/2835260.2835262},
  groups     = {acm},
  issue_date = {September 2015},
  keywords   = {service-oriented applications, formal modeling, self-adaptation, validation, SCA-ASM},
  numpages   = {14},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2835260.2835262},
}

@InProceedings{Howard2017,
  author    = {Howard, Gerard David},
  title     = {On Self-Adaptive Rate Restarts for Evolutionary Robotics with Real Rotorcraft},
  booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference},
  year      = {2017},
  series    = {GECCO ’17},
  pages     = {123–130},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive parameters are increasingly used in the field of Evolutionary Robotics, as they allow key evolutionary rates to vary autonomously in a context-sensitive manner throughout the optimisation process. A significant limitation to self-adaptive mutation is that rates can be set unfavourably which hinders convergence. Rate restarts are typically employed to remedy this, but thus far have only been applied in Evolutionary Robotics for mutation-only algorithms. This paper focuses on the level at which evolutionary rate restarts are applied in population-based algorithms with >1 evolutionary operator. After testing on a real hexacopter hovering task, we conclude that individual-level restarting results in higher fitness solutions without fitness stagnation, and population restarts provide a more stable rate evolution. Without restarts, experiments can become stuck in suboptimal controller/rate combinations which can be difficult to escape from.},
  doi       = {10.1145/3071178.3071248},
  groups    = {acm},
  isbn      = {9781450349208},
  keywords  = {evolutionary robotics, self-adaptation, evolvable hardware, differential evolution},
  location  = {Berlin, Germany},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3071178.3071248},
}

@InProceedings{Gaudesi2015,
  author    = {Gaudesi, Marco and Marcelli, Andrea and Sanchez, Ernesto and Squillero, Giovanni and Tonda, Alberto},
  title     = {Malware Obfuscation through Evolutionary Packers},
  booktitle = {Proceedings of the Companion Publication of the 2015 Annual Conference on Genetic and Evolutionary Computation},
  year      = {2015},
  series    = {GECCO Companion ’15},
  pages     = {757–758},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A malicious botnet is a collection of compromised hosts coordinated by an external entity. The malicious software, or malware, that infect the systems are its basic units and they are responsible for its global behavior. Anti Virus software and Intrusion Detection Systems detect botnets by analyzing network and files, looking for signature and known behavioral patterns. Thus, the malware hiding capability is a crucial aspect. This paper describes a new obfuscation mechanism based on evolutionary algorithms: an evolutionary core is embedded in the malware to generate a different, optimized hiding strategy for every single infection. Such always-changing, hard-to-detect malware can be used by security industries to stress the analysis methodologies and to test the ability to react to malware mutations. This research is the first step in a more ambitious research project, where a whole botnet, composed of different malware and Anti Virus software, is analyzed as a prey-predator ecosystem.},
  doi       = {10.1145/2739482.2764940},
  groups    = {acm},
  isbn      = {9781450334884},
  keywords  = {self-adapting, evolutionary packer, operator selection, computational intelligence, multi-armed bandit, adaptivity, malware},
  location  = {Madrid, Spain},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2739482.2764940},
}

@InProceedings{Ali2017,
  author    = {Ali, Nour and Mart\'{\i}nez-Mart\'{\i}nez, Alfonso and Ayuso-P\'{e}rez, Lorena and Espinoza, Angelina},
  title     = {Self-Adaptive Quality Requirement Elicitation Process for Legacy Systems: A Case Study in Healthcare},
  booktitle = {Proceedings of the Symposium on Applied Computing},
  year      = {2017},
  series    = {SAC ’17},
  pages     = {1102–1107},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Legacy systems need to be continuously maintained and re-engineered to improve their provision of services and improve quality attributes. An approach that promises to improve quality attributes and reduce human maintenance tasks is the self-adaptive approach, where software systems modify their own behaviour. However, there is little guidance in the literature on how to migrate to a self-adaptive system and evaluate which features should be designed/implemented with self-adaptive behaviour. In this paper, we describe a process called Self-Adaptive Quality Requirement Elicitation Process (SAQEP), a process that allows eliciting quality attribute requirements from legacy system stakeholders and specify which of these requirements can be taken account to be implemented in a self-adaptation system. The SAQEP has been applied to elicit the self-adaptive quality requirements of a legacy system in a Mexican hospital. We also discuss our experience applying this approach.},
  doi       = {10.1145/3019612.3019751},
  groups    = {acm},
  isbn      = {9781450344869},
  keywords  = {self-adaptive requirements, quality attribute, self-adaptive scenario, self-property, quality attribute scenario},
  location  = {Marrakech, Morocco},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3019612.3019751},
}

@Article{Stratan2012,
  author     = {Stratan, Corina and Sacha, Jan and Napper, Jeff and Costa, Paolo and Pierre, Guillaume},
  title      = {The XtreemOS Resource Selection Service},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2012},
  volume     = {7},
  number     = {4},
  month      = dec,
  issn       = {1556-4665},
  abstract   = {Many large-scale utility computing infrastructures comprise heterogeneous hardware and software resources. This raises the need for scalable resource selection services that identify resources that match application requirements. Such a service must provide an efficient lookup in spite of changing resource attributes such as disk size, changing application requirements such as installed software libraries, and changing system composition as resources join or leave. We present a fully decentralized, self-managing Resource Selection Service (RSS) algorithm by which resources autonomously select themselves when their attributes match a query. An application specifies what it expects from a resource by means of a conjunction of (attribute,value-range) pairs, which are matched against the attribute values of resources. The set of search attributes can also be updated online to reflect new requirements. We show that our solution scales in the number of resources and in the number of attributes, while being relatively insensitive to churn and other membership changes like node failures. Our RSS continuously self-adapts its routing structure in response to variations in the distribution of node attributes and queries. We show that this autonomous optimization maintains performance and availability in a long-lived service even when the set of application requirements used to select resources changes.},
  address    = {New York, NY, USA},
  articleno  = {37},
  doi        = {10.1145/2382570.2382573},
  groups     = {acm},
  issue_date = {December 2012},
  keywords   = {RSS, XtreemOS, resource selection, self-adaptation},
  numpages   = {32},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2382570.2382573},
}

@InProceedings{Schmerl2014,
  author    = {Schmerl, Bradley and C\'{a}mara, Javier and Gennari, Jeffrey and Garlan, David and Casanova, Paulo and Moreno, Gabriel A. and Glazier, Thomas J. and Barnes, Jeffrey M.},
  title     = {Architecture-Based Self-Protection: Composing and Reasoning about Denial-of-Service Mitigations},
  booktitle = {Proceedings of the 2014 Symposium and Bootcamp on the Science of Security},
  year      = {2014},
  series    = {HotSoS ’14},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Security features are often hardwired into software applications, making it difficult to adapt security responses to reflect changes in runtime context and new attacks. In prior work, we proposed the idea of architecture-based self-protection as a way of separating adaptation logic from application logic and providing a global perspective for reasoning about security adaptations in the context of other business goals. In this paper, we present an approach, based on this idea, for combating denial-of-service (DoS) attacks. Our approach allows DoS-related tactics to be composed into more sophisticated mitigation strategies that encapsulate possible responses to a security problem. Then, utility-based reasoning can be used to consider different business contexts and qualities. We describe how this approach forms the underpinnings of a scientific approach to self-protection, allowing us to reason about how to make the best choice of mitigation at runtime. Moreover, we also show how formal analysis can be used to determine whether the mitigations cover the range of conditions the system is likely to encounter, and the effect of mitigations on other quality attributes of the system. We evaluate the approach using the Rainbow self-adaptive framework and show how Rainbow chooses DoS mitigation tactics that are sensitive to different business contexts.},
  articleno = {2},
  doi       = {10.1145/2600176.2600181},
  groups    = {acm},
  isbn      = {9781450329071},
  keywords  = {denial-of-service, probabilistic model checking, self-adaptation},
  location  = {Raleigh, North Carolina, USA},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2600176.2600181},
}

@InProceedings{Geihs2006,
  author    = {Geihs, Kurt and Reichle, Roland and Khan, Mohammad U. and Solberg, Arnor and Hallsteinsen, Svein},
  title     = {Model-Driven Development of Self-Adaptive Applications for Mobile Devices: (Research Summary)},
  booktitle = {Proceedings of the 2006 International Workshop on Self-Adaptation and Self-Managing Systems},
  year      = {2006},
  series    = {SEAMS ’06},
  pages     = {95},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A challenge in distributed system design is to cope with the dynamic nature of the execution environment. The goal of the IST MADAM project is to develop modeling support, tools and middleware that collectively foster the design, implementation and operation of self-adaptive applications for mobile users. We introduce a model-driven development approach for adaptive component-based applications running on mobile devices. Context dependencies and adaptation capabilities of applications are modeled in UML using a new UML profile. The UML models are automatically transformed to Java source code using a MDA tool chain. A specific middleware infrastructure achieves the adaptation through sensing the context and dynamically adjusting the application configuration in order to provide the best possible service to the user. The development approach has been tested with two real-life applications.},
  doi       = {10.1145/1137677.1137698},
  groups    = {acm},
  isbn      = {1595934030},
  keywords  = {mobile computing, context-awareness, self-adaptive applications, model-driven development, UML},
  location  = {Shanghai, China},
  numpages  = {1},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1137677.1137698},
}

@InProceedings{Camara2014,
  author    = {C\'{a}mara, Javier and de Lemos, Rog\'{e}rio and Laranjeiro, Nuno and Ventura, Rafael and Vieira, Marco},
  title     = {Robustness Evaluation of the Rainbow Framework for Self-Adaptation},
  booktitle = {Proceedings of the 29th Annual ACM Symposium on Applied Computing},
  year      = {2014},
  series    = {SAC ’14},
  pages     = {376–383},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive (or autonomic) systems incorporate complex software components that act as controllers of a target system by executing actions through effectors, based on information monitored by probes. Despite the growing importance and criticality of controllers in many application domains, a central concern about them is the difficulty in assessing their robustness when architecting self-adaptive systems. In previous work, we proposed an approach for evaluating the robustness of controllers in self-adaptive systems. In this practical experience report, we describe a comprehensive evaluation of the robustness of a particular controller, in our case Rainbow, in the context of two case studies: a benchmark case study that reproduces the typical infrastructure for a news website, and an industrial middleware for monitoring populated networks of devices. The aim of this work is to assess to what extent the use of a different target system has an impact on the robustness of the controller, which has to be customized in different ways, and may need to resort to the activation of different features, depending on the particular target system. Our analysis concludes that the customization of Rainbow (the controller) has little impact on its robustness because of the way the controller was designed and built, and this modularization of non-functional requirements is indeed encouraging when architecting self-adaptive systems.},
  doi       = {10.1145/2554850.2554935},
  groups    = {acm},
  isbn      = {9781450324694},
  keywords  = {rainbow, self-adaptive systems, autonomic systems, robustness testing},
  location  = {Gyeongju, Republic of Korea},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2554850.2554935},
}

@InProceedings{Bao2008,
  author    = {Bao, Ergude and Yang, Yang and Chen, Hui and Lu, Yuan-Yuan and Liu, Xiao and Li, Wei-Sheng},
  title     = {A Study and Implementation of Self-Adaptive Allocation Algorithm for Parallel Program},
  booktitle = {Proceedings of the 5th International Conference on Soft Computing as Transdisciplinary Science and Technology},
  year      = {2008},
  series    = {CSTST ’08},
  pages     = {583–588},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The application level load balancing problem that CPU time provided for each data unit is steady but CPU time needed by them is different has been drawing people's attention these years, but actually, the problem that CPU time needed by each data unit is the same but CPU time provided for them is non-steady has more practical value. This paper starts from the changing of provided CPU time for each computing process in a cluster, selects counter propagation neutral network as a basis from 3 predict methods, which can bring high accuracy but only cost a low complexity and can also well manage the interdependency of provided CPU time among the computing processes, then studies and implements an self-adaptive allocation algorithm for parallel programs. From the result of tests, the algorithm can largely raise the efficiency of parallel algorithms. Encapsulate this algorithm into MPI API for engineering applications, and as long as software developers substitute this API for message send and receive functions, adaptive allocation can be achieved. The API encapsulating the algorithm is especially applicable for Microsoft Windows Compute Cluster Server (WCCS) and it is the extension of this system.},
  doi       = {10.1145/1456223.1456342},
  groups    = {acm},
  isbn      = {9781605580463},
  keywords  = {API, CPU time, counter propagation neutral network, self-adaptive, Microsoft WCCS system},
  location  = {Cergy-Pontoise, France},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1456223.1456342},
}

@InProceedings{Stahl2018,
  author    = {Stahl, Emmanuel and Yabo, Agust\'{\i}n Gabriel and Richard, Olivier and Bzeznik, Bruno and Robu, Bogdan and Rutten, Eric},
  title     = {Towards a Control-Theory Approach for Minimizing Unused Grid Resources},
  booktitle = {Proceedings of the 1st International Workshop on Autonomous Infrastructure for Science},
  year      = {2018},
  series    = {AI-Science’18},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {HPC systems are facing more and more variability in their behavior, related to e.g., performance and power consumption, and the fact that they are less predictable requires more runtime management. This can be done in an Autonomic Management feedback loop, in response to monitored information in the systems, by analysis of this data and utilization of the results in order to activate appropriate system-level or application-level feedback mechanisms (e.g., informing schedulers, down-clocking CPUs). One such problem is found in the context of CiGri, a simple, lightweight, scalable and fault tolerant grid system which exploits the unused resources of a set of computing clusters. Computing power left over by the execution of a main HPC application scheduling is used to execute smaller jobs, which are injected as much as the global system allows. This paper presents first results addressing the problem of automated resource management in an HPC infrastructure, using techniques from Control Theory to design a controller that maximizes cluster utilization while avoiding overload. We put in place a mechanism for feedback (Proportional Integral, PI) control system software, through a maximum number of jobs to be sent to the cluster, in response to system information about the current number of jobs processed.},
  articleno = {4},
  doi       = {10.1145/3217197.3217201},
  groups    = {acm},
  isbn      = {9781450358620},
  keywords  = {self-adaptive systems, resource management, autonomic computing, High performance computing, control theory},
  location  = {Tempe, AZ, USA},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3217197.3217201},
}

@InProceedings{Silva2018,
  author    = {da Silva, Jo\~{a}o Pablo S. and Ecar, Miguel and Pimenta, Marcelo S. and Kepler, Fabio Natanael and Guedes, Gilleanes T. A. and Betemps, Carlos Michel},
  title     = {Improving Self-Adaptive Systems Conceptual Modeling},
  booktitle = {Proceedings of the 33rd Annual ACM Symposium on Applied Computing},
  year      = {2018},
  series    = {SAC ’18},
  pages     = {1292–1299},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive Systems (SaSs) operate under uncertainty conditions and have intrinsic properties that have posed some challenges for requirements analysis. Conceptual modeling is useful to requirements analysis because it aids to understand the situation in which a problem occurs. SaSs conceptual modeling is a non-trivial activity because it is necessary to deal with requirements uncertainty, contextual changes, and behavior adaptation. Since conceptual models are built by humans, their quality heavily depends on the humans expertise, which is not a good software engineering practice. Regarding SaSs, the exposure to quality risks increases because of intrinsic characteristic in this class of system. In this paper, we present a SaSs conceptual modeling approach composed of a metamodel and a modeling process. The process defines how to instantiate the metamodel from requirements specifications to create SaSs conceptual models. We performed a controlled experiment with subjects to evaluate our modeling approach effectiveness. As the outcome, we found that our approach had a better performance than an ad hoc approach. The contribution of this paper is a well-defined approach for guiding SaSs conceptual modeling, supported by evidence of its effectiveness by means of an empirical experiment.},
  doi       = {10.1145/3167132.3167271},
  groups    = {acm},
  isbn      = {9781450351911},
  keywords  = {requirements analysis, empirical experiment, self-adaptive system, conceptual modeling},
  location  = {Pau, France},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3167132.3167271},
}

@InProceedings{Janik2006,
  author    = {Janik, Arkadiusz and Zielinski, Krzysztof},
  title     = {Transparent Resource Management and Self-Adaptability Using Multitasking Virtual Machine RM API},
  booktitle = {Proceedings of the 2006 International Workshop on Self-Adaptation and Self-Managing Systems},
  year      = {2006},
  series    = {SEAMS ’06},
  pages     = {51–57},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The Multitasking Virtual Machine has been provided with many useful features like Isolation API or Resource Consumption Management API. The latter one can be used to help in managing resources in Java applications. However, using RM API does not guarantee separation between a resource management activity and a business activity. In this paper we present the concept of The Transparent Resource Management (TRM) system. The system can be used to run Java applications with resource management policies added dynamically, as a separate aspect. Each application runningin the TRM system can be started with a reusable graph of different states. Each state encapsulates currently used resource management policy. An active state can change automatically during runtime, depending on the state of an application, the state of the whole system, as well as on the utilization of different resources in different applications.},
  doi       = {10.1145/1137677.1137688},
  groups    = {acm},
  isbn      = {1595934030},
  keywords  = {multitasking virtual machine, transparent management, Java, isolates, self-adaptability, resource management},
  location  = {Shanghai, China},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1137677.1137688},
}

@InProceedings{Camara2015,
  author    = {C\'{a}mara, Javier and Garlan, David and Schmerl, Bradley and Pandey, Ashutosh},
  title     = {Optimal Planning for Architecture-Based Self-Adaptation via Model Checking of Stochastic Games},
  booktitle = {Proceedings of the 30th Annual ACM Symposium on Applied Computing},
  year      = {2015},
  series    = {SAC ’15},
  pages     = {428–435},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Architecture-based approaches to self-adaptation rely on architectural descriptions to reason about the best way of adapting the structure and behavior of software-intensive systems at runtime, either by choosing among a set of predefined adaptation strategies, or by automatically generating adaptation plans. Predefined strategy selection has a low computational overhead and facilitates dealing with uncertainty (e.g., by accounting explicitly for contingencies derived from unexpected outcomes of actions), but requires additional designer effort regarding the specification of strategies and is unable to guarantee optimal solutions. In contrast, runtime plan generation is able to explore a richer solution space and provide optimal solutions in some cases, but is more limited when dealing with uncertainty, and in-curs higher computational overheads. In this paper, we propose an approach to optimal adaptation plan generation for architecture-based self-adaptation via model checking of stochastic multiplayer games (SMGs). Our approach enables: (i) trade-off analysis among different qualities by means of utility functions and preferences, and (ii) explicit modeling of uncertainty in the outcome of adaptation actions and the behavior of the environment. Basing on the concepts embodied in the Rainbow framework for self-adaptation, we illustrate our approach in Znn.com, a case study that reproduces the infrastructure for a news website.},
  doi       = {10.1145/2695664.2695680},
  groups    = {acm},
  isbn      = {9781450331968},
  keywords  = {planning, probabilistic model checking, self-adaptation},
  location  = {Salamanca, Spain},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2695664.2695680},
}

@InProceedings{Cheng2006,
  author    = {Cheng, Shang-Wen and Garlan, David and Schmerl, Bradley},
  title     = {Architecture-Based Self-Adaptation in the Presence of Multiple Objectives},
  booktitle = {Proceedings of the 2006 International Workshop on Self-Adaptation and Self-Managing Systems},
  year      = {2006},
  series    = {SEAMS ’06},
  pages     = {2–8},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In the world of autonomic computing, the ultimate aim is to automate human tasks in system management to achieve high-level stakeholder objectives. One common approach is to capture and represent human expertise in a form executable by a computer. Techniques to capture such expertise in programs, scripts, or rule sets are effective to an extent. However, they are often incapable of expressing the necessary adaptation expertise and emulating the subtleties of trade-offs in high-level decision making. In this paper, we propose a new language of adaptation that is sufficiently expressive to capture the subtleties of choice, deriving its ontology from system administration tasks and its underlying formalism from utility theory.},
  doi       = {10.1145/1137677.1137679},
  groups    = {acm},
  isbn      = {1595934030},
  keywords  = {repair language, tactic, preference, strategy, utility, choice, self-adaptation, trade-off},
  location  = {Shanghai, China},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1137677.1137679},
}

@InProceedings{Rossi2018,
  author    = {Rossi, Davide and Poggi, Francesco and Ciancarini, Paolo},
  title     = {Dynamic High-Level Requirements in Self-Adaptive Systems},
  booktitle = {Proceedings of the 33rd Annual ACM Symposium on Applied Computing},
  year      = {2018},
  series    = {SAC ’18},
  pages     = {128–137},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Non-functional requirements are the main drivers behind the design choices that shape a software architecture. Self-adaptive systems blur the boundary between design-time and run-time allowing the dynamic re-shaping of a running system to better accommodate changes in the execution context or in stakeholders' expectations. When these expectations are related to aspects that influence architectural decisions this imply the ability to reconsider these decisions at runtime without the need of re-deployment (and associated system downtime). Existing research works on non-functional requirements in self-adaptive systems usually focus on operationalizable requirements, which entails development activities refining these changes into their run-time counterparts (such as SLAs). In this paper we present an approach that allows the autonomic re-shaping of the architecture of a self-adaptive system when high-level nonfunctional non-operationalizable requirements change. Changes in the requirements while the system is operational can trigger a re-evaluation of specific design choices resulting in reconfiguration activities that modify the system architecture. Our approach is based on a (semantic) runtime requirements model that can be automatically refined from high-level representations using model-to-model (M2M) transformations.},
  doi       = {10.1145/3167132.3167143},
  groups    = {acm},
  isbn      = {9781450351911},
  keywords  = {model-driven engineering, self-adaptive, requirements engineering},
  location  = {Pau, France},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3167132.3167143},
}

@InProceedings{Metzger2011,
  author    = {Metzger, Andreas},
  title     = {Towards Accurate Failure Prediction for the Proactive Adaptation of Service-Oriented Systems},
  booktitle = {Proceedings of the 8th Workshop on Assurances for Self-Adaptive Systems},
  year      = {2011},
  series    = {ASAS ’11},
  pages     = {18–23},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Furnishing service-oriented systems with self-adaptation capabilities allows those systems to become resilient against failures of their constituent services. Especially proactive adaptation capabilities, which strive to prevent the impacts of pending failures, provide significant benefits, such as avoiding costly compensation and repair activities. An important challenge is to trigger proactive adaptations accurately; firstly, because executing unnecessary proactive adaptations can lead to additional costs or failures that would not have arisen in the non-adapted systems; secondly, because missed proactive adaptation opportunities diminish the benefits of such adaptations. This paper discusses two directions along which accurate proactive adaptations can be achieved: (i) by improving the failure prediction techniques that trigger the adaptations (i.e., during design time); (ii) by dynamically estimating the accuracy of the predicted failures during the operation of the service-oriented system (i.e., during run-time). The discussion is backed by concrete examples of existing prediction techniques for service oriented systems and supported by experimental results.},
  doi       = {10.1145/2024436.2024442},
  groups    = {acm},
  isbn      = {9781450308533},
  keywords  = {self-adaptive systems, failure prediction, service-oriented computing},
  location  = {Szeged, Hungary},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2024436.2024442},
}

@InProceedings{Tanabe2017,
  author    = {Tanabe, Moeka and Tei, Kenji and Fukazawa, Yoshiaki and Honiden, Shinichi},
  title     = {Learning Environment Model at Runtime for Self-Adaptive Systems},
  booktitle = {Proceedings of the Symposium on Applied Computing},
  year      = {2017},
  series    = {SAC ’17},
  pages     = {1198–1204},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems alter their behavior in response to environmental changes to continually satisfy their requirements. Self-adaptive systems employ an environment model, which should be updated during runtime to maintain consistency with the real environment. Although some techniques have been proposed to learn environment model based on execution traces at the design time, these techniques are time consuming and consequently inappropriate for runtime learning. Herein, a technique using a stochastic gradient descent and the difference in the data acquired during the runtime is proposed as an efficient learning environment model. The computational time and accuracy of our technique are verified through study.},
  doi       = {10.1145/3019612.3019776},
  groups    = {acm},
  isbn      = {9781450344869},
  keywords  = {self-adaptive, learning, gradient descent},
  location  = {Marrakech, Morocco},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3019612.3019776},
}

@InProceedings{Riccobene2015,
  author    = {Riccobene, Elvinia and Scandurra, Patrizia},
  title     = {Formal Modeling Self-Adaptive Service-Oriented Applications},
  booktitle = {Proceedings of the 30th Annual ACM Symposium on Applied Computing},
  year      = {2015},
  series    = {SAC ’15},
  pages     = {1704–1710},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In the context of modern service-oriented applications, components must be able to autonomously adapt their behavior in response to rapidly changing environment and business conditions. Formal frameworks for modeling self-adaptive behavior of service-oriented components (SOCs) are critically required to assure quality properties. In this paper we show how SCA-ASM, a lightweight formal framework for modeling and executing service-oriented applications, can be used to express adaptive behavior of service components. We explain how modeling an SCAASM component able to monitor and react to environmental changes (context-awareness) and to internal changes (self-awareness), and present the operators for expressing and coordinating self-adaptive behaviors in a distributed setting.},
  doi       = {10.1145/2695664.2695772},
  groups    = {acm},
  isbn      = {9781450331968},
  keywords  = {formal modeling, self-adaptation, SCA-ASM, service-oriented applications},
  location  = {Salamanca, Spain},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2695664.2695772},
}

@InProceedings{Khorasani2019,
  author    = {Khorasani, Sobhan Omranian and Rellermeyer, Jan S. and Epema, Dick},
  title     = {Self-Adaptive Executors for Big Data Processing},
  booktitle = {Proceedings of the 20th International Middleware Conference},
  year      = {2019},
  series    = {Middleware ’19},
  pages     = {176–188},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The demand for additional performance due to the rapid increase in the size and importance of data-intensive applications has considerably elevated the complexity of computer architecture. In response, systems offer pre-determined behaviors based on heuristics and then expose a large number of configuration parameters for operators to adjust them to their particular infrastructure. Unfortunately, in practice this leads to a substantial manual tuning effort. In this work, we focus on one of the most impactful tuning decisions in big data systems: the number of executor threads. We first show the impact of I/O contention on the runtime of workloads and a simple static solution to reduce the number of threads for I/O-bound phases. We then present a more elaborate solution in the form of self-adaptive executors which are able to continuously monitor the underlying system resources and detect contentions. This enables the executors to tune their thread pool size dynamically at runtime in order to achieve the best performance. Our experimental results show that being adaptive can significantly reduce the execution time especially in I/O intensive applications such as Terasort and PageRank which see a 34% and 54% reduction in runtime.},
  doi       = {10.1145/3361525.3361545},
  groups    = {acm},
  isbn      = {9781450370097},
  keywords  = {Big Data, Apache Spark, Self-Adaptive Executors},
  location  = {Davis, CA, USA},
  numpages  = {13},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3361525.3361545},
}

@InProceedings{Paucar2019,
  author    = {Paucar, Luis H. Garcia and Bencomo, Nelly and Yuen, Kevin Kam Fung},
  booktitle = {Proceedings of the 34th ACM/SIGAPP Symposium on Applied Computing},
  title     = {ARRoW: AUtomatic RUntime REappraisal Of WEights for Self-Adaptation},
  year      = {2019},
  address   = {New York, NY, USA},
  pages     = {1584–1591},
  publisher = {Association for Computing Machinery},
  series    = {SAC ’19},
  abstract  = {Decision-making for self-adaptive systems (SAS) requires the runtime trade-off of multiple non-functional requirements (NFRs) and the costs-benefits analysis of the alternative solutions. Usually, it is required the specification of the weights (a.k.a. preferences) associated with the NFRs and decision-making strategies. These preferences are traditionally defined at design-time. [<u>Questions/Problems</u>] A big challenge is the need to deal with unsuitable preferences, based on empirical evidence available at runtime, and which may not agree anymore with previous assumptions. Therefore, new techniques are needed to systematically reassess the current preferences according to empirical evidence collected at runtime. [<u>Principal ideas/ results</u>] We present ARRoW (<u>A</u>utomatic <u>R</u>untime <u>R</u>eappraisal <u>o</u>f <u>W</u>eights) to support the dynamic update of preferences/weights associated with the NFRs and decision-making strategies in SAS, while taking into account the current levels of satisficement that NFRs can reach during the system's operation. [<u>Contribution</u>] To developed ARRoW, we have extended the Primitive Cognitive Network Process (P-CNP), a version of the Analytical Hierarchy Process (AHP), to enable the handling and update of weights during runtime. Specifically, in this paper, we show a formalization for the specification of the decision-making of a SAS in terms of NFRs, the design decisions and their corresponding weights as a P-CNP problem. We also report on how the P-CNP has been extended to be used at runtime. We show how the propagation of elements of P-CNP matrices is performed in such a way that the weights are updated to therefore, improve the levels of satisficement of the NFRs to better match the current environment during runtime. ARRoW leverages the Bayesian learning process underneath, which on the other hand, provides the mechanism to get access to evidence about the levels of satisficement of the NFRs. The experiments have been applied to a case study of the networking application domain where the decision-making has been improved.},
  doi       = {10.1145/3297280.3299743},
  groups    = {acm},
  isbn      = {9781450359337},
  keywords  = {non-functional properties, bayesian evidence, decision-making, AHP, uncertainty, runtime models, self-adaptation},
  location  = {Limassol, Cyprus},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3297280.3299743},
}

@InProceedings{David2005,
  author    = {David, Pierre-Charles and Ledoux, Thomas},
  title     = {WildCAT: A Generic Framework for Context-Aware Applications},
  booktitle = {Proceedings of the 3rd International Workshop on Middleware for Pervasive and Ad-Hoc Computing},
  year      = {2005},
  series    = {MPAC ’05},
  pages     = {1–7},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {We present WildCAT, an extensible Java framework to ease the creation of context-aware applications. WildCAT provides a simple yet powerful dynamic model to represent an application's execution context. The context information can be accessed by application programmers through two complimentary interfaces: synchronous requests (pull mode) and asynchronous notifications (push mode). Internally, WildCAT is designed as a framework supporting different levels of extensions, from the simple configuration of the default generic implementation to completely new implementations tailored to specific needs. A given application can mix different implementations for different aspects of its context while only depending on WildCAT's simple and unified API.},
  doi       = {10.1145/1101480.1101483},
  groups    = {acm},
  isbn      = {1595932682},
  keywords  = {context-awareness, self-adaptive applications, framework},
  location  = {Grenoble, France},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1101480.1101483},
}

@InProceedings{Cardellini2015,
  author    = {Cardellini, Valeria and Grassi, Vincenzo and Lo Presti, Francesco and Nardelli, Matteo},
  title     = {Distributed QoS-Aware Scheduling in Storm},
  booktitle = {Proceedings of the 9th ACM International Conference on Distributed Event-Based Systems},
  year      = {2015},
  series    = {DEBS ’15},
  pages     = {344–347},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Storm is a distributed stream processing system that has recently gained increasing interest. We extend Storm to make it suitable to operate in a geographically distributed and highly variable environment such as that envisioned by the convergence of Fog computing, Cloud computing, and Internet of Things.},
  doi       = {10.1145/2675743.2776766},
  groups    = {acm},
  isbn      = {9781450332866},
  keywords  = {resource management, storm, data streaming, distributed event processing, self-adaptive scheduler},
  location  = {Oslo, Norway},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2675743.2776766},
}

@InProceedings{Wu2009,
  author    = {Wu, Manna and Zhou, Bo and Shi, Wei},
  title     = {A Self-Adaptive Test Framework for Concurrent Programs},
  booktitle = {Proceedings of the International Conference on Management of Emergent Digital EcoSystems},
  year      = {2009},
  series    = {MEDES ’09},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this paper, we describe a new test framework for concurrent programs. Testing on concurrent programs remains difficult due to the non-deterministic nature of concurrent programs. Approaches are proposed to surmount this difficulty. However, few of them are really effective. A new self-adaptive test framework is proposed to alleviate this problem, since it is impossible to solve it completely. This framework which is based on the study of concurrent test points tests each concurrent program like a circuit, while concurrent test points like components of the circuit. The original reason of concurrent bugs stems from the resource sharing among multiple processes or threads. Therefore, a controller is introduced in the framework to increasingly intensify resource competition via test data controlling, aiming to trigger concurrent bugs' emerging sooner once they exist.},
  articleno = {72},
  doi       = {10.1145/1643823.1643911},
  groups    = {acm},
  isbn      = {9781605588292},
  keywords  = {self-adaptive, concurrent bugs, concurrent test point},
  location  = {France},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1643823.1643911},
}

@InProceedings{Shin2019,
  author    = {Shin, Yong-Jun and Baek, Young-Min and Jee, Eunkyoung and Bae, Doo-Hwan},
  title     = {Data-Driven Environment Modeling for Adaptive System-of-Systems},
  booktitle = {Proceedings of the 34th ACM/SIGAPP Symposium on Applied Computing},
  year      = {2019},
  series    = {SAC ’19},
  pages     = {2044–2047},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Since a System-of-Systems (SoS) is constructed and managed under a complex and dynamic environment, self-adaptability has become one of the key capabilities that SoSs should have. To design an adaptive SoS, analyzing and modeling the environment are important. Studies on self-adaptive systems (SAS) have proposed various analysis and design approaches to deal with dynamic environment and operating conditions. However, most existing approaches require a considerable amount of domain experts' knowledge about the operating environment without specific and practical guidelines, so there still remain many challenges for engineers to analyze and design an adaptive SoS. In this study, we propose a data-driven method of generating environment models for adaptive SoS. To guide the analysis and understanding of the environment, we propose a metamodel that encompasses characteristics of the dynamic environment. Based on the metamodel, an environment model is generated from historical data for effective analysis of the SoS's complex environment. As a case study, we apply our method to a traffic environment modeling with real data. We show that our proposed method can practically help engineers generate environment models with concrete features that are necessary for adaptive SoS modeling by considering the environment as a major entity for SAS analysis and design.},
  doi       = {10.1145/3297280.3297618},
  groups    = {acm},
  isbn      = {9781450359337},
  keywords  = {adaptive system-of-systems, data-driven analysis, environment modeling, modeling methodology, smart traffic system, self-adaptive system},
  location  = {Limassol, Cyprus},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3297280.3297618},
}

@InProceedings{Vargas2017,
  author    = {Vargas, Javier Soto and Moreno, Juan Manuel and Madrenas, Jordi and Cabestany, Joan},
  title     = {Self-Adaptive Hardware Architecture with Parallel Processing Capabilities and Dynamic Reconfiguration},
  booktitle = {Proceedings of the 16th Workshop on Adaptive and Reflective Middleware},
  year      = {2017},
  series    = {ARM ’17},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper describes a new self-adaptive hardware architecture with fault tolerance capabilities and a development system that allows the creation of applications. This bioinspired architecture is based on an array of cells with capacity for parallel processing, which implements in a distributed way self-adaptive capabilities, like self-routing, self-placement and runtime self-configuration. This cell array together with a component-level routing constitutes a SANE (Self-Adaptive Networked Entity). An integrated development environment and a physical prototype based on two FPGA boards has been built in order to assess the features of the proposed architecture.},
  articleno = {4},
  doi       = {10.1145/3152881.3152885},
  groups    = {acm},
  isbn      = {9781450351683},
  keywords  = {self-configuration, self-adaptation, self-routing, multicomputer, dynamic reconfiguration, self-placement, fault tolerance, MIMD},
  location  = {Las Vegas, Nevada},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3152881.3152885},
}

@InProceedings{Sironi2012,
  author    = {Sironi, Filippo and Bartolini, Davide B. and Campanoni, Simone and Cancare, Fabio and Hoffmann, Henry and Sciuto, Donatella and Santambrogio, Marco D.},
  title     = {Metronome: Operating System Level Performance Management via Self-Adaptive Computing},
  booktitle = {Proceedings of the 49th Annual Design Automation Conference},
  year      = {2012},
  series    = {DAC ’12},
  pages     = {856–865},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this paper, we present Metronome: a framework to enhance commodity operating systems with self-adaptive capabilities. The Metronome framework features two distinct components: Heart Rate Monitor (HRM) and Performance--Aware Fair Scheduler (PAFS). HRM is an active monitoring infrastructure implementing the observe phase of a self--adaptive computing system Observe--Decide--Act (ODA) control loop, while PAFS is an adaptation policy implementing the decide and act phases of the control loop. Metronome was designed and developed looking towards multi--core processors; therefore, its experimental evaluation has been carried on with the PARSEC 2.1 benchmark suite.},
  doi       = {10.1145/2228360.2228514},
  groups    = {acm},
  isbn      = {9781450311991},
  keywords  = {performance management, operating systems, self-adaptive computing},
  location  = {San Francisco, California},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2228360.2228514},
}

@InProceedings{Michiels2002,
  author    = {Michiels, Sam and Desmet, Lieven and Janssens, Nico and Mahieu, Tom and DistriNet, Pierre Verbaeten},
  title     = {Self-Adapting Concurrency: The DMonA Architecture},
  booktitle = {Proceedings of the First Workshop on Self-Healing Systems},
  year      = {2002},
  series    = {WOSS ’02},
  pages     = {43–48},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A major problem in todays Internet servers is that they suffer from extreme peak loads. Traditional (operating) systems are designed to perform extremely well under heavy load conditions. However, it is not feasible to over-provision resources only to support peak loads. A key factor to deal with such peak loads is internal concurrency control. We have developed a component based architecture (DMonA), which allows to adapt internal concurrency according to measured throughput. Performance tests show that DMonA outperforms traditional approaches, while it is still very manageable thanks to the underlying DiPS component architecture.},
  doi       = {10.1145/582128.582137},
  groups    = {acm},
  isbn      = {1581136099},
  keywords  = {component architecture, self-adaptation, concurrency},
  location  = {Charleston, South Carolina},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/582128.582137},
}

@InProceedings{Garlan2004,
  author    = {Garlan, David and Poladian, Vahe and Schmerl, Bradley and Sousa, Jo\~{a}o Pedro},
  title     = {Task-Based Self-Adaptation},
  booktitle = {Proceedings of the 1st ACM SIGSOFT Workshop on Self-Managed Systems},
  year      = {2004},
  series    = {WOSS ’04},
  pages     = {54–57},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Recently there has been increasing interest in developing systems that can adapt dynamically to cope with changing environmental conditions and unexpected system errors. Most efforts for achieving self-adaptation have focused on the mechanisms for detecting opportunities for improvement and then taking appropriate action. However, such mechanisms beg the question: what is the system trying to achieve? In a given situation there may be many possible adaptations, and knowing which one to pick is a difficult question. In this paper we advocate the use of explicit representation of user task as a critical element in addressing this missing link.},
  doi       = {10.1145/1075405.1075416},
  groups    = {acm},
  isbn      = {1581139896},
  keywords  = {self-adaptation, software architecture, self-management, utility-based optimization, task-aware computing},
  location  = {Newport Beach, California},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1075405.1075416},
}

@InProceedings{DiNitto2012,
  author    = {Di Nitto, E. and Meil\"{a}nder, D. and Gorlatch, S. and Metzger, A. and Psaier, H. and Dustdar, S. and Razavian, M. and Tamburri, D. A. and Lago, P.},
  title     = {Research Challenges on Engineering Service-Oriented Applications},
  booktitle = {Proceedings of the First International Workshop on European Software Services and Systems Research: Results and Challenges},
  year      = {2012},
  series    = {S-Cube ’12},
  pages     = {14–20},
  publisher = {IEEE Press},
  abstract  = {This paper focuses on providing an overview of the research challenges that have been identified toward the end of the S-Cube network in the area of service engineering. These challenges concern the need for agility and dynamicity of the development process for service-based applications, the importance of focusing on proper approaches to support migration of legacy application into service-based applications and the role of humans and of teams of humans in service-based applications.},
  doi       = {10.1109/S-Cube.2012.6225500},
  groups    = {acm},
  isbn      = {9781467318075},
  keywords  = {human-provided services, agile service networks, evolution, agile approaches, self-adaptation, engineering of service-based applications, real-time applications},
  location  = {Zurich, Switzerland},
  numpages  = {7},
}

@Article{Chen2018a,
  author     = {Chen, Tao and Bahsoon, Rami and Yao, Xin},
  title      = {A Survey and Taxonomy of Self-Aware and Self-Adaptive Cloud Autoscaling Systems},
  journal    = {ACM Comput. Surv.},
  year       = {2018},
  volume     = {51},
  number     = {3},
  month      = jun,
  issn       = {0360-0300},
  abstract   = {Autoscaling system can reconfigure cloud-based services and applications, through various configurations of cloud software and provisions of hardware resources, to adapt to the changing environment at runtime. Such a behavior offers the foundation for achieving elasticity in a modern cloud computing paradigm. Given the dynamic and uncertain nature of the shared cloud infrastructure, the cloud autoscaling system has been engineered as one of the most complex, sophisticated, and intelligent artifacts created by humans, aiming to achieve self-aware, self-adaptive, and dependable runtime scaling. Yet the existing Self-aware and Self-adaptive Cloud Autoscaling System (SSCAS) is not at a state where it can be reliably exploited in the cloud. In this article, we survey the state-of-the-art research studies on SSCAS and provide a comprehensive taxonomy for this field. We present detailed analysis of the results and provide insights on open challenges, as well as the promising directions that are worth investigated in the future work of this area of research. Our survey and taxonomy contribute to the fundamentals of engineering more intelligent autoscaling systems in the cloud.},
  address    = {New York, NY, USA},
  articleno  = {61},
  doi        = {10.1145/3190507},
  groups     = {acm},
  issue_date = {July 2018},
  keywords   = {distributed systems, auto-scaling, self-aware systems, Cloud computing, resources provisioning, self-adaptive systems},
  numpages   = {40},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3190507},
}

@InProceedings{D’Ippolito2015,
  author    = {D’Ippolito, Nicolas and Braberman, Victor and Sykes, Daniel and Uchitel, Sebastian},
  title     = {Robust Degradation and Enhancement of Robot Mission Behaviour in Unpredictable Environments},
  booktitle = {Proceedings of the 1st International Workshop on Control Theory for Software Engineering},
  year      = {2015},
  series    = {CTSE 2015},
  pages     = {26–33},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Temporal logic based approaches that automatically generate controllers have been shown to be useful for mission level planning of motion, surveillance and navigation, among others. These approaches critically rely on the validity of the environment models used for synthesis. Yet simplifying assumptions are inevitable to reduce complexity and provide mission-level guarantees; no plan can guarantee results in a model of a world in which everything can go wrong. In this paper, we show how our approach, which reduces reliance on a single model by introducing a stack of models, can endow systems with incremental guarantees based on increasingly strengthened assumptions, supporting graceful degradation when the environment does not behave as expected, and progressive enhancement when it does.},
  doi       = {10.1145/2804337.2804342},
  groups    = {acm},
  isbn      = {9781450338141},
  keywords  = {Self-adaptive Systems, Controller Synthesis},
  location  = {Bergamo, Italy},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2804337.2804342},
}

@InProceedings{Gamez2012,
  author    = {Gamez, Nadia and Romero, Daniel and Fuentes, Lidia and Rouvoy, Romain and Duchien, Laurence},
  title     = {Constraint-Based Self-Adaptation of Wireless Sensor Networks},
  booktitle = {Proceedings of the 2nd International Workshop on Adaptive Services for the Future Internet and 6th International Workshop on Web APIs and Service Mashups},
  year      = {2012},
  series    = {WAS4FI-Mashups ’12},
  pages     = {20–27},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In recent years, the Wireless Sensor Networks (WSNs) have become a useful mechanism to monitor physical phenomena in environments. The sensors that make part of these long-lived networks have to be reconfigured according to context changes in order to preserve the operation of the network. Such reconfigurations require to consider the distributed nature of the sensor nodes as well as their resource scarceness. Therefore, self-adaptations for WSNs have special requirements comparing with traditional information systems. In particular, the reconfiguration of the WSN requires a trade-off between critical dimensions for this kind of networks and devices, such as resource consumption or reconfiguration cost. Thus, in this paper, we propose to exploit Constraint-Satisfaction Problem (CSP) techniques in order to find a suitable configuration for self-adapting WSNs, modelled using a Dynamic Software Product Line (DSPL), when the context changes. We exploit CSP modeling to find a compromise between contradictory dimensions. To illustrate our approach, we use an Intelligent Transportation System scenario. This case study enables us to show the advantages of obtaining suitable and optimized configurations for self-adapting WSNs.},
  doi       = {10.1145/2377836.2377842},
  groups    = {acm},
  isbn      = {9781450315661},
  keywords  = {dynamic software product lines, self-adaptation, wireless sensor networks, constraint-satisfaction problem},
  location  = {Bertinoro, Italy},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2377836.2377842},
}

@InProceedings{Vromant2011,
  author    = {Vromant, Pieter and Weyns, Danny and Malek, Sam and Andersson, Jesper},
  title     = {On Interacting Control Loops in Self-Adaptive Systems},
  booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2011},
  series    = {SEAMS ’11},
  pages     = {202–207},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Control loops in self-adaptive systems are typically conceived as a sequence of four computations: Monitor-Analyze-Plan-Execute (MAPE). During the development of a traffic monitoring system with support for self-healing, we have noticed that simple MAPE loops are not sufficient to deal with the more complex failure scenarios. To manage the adaptations in these scenarios, we extend MAPE loops with support for two types of coordination. First, we introduce support for intra-loop coordination enabling MAPE computations within one loop to coordinate with one another. Intra-loop coordination allows the execution of multiple sub-loops within one control loop. Second, we introduce support for inter-loop coordination enabling MAPE computations across multiple loops to coordinate with one another. Inter-loop coordination allows the MAPE computations of different loops to coordinate the various phases of adaptations. We show how we used the extensions to support self-healing in the traffic monitoring system. We discuss an implementation framework that supports coordination of MAPE loops, and from our experiences offer recommendations for future research in this area.},
  doi       = {10.1145/1988008.1988037},
  groups    = {acm},
  isbn      = {9781450305754},
  keywords  = {coordination, mape, control loop, self-adaptation},
  location  = {Waikiki, Honolulu, HI, USA},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988037},
}

@InProceedings{Maurel2012,
  author    = {Maurel, Yoann and Bottaro, Andr\'{e} and Kopetz, Radu and Attouchi, Koutheir},
  title     = {Adaptive Monitoring of End-User OSGi-Based Home Boxes},
  booktitle = {Proceedings of the 15th ACM SIGSOFT Symposium on Component Based Software Engineering},
  year      = {2012},
  series    = {CBSE ’12},
  pages     = {157–166},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In-production performance monitoring is required for dynamic and modular systems open to third-party applications such as the OSGi-based smart home box that home actors envision today. Existing approaches are not suitable for inproduction monitoring as they generally induce a strong persistent overhead. This paper proposes a progressive and localized monitoring system that is able to dynamically activate/deactivate and tune the accuracy of monitoring mechanisms depending on detected performance issues. In particular, it proposes to build a proxy-aware service registry in order to inject proxies on-the-fly without stopping bundles and it advocates the use of localized sampling. Our evaluation shows that the overhead of our monitoring system is only 2% when idle and comparable with traditional systems when completely active(around 20%).},
  doi       = {10.1145/2304736.2304763},
  groups    = {acm},
  isbn      = {9781450313452},
  keywords  = {proxy, monitoring, autonomic computing, smart home, sampling, osgi, self-adaptive, soc},
  location  = {Bertinoro, Italy},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2304736.2304763},
}

@InProceedings{Huber2011,
  author    = {Huber, Nikolaus and Brosig, Fabian and Kounev, Samuel},
  title     = {Model-Based Self-Adaptive Resource Allocation in Virtualized Environments},
  booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2011},
  series    = {SEAMS ’11},
  pages     = {90–99},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The adoption of virtualization and Cloud Computing technologies promises a number of benefits such as increased flexibility, better energy efficiency and lower operating costs for IT systems. However, highly variable workloads make it challenging to provide quality-of-service guarantees while at the same time ensuring efficient resource utilization. To avoid violations of service-level agreements (SLAs) or inefficient resource usage, resource allocations have to be adapted continuously during operation to reflect changes in application workloads. In this paper, we present a novel approach to self-adaptive resource allocation in virtualized environments based on online architecture-level performance models. We present a detailed case study of a representative enterprise application, the new SPECjEnterprise2010 benchmark, deployed in a virtualized cluster environment. The case study serves as a proof-of-concept demonstrating the effectiveness and practical applicability of our approach.},
  doi       = {10.1145/1988008.1988021},
  groups    = {acm},
  isbn      = {9781450305754},
  keywords  = {virtualization, self-adaptive, resource management},
  location  = {Waikiki, Honolulu, HI, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988021},
}

@InProceedings{Marshall2018,
  author    = {Marshall, Allen and Jahan, Sharmin and Gamble, Rose},
  title     = {Toward Evaluating the Impact of Self-Adaptation on Security Control Certification},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {149–160},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Certifying security controls is required for information systems that are either federally maintained or maintained by a US government contractor. As described in the NIST SP800-53, certified and accredited information systems are deployed with an acceptable security threat risk. Self-adaptive information systems that allow functional and decision-making changes to be dynamically configured at runtime may violate security controls increasing the risk of security threat to the system. Methods are needed to formalize the process of certification for security controls by expressing and verifying the functional and non-functional requirements to determine what risks are introduced through self-adaptation. We formally express the existence and behavior requirements of the mechanisms needed to guarantee the security controls' effectiveness using audit controls on program example. To reason over the risk of security control compliance given runtime self-adaptations, we use the KIV theorem prover on the functional requirements, extracting the verification concerns and workflow associated with the proof process. We augment the MAPE-K control loop planner with knowledge of the mechanisms that satisfy the existence criteria expressed by the security controls. We compare self-adaptive plans to assess their risk of security control violation prior to plan deployment.},
  doi       = {10.1145/3194133.3194139},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {security certification, self-adaptation, risk analysis},
  location  = {Gothenburg, Sweden},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194139},
}

@Article{Faniyi2015,
  author     = {Faniyi, Funmilade and Bahsoon, Rami},
  title      = {A Systematic Review of Service Level Management in the Cloud},
  journal    = {ACM Comput. Surv.},
  year       = {2015},
  volume     = {48},
  number     = {3},
  month      = dec,
  issn       = {0360-0300},
  abstract   = {Cloud computing make it possible to flexibly procure, scale, and release computational resources on demand in response to workload changes. Stakeholders in business and academia are increasingly exploring cloud deployment options for their critical applications. One open problem is that service level agreements (SLAs) in the cloud ecosystem are yet to mature to a state where critical applications can be reliably deployed in clouds. This article systematically surveys the landscape of SLA-based cloud research to understand the state of the art and identify open problems. The survey is particularly aimed at the resource allocation phase of the SLA life cycle while highlighting implications on other phases. Results indicate that (i) minimal number of SLA parameters are accounted for in most studies; (ii) heuristics, policies, and optimisation are the most commonly used techniques for resource allocation; and (iii) the monitor-analysis-plan-execute (MAPE) architecture style is predominant in autonomic cloud systems. The results contribute to the fundamentals of engineering cloud SLA and their autonomic management, motivating further research and industrial-oriented solutions.},
  address    = {New York, NY, USA},
  articleno  = {43},
  doi        = {10.1145/2843890},
  groups     = {acm},
  issue_date = {February 2016},
  keywords   = {survey, self-adaptive, SLA, Cloud computing, autonomic, software architecture, QoS, self-awareness},
  numpages   = {27},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2843890},
}

@InProceedings{Lorenzoli2007,
  author    = {Lorenzoli, Davide and Tosi, Davide and Venticinque, Salvatore and Micillo, Rosa Anna},
  title     = {Designing Multi-Layers Self-Adaptive Complex Applications},
  booktitle = {Fourth International Workshop on Software Quality Assurance: In Conjunction with the 6th ESEC/FSE Joint Meeting},
  year      = {2007},
  series    = {SOQUA ’07},
  pages     = {70–77},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The impossibility of statically determining the behavior of complex systems that interact at runtime with heterogeneous devices and remote entities, may lead to unexpected system failures and performance degradation. Recently, self-adaptive applications have been recognized as viable solutions for dealing with systems where size and complexity increase beyond the ability of humans. However, self-adaptive solutions have been always studied in isolation, only involving single layers of the system (e.g. operative system, middleware, firmware, hardware). In this paper we discuss our novel idea of multi-layers deep adaptability of complex systems. We present an integrated approach for designing and coordinating applications with three-layers of self-adaptation. The solution proposed is based on specialized sense-plan-act control loops that interact each others to monitor both specific parts and also the global behavior of the system. These control loops sense unexpected behaviors that can compromise the system, then diagnose the system layer that needs an adaptation action, and finally act the proper adaptation strategy to overcome the revealed problems without user intervention. We validate the approach with a SOA-based application, the Virtual Tour Guide, designed with three-layers self-adaptive abilities in order to overcome functional/non-functional problems that can derive from the integration of heterogeneous and remote third-party services.},
  doi       = {10.1145/1295074.1295088},
  groups    = {acm},
  isbn      = {9781595937247},
  keywords  = {mobile devices, distributed systems, self-adaptive systems, service-oriented applications, context awareness},
  location  = {Dubrovnik, Croatia},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1295074.1295088},
}

@InProceedings{Gerasimou2014,
  author    = {Gerasimou, Simos and Calinescu, Radu and Banks, Alec},
  title     = {Efficient Runtime Quantitative Verification Using Caching, Lookahead, and Nearly-Optimal Reconfiguration},
  booktitle = {Proceedings of the 9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2014},
  series    = {SEAMS 2014},
  pages     = {115–124},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems used in safety-critical and business-critical applications must continue to comply with strict non-functional requirements while evolving in order to adapt to changing workloads, environments, and goals. Runtime quantitative verification (RQV) has been proposed as an effective means of enhancing self-adaptive systems with this capability. However, RQV frequently fails to provide the fast response times and low computation overheads required by real-world self-adaptive systems. In this paper, we investigate how three techniques, namely caching, lookahead and nearly-optimal reconfiguration, and combinations thereof, can help address this limitation. Extensive experiments in a case study involving the RQV-driven self-adaptation of an unmanned underwater vehicle indicate that these techniques can lead to significant reductions in RQV response times and computation overheads.},
  doi       = {10.1145/2593929.2593932},
  groups    = {acm},
  isbn      = {9781450328647},
  keywords  = {probabilistic model checking, quantitative verification, self-adaptation, continuous-time Markov chains},
  location  = {Hyderabad, India},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2593929.2593932},
}

@InProceedings{Portocarrero2016,
  author    = {Portocarrero, Jes\'{u}s M. T. and Delicato, Fl\'{a}via C. and Pires, Paulo F. and Rodrigues, Taniro C. and Batista, Thais V.},
  title     = {SAMSON: Self-Adaptive Middleware for Wireless Sensor Networks},
  booktitle = {Proceedings of the 31st Annual ACM Symposium on Applied Computing},
  year      = {2016},
  series    = {SAC ’16},
  pages     = {1315–1322},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper introduces SAMSON (Self-Adaptive Middleware for wireless SensOr Networks), an instance of a Reference Architecture (RA) that was designed to manage wireless sensor networks (WSN) in an autonomic way by enabling runtime adaptation of nodes' behavior according to context changes, application requirements, and predefined adaptation policies. In this paper, we propose a process, supported by model-driven transformations to generate SAMSON from the RA specification. The model-driven transformations are used to map each element of the RA specification to software components and to generate the source code to be deployed in a target WSN platform. We evaluate our proposal by presenting four application scenarios where SAMSON was employed to optimize the network lifetime and to react to runtime events according to adaptation policies previously defined by software architects and network administrators. Evaluation results shown that SAMSON was able to dynamically adapt the behavior of sensor nodes, to efficiently use the hardware resources, and to increase the WSN lifetime.},
  doi       = {10.1145/2851613.2851766},
  groups    = {acm},
  isbn      = {9781450337397},
  keywords  = {middleware, wireless sensor networks, self-adaptive systems},
  location  = {Pisa, Italy},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2851613.2851766},
}

@InProceedings{Colson2016,
  author    = {Colson, Kevin and Dupuis, Robin and Montrieux, Lionel and Hu, Zhenjiang and Uchitel, Sebasti\'{a}n and Schobbens, Pierre-Yves},
  title     = {Reusable Self-Adaptation through Bidirectional Programming},
  booktitle = {Proceedings of the 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2016},
  series    = {SEAMS ’16},
  pages     = {4–15},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In self-adaptive systems, an adaptation strategy can apply to several implementations of a target system. Reusing this strategy requires models of the target system that are independent of its implementation. In particular, configuration files must be transformed into abstract configurations, but correctly synchronizing these two representations is not trivial. We propose an approach that uses putback-based bidirectional programming to guarantee that this synchronization is correct by construction. We demonstrate the correctness of our approach and how it handles typical features of configuration files, such as implicit default values and context overriding. We also show that our approach can be used to migrate configuration files from one implementation to another.

We illustrate our approach with a case study, where we use the same abstract model to adapt two web server implementations. For each implementation, we provide a bidirectional program that correctly synchronizes the configuration file with an abstract model of the configuration. A first scenario demonstrates that the same changes on the abstract model produce, for each implementation, a new configuration that correctly reflects the changes made to the abstract model, without side effects. A second scenario validates the migration of a configuration file from the format used by one web server implementation to another.},
  doi       = {10.1145/2897053.2897055},
  groups    = {acm},
  isbn      = {9781450341875},
  keywords  = {bidirectional programming, model abstraction, self-adaptation, synchronization},
  location  = {Austin, Texas},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2897053.2897055},
}

@InProceedings{Cugola2012,
  author    = {Cugola, Gianpaolo and Ghezzi, Carlo and Pinto, Leandro Sales and Tamburrelli, Giordano},
  title     = {SelfMotion: A Declarative Language for Adaptive Service-Oriented Mobile Apps},
  booktitle = {Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering},
  year      = {2012},
  series    = {FSE ’12},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this demo we present SelfMotion: a declarative language and a run-time system conceived to support the development of adaptive, mobile applications, built as compositions of ad-hoc components, existing services and third party applications. The advantages of the approach and the adaptive capabilities of SelfMotion are demonstrated in the demo by designing and executing a mobile application inspired by an existing, worldwide distributed, mobile application.},
  articleno = {7},
  doi       = {10.1145/2393596.2393602},
  groups    = {acm},
  isbn      = {9781450316149},
  keywords  = {declarative orchestration language, mobile applications, self-adaptive systems},
  location  = {Cary, North Carolina},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2393596.2393602},
}

@InProceedings{Filieri2011,
  author    = {Filieri, Antonio},
  title     = {QoS Verification and Model Tuning @ Runtime},
  booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
  year      = {2011},
  series    = {ESEC/FSE ’11},
  pages     = {408–411},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  doi       = {10.1145/2025113.2025176},
  groups    = {acm},
  isbn      = {9781450304436},
  keywords  = {runtime verification, self-adaptive, parameter tuning},
  location  = {Szeged, Hungary},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2025113.2025176},
}

@InProceedings{Weyns2010,
  author    = {Weyns, Danny and Malek, Sam and Andersson, Jesper},
  title     = {FORMS: A Formal Reference Model for Self-Adaptation},
  booktitle = {Proceedings of the 7th International Conference on Autonomic Computing},
  year      = {2010},
  series    = {ICAC ’10},
  pages     = {205–214},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive software systems are an emerging class of systems that adjust their behavior at runtime to achieve certain functional or quality of service objectives. The construction of such systems has shown to be significantly more challenging than traditional systems, partly because researchers and practitioners have been struggling with the lack of a precise method of describing, comparing, and evaluating alternative architectural choices. In this paper, we introduce a reference model, entitled FOrmal Reference Model for Self-adaptation (FORMS), which intends to alleviate this pressing issue. FORMS consists of a small number of formally specified modeling primitives that correspond to the key variation points within self-adaptive software systems, and a set of relationships that guide their composition. We present our experiences with applying FORMS to several existing systems, which not only demonstrates its ability to precisely illuminate their underlying characteristics, but also its potential as a method of rigorously specifying architectural patterns for this domain.},
  doi       = {10.1145/1809049.1809078},
  groups    = {acm},
  isbn      = {9781450300742},
  keywords  = {z specification, reference model, self-adaptive systems},
  location  = {Washington, DC, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1809049.1809078},
}

@InProceedings{Park2016,
  author    = {Park, Soojin and Park, Young B.},
  title     = {ITE Arbitrator: A Reference Architecture Framework for Sustainable IT Ecosystems},
  booktitle = {Proceedings of the 4th International Workshop on Software Engineering for Systems-of-Systems},
  year      = {2016},
  series    = {SESoS ’16},
  pages     = {25–31},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {As new IT systems and devices pervade all aspects of human routines, several new paradigms have recognized groups of IT systems as forming an ecosystem. As a result, the term "IT ecosystem" has been coined. Each individual system participating in an IT ecosystem has, to a varying degree, autonomy. The ultimate goal of participating systems is to satisfy the global goal of the entire IT ecosystem in which they are participating. In order to maintain autonomy and controllability over an IT ecosystem through environmental changes, orchestration strategies must be invented and implemented. In this paper, we propose a reference orchestration architecture framework, which we call ITE Arbitrator, to support IT ecosystems in accomplishing the goals of individual participant systems while simultaneously achieving system-wide goals. ITE Arbitrator provides a mechanism to decide on an adaptation strategy with an optimal configuration of available systems to satisfy local constraints while achieving its global goal. We use the detailed simulation example of an unmanned forest management IT ecosystem to show how the proposed framework orchestrates inter-system interaction against environmental changes and sustains stable service.},
  doi       = {10.1145/2897829.2897834},
  groups    = {acm},
  isbn      = {9781450341721},
  keywords  = {IT ecosystems, orchestration, self-adaptive systems, system of systems},
  location  = {Austin, Texas},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2897829.2897834},
}

@InProceedings{Feather1998,
  author    = {Feather, M. S. and Fickas, S. and Van Lamsweerde, A. and Ponsard, C.},
  title     = {Reconciling System Requirements and Runtime Behavior},
  booktitle = {Proceedings of the 9th International Workshop on Software Specification and Design},
  year      = {1998},
  series    = {IWSSD ’98},
  pages     = {50},
  address   = {USA},
  publisher = {IEEE Computer Society},
  abstract  = {This paper considers the problem of system deviations from requirements specifications. Such deviations may arise from lack of anticipation of possible behaviors of environment agents at specification time, or from evoking conditions in this environment. We discuss an architecture and a development process for monitoring system requirements at runtime to reconcile the requirements and the system's behavior. This process is deployed on three scenarios of requirements-execution reconciliation for the Meeting Scheduler system. The work builds on our previous work on goal-driven requirements engineering and on runtime requirements monitoring.},
  doi       = {10.1109/IWSSD.1998.667919},
  groups    = {acm},
  isbn      = {0818684399},
  keywords  = {inconsistency management, obstacles, Self-adapting systems, system customization., deviation analysis, requirements monitoring, goal-driven requirements engineering},
  numpages  = {10},
}

@InProceedings{Alia2010,
  author    = {Alia, Mourad and Lacoste, Marc and He, Ruan and Eliassen, Frank},
  title     = {Putting Together QoS and Security in Autonomic Pervasive Systems},
  booktitle = {Proceedings of the 6th ACM Workshop on QoS and Security for Wireless and Mobile Networks},
  year      = {2010},
  series    = {Q2SWinet ’10},
  pages     = {19–28},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Current pervasive systems tend to consider security and QoS separately, ignoring the influence of each aspect on the other. This paper presents an adaptation model based on selection of component compositions enabling to capture dynamic and fine-grained trade-offs between both QoS and security in those systems. The model is multi-constraints and utility-based, and takes into account computing resources, the perceived risk level, and user preferences. We illustrate through a case study of a typical Beyond 3G adaptive multimedia streaming service how the model may be applied to find the right balance between different QoS and security dimensions.},
  doi       = {10.1145/1868630.1868634},
  groups    = {acm},
  isbn      = {9781450302753},
  keywords  = {security, qos, self-adaptation, autonomic computing, software composition},
  location  = {Bodrum, Turkey},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1868630.1868634},
}

@InProceedings{Mirandola2019,
  author    = {Mirandola, Raffaela and Riccobene, Elvinia and Scandurra, Patrizia},
  title     = {Self-Accounting in Architecture-Based Self-Adaptation},
  booktitle = {Proceedings of the 13th European Conference on Software Architecture - Volume 2},
  year      = {2019},
  series    = {ECSA ’19},
  pages     = {14–17},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper proposes a work-in-progress approach regarding qualities of the managing layer in architecture-based self-adaptation. In particular, we establish the notion of self-accounting as self-* property and we present an inductive method, based on the structure of the MAPE pattern of the adaptation layer, to evaluate the cost of the adaptation logic in terms of latency time and availability of the managing system. We also show how the MSL (MAPE Specification Language), a language for modeling the adaptation layer in terms of MAPE patterns, has been extended to annotate MAPE components with values for these quality properties, so allowing the computation of the cost function and endowing an adaptation layer with a value for its self-accounting property.},
  doi       = {10.1145/3344948.3344957},
  groups    = {acm},
  isbn      = {9781450371421},
  keywords  = {self-adapting architectures, self-accounting, MAPE patterns},
  location  = {Paris, France},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3344948.3344957},
}

@InProceedings{Gerostathopoulos2018,
  author    = {Gerostathopoulos, Ilias and Prehofer, Christian and Bures, Tomas},
  title     = {Adapting a System with Noisy Outputs with Statistical Guarantees},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {58–68},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Many complex systems are intrinsically stochastic in their behavior which complicates their control and optimization. Current self-adaptation and self-optimization approaches are not tailored to systems that have (i) complex internal behavior that is unrealistic to model explicitly, (ii) noisy outputs, (iii) high cost of bad adaptation decisions, i.e. systems that are both hard and risky to adapt at runtime. In response, we propose to model the system to be adapted as black box and apply state-of-the-art optimization techniques combined with statistical guarantees. Our main contribution is a framework that combines runtime optimization with guarantees obtained from statistical testing and with a method for handling cost of bad adaptation decisions. We evaluate the feasibility of our approach by applying it on an existing traffic navigation self-adaptation exemplar.},
  doi       = {10.1145/3194133.3194152},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {statistical guarantees, self-adaptation, experimentation cost},
  location  = {Gothenburg, Sweden},
  numpages  = {11},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194152},
}

@InProceedings{Alia2006,
  author    = {Alia, Mourad and Eliassen, Frank and Hallsteinsen, Svein and Stav, Erlend},
  title     = {MADAM: Towards a Flexible Planning-Based Middleware},
  booktitle = {Proceedings of the 2006 International Workshop on Self-Adaptation and Self-Managing Systems},
  year      = {2006},
  series    = {SEAMS ’06},
  pages     = {96},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {By exploiting software components, component frameworks and architectural reflection, the European IST project MADAM aims to overcome the complexity of developing mobile context-aware adaptive systems. The MADAM middleware defines a domain and platform-independent flexible reference architecture that supports dynamic reconfiguration of both applications and the middleware itself. Furthermore it implements flexible context monitoring, adaptation planning and dynamic reconfiguration frameworks that embodies much of the complex logic of dynamic adaptation.},
  doi       = {10.1145/1137677.1137699},
  groups    = {acm},
  isbn      = {1595934030},
  keywords  = {planning, adaptive middleware architecture, mobile computing, self-adaptation},
  location  = {Shanghai, China},
  numpages  = {1},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1137677.1137699},
}

@Article{Fokaefs2017,
  author     = {Fokaefs, Marios and Barna, Cornel and Litoiu, Marin},
  title      = {From DevOps to BizOps: Economic Sustainability for Scalable Cloud Applications},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2017},
  volume     = {12},
  number     = {4},
  month      = nov,
  issn       = {1556-4665},
  abstract   = {Virtualization of resources in cloud computing has enabled developers to commission and recommission resources at will and on demand. This virtualization is a coin with two sides. On one hand, the flexibility in managing virtual resources has enabled developers to efficiently manage their costs; they can easily remove unnecessary resources or add resources temporarily when the demand increases. On the other hand, the volatility of such environment and the velocity with which changes can occur may have a greater impact on the economic position of a stakeholder and the business balance of the overall ecosystem. In this work, we recognise the business ecosystem of cloud computing as an economy of scale and explore the effect of this fact on decisions concerning scaling the infrastructure of web applications to account for fluctuations in demand. The goal is to reveal and formalize opportunities for economically optimal scaling that takes into account not only the cost of infrastructure but also the revenue from service delivery and eventually the profit of the service provider. The end product is a scaling mechanism that makes decisions based on both performance and economic criteria and takes adaptive actions to optimize both performance and profitability for the system.},
  address    = {New York, NY, USA},
  articleno  = {25},
  doi        = {10.1145/3139290},
  groups     = {acm},
  issue_date = {January 2018},
  keywords   = {self-adaptive systems, Cloud computing, software engineering economics, DevOps},
  numpages   = {29},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3139290},
}

@InProceedings{Tun2018a,
  author    = {Tun, Thein and Bennaceur, Amel},
  title     = {Agree to Disagree: Security Requirements Are Different, but Mechanisms for Security Adaptation Are Not},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {194–195},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {We describe a dialogue between a proponent and an opponent of the proposition "security is not just another quality attribute in self-adaptive systems". The dialogue is structured in two steps. First, we examine whether security requirements are different from other system-level requirements. Our consensus is that security requirements require specific methods for elicitation, reasoning, and analysis. However, other requirements (such as safety, usability and performance) also require specific techniques. Then, we examine the adaptation mechanisms for security and compare them with other properties. Our consensus is that most adaptation techniques can be applied to maintain security and other requirements alike.},
  doi       = {10.1145/3194133.3194151},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {self-adaptation, security requirements},
  location  = {Gothenburg, Sweden},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194151},
}

@InProceedings{Mahdavi-Hezavehi2016,
  author    = {Mahdavi-Hezavehi, Sara},
  title     = {Handling Multiple Quality Attributes Trade-off in Architecture-Based Self-Adaptive Systems},
  booktitle = {Proccedings of the 10th European Conference on Software Architecture Workshops},
  year      = {2016},
  series    = {ECSAW ’16},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems are capable of autonomously making runtime decisions in order to deal with uncertain circumstances. In architecture-based self-adaptive (ABSA) systems the feedback loop uses self-reflecting models to perform decision making and ultimately apply adaptation to the system. One aspect of this decision making mechanism is to handle systems' quality attributes trade-off. An ABSA system is required to address the potential impacts of adaptation on multiple quality attributes, and select the adaptation option which satisfies the quality attributes of the system the best. In this PhD project, we study and propose an architecture-based solution which uses runtime knowledge of the systems and its environment to handle quality attributes trade-off and decision making mechanism in presence of system's quality goals uncertainty. For validation, we will a) create and set up case studies in various domains, and b) use exemplars to benchmark our proposed method with existing approaches.},
  articleno = {41},
  doi       = {10.1145/2993412.3010822},
  groups    = {acm},
  isbn      = {9781450347815},
  keywords  = {self-adaptive, trade-off, architecture-based, quality attribute},
  location  = {Copenhagen, Denmark},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2993412.3010822},
}

@InProceedings{Aderaldo2019,
  author    = {Aderaldo, Carlos M. and Mendon\c{c}a, Nabor C. and Schmerl, Bradley and Garlan, David},
  title     = {Kubow: An Architecture-Based Self-Adaptation Service for Cloud Native Applications},
  booktitle = {Proceedings of the 13th European Conference on Software Architecture - Volume 2},
  year      = {2019},
  series    = {ECSA ’19},
  pages     = {42–45},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper presents Kubow, an extensible architecture-based self-adaptation service for cloud native applications. Kubow itself was implemented by customizing and extending the Rainbow self-adaptation framework with support for Docker containers and Kubernetes. The paper highlights Kubow's architecture and main design decisions, and illustrates its use and configuration through a simple example. An accompanying demo video is available at the project's web site: https://ppgia-unifor.github.io/kubow/.},
  doi       = {10.1145/3344948.3344963},
  groups    = {acm},
  isbn      = {9781450371421},
  keywords  = {rainbow, Kubernetes, self-adaptation},
  location  = {Paris, France},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3344948.3344963},
}

@InProceedings{Cavagna2008,
  author    = {Cavagna, Romain and Abdallah, Maha and Bouville, Christian},
  title     = {A Framework for Scalable Virtual Worlds Using Spatially Organized P2P Networks},
  booktitle = {Proceedings of the 2008 ACM Symposium on Virtual Reality Software and Technology},
  year      = {2008},
  series    = {VRST ’08},
  pages     = {237–238},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The general craze for virtual environments, the potential of augmented reality applications and the announced revolution of the Internet world (Web 2.0, Web 3D.0) are key points for the emergence of an 'ambient' Web which will make it possible for users to communicate, collaborate, entertain, work and exchange content. In this context, content storage, delivery, and reproduction are among the essential points for the deployment of a highly scalable platform of wide reality. In this paper, we propose a self-scalable peer-to-peer architecture for the navigation in network-based virtual worlds. To reach this goal, we propose a fully distributed and adaptive streaming method that quickly adapts the reproduced content according to user interaction. Our content delivery strategy has been implemented and tested on a dedicated simulator with a large 3D city model.},
  doi       = {10.1145/1450579.1450631},
  groups    = {acm},
  isbn      = {9781595939517},
  keywords  = {self-repartition, self-distribution, virtual environments, self-scalabity, self-adaptation, peer-to-peer},
  location  = {Bordeaux, France},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1450579.1450631},
}

@InProceedings{Brataas2007,
  author    = {Brataas, Gunnar and Floch, Jacqueline and Rouvoy, Romain and Bratskas, Pyrros and Papadopoulos, George A.},
  title     = {A Basis for Performance Property Prediction of Ubiquitous Self-Adapting Systems},
  booktitle = {International Workshop on Engineering of Software Services for Pervasive Environments: In Conjunction with the 6th ESEC/FSE Joint Meeting},
  year      = {2007},
  series    = {ESSPE ’07},
  pages     = {59–63},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Utility-based adaptation approaches permit to determine the "best" suited variant of an application at run-time. Utility policies are usually specified in terms of resources and QoS dimensions. Although utility policies provide a precise formulation for adaptation decision, they are difficult to specify. The developer especially needs assistance in the specification of performance properties. In this paper, we investigate using a performance engineering framework, for the specification of such properties and identify several open research issues.},
  doi       = {10.1145/1294904.1294913},
  groups    = {acm},
  isbn      = {9781595937988},
  keywords  = {analytical modelling, performance property specification, self-adaptation},
  location  = {Dubrovnik, Croatia},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1294904.1294913},
}

@InProceedings{Edwards2018,
  author    = {Edwards, Ross and Bencomo, Nelly},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  title     = {DeSiRE: Further Understanding Nuances of Degrees of Satisfaction of Non-Functional Requirements Trade-Off},
  year      = {2018},
  address   = {New York, NY, USA},
  pages     = {12–18},
  publisher = {Association for Computing Machinery},
  series    = {SEAMS ’18},
  abstract  = {Self-adaptive systems (SAS) are being deployed in environments of increasing uncertainty, in which they must adapt reconfiguring themselves in such a way as to continuously fulfil multiple objectives according to changes in the environment. The trade-offs between a system's non-functional requirements (NFRs) need to be done to maximise a system's utility (or equity) with regards to the NFRs, and are key drivers of the adaptation process. Decision-making for multiple objective scenarios frequently uses utility functions as measures of satisfaction of both individual and sets of NFRs, usually resulting in a weighted sum of the different objectives. [<u>Questions/Problems</u>] However, while adaptations are performed autonomously, the methods for choosing an adaptation are based on the criteria of human expert(s), who are susceptible to bias, subjectivity and/or lack of quantitativeness in their judgements. Thus, there is a need for a non-subjective and quantitative approach to reason about NFR satisfaction in multi-objective self-adaptation without relying on human expertise. Furthermore, human biases can also apply to the relationships between two or more NFRs (e.g. how much the satisfaction of one NFR affects the satisfaction of another), resulting in emergent inaccuracies affecting the decision(s) chosen. [<u>Principal ideas/ results</u>] This paper presents DeSiRE (Degrees of Satisfaction of NFRs), a purely automated objective statistical approach to quantifying the extent that a requirement is violated or satisfied, and its application to further explore the trade-offs between NFRs in decision making. Experiments using case studies have positive results showing the identification of a Pareto optimal set of candidate solutions, in addition to a ranking of these configurations by their satisfaction of each NFR.},
  doi       = {10.1145/3194133.3194142},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {multi-criteria decison making, non-functional requirements, self-adaptative systems},
  location  = {Gothenburg, Sweden},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194142},
}

@InProceedings{Cavagna2006,
  author    = {Cavagna, Romain and Bouville, Christian and Royan, Jerome},
  title     = {P2P Network for Very Large Virtual Environment},
  booktitle = {Proceedings of the ACM Symposium on Virtual Reality Software and Technology},
  year      = {2006},
  series    = {VRST ’06},
  pages     = {269–276},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The ever increasing speed of Internet connections has led to a point where it is actually possible for every end user to seamlessly share data on Internet. Peer-To-Peer (P2P) networks are typical of this evolution. The goal of our paper is to show that server-less P2P networks with self-adaptive assignment techniques can efficiently deal with very large environments such as met in the geovisualization domain. Our method allows adaptative view-dependent visualization thanks to a hierarchical and progressive data structure that describes the environment. In order to assess the global efficiency of this P2P technique, we have implemented a dedicated real time simulator. Experimentation results are presented using a hierarchical LOD model of a very large urban environment.},
  doi       = {10.1145/1180495.1180551},
  groups    = {acm},
  isbn      = {1595933212},
  keywords  = {self-organization, virtual environment, peer-to-peer, self-scalability, self-adaptation, simulation},
  location  = {Limassol, Cyprus},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1180495.1180551},
}

@InProceedings{Faccin2018,
  author    = {Faccin, Jo\"{a}o and Nunes, Ingrid},
  title     = {Cleaning up the Mess: A Formal Framework for Autonomously Reverting BDI Agent Actions},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {108–118},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In order to cope with abnormal situations, self-adaptive systems may perform remediation actions to guarantee an acceptable system behaviour while dealing with critical execution problems. When problems are solved, the effect of such actions may need to be reverted to return the system to a normal state. This leads to the general problem of providing systems with the ability of autonomously reverting actions. In this paper, we address this problem by proposing a formal framework that customises the belief-desire-intention (BDI) architecture, typically used to implement autonomous agents. This customisation involves steps to monitor agent actions and store reversion metadata, identify when and which actions must be reverted, and execute action reversion. Our formal approach was implemented as an extension of the BDI4JADE platform. This extension was used to evaluate our proposal with a case study in the context of smart homes.},
  doi       = {10.1145/3194133.3194156},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {self-adaptive systems, BDI architecture, remediation behaviour, reversion actions, autonomous agents},
  location  = {Gothenburg, Sweden},
  numpages  = {11},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194156},
}

@InProceedings{Mann2018,
  author    = {Mann, Zolt\'{a}n \'{A}d\'{a}m and Metzger, Andreas},
  title     = {The Special Case of Data Protection and Self-Adaptation},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {190–191},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this extended abstract, we consider one important aspect of security: the protection of sensitive data from unauthorized access. We argue that (i) self-adaptation may facilitate the efficient protection of sensitive data; (ii) data protection has peculiar properties that make its treatment different from other quality attributes; and (iii) data protection should be considered in combination with other quality attributes like performance and costs.},
  doi       = {10.1145/3194133.3194149},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {security, data protection, privacy, self-adaptive systems},
  location  = {Gothenburg, Sweden},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194149},
}

@InProceedings{Paucar2018,
  author    = {Paucar, Luis H. Garcia and Bencomo, Nelly},
  title     = {RE-STORM: Mapping the Decision-Making Problem and Non-Functional ReQuirementS Trade-off to ParTIally OBseRVable MArkov Decision Processes},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {19–25},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Different model-based techniques have been used to model and underpin requirements management and decision-making strategies under uncertainty for self-adaptive Systems (SASs). The models specify how the partial or total fulfilment of non-functional requirements (NFRs) drive the decision-making process at runtime. There has been considerable progress in this research area. However, precarious progress has been made by the use of models at runtime using machine learning to deal with uncertainty and support decision-making based on new evidence learned during execution. New techniques are needed to systematically revise the current model and the satisficement of its NFRs when empirical evidence becomes available from the monitoring infrastructure. In this paper, we frame the decision-making problem and trade-off specifications of NFRs in terms of Partially Observable Markov Decision Processes (POMDPs) models. The mathematical probabilistic framework based on the concept of POMDPs serves as a runtime model that can be updated with new learned evidence to support reasoning about partial satisficement of NFRs and their trade-off under the new changes in the environment. In doing so, we demonstrate how our novel approach RE-STORM underpins reasoning over uncertainty and dynamic changes during the system's execution.},
  doi       = {10.1145/3194133.3195537},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {decision-making, requirements, POMDPs, specification, bayesian decision theory, uncertainty, self-adaptation},
  location  = {Gothenburg, Sweden},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3195537},
}

@InProceedings{Camara2012,
  author    = {C\'{a}mara, Javier and de Lemos, Rog\'{e}rio},
  title     = {Evaluation of Resilience in Self-Adaptive Systems Using Probabilistic Model-Checking},
  booktitle = {Proceedings of the 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2012},
  series    = {SEAMS ’12},
  pages     = {53–62},
  publisher = {IEEE Press},
  abstract  = {The provision of assurances for self-adaptive systems presents its challenges since uncertainties associated with its operating environment often hamper the provision of absolute guarantees that system properties can be satisfied. In this paper, we define an approach for the verification of self-adaptive systems that relies on stimulation and probabilistic model-checking to provide levels of confidence regarding service delivery. In particular, we focus on resilience properties that enable us to assess whether the system is able to maintain trustworthy service delivery in spite of changes in its environment. The feasibility of our proposed approach for the provision of assurances is evaluated in the context of the Znn.com case study.},
  groups    = {acm},
  isbn      = {9781467317870},
  keywords  = {probabilistic model checking, assurances, resilience, stimulation, evaluation, self-adaptation},
  location  = {Zurich, Switzerland},
  numpages  = {10},
}

@InProceedings{Freitas2008,
  author    = {de Freitas, Edison Pignaton and Wehrmeister, Marco Aur\'{e}lio and Pereira, Carlos Eduardo and Larsson, Tony},
  title     = {Reflective Middleware for Heterogeneous Sensor Networks},
  booktitle = {Proceedings of the 7th Workshop on Reflective and Adaptive Middleware},
  year      = {2008},
  series    = {ARM ’08},
  pages     = {49–50},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The use of sensor networks in sophisticated applications is emerging as a new trend. However, the integration and coordination of heterogeneous sensors is still a challenge, especially when the target application scenario is susceptible to constant changes. Such systems must adapt themselves in order to fulfill requirements that can also change during the system runtime. Moreover, the changes that occur in such scenarios require services located at different places during the system runtime. Due to the dynamicity of this context, system adaptations must take place very quickly, requiring that decisions for adaptation are taken autonomously by the system without waiting for human operator's directions. Thus a reflective behavior must be provided. This paper presents a reflective middleware that supports reflective behaviors to address adaptation needs of heterogeneous sensor networks deployed in dynamic scenarios. This middleware presents specific handling of concerns related to real-time, service adaptation and resource allocation through network reasoning. These concerns are addressed mainly by the use of mobile and multi-agents, and aspect-oriented concepts. The use of multi-agents represents the spreading of intelligence over the network, while the mobile-agents provide service adaptation by code mobility. In the same direction, aspects address behavioral adaptations related to crosscutting concerns.},
  doi       = {10.1145/1462716.1462725},
  groups    = {acm},
  isbn      = {9781605583679},
  keywords  = {self-adaptation, dynamic scenarios, heterogeneous sensors},
  location  = {Leuven, Belgium},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1462716.1462725},
}

@Article{Weyns2012,
  author     = {Weyns, Danny and Malek, Sam and Andersson, Jesper},
  title      = {FORMS: Unifying Reference Model for Formal Specification of Distributed Self-Adaptive Systems},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2012},
  volume     = {7},
  number     = {1},
  month      = may,
  issn       = {1556-4665},
  abstract   = {The challenges of pervasive and mobile computing environments, which are highly dynamic and unpredictable, have motivated the development of self-adaptive software systems. Although noteworthy successes have been achieved on many fronts, the construction of such systems remains significantly more challenging than traditional systems. We argue this is partially because researchers and practitioners have been struggling with the lack of a precise vocabulary for describing and reasoning about the key architectural characteristics of self-adaptive systems. Further exacerbating the situation is the fact that existing frameworks and guidelines do not provide an encompassing perspective of the different types of concerns in this setting. In this article, we present a comprehensive reference model, entitled FOrmal Reference Model for Self-adaptation (FORMS), that targets both issues. FORMS provides rigor in the manner such systems can be described and reasoned about. It consists of a small number of formally specified modeling elements that correspond to the key concerns in the design of self-adaptive software systems, and a set of relationships that guide their composition. We demonstrate FORMS's ability to precisely describe and reason about the architectural characteristics of distributed self-adaptive software systems through its application to several existing systems. FORMS's expressive power gives it a potential for documenting reusable architectural solutions (e.g., architectural patterns) to commonly encountered problems in this area.},
  address    = {New York, NY, USA},
  articleno  = {8},
  doi        = {10.1145/2168260.2168268},
  groups     = {acm},
  issue_date = {April 2012},
  keywords   = {self-adaptation, autonomic computing, Formal methods},
  numpages   = {61},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2168260.2168268},
}

@InProceedings{Bailey2014,
  author    = {Bailey, Christopher and Montrieux, Lionel and de Lemos, Rog\'{e}rio and Yu, Yijun and Wermelinger, Michel},
  title     = {Run-Time Generation, Transformation, and Verification of Access Control Models for Self-Protection},
  booktitle = {Proceedings of the 9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2014},
  series    = {SEAMS 2014},
  pages     = {135–144},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive access control, in which self-* properties are applied to protecting systems, is a promising solution for the handling of malicious user behaviour in complex infrastructures. A major challenge in self-adaptive access control is ensuring that chosen adaptations are valid, and produce a satisfiable model of access. The contribution of this paper is the generation, transformation and verification of Role Based Access Control (RBAC) models at run-time, as a means for providing assurances that the adaptations to be deployed are valid. The goal is to protect the system against insider threats by adapting at run-time the access control policies associated with system resources, and access rights assigned to users. Depending on the type of attack, and based on the models from the target system and its environment, the adapted access control models need to be evaluated against the RBAC metamodel, and the adaptation constraints related to the application. The feasibility of the proposed approach has been demonstrated in the context of a fully working prototype using malicious scenarios inspired by a well documented case of insider attack.},
  doi       = {10.1145/2593929.2593945},
  groups    = {acm},
  isbn      = {9781450328647},
  keywords  = {adaptive security, model verification, rbac, self-adaptation},
  location  = {Hyderabad, India},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2593929.2593945},
}

@InProceedings{Horikoshi2012,
  author    = {Horikoshi, Hisayuki and Nakagawa, Hiroyuki and Tahara, Yasuyuki and Ohsuga, Akihiko},
  title     = {Dynamic Reconfiguration in Self-Adaptive Systems Considering Non-Functional Properties},
  booktitle = {Proceedings of the 27th Annual ACM Symposium on Applied Computing},
  year      = {2012},
  series    = {SAC ’12},
  pages     = {1144–1150},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems have recently been receiving much attention because of their ability to cope with the changes of environment, failures, and unanticipated events. These systems need an adaptation mechanism, which automatically computes the possible configurations, and decides the most appropriate configuration to fit the environment. In particular, the satisfaction of non-functional requirements must be considered when selecting the best reconfiguration. However, there are trade-off problems among non-functional requirements. Moreover, the adaptation mechanisms are typically developed separately from the components to be implemented, and it complicates the construction of such systems. We propose (1) a feature-oriented analysis technique, which can identify adaptation points, and calculate the contribution to non-functional goals of the configuration; (2) a component specification model, which extends an architectural description language for self-adaptation; (3) a reconfiguration framework aimed to reduce the complexity of the reconfiguration and generate the best configuration at run-time. We evaluate the feasibility of our framework by four different scenarios, and show that our framework reduces the complexity of the reconfiguration, and solves the trade-off problem among non-functional requirements.},
  doi       = {10.1145/2245276.2231956},
  groups    = {acm},
  isbn      = {9781450308571},
  keywords  = {feature-oriented analysis, dynamic reconfiguration, self-adaptive systems, software architecture, architecture description language},
  location  = {Trento, Italy},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2245276.2231956},
}

@InProceedings{Georgas2004,
  author    = {Georgas, John C. and Taylor, Richard N.},
  title     = {Towards a Knowledge-Based Approach to Architectural Adaptation Management},
  booktitle = {Proceedings of the 1st ACM SIGSOFT Workshop on Self-Managed Systems},
  year      = {2004},
  series    = {WOSS ’04},
  pages     = {59–63},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive software continually evaluates and modifies its own behavior to meet changing demands. One of the key issues in constructing such software is that of planning when and what kinds of adaptations are appropriate. In this paper, we present an architecture-centric knowledge-based approach for specifying and enacting architectural adaptation policies as the main driver for self-adaptive behavior. Our work applies explicitly represented knowledge-based policies for the definition and enactment of software adaptation at the architectural level. A key benefit of our approach is the decoupling of adaptation policy from system implementation as well as the independent and dynamic evolution of policies themselves. We elaborate our overall approach, present prototype tools and techniques for its support, and discuss future research directions.},
  doi       = {10.1145/1075405.1075417},
  groups    = {acm},
  isbn      = {1581139896},
  keywords  = {self-adaptive software, architectural adaptation management},
  location  = {Newport Beach, California},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1075405.1075417},
}

@InProceedings{Mendonca2018,
  author    = {Mendon\c{c}a, Nabor C. and Garlan, David and Schmerl, Bradley and C\'{a}mara, Javier},
  title     = {Generality vs. Reusability in Architecture-Based Self-Adaptation: The Case for Self-Adaptive Microservices},
  booktitle = {Proceedings of the 12th European Conference on Software Architecture: Companion Proceedings},
  year      = {2018},
  series    = {ECSA ’18},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Why is it so difficult to build self-adaptive systems by reusing existing self-adaptation services and frameworks? In this paper, we argue that one possible explanation is that there is a fundamental mismatch between the adaptation needs of modern software systems, and the architectural models and adaptation mechanisms supported by current self-adaptation solutions. We identify and discuss the main reasons leading to this problem by looking into a number of representative self-adaptation solutions that have been proposed in recent years, including open source frameworks and cloud-based services, from two perspectives: generality, i.e., their ability to support a variety of architectural models and adaptation mechanisms, and reusability, i.e., their ability to be reused without requiring substantial effort from software developers. We then make the case that recent industry progress toward microservices and their enabling technologies can open the way to the development of more general and reusable self-adaptation solutions.},
  articleno = {18},
  doi       = {10.1145/3241403.3241423},
  groups    = {acm},
  isbn      = {9781450364836},
  keywords  = {self-adaptation, microservices, service mesh},
  location  = {Madrid, Spain},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3241403.3241423},
}

@InProceedings{Weyns2010a,
  author    = {Weyns, Danny and Malek, Sam and Andersson, Jesper},
  title     = {On Decentralized Self-Adaptation: Lessons from the Trenches and Challenges for the Future},
  booktitle = {Proceedings of the 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2010},
  series    = {SEAMS ’10},
  pages     = {84–93},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptability has been proposed as an effective approach to deal with the increasing complexity, distribution, and dynamicity of modern software systems. Although noteworthy successes have been achieved in many fronts, there is a lack of understanding on how to engineer distributed self-adaptive software systems in which central control is not possible. In this paper, we first describe the key attributes of decentralized self-adaptive systems that set them apart from their centralized counterparts. We illustrate these attributes using two case studies on decentralized self-adaptation. The first case study is an instance of a self-healing system dealing with automated traffic management control. The second case study is an instance of a self-optimizing system that improves the quality of service of a decentralized software system through redeployment of its software components. We generalize the lessons learned from our experiences in the form of a reference model. In light of this model, we present numerous challenges that forms the focus of future research in this area.},
  doi       = {10.1145/1808984.1808994},
  groups    = {acm},
  isbn      = {9781605589718},
  keywords  = {self-adaptation, decentralized control},
  location  = {Cape Town, South Africa},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1808984.1808994},
}

@InProceedings{Zhuo-Qun2012,
  author    = {Zhuo-Qun, Yang and Zhi, Jin},
  title     = {Requirements Modeling and System Reconfiguration for Self-Adaptation of Internetware},
  booktitle = {Proceedings of the Fourth Asia-Pacific Symposium on Internetware},
  year      = {2012},
  series    = {Internetware ’12},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Internetware is a new paradigm proposed in recent years, which is defined as a kind of software constructed by a set of autonomous software entities distributed over the Internet. The environment where Internetware operates, including the Internet and other physical condition that the domain should hold, changes unexpectedly and comes with uncertainty. So the self-adaptation issue becomes inevitable in terms of dynamically configuring the Internetware. Here come two basic questions: how can we derive the adaptation problem in Internetware and how can we solve this problem with some adaptation mechanisms? In this paper, we focus on the requirements level for solving this problem and propose to use i* framework for modeling requirements of Internetware and deriving the adaptation problem from the i* models. To solve the adaptation problem, we provide a synergy approach involving i* models and widely accepted self-adaptation process---the MAPE loop, and apply ECA (3-tuple of <Event, Condition, Action>) to present the rationale for reconfiguration decisions.},
  articleno = {11},
  doi       = {10.1145/2430475.2430486},
  groups    = {acm},
  isbn      = {9781450318884},
  keywords  = {self-adaptation, Internetware, i*-framework, MAPE, requirements modeling},
  location  = {Qingdao, China},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2430475.2430486},
}

@InProceedings{Baresi2011,
  author    = {Baresi, Luciano and Guinea, Sam},
  title     = {A3: Self-Adaptation Capabilities through Groups and Coordination},
  booktitle = {Proceedings of the 4th India Software Engineering Conference},
  year      = {2011},
  series    = {ISEC ’11},
  pages     = {11–20},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Modern software systems challenge engineers with new critical requirements. Software must adapt effectively and efficiently with respect to the environment in which it is deployed. In this paper we introduce A-3: a framework for engineering distributed, component-based systems that facilitates the coordination of its components and the implementation of adaptive features. In A-3, a system's components are dynamically organized into groups. Groups solve the common pitfalls of completely centralized or decentralized approaches. They increase scalability, avoid single points of failure and bottlenecks, and provide a means to reason on a system at a local level, but still reach global results. The paper presents the model behind A-3, a prototype framework implementation, and detailed examples of how coordination and adaptation can be achieved. It also presents an initial empirical evaluation of the prototype that shows that the framework scales well to hundreds of components.},
  doi       = {10.1145/1953355.1953358},
  groups    = {acm},
  isbn      = {9781450305594},
  keywords  = {supervision, group management, distributed systems, aspect-oriented programming, self-adaptation},
  location  = {Thiruvananthapuram, Kerala, India},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1953355.1953358},
}

@InProceedings{Abeywickrama2013,
  author    = {Abeywickrama, Dhaminda B. and Hoch, Nicklas and Zambonelli, Franco},
  title     = {SimSOTA: Engineering and Simulating Feedback Loops for Self-Adaptive Systems},
  booktitle = {Proceedings of the International C* Conference on Computer Science and Software Engineering},
  year      = {2013},
  series    = {C3S2E ’13},
  pages     = {67–76},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Engineering a decentralized system of autonomous service components and ensembles having multiple and interacting feedback loops is very challenging. While several works have expressed feedback loops as first-class entities, very little attention has been given to providing actual tool support. In this paper, we propose a novel approach to architect and engineer self-adaptive systems based on feedback loops. We also present the first implementation of SimSOTA, an Eclipse plug-in being developed to support the modeling, simulating and validating of self-adaptive systems based on our feedback loop-based approach. We validate our approach using a case study in cooperative electric vehicles.},
  doi       = {10.1145/2494444.2494446},
  groups    = {acm},
  isbn      = {9781450319768},
  keywords  = {self-adaptive architectural patterns, simulation tools, self-awareness, autonomic systems, software engineering},
  location  = {Porto, Portugal},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2494444.2494446},
}

@InProceedings{Guo2017,
  author    = {Guo, Wenxia and Ren, Xiaoqin and Tian, Wenhong and Venugopal, Srikumar},
  title     = {Self-Adaptive Consolidation of Virtual Machines For Energy-Efficiency in the Cloud},
  booktitle = {Proceedings of the 2017 VI International Conference on Network, Communication and Computing},
  year      = {2017},
  series    = {ICNCC 2017},
  pages     = {120–124},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In virtualized data centers, consolidation of Virtual Machines (VMs) on minimizing the number of total physical machines (PMs) has been recognized as a very efficient approach. This paper considers the energy-efficient consolidation of VMs in a Cloud Data center. Concentrating on CPU-intensive applications, the objective is to schedule all requests non-preemptively, subjecting to constraints of PM capacities and running time interval spans, such that the total energy consumption of all PMs is minimized (called MinTE for abbreviation). The MinTE problem is NP-complete in general. We propose a self-adaptive approached called SAVE. The approach makes decisions of the assignment and migration of VMs by probabilistic processes and is based exclusively on local information, therefore it is very simple to implement. Both simulation and real environment test show that our proposed method SAVE can reduce energy consumption about 30% against VMWare DRS and 10-20% against EcoCloud on average.},
  doi       = {10.1145/3171592.3171616},
  groups    = {acm},
  isbn      = {9781450353663},
  keywords  = {consolidation of virtual machines, Cloud computing, energy-efficiency, self-adaptive},
  location  = {Kunming, China},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3171592.3171616},
}

@InProceedings{Muccini2018,
  author    = {Muccini, Henry and Spalazzese, Romina and Moghaddam, Mahyar T. and Sharaf, Mohammad},
  title     = {Self-Adaptive IoT Architectures: An Emergency Handling Case Study},
  booktitle = {Proceedings of the 12th European Conference on Software Architecture: Companion Proceedings},
  year      = {2018},
  series    = {ECSA ’18},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Along with the rapid growth of IoT technologies and devices, their solutions are currently being applied on various domains such as health-care, transportation and agriculture, but mainly on crowd monitoring and emergency handling. The latter is a safety critical IoT system based on collecting and analyzing the real-time data to perform proper actuation. In order to engineer such a high quality IoT application, a proper software architecture should be designed. In order for the software architecture to be able to optimize critical requirements such as fault-tolerance, performance and energy consumption, it ought to: i) adapt itself to real-time environment transformation, ii) be designed in a proper level of elements distribution. In this paper, we critically analyze a set of IoT distribution and self-adaptation patterns to identify their suitable architectural combinations. Further, we use our IoT modeling framework (CAPS) to model an emergency handling system. Based on these, we design two quality driven architectures to be used for a forest monitoring and evacuation example and qualitatively evaluate and compare them.},
  articleno = {19},
  doi       = {10.1145/3241403.3241424},
  groups    = {acm},
  isbn      = {9781450364836},
  keywords  = {quality attributes, IoT, self-adaptation, urban security, architectural patterns and styles},
  location  = {Madrid, Spain},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3241403.3241424},
}

@Article{Arcaini2017,
  author     = {Arcaini, Paolo and Riccobene, Elvinia and Scandurra, Patrizia},
  title      = {Formal Design and Verification of Self-Adaptive Systems with Decentralized Control},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2017},
  volume     = {11},
  number     = {4},
  month      = jan,
  issn       = {1556-4665},
  abstract   = {Feedback control loops that monitor and adapt managed parts of a software system are considered crucial for realizing self-adaptation in software systems. The MAPE-K (Monitor-Analyze-Plan-Execute over a shared Knowledge) autonomic control loop is the most influential reference control model for self-adaptive systems. The design of complex distributed self-adaptive systems having decentralized adaptation control by multiple interacting MAPE components is among the major challenges. In particular, formal methods for designing and assuring the functional correctness of the decentralized adaptation logic are highly demanded. This article presents a framework for formal modeling and analyzing self-adaptive systems. We contribute with a formalism, called self-adaptive Abstract State Machines, that exploits the concept of multiagent Abstract State Machines to specify distributed and decentralized adaptation control in terms of MAPE-K control loops, also possible instances of MAPE patterns. We support validation and verification techniques for discovering unexpected interfering MAPE-K loops, and for assuring correctness of MAPE components interaction when performing adaptation.},
  address    = {New York, NY, USA},
  articleno  = {25},
  doi        = {10.1145/3019598},
  groups     = {acm},
  issue_date = {February 2017},
  keywords   = {abstract state machines, MAPE pattern, formal modeling and analysis, MAPE-K loop, Self-adaptation, functional requirements assurance},
  numpages   = {35},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3019598},
}

@InProceedings{Peruma2018,
  author    = {Peruma, Anthony and Krutz, Daniel E.},
  title     = {Security: A Critical Quality Attribute in Self-Adaptive Systems},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {188–189},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-Adaptive Systems (SAS) are revolutionizing many aspects of our society. From server clusters to autonomous vehicles, SAS are becoming more ubiquitous and essential to our world. Security is frequently a priority for these systems as many SAS conduct mission-critical operations, or work with sensitive information. Fortunately, security is being more recognized as an indispensable aspect of virtually all aspects of computing systems, in all phases of software development. Despite the growing prominence in security, from computing education to vulnerability detection systems, it is just another concern of creating good software. Despite how critical security is, it is a quality attribute like other aspects such as reliability, stability, or adaptability in a SAS.},
  doi       = {10.1145/3194133.3194134},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {security, autonomous systems, self-adaptive systems},
  location  = {Gothenburg, Sweden},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194134},
}

@InProceedings{Weyns2012a,
  author    = {Weyns, Danny and Iftikhar, M. Usman and de la Iglesia, Didac Gil and Ahmad, Tanvir},
  title     = {A Survey of Formal Methods in Self-Adaptive Systems},
  booktitle = {Proceedings of the Fifth International C* Conference on Computer Science and Software Engineering},
  year      = {2012},
  series    = {C3S2E ’12},
  pages     = {67–79},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {One major challenge in self-adaptive systems is to assure the required quality properties. Formal methods provide the means to rigorously specify and reason about the behaviors of self-adaptive systems, both at design time and runtime. To the best of our knowledge, no systematic study has been performed on the use of formal methods in self-adaptive systems. As a result, there is no clear view on what methods have been used to verify self-adaptive systems, and what support these methods offer to software developers. As such insight is important for researchers and engineers, we performed a systematic literature review covering 12 main software engineering venues and 4 journals, resulting in 75 papers used for data collection. The study shows that the attention for self-adaptive software systems is gradually increasing, but the number of studies that employ formal methods remains low. The main focus of formalization is on modeling and reasoning. Model checking and theorem proving have gained limited attention. The main concerns of interest in formalization of self-adaptation are efficiency/performance and reliability. Important adaptation concerns, such as security and scalability, are hardly considered. To verify the concerns of interest, a set of new properties are defined, such as interference freedom, responsiveness, mismatch, and loss-tolerance. A relevant part of the studies use formal methods at runtime, but the use is limited to modeling and analysis. Formal methods can be applied to other runtime activities of self-adaptation, and there is a need for light-weight tools to support runtime verification.},
  doi       = {10.1145/2347583.2347592},
  groups    = {acm},
  isbn      = {9781450310840},
  keywords  = {self-adaptive systems, systematic literature review},
  location  = {Montreal, Quebec, Canada},
  numpages  = {13},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2347583.2347592},
}

@InProceedings{Dawson2008,
  author    = {Dawson, Dylan and Desmarais, Ron and Kienle, Holger M. and M\"{u}ller, Hausi A.},
  title     = {Monitoring in Adaptive Systems Using Reflection},
  booktitle = {Proceedings of the 2008 International Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2008},
  series    = {SEAMS ’08},
  pages     = {81–88},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Continuous evolution is a key trait of software-intensive systems. Many research projects investigate mechanisms to adapt software systems effectively in order to ease evolution. By observing its internal state and surrounding context continuously using feedback loops, an adaptive system is able to analyze its effectiveness by evaluating quality criteria and then self-tune to improve its operations. The goals of these feedback loops range from keeping single variables in a prescribed range to satisfying non-functional requirements by regulating decentralized, interdependent subsystems. To be able to observe and possibly orchestrate continuous evolution of software systems in a complex and changing environment, we need to push monitoring of evolving systems to unprecedented levels. It has been established that security has to be built into a system from the ground up and cannot be added as an afterthought - the same is probably true for intensive monitoring. We propose to monitor adaptive systems with autonomic elements to enhance their assessment capabilities. In this paper, we discuss how to build monitoring into Java programs from the ground up with reflection technology to detect normal and exceptional system behavior.},
  doi       = {10.1145/1370018.1370033},
  groups    = {acm},
  isbn      = {9781605580371},
  keywords  = {feedback, self-adaptive systems, control loops, monitoring, java, autonomic elements, introspection, exceptions, reflection, metaobjects, continuous evolution},
  location  = {Leipzig, Germany},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1370018.1370033},
}

@InProceedings{Perez-Palacin2012,
  author    = {Perez-Palacin, Diego and Merseguer, Jos\'{e} and Mirandola, Raffaela},
  title     = {Analysis of Bursty Workload-Aware Self-Adaptive Systems},
  booktitle = {Proceedings of the 3rd ACM/SPEC International Conference on Performance Engineering},
  year      = {2012},
  series    = {ICPE ’12},
  pages     = {75–84},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Software is often embedded in dynamic contexts where it is subjected to high variable, non-stable, and usually bursty workloads. A key requirement for a software system is to be able to self-react to workload changes by adapting its behavior dynamically, to ensure both the correct functionalities and the required performance. Research on fitting variable workload traces into formal models has been carried out using Markovian Modulated Poisson Processes (MMPP). These works concentrate on modeling stable workload states, but accurate modeling of transient times still deserves attention since they are critical moments for the self-adaptation. In this work, we build on research in the area of MMPP trace fitting and we propose a Petri net fine-grained model for highly variable workloads that also accounts for transient times. We analyze differences between models of adaptive software that accurately represent workload state changes and models that do not. We evaluate their performance and availability and compare the results.},
  doi       = {10.1145/2188286.2188300},
  groups    = {acm},
  isbn      = {9781450312028},
  keywords  = {bursty workload, markovian models, self-adaptive software},
  location  = {Boston, Massachusetts, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2188286.2188300},
}

@InProceedings{Sharifloo2015,
  author    = {Sharifloo, Amir Molzam},
  title     = {Models for Self-Adaptive Systems},
  booktitle = {Proceedings of the 2015 European Conference on Software Architecture Workshops},
  year      = {2015},
  series    = {ECSAW ’15},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Developing self-adaptive systems has been an active research area of software engineering in the last decade. Models are so essential in building these systems that stretch their applications from design time to run time. This paper focuses on the roles of models and the relationships among them in self-adaptive systems. It classifies the types of models often required, and points out the research gaps for future investigation.},
  articleno = {24},
  doi       = {10.1145/2797433.2797457},
  groups    = {acm},
  isbn      = {9781450333931},
  keywords  = {Self-adaptive systems, Models},
  location  = {Dubrovnik, Cavtat, Croatia},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2797433.2797457},
}

@InProceedings{Gacek2008,
  author    = {Gacek, Cristina and Giese, Holger and Hadar, Ethan},
  title     = {Friends or Foes? A Conceptual Analysis of Self-Adaptation and It Change Management},
  booktitle = {Proceedings of the 2008 International Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2008},
  series    = {SEAMS ’08},
  pages     = {121–128},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-Adaptation as a vision promises to enable software systems which can autonomously adapt to changes of their context and requirements. Thus, it facilitates the autonomous evolution of the software without manual intervention. However, in practice we cannot expect that all systems with self-adaptation are developed anew and that all their behavioral aspects are handled in an autonomous manner. Instead an evolutionary approach leading from today's systems to partially self-managed systems is required. To enable such a path, we explore in this paper what a conceptual model and processes for self-adaptation should look like using the current practice in ITIL Change Management as initial reference point. We define the required responsibilities and a generic conceptual object model and map them to the ITIL Change Management roles to evaluate the similarities and differences. Moreover, the implications for the co-existence of self-adaptation and Change Management are discussed. Finally, examples for self-adaptive systems are used to exemplify our concept.},
  doi       = {10.1145/1370018.1370040},
  groups    = {acm},
  isbn      = {9781605580371},
  keywords  = {ITIL, self-adaptation, responsibilities, process, change management, artifacts, architecture centric evolution},
  location  = {Leipzig, Germany},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1370018.1370040},
}

@InProceedings{Martins2010,
  author    = {Martins, Pedro and McCann, Julie A.},
  title     = {AjME: Making Game Engines Autonomic},
  booktitle = {Proceedings of the 3rd International Conference on Fun and Games},
  year      = {2010},
  series    = {Fun and Games ’10},
  pages     = {48–57},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Autonomic Computing is now showing its value as a solution to the increased complexities of maintaining computer systems and has been applied to many different fields. In this paper, we demonstrate how a gaming application can benefit from autonomic principles. Currently, minimal adaptivity has been used in games and is typically manifested as bespoke mechanisms that cannot be shared, extended, reused etc. In this paper we show the advantages of Autonomic Computing in terms of not only improved performance, but also show that decoupling adaptivity mechanisms from the managed game can be done efficiently whilst improving its software engineering. To this end we implement and evaluate a proof of concept architecture using the popular Java game engine jMonkeyEngine and in doing so produce autonomic extensions for the jMonkeyEngine (namely ajME). We show that this framework enables easy adoption of autonomic computing in games created using this games engine but also how this relates to other engines. We conclude that autonomic computing in gaming is viable (i.e. performance is improved while leaving the game quality minimally changed), has advantages over other approaches from a software engineering point of view and all with a minimal overhead. We then discuss the difficulties that are still present in the implementation of autonomic gaming systems, and suggest some further work that could be done in order to improve this area.},
  doi       = {10.1145/1823818.1823823},
  groups    = {acm},
  isbn      = {9781605589077},
  keywords  = {self-healing systems, autonomic computing, self-adaptive, software engineering, game engine},
  location  = {Leuven, Belgium},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1823818.1823823},
}

@InProceedings{Silva2018b,
  author    = {da Silva, Jo\~{a}o Pablo S. and Ecar, Miguel and Pimenta, Marcelo S. and Guedes, Gilleanes T. A. and Rodrigues, Elder M.},
  title     = {Towards a Domain-Specific Modeling Language for Self-Adaptive Systems Conceptual Modeling},
  booktitle = {Proceedings of the XXXII Brazilian Symposium on Software Engineering},
  year      = {2018},
  series    = {SBES ’18},
  pages     = {208–213},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive Systems (SaSs) are able to adapt their behavior at runtime in response to contextual changes. In this work, we are interested in SaSs conceptual modeling, which is the act of creating models that describe aspects of the world. SaSs modeling is a non-trivial activity because it deals with requirements uncertainty, contextual changes, and behavior adaptation. This complexity can be minimized by using Domain-Specific Modeling Languages (DSMLs), which may be created by extending Unified Modeling Language (UML). In this paper, we propose a UML profile that represents the higher-level abstractions required to provide support for SaSs conceptual modeling. We developed the UML profile by modeling the domain of interest and extending the UML class metaclass. The UML profile was evaluated through the focus group technique, which was performed by software engineering professors. As the outcome, the focus group participants considered the UML profile able to produce SaSs conceptual models with more expressiveness than UML standard.},
  doi       = {10.1145/3266237.3266244},
  groups    = {acm},
  isbn      = {9781450365031},
  keywords  = {UML profiling, self-adaptive system, conceptual modeling},
  location  = {Sao Carlos, Brazil},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3266237.3266244},
}

@InProceedings{Evesti2014,
  author    = {Evesti, Antti and Abie, Habtamu and Savola, Reijo},
  title     = {Security Measuring for Self-Adaptive Security},
  booktitle = {Proceedings of the 2014 European Conference on Software Architecture Workshops},
  year      = {2014},
  series    = {ECSAW ’14},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive security is needed due to vast amount of changes in an execution environment and threat landscape, which all cannot be anticipated at software design-time. Self-adaptive security requires means for monitoring a security level and decision making capability to improve the current security level. In this paper, we describe how security metrics are able to support self-adaptive security. The paper analyses benefits and challenges of security measuring from the self-adaptive security perspective. Thus, five benefits and three challenges of security metrics in self-adaptive security are described. Furthermore, the paper derives requirements that measuring causes for self-adaptive security. Based on the derived requirements, extension components for the MAPE (Monitor, Analyse, Plan and Execute) reference model are proposed.},
  articleno = {5},
  doi       = {10.1145/2642803.2642808},
  groups    = {acm},
  isbn      = {9781450327787},
  keywords  = {security metric, decision-making, Self-adaptive, architecture},
  location  = {Vienna, Austria},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2642803.2642808},
}

@InProceedings{Denaro2005,
  author    = {Denaro, Giovanni and Pezz\'{e}, Mauro and Tosi, Davide},
  title     = {Adaptive Integration of Third-Party Web Services},
  booktitle = {Proceedings of the 2005 Workshop on Design and Evolution of Autonomic Application Software},
  year      = {2005},
  series    = {DEAS ’05},
  pages     = {1–6},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Service based computing allows clients to dynamically bind services, and providers to modify the service implementation independently from their clients. The impossibility of statically determining which service implementation will be bound at runtime may lead to unexpected client-side failures. This position paper suggests a scenario in which service-based applications autonomously react to changes in the implementation of the used services, automatically detect possible integration mismatches, and dynamically execute suitable adaptation strategies. The proposed solution exploits ideas from autonomic computing and self-managed software. We propose a design methodology based on the definition of both test cases, to automatically diagnose service mismatches, and adaptation strategies, to overcome the revealed problems. We introduce a general runtime infrastructure that automatically embeds the test cases and the adaptation strategies into service based applications to guarantee self-adaptiveness.},
  doi       = {10.1145/1083063.1083088},
  groups    = {acm},
  isbn      = {1595930396},
  keywords  = {self-adaptive service oriented architecture, integration faults, web services},
  location  = {St. Louis, Missouri},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1083063.1083088},
}

@InProceedings{Gabriele2010,
  author    = {Gabriele, Alessio and Lupone, Michelangelo and Inverardi, Paola and Pelliccione, Patrizio},
  title     = {Ad-Opera: Music-Inspired Self-Adaptive Systems},
  booktitle = {Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research},
  year      = {2010},
  series    = {FoSER ’10},
  pages     = {119–124},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {These days, systems are emerging as agglomerations of software, hardware and people. They are highly distributed, heterogeneous, context-aware, mobile, and adaptive to resource availability and requirements evolution. New computing paradigms for such systems are required. AD-OPERA proposes radically new approaches to software engineering, based on investigation of, and inspiration derived from, a specific class of self-adaptive systems: adaptive music. In adaptive music, the interaction with the audience and with the environment plays an active role in the composition process. The musical work is fully defined only at execution time depending on context available resources, and only after appropriate user intervention. Nevertheless, the self-adaptation must ensure the character of the music desired by the artist, called style. The AD-OPERA new computing paradigm will yield the following main novelties: (i) late specification that permits the under-specification of parts of the system by delaying their completion to runtime, (ii) context as first class entity that tightly couples the context to the system computational state, (iii) explicit support for self-adaptation that views adaptation as a pervasive normality in the system's behavior, rather than as the exception.},
  doi       = {10.1145/1882362.1882388},
  groups    = {acm},
  isbn      = {9781450304276},
  keywords  = {music-inspired research, multi-disciplinary research, ubiquitous computing., self-adaptive systems},
  location  = {Santa Fe, New Mexico, USA},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1882362.1882388},
}

@InProceedings{Bencomo2014,
  author    = {Bencomo, Nelly and Belaggoun, Amel},
  title     = {A World Full of Surprises: Bayesian Theory of Surprise to Quantify Degrees of Uncertainty},
  booktitle = {Companion Proceedings of the 36th International Conference on Software Engineering},
  year      = {2014},
  series    = {ICSE Companion 2014},
  pages     = {460–463},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In the specific area of Software Engineering (SE) for self-adaptive systems (SASs) there is a growing research awareness about the synergy between SE and Artificial Intelligence (AI). However, just few significant results have been published so far. In this paper, we propose a novel and formal Bayesian definition of surprise as the basis for quantitative analysis to measure degrees of uncertainty and deviations of self-adaptive systems from normal behavior. A surprise measures how observed data affects the models or assumptions of the world during runtime. The key idea is that a "surprising'' event can be defined as one that causes a large divergence between the belief distributions prior to and posterior to the event occurring. In such a case the system may decide either to adapt accordingly or to flag that an abnormal situation is happening. In this paper, we discuss possible applications of Bayesian theory of surprise for the case of self-adaptive systems using Bayesian dynamic decision networks.},
  doi       = {10.1145/2591062.2591118},
  groups    = {acm},
  isbn      = {9781450327688},
  keywords  = {self-adaptation, bayesian surprise, bayesian networks, uncertainty},
  location  = {Hyderabad, India},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2591062.2591118},
}

@InProceedings{Becker2013,
  author    = {Becker, Matthias and Luckey, Markus and Becker, Steffen},
  title     = {Performance Analysis of Self-Adaptive Systems for Requirements Validation at Design-Time},
  booktitle = {Proceedings of the 9th International ACM Sigsoft Conference on Quality of Software Architectures},
  year      = {2013},
  series    = {QoSA ’13},
  pages     = {43–52},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptation allows continuously running software systems to operate in changing and uncertain contexts while meeting their requirements in a broad range of contexts, e.g., from low to high load situations. As a consequence, requirements for self-adaptive systems are more complex than requirements for static systems as they have to explicitly address properties of the self-adaptation layer. While approaches exist in the literature to capture this new type of requirements formally, their achievement cannot be analyzed in early design phases yet. In this paper, we apply RELAX to formally specify non-functional requirements for self-adaptive systems. We then apply our model-based SimuLizar approach for a semi-automatic analysis to test whether the self-adaptation layer ensures that these non-functional requirements are met. We evaluate our approach on the design of a proof-of-concept load balancer system. As this evaluation demonstrates, we can iteratively improve our system design by improving unsatisfactory self-adaption rules.},
  doi       = {10.1145/2465478.2465489},
  groups    = {acm},
  isbn      = {9781450321266},
  keywords  = {requirements, performance analysis, performance engineering, self-adaptive},
  location  = {Vancouver, British Columbia, Canada},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2465478.2465489},
}

@InProceedings{Ahmad2014,
  author    = {Ahmad, Aakash and Babar, Muhammad Ali},
  title     = {Towards a Pattern Language for Self-Adaptation of Cloud-Based Architectures},
  booktitle = {Proceedings of the WICSA 2014 Companion Volume},
  year      = {2014},
  series    = {WICSA ’14 Companion},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Cloud computing enables organisations to deploy their software systems over a pool of available services -- exploiting pay-per-use models -- rather than upfront purchase of an overprovisioned infrastructure. In an architectural context for cloud systems that demand elasticity in terms of service availability, reliability, and efficiency, there is a need to capitalise on the 'build-once, use-often' solutions that support reuse-driven self-adaptations of cloud-based architectures. We support the composition and application of a pattern language that exploits adaptation patterns and their relations to support 'adaptation-off-the-shelf' for cloud-based software architectures. We unify the concepts of software repository mining and software evolution to support the composition and application of an adaptation pattern language. First, we exploit the software repository mining concepts by investigating adaptation logs to empirically discover architecture adaptation patterns and their relations. Second, we utilise the software evolution techniques for self-adaptation of cloud architectures guided by a systematic selection and application of adaptation patterns. In the context of the IBM'S MAPE-K model for self-adaptation, we propose reusable policies for self-adaptive cloud architectures. Architectural adaptation knowledge in the proposed pattern language is expressed as a formalised collection of interconnected-patterns. Individual patterns in the language build on each other to provide a generic and reusable solution to address the recurring adaptation problems. In future, we focus on an incremental evolution of pattern language by discovering new patterns from adaptation logs over time.},
  articleno = {1},
  doi       = {10.1145/2578128.2578227},
  groups    = {acm},
  isbn      = {9781450325233},
  keywords  = {patterns, maintenance & evolution, software architecture, self-adaptive system, cloud computing, adaptation pattern language},
  location  = {Sydney, Australia},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2578128.2578227},
}

@InProceedings{Iftikhar2014,
  author    = {Iftikhar, M. Usman and Weyns, Danny},
  title     = {Assuring System Goals under Uncertainty with Active Formal Models of Self-Adaptation},
  booktitle = {Companion Proceedings of the 36th International Conference on Software Engineering},
  year      = {2014},
  series    = {ICSE Companion 2014},
  pages     = {604–605},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Designing software systems with uncertainties, such as incomplete knowledge about changing system goals, is challenging. One approach to handle uncertainties is self-adaptation, where a system consists of a managed system and a managing system that realizes a feedback loop. The promise of self-adaptation is to enable a system to adapt itself realizing the system goals, regarding uncertainties. To realize this promise it is critical to provide assurances for the self-adaptive behaviours. Several approaches have been proposed that exploit formal methods to provide these assurances. However, an integrated approach that combines: (1) seamless integration of offline and online verification (to deal with inherent limitations of verification), with (2) support for runtime evolution of the system (to deal with new or changing goals) is lacking. In this paper, we outline a new approach named Active FORmal Models of Self-adaptation (ActivFORMS) that aims to deal with these challenges. In ActivFORMS, the formal models of the managing system are directly deployed and executed to realize self-adaptation, guaranteeing the verified properties. Having the formal models readily available at runtime paves the way for: (1) incremental verification during system execution, and (2) runtime evolution of the self-adaptive system. Experiences with a robotic system show promising results.},
  doi       = {10.1145/2591062.2591137},
  groups    = {acm},
  isbn      = {9781450327688},
  keywords  = {verification, Self-adaptive systems, formal models at runtime},
  location  = {Hyderabad, India},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2591062.2591137},
}

@InProceedings{Casanova2014,
  author    = {Casanova, Paulo and Garlan, David and Schmerl, Bradley and Abreu, Rui},
  title     = {Diagnosing Unobserved Components in Self-Adaptive Systems},
  booktitle = {Proceedings of the 9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2014},
  series    = {SEAMS 2014},
  pages     = {75–84},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Availability is an increasingly important quality for today's software-based systems and it has been successfully addressed by the use of closed-loop control systems in self-adaptive systems. Probes are inserted into a running system to obtain information and the information is fed to a controller that, through provided interfaces, acts on the system to alter its behavior. When a failure is detected, pinpointing the source of the failure is a critical step for a repair action. However, information obtained from a running system is commonly incomplete due to probing costs or unavailability of probes. In this paper we address the problem of fault localization in the presence of incomplete system monitoring. We may not be able to directly observe a component but we may be able to infer its health state. We provide formal criteria to determine when health states of unobservable components can be inferred and establish formal theoretical bounds for accuracy when using any spectrum-based fault localization algorithm.},
  doi       = {10.1145/2593929.2593946},
  groups    = {acm},
  isbn      = {9781450328647},
  keywords  = {Monitoring, Self-adaptive systems, Diagnostics},
  location  = {Hyderabad, India},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2593929.2593946},
}

@InProceedings{Khakpour2019,
  author    = {Khakpour, Narges and Skandylas, Charilaos and Nariman, Goran Saman and Weyns, Danny},
  title     = {Towards Secure Architecture-Based Adaptations},
  booktitle = {Proceedings of the 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2019},
  series    = {SEAMS ’19},
  pages     = {114–125},
  publisher = {IEEE Press},
  abstract  = {As any software system, a self-adaptive system is subject to security threats. However, applying self-adaptation may introduce additional threats. So far, little research has been devoted to this important problem. In this paper, we propose an approach for vulnerability analysis of architecture-based adaptations in self-adaptive systems using threat modeling and analysis techniques. To this end, we specify components' vulnerabilities and the system architecture formally and generate an attack model that describes the attacker's strategies to attack the system by exploiting different vulnerabilities. We use a set of security metrics to quantitatively assess the security risks of adaptations based on the produced attack model which enables the system to consider security aspects while choosing an adaptation to apply to the system. We automate and incorporate our approach into the Rainbow framework, allowing for secure architectural adaptations at runtime. To evaluate the effectiveness of our approach, we apply it on a simple document storage system and on the ZNN system.},
  doi       = {10.1109/SEAMS.2019.00023},
  groups    = {acm},
  keywords  = {vulnerability analysis, graph-based threat models, self-adaptation, security metrics},
  location  = {Montreal, Quebec, Canada},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2019.00023},
}

@InProceedings{Schmerl2016,
  author    = {Schmerl, Bradley and Gennari, Jeffrey and C\'{a}mara, Javier and Garlan, David},
  title     = {Raindroid: A System for Run-Time Mitigation of Android Intent Vulnerabilities [Poster]},
  booktitle = {Proceedings of the Symposium and Bootcamp on the Science of Security},
  year      = {2016},
  series    = {HotSos ’16},
  pages     = {115–117},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Modern frameworks are required to be extendable as well as secure. However, these two qualities are often at odds. In this poster we describe an approach that uses a combination of static analysis and run-time management, based on software architecture models, that can improve security while maintaining framework extendability. We implement a prototype of the approach for the Android platform. Static analysis identifies the architecture and communication patterns among the collection of apps on an Android device and which communications might be vulnerable to attack. Run-time mechanisms monitor these potentially vulnerable communication patterns, and adapt the system to either deny them, request explicit approval from the user, or allow them.},
  doi       = {10.1145/2898375.2898389},
  groups    = {acm},
  isbn      = {9781450342773},
  keywords  = {self-adaptation, software architecture, security},
  location  = {Pittsburgh, Pennsylvania},
  numpages  = {3},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2898375.2898389},
}

@InProceedings{Florio2015,
  author    = {Florio, Luca},
  title     = {Decentralized Self-Adaptation in Large-Scale Distributed Systems},
  booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  year      = {2015},
  series    = {ESEC/FSE 2015},
  pages     = {1022–1025},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The evolution of technology is leading to a world where computational systems are made of a huge number of components spread over a logical network: these components operate in a highly dynamic and unpredictable environment, joining or leaving the system and creating connections between them at runtime. This scenario poses new challenges to software engineers that have to design and implement such complex systems. We want to address this problem, designing and developing an infrastructure, GRU, that uses self-adaptive decentralized techniques to manage large-scale distributed systems. GRU will help developers to focus on the functional part of their application instead of the needed self-adaptive infrastructure. We aim to evaluate our project with concrete case studies, providing evidence on the validity of our approach, and with the feedback provided by developers that will test our system. We believe this approach can contribute to fill the gap between the theoretical study of self-adaptive systems and their application in a production context.},
  doi       = {10.1145/2786805.2803192},
  groups    = {acm},
  isbn      = {9781450336758},
  keywords  = {Decentralized, Self-Adaptive, Docker, Microservices},
  location  = {Bergamo, Italy},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2786805.2803192},
}

@InProceedings{Rivera2019,
  author    = {Rivera, Luis F. and Jim\'{e}nez, Miguel and Angara, Prashanti and Villegas, Norha M. and Tamura, Gabriel and M\"{u}ller, Hausi A.},
  title     = {Towards Continuous Monitoring in Personalized Healthcare through Digital Twins},
  booktitle = {Proceedings of the 29th Annual International Conference on Computer Science and Software Engineering},
  year      = {2019},
  series    = {CASCON ’19},
  pages     = {329–335},
  address   = {USA},
  publisher = {IBM Corp.},
  abstract  = {Continuous and effective monitoring of chronic diseases and their associated treatments might have a decisive impact on reducing risks and improving life quality of patients. This, however, demands new and innovative methods for engineering systems that support the required capabilities. Research on the application of the novel concept of Digital Twin (DT) in healthcare might provide the means to revolutionize traditional medical practices. A DT comprises a set of virtual representations of both the structural elements and dynamics of any physical asset (e.g., a patient) throughout its lifecycle. In the healthcare domain, it might represent a significan step forward towards tightening and improving the interactions between systems, caregivers and patients. Moreover, integrating data-driven methods (e.g., Machine Learning) and DT could serve as a noteworthy mechanism to not only track patients' health continuously, but also to evaluate the application and evolution of medical treatments virtually. In this paper, we describe our vision for the application of DT in precision medicine. Our contributions are twofold. First, we describe our initial ideas for a reference model that leverages DT capabilities and research advances in self-adaptive systems and autonomic computing to engineer smart and fl xible software systems in healthcare. We expect these systems to alleviate complexity and assist in the planning and decision-making processes when applying medical treatments to patients by healthcare professionals. Then, we elaborate on the definitio of internal structures for DT to support precision medicine techniques in the context of continuous monitoring and personalized data-driven medical treatments.},
  groups    = {acm},
  keywords  = {mhealth, personalized healthcare, adaptive context monitoring, models at run-time, digital twin, self-adaptive systems, precision medicine, software as a medical device, healthcare, autonomic computing},
  location  = {Toronto, Ontario, Canada},
  numpages  = {7},
}

@Article{Mamei2009,
  author     = {Mamei, Marco and Zambonelli, Franco},
  title      = {Programming Pervasive and Mobile Computing Applications: The TOTA Approach},
  journal    = {ACM Trans. Softw. Eng. Methodol.},
  year       = {2009},
  volume     = {18},
  number     = {4},
  month      = jul,
  issn       = {1049-331X},
  abstract   = {Pervasive and mobile computing call for suitable middleware and programming models to support the activities of complex software systems in dynamic network environments. In this article we present TOTA (“Tuples On The Air”), a novel middleware and programming approach for supporting adaptive context-aware activities in pervasive and mobile computing scenarios. The key idea in TOTA is to rely on spatially distributed tuples, adaptively propagated across a network on the basis of application-specific rules, for both representing contextual information and supporting uncoupled interactions between application components. TOTA promotes a simple way of programming that facilitates access to distributed information, navigation in complex environments, and the achievement of complex coordination tasks in a fully distributed and adaptive way, mostly freeing programmers and system managers from the need to take care of low-level issues related to network dynamics. This article includes both application examples to clarify concepts and performance figures to show the feasibility of the approach},
  address    = {New York, NY, USA},
  articleno  = {15},
  doi        = {10.1145/1538942.1538945},
  groups     = {acm},
  issue_date = {July 2009},
  keywords   = {self-organization, middleware, self-adaptation, tuple spaces, coordination, mobile computing, Pervasive computing},
  numpages   = {56},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/1538942.1538945},
}

@InProceedings{Salvaneschi2011,
  author    = {Salvaneschi, Guido and Ghezzi, Carlo and Pradella, Matteo},
  title     = {JavaCtx: Seamless Toolchain Integration for Context-Oriented Programming},
  booktitle = {Proceedings of the 3rd International Workshop on Context-Oriented Programming},
  year      = {2011},
  series    = {COP ’11},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Context-oriented programming is an emerging paradigm addressing at the language level the issue of dynamic software adaptation and modularization of context-specific concerns. In this paper we propose JavaCtx, a tool which employs coding conventions to generate the context-aware semantics for Java programs and subsequently weave it into the application. The contribution of JavaCtx is twofold: the design of a set of coding conventions which allow to write context-oriented software in plain Java and the concept of context-oriented semantics injection, which allows to introduce the context-aware semantics through standard aspect-oriented programming. Both of these points allow to seamless integrate JavaCtx in the existing industrial-strength appliances and so ease the development of context-oriented software in consolidated industrial settings.},
  articleno = {4},
  doi       = {10.1145/2068736.2068740},
  groups    = {acm},
  isbn      = {9781450308915},
  keywords  = {context-oriented programming, context, self-adaptive software, aspect-oriented programming},
  location  = {Lancaster, United Kingdom},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2068736.2068740},
}

@InProceedings{Whittle2010,
  author    = {Whittle, Jon and Simm, Will and Ferrario, Maria-Angela},
  title     = {On the Role of the User in Monitoring the Environment in Self-Adaptive Systems: A Position Paper},
  booktitle = {Proceedings of the 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2010},
  series    = {SEAMS ’10},
  pages     = {69–74},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems (SASs) have the ability to reconfigure their behavior to respond to changing external conditions. A key element of a SAS, therefore, is how to monitor the environment so that appropriate adaptations can be triggered. In complex systems, monitoring the environment in its entirety is either impossible or too expensive. As a result, some adaptations are not possible because there is no monitor in place to trigger them. This paper discusses the role of human input, given as speech or text, as a way to provide environmental information to a SAS. The idea is that, given the limitations of monitoring the environment in full, human commentary can potentially be used to build up a more complete picture of the operating context of a SAS. The paper describes existing technology that could be used to realize this idea and describes a number of scenarios where the idea could be useful.},
  doi       = {10.1145/1808984.1808992},
  groups    = {acm},
  isbn      = {9781605589718},
  keywords  = {requirements, smart homes, self-adaptive systems},
  location  = {Cape Town, South Africa},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1808984.1808992},
}

@InProceedings{Sykes2010,
  author    = {Sykes, Daniel and Heaven, William and Magee, Jeff and Kramer, Jeff},
  title     = {Exploiting Non-Functional Preferences in Architectural Adaptation for Self-Managed Systems},
  booktitle = {Proceedings of the 2010 ACM Symposium on Applied Computing},
  year      = {2010},
  series    = {SAC ’10},
  pages     = {431–438},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Among the many challenges of engineering dependable, self-managed, component-based systems is their need to make informed decisions about adaptive reconfigurations in response to changing requirements or a changing environment. Such decisions may be made on the basis of non-functional or QoS aspects of reconfiguration in addition to the purely functional properties needed to meet a goal. We present a practical approach for using non-functional information to guide a procedure for assembling, and subsequently modifying, configurations of software components, and compare the performance of two variants of the approach. In addition, we outline a scheme for monitoring non-functional properties in the running system such that more accurate information can be utilised in the next adaptation.},
  doi       = {10.1145/1774088.1774180},
  groups    = {acm},
  isbn      = {9781605586397},
  keywords  = {dynamic reconfiguration, software architecture, autonomous systems, self-adaptive, non-functional properties},
  location  = {Sierre, Switzerland},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1774088.1774180},
}

@InProceedings{Zanardi2011,
  author    = {Zanardi, Valentina and Capra, Licia},
  title     = {Dynamic Updating of Online Recommender Systems via Feed-Forward Controllers},
  booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2011},
  series    = {SEAMS ’11},
  pages     = {11–19},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Recommender systems have become an essential software component of many online businesses, supporting customers in finding the items (e.g., books on Amazon, movies on Netflix, songs on Last.fm) they are interested in. Key to their success is the level of accuracy they achieve: the more precisely they can predict how much a customer will enjoy an item, the higher the profit that the business will make (e.g., in terms of more purchases). In quantifying the accuracy of recommender systems, the evaluation methodology followed by researchers has so far neglected an important aspect: that these businesses grow continuously over time, both in terms of users and items. The data structures used by the recommender system to compute predictions become stale and thus have to be updated regularly. Intuitively, the more often the data structures are being updated, the higher the accuracy achieved, but the higher the computational cost afforded, because of the extremely large volume of data being handled. System administrators often perform the update at fixed intervals of time (e.g., weekly, fortnightly), in an effort to balance accuracy versus cost. We argue that such an approach benefits neither accuracy nor cost, as businesses do not grow linearly in time, thus risking the fixed update interval to be at times too coarse (with negative impact on accuracy), and at other times too fine grained (with negative impact on cost). We thus advocate for a self-monitoring and self-adaptive approach, whereby the system monitors its own growth over time, estimates the loss in accuracy it would endure if an update were not being performed based on the observed growth, and dynamically decides whether the benefit of performing an update (accuracy) outweighs its computational cost. Using real data from the Bibsonomy website, we demonstrate how this simple technique enables system administrators to transparently balance these two conflicting requirements.},
  doi       = {10.1145/1988008.1988011},
  groups    = {acm},
  isbn      = {9781450305754},
  keywords  = {self-monitoring, recommender systems, self-adaptation},
  location  = {Waikiki, Honolulu, HI, USA},
  numpages  = {9},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988011},
}

@InProceedings{Iftikhar2014a,
  author    = {Iftikhar, M. Usman and Weyns, Danny},
  title     = {ActivFORMS: Active Formal Models for Self-Adaptation},
  booktitle = {Proceedings of the 9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2014},
  series    = {SEAMS 2014},
  pages     = {125–134},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptation enables a software system to deal autonomously with uncertainties, such as dynamic operating conditions that are difficult to predict or changing goals. A common approach to realize self-adaptation is with a MAPE-K feedback loop that consists of four adaptation components: Monitor, Analyze, Plan, and Execute. These components share Knowledge models of the managed system, its goals and environment. To provide guarantees of the adaptation goals, state of the art approaches propose using formal models of the knowledge. However, less attention is given to the formalization of the adaptation components themselves, which is important to provide guarantees of correctness of the adaptation behavior (e.g., does the execute component execute the plan correctly?). We propose Active FORmal Models for Self-adaptation (ActivFORMS) that uses an integrated formal model of the adaptation components and knowledge models. The formal model is directly executed by a virtual machine to realize adaptation, hence active model. The contributions of ActivFORMS are: (1) the approach assures that the adaptation goals that are verified offline are guaranteed at runtime, and (2) it supports dynamic adaptation of the active model to support changing goals. We show how we have applied ActivFORMS for a small-scale robotic system.},
  doi       = {10.1145/2593929.2593944},
  groups    = {acm},
  isbn      = {9781450328647},
  keywords  = {verification, formal models at runtime, Self-adaptive systems},
  location  = {Hyderabad, India},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2593929.2593944},
}

@InProceedings{Castaneda2014,
  author    = {Casta\~{n}eda, Lorena and Villegas, Norha M. and M\"{u}ller, Hausi A.},
  title     = {Self-Adaptive Applications: On the Development of Personalized Web-Tasking Systems},
  booktitle = {Proceedings of the 9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2014},
  series    = {SEAMS 2014},
  pages     = {49–54},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Personalized Web-Tasking (PWT) proposes the automation of user-centric and repetitive web interactions to assist users in the fulfilment of personal goals using internet systems. In PWT, both personal goals and internet systems are affected by unpredictable changes in user preferences, situations, system infrastructures and environments. Therefore, self-adaptation enhanced with dynamic context monitoring is required to guarantee the effectiveness of PWT systems that, despite context uncertainty, must guarantee the accomplishment of personal goals and deliver pleasant user experiences. This position paper describes our approach to the development of PWT systems, which relies on self-adaptation and its enabling technologies. In particular, it presents our runtime modelling approach that is comprised of our PWT Ontology and Goal-oriented Context-sensitive web-tasking (GCT) models, and the way we exploit previous SEAMS contributions developed in our research group, the DYNAMICO reference model and the SmarterContext Monitoring Infrastructure and Reasoning Engine. The main goal of this paper is to demonstrate how the most crucial challenges in the engineering of PWT systems can be addressed by implementing them as self-adaptive software.},
  doi       = {10.1145/2593929.2593942},
  groups    = {acm},
  isbn      = {9781450328647},
  keywords  = {Personalized Web-Tasking, User-Centric, Context-Awareness, Runtime Models, Self-Adaptive Systems},
  location  = {Hyderabad, India},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2593929.2593942},
}

@InProceedings{MotaMoura2019,
  author    = {da Mota Moura, Ana Maria and de Oliveira, Romeu Ferreira and Fernandes, Eduardo and de Lacerda Caetano, Lauro and Manoel, Luciene and do Prado Leite, Julio Cesar Sampaio},
  title     = {Improving Urban Mobility for the Visually Impaired Using the Awareness Quality},
  booktitle = {Proceedings of the XVIII Brazilian Symposium on Software Quality},
  year      = {2019},
  series    = {SBQS’19},
  pages     = {59–68},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Urban mobility for disabled people is a hard challenge. The technology of the Internet of Things (IoT) might empower these individuals by contributing to their safety and security. In the case of the visually impaired, smart canes are critical components for tackling the challenge of mobility for this population. These types of devices, when integrated into the IoT ecology, may augment their effectiveness. However, this integration is tricky, and we should plan it accordingly. We show how the use of quality requirements (NonFunctional Requirements) can contribute to the development of these types of systems. In this context, self-adaptive systems may improve the solution. To properly accomplish the expected benefits from self-adaptation, we demonstrate how the reuse of an awareness catalog contributes to the derivation of modular software architecture. Our demonstration focus on a real self-adaptive system, which was re-engineered to connect better the different parts of an IoT solution that supports urban mobility for the visually impaired.},
  doi       = {10.1145/3364641.3364649},
  groups    = {acm},
  isbn      = {9781450372824},
  keywords  = {Self-Adaptive system, Non-functional requirement, Awareness},
  location  = {Fortaleza, Brazil},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3364641.3364649},
}

@InProceedings{Vassev2012,
  author    = {Vassev, Emil and Hinchey, Mike and Gaudin, Benoit},
  title     = {Knowledge Representation for Self-Adaptive Behavior},
  booktitle = {Proceedings of the Fifth International C* Conference on Computer Science and Software Engineering},
  year      = {2012},
  series    = {C3S2E ’12},
  pages     = {113–117},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {An autonomic system is considered to be a self-adaptive system that changes its behavior in response to stimuli from its execution and operational environment. Such behavior is considered autonomic and self-adaptive and is intended to drive intelligent systems in situations requiring adaptation. Such systems encapsulate rules, constraints and mechanisms for self-adaptation and acquire and process knowledge about themselves and their environment. In this paper, an approach to knowledge representation and reasoning for self-adaptive behavior is presented. The approach is formal and demonstrates how knowledge representation and reasoning help to establish the vital connection between knowledge, perception, and actions realizing the self-adaptive behavior. The knowledge is used against the perception of the world to generate appropriate actions in compliance to some goals and beliefs.},
  doi       = {10.1145/2347583.2347599},
  groups    = {acm},
  isbn      = {9781450310840},
  keywords  = {self-adaptation, knowledge representation, reasoning},
  location  = {Montreal, Quebec, Canada},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2347583.2347599},
}

@InProceedings{Balasubramaniam2004,
  author    = {Balasubramaniam, Dharini and Morrison, Ron and Mickan, Kath and Kirby, Graham and Warboys, Brian and Robertson, Ian and Snowdon, Bob and Greenwood, R. Mark and Seet, Wykeen},
  title     = {Support for Feedback and Change in Self-Adaptive Systems},
  booktitle = {Proceedings of the 1st ACM SIGSOFT Workshop on Self-Managed Systems},
  year      = {2004},
  series    = {WOSS ’04},
  pages     = {18–22},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems modify their own behaviour in response to stimuli from their operating environments. The major policy considerations for such systems are determining what, when and how adaptations should be carried out. This paper presents mechanisms for feedback and change that support policy decisions for self-adaptation within a computationally complete architecture description language based on the π-calculus. Our contribution is support for feedback through software-encoded probes, gauges and an event distribution network together with support for change through decomposition, reification, reflection, recomposition and hyper-code.},
  doi       = {10.1145/1075405.1075409},
  groups    = {acm},
  isbn      = {1581139896},
  keywords  = {recomposition, composition, adaptation, self-adaptive systems, feedback, hyper-code, software architectures, reflection, policy, constraints, reification, probes, decomposition, mechanism, autonomics},
  location  = {Newport Beach, California},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1075405.1075409},
}

@InProceedings{Lloyd2017,
  author    = {Lloyd, Eric and Huang, Shihong and Tognoli, Emmanuelle},
  title     = {Improving Human-in-the-Loop Adaptive Systems Using Brain-Computer Interaction},
  booktitle = {Proceedings of the 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2017},
  series    = {SEAMS ’17},
  pages     = {163–174},
  publisher = {IEEE Press},
  abstract  = {Although self-adaptive systems try to automate operation and reconfiguration, many such systems can benefit from human involvement in the adaptation process, especially for uncertain circumstances. For such "human-in-the-loop" adaptive systems, a critical challenge is to determine whether, when and how to include the human. Existing research has modeled the benefit of input from human mental states, e.g., variables from the Opportunity-Willingness-Capability (OWC) model, but fell short of operational implementations. The latter require unobtrusive measurement of human mental states. As a proof-of-concept, we conceptualized a self-adaptive system for stock prediction, which is fed with stock data, behavioral and neural input (electroencephalographic neuromarkers) to dynamically assess OWC variables and to predict if a human would likely enhance stock market buy/sell decision. We identified neural activities related to the OWC model and demonstrated enhanced outcome from adaptive involvement of the human. Both human and computer benefit from optimized (at time autonomous or cooperative) interactions. This paper illustrates one step forward in the evolution of software systems: from inception as programs that relied heavily on human intervention, to self-adaptive systems that aimed to function autonomously, and finally now in a third co-adaptive era that involves very close symbiosis of human and computer into cooperative tasks.},
  doi       = {10.1109/SEAMS.2017.1},
  groups    = {acm},
  isbn      = {9781538615508},
  keywords  = {human-in-the-loop, brain computer interface, co-adaptive, self-adaptive, EEG, neuromarkers, brain-computer interface, BCI},
  location  = {Buenos Aires, Argentina},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2017.1},
}

@InProceedings{Piechnick2015,
  author    = {Piechnick, Christian and G\"{o}tz, Sebastian and Sch\"{o}ne, Rene and A\ss{}mann, Uwe},
  title     = {Model-Driven Multi-Quality Auto-Tuning of Robotic Applications},
  booktitle = {Proceedings of the 2015 Joint MORSE/VAO Workshop on Model-Driven Robot Software Engineering and View-Based Software-Engineering},
  year      = {2015},
  series    = {MORSE/VAO ’15},
  pages     = {35–40},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {For the Simultaneous Localization and Mapping (SLAM) problem, many implementations exist, which meet different requirements w.r.t. non-functional properties (e.g., performance). If those requirements change during runtime, the application should change the SLAM implementation. Implementing the selection of the optimal SLAM-algorithms for robots by hand is time consuming and leads to bad code maintainability by mixing application and adaptation logic. Moreover, the realization of the optimization in code requires the developer to re-implement parts of general purpose optimizers, which impairs reusability. An external adaptation logic selecting the optimal SLAM algorithm addresses the maintainability and programmability issues. A model-driven approach for both, application and selection problem, highly increases reusability. To reach these goals, we propose to use Multi-Quality Auto-Tuning (MQuAT), a model-driven approach to build and operate self-optimizing systems following the Models@run.time paradigm. We evaluate our approach by a case study, where robots have to choose between several variants of a distributed SLAM algorithm.},
  doi       = {10.1145/2802059.2802063},
  groups    = {acm},
  isbn      = {9781450336147},
  keywords  = {MDA, Energy-Auto Tuning, Localization, Energy Optimization, Self-Adaptation},
  location  = {L'Aquila, Italy},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2802059.2802063},
}

@InProceedings{Cuesta2016,
  author    = {Cuesta, Carlos E. and Navarro, Elena and Zdun, Uwe},
  title     = {Synergies of System-of-Systems and Microservices Architectures},
  booktitle = {Proceedings of the International Colloquium on Software-Intensive Systems-of-Systems at 10th European Conference on Software Architecture},
  year      = {2016},
  series    = {SiSoS@ECSA ’16},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Systems-of-Systems (SoS) are being widely embraced by both practitioners and researchers. They share properties such as distribution, evolutionary development (i.e., openness), operational and managerial independence, and emergent behavior. Those properties imply that any element (system) in an SoS is able to operate independently. Similarly, microservices are suggested as a system architecture with a strong emphasis on independence, as containers provide the required degree of isolation, and their infrastructure automation frameworks provide the means to deploy them as needed. In a microservices architecture, even data is independently managed; every service maintains its own datastore, and transaction-less interaction is emphasized. Our hypothesis in this work is that while the two approaches have been treated separately in the literature so far, they share many common characteristics, and it would be fruitful to investigate their synergies. In this paper, we analyze to what extent microservices architectures can be understood as a kind of system-of-systems, explaining some of the success of the microservices approach a consequence of their SoS properties. In addition, the best practices proposed for microservices can enable a conscious, controlled, and manageable introduction of SoS concepts into system architectures, if they are needed.},
  articleno = {1},
  doi       = {10.1145/3175731.3176176},
  groups    = {acm},
  isbn      = {9781450363990},
  keywords  = {container, IoT, self-adaptation, scalability, system-of-systems, microservices architecture, emergent behavior},
  location  = {Copenhagen, Denmark},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3175731.3176176},
}

@InProceedings{Yang2014,
  author    = {Yang, Wenhua and Xu, Chang and Liu, Yepang and Cao, Chun and Ma, Xiaoxing and Lu, Jian},
  title     = {Verifying Self-Adaptive Applications Suffering Uncertainty},
  booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  year      = {2014},
  series    = {ASE ’14},
  pages     = {199–210},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive applications address environmental dynamics systematically. They can be faulty and exhibit runtime errors when environmental dynamics are not considered adequately. It becomes more severe when uncertainty exists in their sensing and adaptation to environments. Existing work verifies self-adaptive applications, but does not explicitly consider environmental constraints or uncertainty. This gives rise to inaccurate verification results. In this paper, we address this problem by proposing a novel approach to verifying self-adaptive applications suffering uncertainty in their environmental interactions. It builds Interactive State Machine (ISM) models for such applications and verifies them with explicit consideration of environmental constraints and uncertainty. It then refines verification results by prioritizing counterexamples according to their probabilities. We experimentally evaluated our approach with real-life self-adaptive applications, and the experimental results confirmed its effectiveness. Our approach reported 200-660% more counterexamples than not considering uncertainty, and eliminated all false counterexamples caused by ignoring environmental constraints.},
  doi       = {10.1145/2642937.2642999},
  groups    = {acm},
  isbn      = {9781450330138},
  keywords  = {self-adaptive application, verification, uncertainty},
  location  = {Vasteras, Sweden},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2642937.2642999},
}

@InProceedings{Camilli2018,
  author    = {Camilli, Matteo and Bellettini, Carlo and Capra, Lorenzo},
  title     = {A High-Level Petri Net-Based Formal Model of Distributed Self-Adaptive Systems},
  booktitle = {Proceedings of the 12th European Conference on Software Architecture: Companion Proceedings},
  year      = {2018},
  series    = {ECSA ’18},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Engineering complex distributed self-adaptive systems is a challenging task due to multiple interacting distributed components that monitor and adapt the managed parts operating in a dynamic environment. Therefore, formal methods able to specify and analyze the behavior of decentralized adaptation control by multiple interacting MAPE-K (Monitor, Analyze, Plan, and Execute over a shared Knowledge) components are highly demanded. In this paper we introduce a formal framework for modeling and analyzing self-adaptive systems with decentralized adaptation control. The framework makes use of High-Level Petri nets which represents a sound and expressive formal model for distributed discrete-event systems. We show how to specify in a natural way structural changes that are likely to occur in adaptable and evolvable distributed applications. Our approach supports validation and verification activities to check correctness of the MAPE components. As a proof-of-concepts, we show how to use our framework to model and analyze a self-optimizing cluster management system.},
  articleno = {40},
  doi       = {10.1145/3241403.3241445},
  groups    = {acm},
  isbn      = {9781450364836},
  keywords  = {formal verification, high-level petri nets, distributed systems, self-adaptation, MAPE-K loop, formal modeling},
  location  = {Madrid, Spain},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3241403.3241445},
}

@InProceedings{Chen2014,
  author    = {Chen, Bihuan and Peng, Xin and Yu, Yijun and Nuseibeh, Bashar and Zhao, Wenyun},
  title     = {Self-Adaptation through Incremental Generative Model Transformations at Runtime},
  booktitle = {Proceedings of the 36th International Conference on Software Engineering},
  year      = {2014},
  series    = {ICSE 2014},
  pages     = {676–687},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A self-adaptive system uses runtime models to adapt its architecture to the changing requirements and contexts. However, there is no one-to-one mapping between the requirements in the problem space and the architectural elements in the solution space. Instead, one refined requirement may crosscut multiple architectural elements, and its realization involves complex behavioral or structural interactions manifested as architectural design decisions. In this paper we propose to combine two kinds of self-adaptations: requirements-driven self-adaptation, which captures requirements as goal models to reason about the best plan within the problem space, and architecture-based self-adaptation, which captures architectural design decisions as decision trees to search for the best design for the desired requirements within the contextualized solution space. Following these adaptations, component-based architecture models are reconfigured using incremental and generative model transformations. Compared with requirements-driven or architecture-based approaches, the case study using an online shopping benchmark shows promise that our approach can further improve the effectiveness of adaptation (e.g. system throughput in this case study) and offer more adaptation flexibility.},
  doi       = {10.1145/2568225.2568310},
  groups    = {acm},
  isbn      = {9781450327565},
  keywords  = {requirements, model transformation, architecture, Self-adaptive system, runtime model, design decisions},
  location  = {Hyderabad, India},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2568225.2568310},
}

@InProceedings{Kacem2008,
  author    = {Kacem, Najla Hadj and Kacem, Ahmed Hadj and Jmaiel, Mohamed and Drira, Khalil},
  title     = {Towards Modelling and Analysis of a Coordination Protocol for Dynamic Software Adaptation},
  booktitle = {Proceedings of the 5th International Conference on Soft Computing as Transdisciplinary Science and Technology},
  year      = {2008},
  series    = {CSTST ’08},
  pages     = {499–507},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Software systems are increasingly expected to continue operating at run-time with minimal human interaction. They should consequently be equipped with self-adaptation capabilities in order to adapt themselves in response to changes in their execution conditions. While most of the research in this area focuses on individual parts of an adaptive system, our work leverages on this research but tackles the problem where interdependent and distributed adaptations are concurrently performed. In this paper, we approach behavioural changes of component-based systems in two steps. First, we propose a process to individually adapt one component at a time. Second, we elaborate a coordination protocol to maintain globally consistent state when implementing distributed adaptations. Motivated by the potential benefits of using formalisms, we construct a formal model of our protocol using Coloured Petri Nets in order for an adaptive system to be trusted after adaptation. We verify key behavioural properties and conduct CTL model checking to assess the correctness of the model and thereby the correctness of the protocol.},
  doi       = {10.1145/1456223.1456325},
  groups    = {acm},
  isbn      = {9781605580463},
  keywords  = {coordination protocol, modelling, self-adaptation, analysis, adaptation process, consistency preservation},
  location  = {Cergy-Pontoise, France},
  numpages  = {9},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1456223.1456325},
}

@InProceedings{Santos2020,
  author    = {Santos, Edilton Lima dos and Perrouin, Gilles and Schobbens, Pierre-Yves},
  title     = {STARS: Software Technology for Adaptable and Reusable Systems PhD Research Project},
  booktitle = {Proceedings of the 14th International Working Conference on Variability Modelling of Software-Intensive Systems},
  year      = {2020},
  series    = {VAMOS ’20},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Dynamically Adaptive Systems (DAS) modify their behaviours in response to (sometimes unpredictable) changes in their environment or to the evolution of their own abilities (sensors and actuators). To support adaptation, a reference architecture (such as the MAPE-K model) is paramount. Yet, this is not sufficient as challenges concerning the fine-grained variability management and testability remain. The STARS Ph.D. project aims at developing a variability and context-aware architectural model for DAS that particularly takes into account testability. In particular, we want to adapt tests at runtime in order to assess and prevent the impact of inappropriate adaptations.},
  articleno = {15},
  doi       = {10.1145/3377024.3377033},
  groups    = {acm},
  isbn      = {9781450375016},
  keywords  = {software architecture, software test, self-adapting, MAPE-K loop},
  location  = {Magdeburg, Germany},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3377024.3377033},
}

@InProceedings{Chen2019,
  author    = {Chen, Tao},
  title     = {All versus One: An Empirical Comparison on Retrained and Incremental Machine Learning for Modeling Performance of Adaptable Software},
  booktitle = {Proceedings of the 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2019},
  series    = {SEAMS ’19},
  pages     = {157–168},
  publisher = {IEEE Press},
  abstract  = {Given the ever-increasing complexity of adaptable software systems and their commonly hidden internal information (e.g., software runs in the public cloud), machine learning based performance modeling has gained momentum for evaluating, understanding and predicting software performance, which facilitates better informed self-adaptations. As performance data accumulates during the run of the software, updating the performance models becomes necessary. To this end, there are two conventional modeling methods: the retrained modeling that always discard the old model and retrain a new one using all available data; or the incremental modeling that retains the existing model and tunes it using one newly arrival data sample. Generally, literature on machine learning based performance modeling for adaptable software chooses either of those methods according to a general belief, but they provide insufficient evidences or references to justify their choice. This paper is the first to report on a comprehensive empirical study that examines both modeling methods under distinct domains of adaptable software, 5 performance indicators, 8 learning algorithms and settings, covering a total of 1,360 different conditions. Our findings challenge the general belief, which is shown to be only partially correct, and reveal some of the important, statistically significant factors that are often overlooked in existing work, providing evidence-based insights on the choice.},
  doi       = {10.1109/SEAMS.2019.00029},
  groups    = {acm},
  keywords  = {machine learning, performance modeling, self-adaptive system, software runtime},
  location  = {Montreal, Quebec, Canada},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2019.00029},
}

@Article{Shevtsov2019,
  author     = {Shevtsov, Stepan and Weyns, Danny and Maggio, Martina},
  title      = {SimCA*: A Control-Theoretic Approach to Handle Uncertainty in Self-Adaptive Systems with Guarantees},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2019},
  volume     = {13},
  number     = {4},
  month      = jul,
  issn       = {1556-4665},
  abstract   = {Self-adaptation provides a principled way to deal with software systems’ uncertainty during operation. Examples of such uncertainties are disturbances in the environment, variations in sensor readings, and changes in user requirements. As more systems with strict goals require self-adaptation, the need for formal guarantees in self-adaptive systems is becoming a high-priority concern. Designing self-adaptive software using principles from control theory has been identified as one of the approaches to provide guarantees. In general, self-adaptation covers a wide range of approaches to maintain system requirements under uncertainty, ranging from dynamic adaptation of system parameters to runtime architectural reconfiguration. Existing control-theoretic approaches have mainly focused on handling requirements in the form of setpoint values or as quantities to be optimized. Furthermore, existing research primarily focuses on handling uncertainty in the execution environment. This article presents SimCA*, which provides two contributions to the state-of-the-art in control-theoretic adaptation: (i) it supports requirements that keep a value above and below a required threshold, in addition to setpoint and optimization requirements; and (ii) it deals with uncertainty in system parameters, component interactions, system requirements, in addition to uncertainty in the environment. SimCA* provides guarantees for the three types of requirements of the system that is subject to different types of uncertainties. We evaluate SimCA* for two systems with strict requirements from different domains: an Unmanned Underwater Vehicle system used for oceanic surveillance and an Internet of Things application for monitoring a geographical area. The test results confirm that SimCA* can satisfy the three types of requirements in the presence of different types of uncertainty.},
  address    = {New York, NY, USA},
  articleno  = {17},
  doi        = {10.1145/3328730},
  groups     = {acm},
  issue_date = {July 2019},
  keywords   = {self-adaptation, control theory, SimCA*, UUV, Software, IoT, uncertainty},
  numpages   = {34},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3328730},
}

@InProceedings{Dai2019,
  author    = {Dai, Qing and Li, Qingshan and Wang, Lu},
  title     = {Search-Based Adaptation Planning Using Post-Pareto Optimality Methods},
  booktitle = {Proceedings of the 2019 3rd International Conference on Management Engineering, Software Engineering and Service Sciences},
  year      = {2019},
  series    = {ICMSS 2019},
  pages     = {17–21},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {With the increase of the complexity of modern software and the instability of its running environment, researchers combine the search-based software engineering and self-adaptive software, propose the theory of Search-based Adaptation Planning [1] to assist decision making of self-adaptive software, which would yield a Pareto Set of numerous strategies. Thus, how to analyse and select strategies from the Pareto set need to be studied. Meanwhile, the search-based adaptation Planning theory lacks practical verification. In this paper, a self-adaptive software system with Search-based Adaptation Planning is used as the test case. Three post-optimization methods are applied in the system to analyse and filter strategies. The experiment compares differences between elapsed time, CPU utilization and memory utilization of these methods. The work of this paper provides some suggestions for developers to filter and select strategies from search-based adaptation Planning system.},
  doi       = {10.1145/3312662.3312681},
  groups    = {acm},
  isbn      = {9781450361897},
  keywords  = {post-optimization, self-adaptive software, Search-based Adaptation Planning},
  location  = {Wuhan, China},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3312662.3312681},
}

@InProceedings{Georgas2008,
  author    = {Georgas, John C. and Taylor, Richard N.},
  title     = {Policy-Based Self-Adaptive Architectures: A Feasibility Study in the Robotics Domain},
  booktitle = {Proceedings of the 2008 International Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2008},
  series    = {SEAMS ’08},
  pages     = {105–112},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Robotics is a challenging domain which sometimes exhibits a clear need for self-adaptive capabilities, as such functionality offers the potential for robots to account for their unstable and unpredictable deployment domains. This paper focuses on a feasibility study in applying a policy- and architecture-based approach to the development of self-adaptive robotic systems. We describe two case studies in which we construct self-adaptive Robocode and Mindstorms robots, report on our development experiences, and discuss the challenges we encountered. The paper establishes that it is feasible to apply our approach to the robotics domain, contributes a discussion of the architectural issues we encountered, and further evaluates our general-purpose approach.},
  doi       = {10.1145/1370018.1370038},
  groups    = {acm},
  isbn      = {9781605580371},
  keywords  = {robotic architectures, self-adaptive software},
  location  = {Leipzig, Germany},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1370018.1370038},
}

@InProceedings{Liang2019,
  author    = {Liang, Zhengchuan and Qin, Yi},
  title     = {Generating Environmental Models for Testing Self-Adaptive Systems},
  booktitle = {Proceedings of the 11th Asia-Pacific Symposium on Internetware},
  year      = {2019},
  series    = {Internetware ’19},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems (a.k.a. SASs) are useful but error-prone. This stems from the complexity of the interaction between a self-adaptive system and its running environment. Therefore, a testing approach of self-adaptive system has to consider the system's running environment. However, due to their poor controllability and observability, neither the real environment nor the environmental simulators could support SAS-testing effectively and efficiently. In this paper, we propose a novel approach AutoModel to generate environmental models for testing self-adaptive systems effectively. Our key insight is that a self-adaptive system's execution traces naturally encode the behavior of its running environment, especially for the logic of how the environment interacts with the system. Based on the collected execution traces, our AutoModel approach synthesizes an environmental model and learns the model's reaction logic. The derived environmental model is able to imitate the real environment's behavior in program-environment iteration. Our primitive evaluation on real-world self-adaptive systems validates the effectiveness of our AutoModel approach. The average predictive R-squared value of the generated environmental model's prediction results is 55.0%.},
  articleno = {5},
  doi       = {10.1145/3361242.3361263},
  groups    = {acm},
  isbn      = {9781450377010},
  keywords  = {program-environment interaction, self-adaptive systems, software testing, environmental model},
  location  = {Fukuoka, Japan},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3361242.3361263},
}

@InProceedings{Malakuti2014,
  author    = {Malakuti, Somayeh},
  title     = {Detecting Emergent Interference in Integration of Multiple Self-Adaptive Systems},
  booktitle = {Proceedings of the 2014 European Conference on Software Architecture Workshops},
  year      = {2014},
  series    = {ECSAW ’14},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A system of systems (SoS) is a large-scale concurrent and distributed system whose components are complex systems. An example of SoS is in the domain of self-adaptive systems, where multiple self-adaptive systems must be integrated with each other. As for any other kind of SoS, we face the following question: is there any emergent interference as the result of such integration, which prevents the constituent self-adaptive systems to achieve their goals? Due to the inherent complexity of an SoS, it is not easy to detect emergent interference manually, if possible at all. We study the suitability of formal modeling and verification for detecting emergent interference in an example of SoS, i.e. integration of multiple self-adaptive systems. Model checking reveals that although constituent systems behave correctly when executed individually, they fail to provide correct behavior in an SoS context due to unforeseen interference that emerges.},
  articleno = {24},
  doi       = {10.1145/2642803.2642826},
  groups    = {acm},
  isbn      = {9781450327787},
  keywords  = {mergent behavior, UPPAAL, model checking, self-adaptive systems, systems of systems},
  location  = {Vienna, Austria},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2642803.2642826},
}

@InProceedings{Cooray2010,
  author    = {Cooray, Deshan and Malek, Sam and Roshandel, Roshanak and Kilgore, David},
  title     = {RESISTing Reliability Degradation through Proactive Reconfiguration},
  booktitle = {Proceedings of the IEEE/ACM International Conference on Automated Software Engineering},
  year      = {2010},
  series    = {ASE ’10},
  pages     = {83–92},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Situated software systems are an emerging class of systems that are predominantly pervasive, embedded, and mobile. They are marked with a high degree of unpredictability and dynamism in the execution context. At the same time, such systems often need to satisfy strict reliability requirements. Most current software reliability analysis approaches are not suitable for situated software systems. We propose an approach geared to such systems, which continuously furnishes refined reliability predictions at runtime by incorporating various sources of information. The reliability predictions are leveraged to proactively place the software in the optimal configuration with respect to changing conditions. Our approach considers two representative architectural reconfiguration decisions that impact the system's reliability: reallocation of components to processes and changing the architectural style. We have realized the approach as part of a framework intended for mission-critical settings, called REsilient SItuated SofTware system (RESIST), and evaluated it using a mobile emergency response system.},
  doi       = {10.1145/1858996.1859011},
  groups    = {acm},
  isbn      = {9781450301169},
  keywords  = {mobility, self-adaptation, reliability, software architecture},
  location  = {Antwerp, Belgium},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1858996.1859011},
}

@InProceedings{Swanson2014,
  author    = {Swanson, Jacob and Cohen, Myra B. and Dwyer, Matthew B. and Garvin, Brady J. and Firestone, Justin},
  title     = {Beyond the Rainbow: Self-Adaptive Failure Avoidance in Configurable Systems},
  booktitle = {Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  year      = {2014},
  series    = {FSE 2014},
  pages     = {377–388},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive software systems monitor their state and then adapt when certain conditions are met, guided by a global utility function. In prior work we developed algorithms and conducted a post-hoc analysis demonstrating the possibility of adapting to software failures by judiciously changing configurations. In this paper we present the REFRACT framework that realizes this idea in practice by building on the self-adaptive Rainbow architecture. REFRACT extends Rainbow with new components and algorithms targeting failure avoidance. We use REFRACT in a case study running four independently executing Firefox clients with 36 passing test cases and 7 seeded faults. The study show that workarounds for all but one of the seeded faults are found and the one that is not found never fails -- it is guarded from failing by a related workaround. Moreover, REFRACT finds workarounds for eight configuration-related unseeded failures from tests that were expected to pass (and did under the default configuration). Finally, the data show that when a failure and its workaround are found, configuration guards prevent the failure from appearing again. In a simulation lasting 24 hours we see over 150 guard activations and no failures with workarounds remaining beyond 16 hours.},
  doi       = {10.1145/2635868.2635915},
  groups    = {acm},
  isbn      = {9781450330565},
  keywords  = {Self-Adaptive Software, Configurable Software},
  location  = {Hong Kong, China},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2635868.2635915},
}

@InProceedings{Heinzemann2013,
  author    = {Heinzemann, Christian and Becker, Steffen},
  title     = {Executing Reconfigurations in Hierarchical Component Architectures},
  booktitle = {Proceedings of the 16th International ACM Sigsoft Symposium on Component-Based Software Engineering},
  year      = {2013},
  series    = {CBSE ’13},
  pages     = {3–12},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Mechatronic systems reconfigure the structure of their software architecture, e.g., to avoid hazardous situations or to optimize operational conditions like minimizing their energy consumption. As software architectures are typically build on components, reconfiguration actions need to respect the component structure. This structure should be hierarchical to enable encapsulated components. While many reconfiguration approaches for embedded real-time systems allow the use of hierarchically embedded components, i.e., horizontal composition, none of them offers a modeling and verification solution to take hierarchical composition, i.e., encapsulation, into account. In this paper, we present an extension to our existing modeling language, muml, to enable safe hierarchical reconfigurations. The two main extensions are (a) an adapted variant of the two-phase commit protocol to initiate reconfigurations which maintain component encapsulation and (b) a timed model checking verification approach for instances of our model. We illustrate our approach on a case study in the area of smart railway systems by showing two different use cases of our approach and the verification of their safety properties.},
  doi       = {10.1145/2465449.2465452},
  groups    = {acm},
  isbn      = {9781450321228},
  keywords  = {runtime reconfiguration, modeling, component model, self-adaptive systems},
  location  = {Vancouver, British Columbia, Canada},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2465449.2465452},
}

@InProceedings{He2019,
  author    = {He, Jingxuan and Zhang, Jian and Hui, Zeji},
  title     = {Research on Ultrasonic Positioning Algorithm},
  booktitle = {Proceedings of the 2019 8th International Conference on Software and Computer Applications},
  year      = {2019},
  series    = {ICSCA ’19},
  pages     = {574–578},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {At present, the indoor positioning technology based on the arrival time of ultrasonic wave (TOA) in wireless sensor network (WSN) will lead to low positioning accuracy due to the location error of the beacon node, and the positioning method based on the inertial navigation principle (INS), will increase error with time. To solve this problem, a TOA/INS hybrid location algorithm is proposed by combining the gradient descent algorithm and weighted arithmetic, and the localization range is optimized by improving the ultrasonic sensor. In the system, the blind node carries on the motion sensor to perceives the current motion state, and accumulates the current position of the blind node in each direction of the unit time. At the same time, the ultrasonic signal is transmitted, and the beacon node and the controller are enable to get the current position of the blind node by the signal arrival time difference. The experimental results show that the system can improve the positioning accuracy effectively and achieve the desired effect.},
  doi       = {10.1145/3316615.3316728},
  groups    = {acm},
  isbn      = {9781450365734},
  keywords  = {Weighted fusion, Self-adaption, Indoor localization, Inertial navigation, Ultrasound localization},
  location  = {Penang, Malaysia},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3316615.3316728},
}

@InProceedings{Baresi2014,
  author    = {Baresi, Luciano},
  title     = {Self-Adaptive Systems, Services, and Product Lines},
  booktitle = {Proceedings of the 18th International Software Product Line Conference - Volume 1},
  year      = {2014},
  series    = {SPLC ’14},
  pages     = {2–4},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems, services, and product lines can be seen as different facets of the same problem. Self-adaptation provides the requirements, product lines a conceptual means to frame them, and services a possible technology to implement the resulting systems. This short paper starts presenting an overview of the many solutions proposed for adding self-adaptive capabilities to software systems. It also introduces service-based solutions and software product lines to discuss what self-adaptive systems can borrow from them. The paper proposes then the solutions we have developed so far to contribute to the aforementioned scenario. It touches FLAGS, for eliciting the requirements of these systems, DYNAMO, an example of flexible and dynamic service compositions, and DyBPEL, a means to enact dynamic service-centric product lines. Some final remarks conclude the paper.},
  doi       = {10.1145/2648511.2648512},
  groups    = {acm},
  isbn      = {9781450327404},
  keywords  = {service compositions, self-adaptive systems, software product lines},
  location  = {Florence, Italy},
  numpages  = {3},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2648511.2648512},
}

@InProceedings{Raibulet2017,
  author    = {Raibulet, Claudia and Fontana, Francesca Arcelli},
  title     = {Evaluation of Self-Adaptive Systems: A Women Perspective},
  booktitle = {Proceedings of the 11th European Conference on Software Architecture: Companion Proceedings},
  year      = {2017},
  series    = {ECSA ’17},
  pages     = {23–30},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Statistically, the number of women in computer science is significantly lower than the number of men working in the same domain. This applies also to the subarea of software architectures. We would like to outline that there may be also exceptions: there are more women than men leading and working in the evaluation of autonomic and self-adaptive issues in software systems. In this paper, we introduce seven research approaches involving women in the evaluation of self-adaptive systems. Further, we discuss the heterogeneity of these evaluation approaches from various points of view (e.g., types of systems addressed, types of evaluation, qualitative vs quantitative or static vs dynamic). The paper ends with our thoughts and perspectives on future needs and trends in the evaluation of self-adaptive systems.},
  doi       = {10.1145/3129790.3129825},
  groups    = {acm},
  isbn      = {9781450352178},
  keywords  = {software metrics, metrics, adaptivity, WSA@ECSA, self-adaptive systems, evaluation, quality attributes, women in IT},
  location  = {Canterbury, United Kingdom},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3129790.3129825},
}

@InProceedings{Derakhshanmanesh2011,
  author    = {Derakhshanmanesh, Mahdi and Amoui, Mehdi and O’Grady, Greg and Ebert, J\"{u}rgen and Tahvildari, Ladan},
  title     = {GRAF: Graph-Based Runtime Adaptation Framework},
  booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2011},
  series    = {SEAMS ’11},
  pages     = {128–137},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {One approach for achieving runtime adaptability in software is to use application frameworks that are tailored for the development of self-adaptive systems. In this paper, we present the Graph-based Runtime Adaptation Framework (GRAF), which enables adaptivity by creating, managing, and interpreting graph-based models of software at runtime. Having a generic graph representation in our approach allows for flexible adaptation via query and transformation operations. The framework is especially suited for the migration of legacy applications towards adaptive software and attempts to reduce necessary changes to the original software. As a proof of concept, we conduct a comprehensive case study of migrating the legacy game Jake2 to achieve runtime adaptivity using GRAF.},
  doi       = {10.1145/1988008.1988026},
  groups    = {acm},
  isbn      = {9781450305754},
  keywords  = {model transformation, runtime adaptivity, adaptation framework, models at runtime, self-adaptive software},
  location  = {Waikiki, Honolulu, HI, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988026},
}

@InProceedings{Sykes2008,
  author    = {Sykes, Daniel and Heaven, William and Magee, Jeff and Kramer, Jeff},
  title     = {From Goals to Components: A Combined Approach to Self-Management},
  booktitle = {Proceedings of the 2008 International Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2008},
  series    = {SEAMS ’08},
  pages     = {1–8},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Autonomous or semi-autonomous systems are deployed in environments where contact with programmers or technicians is infrequent or undesirable. To operate reliably, such systems should be able to adapt to new circumstances on their own. This paper describes our combined approach for adaptable software architecture and task synthesis from high-level goals, which is based on a three-layer model. In the uppermost layer, reactive plans are generated from goals expressed in a temporal logic. The middle layer is responsible for plan execution and assembling a configuration of domain-specific software components, which reside in the lowest layer. Moreover, the middle layer is responsible for selecting alternative components when the current configuration is no longer viable for the circumstances that have arisen. The implementation demonstrates that the approach enables us to handle non-determinism in the environment and unexpected failures in software components.},
  doi       = {10.1145/1370018.1370020},
  groups    = {acm},
  isbn      = {9781605580371},
  keywords  = {self-adaptive, dynamic reconfiguration, autonomous systems, software architecture, self-healing},
  location  = {Leipzig, Germany},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1370018.1370020},
}

@InProceedings{Ghezzi2011,
  author    = {Ghezzi, Carlo and Pradella, Matteo and Salvaneschi, Guido},
  title     = {An Evaluation of the Adaptation Capabilities in Programming Languages},
  booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2011},
  series    = {SEAMS ’11},
  pages     = {50–59},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In recent years the need for software applications to adapt to the environment in which they are situated has become common. Beside architectural approaches, language-level support for the development of adaptable and context-aware software have been investigated. Many existing solutions adopt ad hoc programming paradigms such as aspect oriented programming (AOP) or context oriented programming (COP). In this paper we investigate the use of the abstractions offered by traditional object-oriented and functional paradigms for the development of context-adaptable systems. We carry out our analysis along a set of conceptual directions which consider the requirement of functional adaptation beside non functional requirements such as safety and effective modularization. Our analysis were validated though the development of several prototypes of an adaptable cache server which is chosen as the running example through the paper. We provide an estimation of the performance advantages of the techniques based traditional programming languages compared with context-oriented programming.},
  doi       = {10.1145/1988008.1988016},
  groups    = {acm},
  isbn      = {9781450305754},
  keywords  = {context, self-adaptive software, context-oriented programming},
  location  = {Waikiki, Honolulu, HI, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988016},
}

@InProceedings{Calinescu2011,
  author    = {Calinescu, Radu},
  title     = {When the Requirements for Adaptation and High Integrity Meet},
  booktitle = {Proceedings of the 8th Workshop on Assurances for Self-Adaptive Systems},
  year      = {2011},
  series    = {ASAS ’11},
  pages     = {1–4},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Two classes of software that are notoriously difficult to develop on their own are rapidly merging into one. This will affect every key service that we rely upon in modern society, yet a successful merge is unlikely to be achievable using software development techniques specific to either class. This paper explains the growing demand for software capable of both self-adaptation and high integrity, and advocates the use of a collection of "@runtime" techniques for its development, operation and management. We summarise early research into the development of such techniques, and discuss the remaining work required to overcome the great challenge of self-adaptive high-integrity software.},
  doi       = {10.1145/2024436.2024438},
  groups    = {acm},
  isbn      = {9781450308533},
  keywords  = {model checking, high-integrity software, self-adaptive software},
  location  = {Szeged, Hungary},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2024436.2024438},
}

@InProceedings{Salvaneschi2012,
  author    = {Salvaneschi, Guido and Ghezzi, Carlo and Pradella, Matteo},
  title     = {ContextErlang: Introducing Context-Oriented Programming in the Actor Model},
  booktitle = {Proceedings of the 11th Annual International Conference on Aspect-Oriented Software Development},
  year      = {2012},
  series    = {AOSD ’12},
  pages     = {191–202},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adapting systems are becoming widespread in emerging fields such as autonomic, mobile and ubiquitous computing. Context-oriented programming (COP) is a promising language-level solution for the implementation of context-aware, self-adaptive software. However, current COP approaches struggle to effectively manage the asynchronous nature of context provisioning. We argue that, to solve these issues, COP features should be designed to fit nicely in the concurrency model supported by the language. This work presents the design rationale of ContextErlang, which introduces COP in the Actor Model. We provide evidence that ContextErlang constitutes a viable solution to implement context-aware software in a highly concurrent and distributed setting. We discuss a case study and an evaluation of run-time performance.},
  doi       = {10.1145/2162049.2162072},
  groups    = {acm},
  isbn      = {9781450310925},
  keywords  = {context-oriented programming, self-adaptive software, Erlang, OTP platform},
  location  = {Potsdam, Germany},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2162049.2162072},
}

@InProceedings{Sykes2011,
  author    = {Sykes, Daniel and Magee, Jeff and Kramer, Jeff},
  title     = {FlashMob: Distributed Adaptive Self-Assembly},
  booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2011},
  series    = {SEAMS ’11},
  pages     = {100–109},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Autonomous systems need to support dynamic software adaptation in order to handle the complexity and unpredictability of the execution environment, and the changing needs of the end user. Although a number of approaches have been proposed, few address a key issue: that of distribution. In this paper we seek to overcome the limitations of centralised approaches. We build on our previous work on adaptive self-assembly within the three-layer model for autonomous systems to provide a decentralised technique for self-assembly. To achieve this in a fault-tolerant and scalable manner, we use a gossip protocol as a basis. While no central or leader node is aware of the full space of solutions, gossip ensures that agreement on a particular solution - in this case a component configuration - is reached in a logarithmic number of steps with respect to the size of the network.},
  doi       = {10.1145/1988008.1988023},
  groups    = {acm},
  isbn      = {9781450305754},
  keywords  = {software architecture, gossip, self-assembling, distribution, self-adaptive},
  location  = {Waikiki, Honolulu, HI, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988023},
}

@InProceedings{Heinzemann2011,
  author    = {Heinzemann, Christian and Henkler, Stefan},
  title     = {Reusing Dynamic Communication Protocols in Self-Adaptive Embedded Component Architectures},
  booktitle = {Proceedings of the 14th International ACM Sigsoft Symposium on Component Based Software Engineering},
  year      = {2011},
  series    = {CBSE ’11},
  pages     = {109–118},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Component based software engineering aims at re-using components in other systems. This requires a verification whether the component can safely interact with its communication partners in a new environment. Such verification is mandatory in case of safety-critical real-time systems where the communication is characterized by a varying number of components instances all being of the same type. Reuse can be facilitated by separating abstract communication protocol definitions and concrete component implementations. In contrast to standard refinement definitions for real-time systems, our definition explicitly takes varying numbers of communication partners into account. Additionally, we relax the strict conditions of a bisimulation to ease reuse of components. Along with our refinement definition, we provide a formal verification procedure to check for correct refinements which preserves properties verified for the abstract protocol definition. We evaluated our approach using a self-adaptive real-time system from the domain of autonomous train systems. The evaluation results show that checking for correct refinements is more efficient than re-verifying the desired properties on the refined component.},
  doi       = {10.1145/2000229.2000246},
  groups    = {acm},
  isbn      = {9781450307239},
  keywords  = {dynamic structures, refinement, safety-critical systems, self-adaptive systems, verification},
  location  = {Boulder, Colorado, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2000229.2000246},
}

@InProceedings{Macias2018,
  author    = {Mac\'{\i}as, Aurora and Navarro, Elena},
  title     = {An Integrated Approach for Context-Aware Development},
  booktitle = {Proceedings of the 12th European Conference on Software Architecture: Companion Proceedings},
  year      = {2018},
  series    = {ECSA ’18},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Mobile devices are almost omnipresent in our lives and pervasive or ubiquitous systems are becoming increasingly popular. Context-aware systems offer great potential for increasing notably certain system quality aspects (i.e.: usability, effectiveness, etc.) by gathering context data and adapting systems behavior accordingly. These systems should satisfy a variety of requirements to deal with context in a successful way, including the Separation of Concerns (SoC), as well as those requirements that should be supported by the software architecture. This work analyses different well-known architectural approaches used in the design of context-aware systems, identifies their common aspects, and presents a new proposal based on them. The resulting framework provides a higher SoC degree than the approaches analyzed.},
  articleno = {47},
  doi       = {10.1145/3241403.3241452},
  groups    = {acm},
  isbn      = {9781450364836},
  keywords  = {CTK, context-aware systems, layer style, MAPE-K, adaptation, self-adaptive systems, software architecture},
  location  = {Madrid, Spain},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3241403.3241452},
}

@InProceedings{Becker2012,
  author    = {Becker, Matthias and Luckey, Markus and Becker, Steffen},
  title     = {Model-Driven Performance Engineering of Self-Adaptive Systems: A Survey},
  booktitle = {Proceedings of the 8th International ACM SIGSOFT Conference on Quality of Software Architectures},
  year      = {2012},
  series    = {QoSA ’12},
  pages     = {117–122},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {To meet quality-of-service requirements in changing environments, modern software systems adapt themselves. The structure, and correspondingly the behavior, of these systems undergoes continuous change. Model-driven performance engineering, however, assumes static system structures, behavior, and deployment. Hence, self-adaptive systems pose new challenges to model-driven performance engineering. There are a few surveys on self-adaptive systems, performance engineering, and the combination of both in the literature. In contrast to existing work, here we focus on model-driven performance analysis approaches. Based on a systematic literature review, we present a classification, identify open issues, and outline further research.},
  doi       = {10.1145/2304696.2304716},
  groups    = {acm},
  isbn      = {9781450313469},
  keywords  = {model-driven performance engineering, self-adaptation, self-*, software performance},
  location  = {Bertinoro, Italy},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2304696.2304716},
}

@InProceedings{Nakagawa2011,
  author    = {Nakagawa, Hiroyuki and Ohsuga, Akihiko and Honiden, Shinichi},
  title     = {Gocc: A Configuration Compiler for Self-Adaptive Systems Using Goal-Oriented Requirements Description},
  booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2011},
  series    = {SEAMS ’11},
  pages     = {40–49},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems have recently attracted attention because of their ability to cope with changing environments, including system intrusions or faults. Such software must modify itself to better fit its environment, and one of the approaches by which we expect this capability to be achieved is the introduction of multiple control loops to assess the situation and to determine whether a change in behaviors or configurations is necessary and how to implement the change. Development of such systems with multiple control loops complicates the task of identifying components, and could be greatly aided by appropriate tool support. In this paper, we propose an architectural compiler for self-adaptive systems, which generates architectural configurations from the goal-oriented requirements descriptions. We also present a framework for generating such configurations with this compiler and a pattern in the requirements description. We evaluate the framework experimentally and show that it helps to generate suitable configurations that have high performance, and that the compiler scales well to large input models.},
  doi       = {10.1145/1988008.1988015},
  groups    = {acm},
  isbn      = {9781450305754},
  keywords  = {software architecture, development framework, self-adaptive systems, goal-oriented requirements analysis},
  location  = {Waikiki, Honolulu, HI, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988015},
}

@InProceedings{Sykes2007,
  author    = {Sykes, Daniel and Heaven, William and Magee, Jeff and Kramer, Jeff},
  title     = {Plan-Directed Architectural Change for Autonomous Systems},
  booktitle = {Proceedings of the 2007 Conference on Specification and Verification of Component-Based Systems: 6th Joint Meeting of the European Conference on Software Engineering and the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  year      = {2007},
  series    = {SAVCBS ’07},
  pages     = {15–21},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Autonomous systems operate in an unpredictable world, where communication with those people responsible for its software architecture may be infrequent or undesirable. If such a system is to continue reliable operation it must be able to derive and initiate adaptations to new circumstances on its own behalf. Much of the previous work on dynamic reconfigurations supposes that the programmer is able to express the possible adaptations before the system is deployed, or at least is able to add new adaptation strategies after deployment. We consider the challenges in providing an autonomous system with the capability to direct its own adaptation, and describe an initial implementation where change in the software architecture of an autonomous system is enacted as a result of executing a reactive plan.},
  doi       = {10.1145/1292316.1292318},
  groups    = {acm},
  isbn      = {9781595937216},
  keywords  = {software architecture, self-adaptive, autonomous systems, self-healing, dynamic reconfiguration},
  location  = {Dubrovnik, Croatia},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1292316.1292318},
}

@InProceedings{Alkhabbas2018,
  author    = {Alkhabbas, Fahed},
  title     = {An Approach to Engineer and Realize Emergent Configurations in the Internet of Things},
  booktitle = {Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
  year      = {2018},
  series    = {ICSE ’18},
  pages     = {448–449},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The Internet of Things (IoT) is a fast propagating technology that is expected to emerge in almost all aspects of our daily life. The IoT environment is well known for being dynamic and uncertain. Connected devices, and their software, can be discovered at runtime and might also become suddenly unavailable. The involvement of the human in the loop complicates more the scene. People's activities are stochastic and their needs are not always predictable. Therefore, coping with the dynamic IoT environment should be considered as a first class requirement when engineering IoT systems. A useful concept for supporting this effort is Emergent Configurations (ECs). An EC consists of a dynamic set of devices that cooperate temporarily to achieve a user goal. This PhD work aims to use the concept of ECs as a basis for a novel approach for realizing IoT systems. More specifically, this thesis aims at: (i) producing characterization models for IoT systems and ECs; (ii) proposing a concrete architecture and an approach for realizing ECs.},
  doi       = {10.1145/3183440.3183451},
  groups    = {acm},
  isbn      = {9781450356633},
  keywords  = {internet of things, software architecture, emergent configurations, self-adaptation},
  location  = {Gothenburg, Sweden},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3183440.3183451},
}

@InProceedings{Ghezzi2010a,
  author    = {Ghezzi, Carlo and Pradella, Matteo and Salvaneschi, Guido},
  title     = {Programming Language Support to Context-Aware Adaptation: A Case-Study with Erlang},
  booktitle = {Proceedings of the 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2010},
  series    = {SEAMS ’10},
  pages     = {59–68},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Software applications are increasingly situated in a world where context changes continuously. At the same time, applications need to provide continuous service, and the service provided often needs to change in order to adapt to the new contexts. Context-aware adaptation can be greatly facilitated by using programming languages that natively support high-level features to deal with contexts, context changes, and context-aware behaviors. Although context-oriented programming has been around for a while, most existing efforts focus on incorporating context-oriented features in languages that are not primarily oriented to concurrency, distribution, and dynamic reconfiguration. These features, however, characterize most pervasive context-aware situations. In this work, we illustrate how context-aware programming primitives may introduced in the parallel and distributed Erlang programming language. We also present an extended example, which illustrates the benefits of using our extension (ContextErlang) to design context-aware pervasive applications.},
  doi       = {10.1145/1808984.1808991},
  groups    = {acm},
  isbn      = {9781605589718},
  keywords  = {OTP platform, context-oriented programming, context, self-adaptative software, Erlang},
  location  = {Cape Town, South Africa},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1808984.1808991},
}

@InProceedings{Heinzemann2012,
  author    = {Heinzemann, Christian and Priesterjahn, Claudia and Becker, Steffen},
  title     = {Towards Modeling Reconfiguration in Hierarchical Component Architectures},
  booktitle = {Proceedings of the 15th ACM SIGSOFT Symposium on Component Based Software Engineering},
  year      = {2012},
  series    = {CBSE ’12},
  pages     = {23–28},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Today's real-time embedded systems operate in frequently changing environments on which they react by self-adaptations. Such an approach needs adequate modeling support of these reconfigurations to enable verification of safety properties, e.g., by timed model checking. Component-based development of such systems realizes these self-adaptations by structural reconfigurations of components and their connectors. However, component models proposed in literature do not support reconfigurable components in real-time embedded context but focus on other domains like business information systems. In this paper, we present an extension of our modeling language MechatronicUML to support structural reconfigurations taking the specific requirements of our domain into account. Based on the proposed extension we outline our research roadmap to achieve verification and realization of systems modeled in MechatronicUML.},
  doi       = {10.1145/2304736.2304742},
  groups    = {acm},
  isbn      = {9781450313452},
  keywords  = {component model, modeling, self-adaptive systems, runtime reconfiguration},
  location  = {Bertinoro, Italy},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2304736.2304742},
}

@InProceedings{Filieri2012,
  author    = {Filieri, Antonio and Ghezzi, Carlo and Leva, Alberto and Maggio, Martina},
  title     = {Reliability-Driven Dynamic Binding via Feedback Control},
  booktitle = {Proceedings of the 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2012},
  series    = {SEAMS ’12},
  pages     = {43–52},
  publisher = {IEEE Press},
  abstract  = {We are concerned with software that can self-adapt to satisfy certain reliability requirements, in spite of adverse changes affecting the environment in which it is embedded. Self-adapting software architectures are heavily based on dynamic binding. The bindings among components are dynamically set as the conditions that require a self-adaptation are discovered during the system's lifetime. By adopting a suitable modeling approach, the dynamic binding problem can be formulated as a discrete-time feedback control problem, and solved with very simple techniques based on linear blocks. Doing so, reliability objectives are in turn formulated as set point tracking ones in the presence of disturbances, and attained without the need for optimization. At design time, the proposed formulation has the advantage of naturally providing system sizing clues, while at operation time, the inherent computational simplicity of the obtained controllers results in a low overhead. Finally, the formulation allows for a rigorous assessment of the achieved results in both nominal and off-design conditions for any desired operation point.},
  doi       = {10.1109/SEAMS.2012.6224390},
  groups    = {acm},
  isbn      = {9781467317870},
  keywords  = {reliability requirements, self-adaptive software, discrete-time feedback control, dynamic binding},
  location  = {Zurich, Switzerland},
  numpages  = {10},
}

@InProceedings{Al-Ali2019,
  author    = {Al-Ali, Rima and Hnetynka, Petr and Havlik, Jiri and Krivka, Vlastimil and Heinrich, Robert and Seifermann, Stephan and Walter, Maximilian and Juan-Verdejo, Adrian},
  title     = {Dynamic Security Rules for Legacy Systems},
  booktitle = {Proceedings of the 13th European Conference on Software Architecture - Volume 2},
  year      = {2019},
  series    = {ECSA ’19},
  pages     = {277–284},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Industry 4.0 tries to digitalize the production process further. The digitalization is achieved by connecting different entities (machines, worker) to data-exchange, which needs to be dynamic and to adapt to different changing situations and members in the process. However, just exchanging data might lead to confidentiality issues. The data-exchange needs to be protected to secure the confidentiality and trust in the system. Therefore, security rules need to adapt to these dynamic situations. One part of a possible solution might be dynamic access control rules. However in many cases, existing "legacy" systems are reused, which can in not handle dynamic access control rules. Due to this gap between the required and provided functionality, we propose an approach, which integrates dynamic access control based on the system-context into legacy systems. Our approach uses a security adaption controller, which dynamically adapts the access control rules to a new situation and integrates them into an existing legacy system. We discussed our approach with industrial practitioners and related our approach to their existing legacy system. In addition, we performed a scalability analysis to demonstrate the applicability of our approach in a realistic environment.},
  doi       = {10.1145/3344948.3344974},
  groups    = {acm},
  isbn      = {9781450371421},
  keywords  = {self-adaptive architecture, access control, legacy systems, autonomic systems, security rules, Industry 4.0},
  location  = {Paris, France},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3344948.3344974},
}

@InProceedings{Zhong2011,
  author    = {Zhong, Christopher and DeLoach, Scott A.},
  title     = {Runtime Models for Automatic Reorganization of Multi-Robot Systems},
  booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2011},
  series    = {SEAMS ’11},
  pages     = {20–29},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {This paper presents a reusable framework for developing adaptive multi-robotic systems for heterogeneous robot teams using an organization-based approach. The framework is based on the Organizational Model for Adaptive Computational Systems (OMACS) and the Goal Model for Dynamic Systems (GMoDS). GMoDS is used to capture system-level goals that drive the system. OMACS is an abstract model used to capture the system configuration and allows the team to organize and reorganize without the need for explicit runtime reorganization rules. While OMACS provides an implicit reorganization capability, it also supports policies that can either guide or restrict the resulting organizations thus limiting unexpected or harmful adaptation. We demonstrate our framework by presenting the design and implementation of a multi-robot system for detecting improvised explosive devices. We then highlight the adaptability of the resulting system.},
  doi       = {10.1145/1988008.1988012},
  groups    = {acm},
  isbn      = {9781450305754},
  keywords  = {cooperative robotics, runtime models, agent-oriented software engineering, self-adaptive systems},
  location  = {Waikiki, Honolulu, HI, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988012},
}

@InProceedings{Braberman2015,
  author    = {Braberman, Victor and D’Ippolito, Nicolas and Kramer, Jeff and Sykes, Daniel and Uchitel, Sebastian},
  title     = {MORPH: A Reference Architecture for Configuration and Behaviour Self-Adaptation},
  booktitle = {Proceedings of the 1st International Workshop on Control Theory for Software Engineering},
  year      = {2015},
  series    = {CTSE 2015},
  pages     = {9–16},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {An architectural approach to self-adaptive systems involves runtime change of system configuration (i.e., the system's components, their bindings and operational parameters) and behaviour update (i.e., component orchestration). Thus, dynamic reconfiguration and discrete event control theory are at the heart of architectural adaptation. Although controlling configuration and behaviour at runtime has been discussed and applied to architectural adaptation, architectures for self-adaptive systems often compound these two aspects reducing the potential for adaptability. In this paper we propose a reference architecture that allows for coordinated yet transparent and independent adaptation of system configuration and behaviour.},
  doi       = {10.1145/2804337.2804339},
  groups    = {acm},
  isbn      = {9781450338141},
  keywords  = {Software Architecture, Self-adaptive Systems},
  location  = {Bergamo, Italy},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2804337.2804339},
}

@InProceedings{Heinzemann2013a,
  author    = {Heinzemann, Christian and Sudmann, Oliver and Sch\"{a}fer, Wilhelm and Tichy, Matthias},
  title     = {A Discipline-Spanning Development Process for Self-Adaptive Mechatronic Systems},
  booktitle = {Proceedings of the 2013 International Conference on Software and System Process},
  year      = {2013},
  series    = {ICSSP 2013},
  pages     = {36–45},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Technical systems contain mechanical, electrical, and software parts. Consequently, they are developed by engineers of the respective disciplines. However, current industrial practice as well as existing development processes do not account for the required tight integration between the engineers of the different disciplines. Processes become even more complex, when self-adaptive systems are built. In this paper, we present a development process for self-adaptive mechatronic systems which particularly addresses the integration between the disciplines concerned with the development of software, namely control and software engineering. We illustrate the process by presenting examples from the development of autonomous railway vehicles which build convoys to improve energy efficiency.},
  doi       = {10.1145/2486046.2486055},
  groups    = {acm},
  isbn      = {9781450320627},
  keywords  = {Development Process, Self-Adaptive, Mechatronic Systems},
  location  = {San Francisco, CA, USA},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2486046.2486055},
}

@InProceedings{Mueller2008,
  author    = {M\"{u}ller, Hausi and Pezz\`{e}, Mauro and Shaw, Mary},
  title     = {Visibility of Control in Adaptive Systems},
  booktitle = {Proceedings of the 2nd International Workshop on Ultra-Large-Scale Software-Intensive Systems},
  year      = {2008},
  series    = {ULSSIS ’08},
  pages     = {23–26},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Adaptive systems respond to changes in their internal state or external environment with guidance from an underlying control system. ULS systems are particularly likely to require dynamic adaptation because of their decentralized control and the large number of independent stakeholders whose actions are integral to the system's behavior. Adaptation may take various forms, but the system structure will almost inevitably include one or more closed feedback loops. We argue that adaptability is a characteristic of a solution, not of a problem, and that the feedback loop governing control of adaptability should be explicit in design and analysis and either explicit or clearly traceable in implementation.},
  doi       = {10.1145/1370700.1370707},
  groups    = {acm},
  isbn      = {9781605580265},
  keywords  = {software ecosystems, continuous evolution, autonomic systems, ultra-large scale systems, self-adaptive systems},
  location  = {Leipzig, Germany},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1370700.1370707},
}

@InProceedings{Miglierina2013,
  author    = {Miglierina, Marco and Gibilisco, Giovanni P. and Ardagna, Danilo and Di Nitto, Elisabetta},
  title     = {Model Based Control for Multi-Cloud Applications},
  booktitle = {Proceedings of the 5th International Workshop on Modeling in Software Engineering},
  year      = {2013},
  series    = {MiSE ’13},
  pages     = {37–43},
  publisher = {IEEE Press},
  abstract  = {The advent of cloud computing has offered to developers a new appealing paradigm to deploy their applications without capital investments. Resources can now be acquired on-demand in a flexible, scalable and rapid way. However, cloud providers lack of native mechanisms to guarantee the Quality of Service required by specific application domains. High availability can be achieved by replication of critical components. Since outages could affect the entire cloud provider, replication can be effective only by using multiple providers. In this paper we tackle the above problem and present an approach to guarantee availability requirements of cloud-based applications by exploiting replication on multiple clouds to reduce unavailability, still limiting costs. More precisely, we propose: i) an approach to model, at design time, the application, its availability requirements and the characteristics of the used clouds, and ii) a self-adaptive technique responsible, at runtime, of both in-cloud scaling policies and traffic routing among different cloud providers, by means of a control-theoretical approach. We integrated the modeling approach in the Palladio Bench IDE and developed a runtime self-adaptation controller in Matlab. The controller has been evaluated against different workload conditions, costs variations and service failures in simulated scenarios. The controller has been able to provide the desired availability minimizing costs.},
  doi       = {10.1109/MiSE.2013.6595294},
  groups    = {acm},
  isbn      = {9781467364478},
  keywords  = {non-functional requirements, cloud computing, availability, multi-cloud applications, control theory, self-adaptive software},
  location  = {San Francisco, California},
  numpages  = {7},
}

@InProceedings{Garvin2011,
  author    = {Garvin, Brady J. and Cohen, Myra B. and Dwyer, Matthew B.},
  title     = {Using Feature Locality: Can We Leverage History to Avoid Failures during Reconfiguration?},
  booktitle = {Proceedings of the 8th Workshop on Assurances for Self-Adaptive Systems},
  year      = {2011},
  series    = {ASAS ’11},
  pages     = {24–33},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Despite the best efforts of software engineers, faults still escape into deployed software. Developers need time to prepare and distribute fixes, and in the interim deployments must either tolerate or avoid failures. Self-adaptive systems, systems that adapt to meet changing requirements in a dynamic environment, have a daunting task if their reconfiguration involves adding or removing functional features, because configurable software is known to suffer from failures that appear only under certain feature combinations. Although configuration-dependent failures may be difficult to provoke, and thus hard to detect in testing, we posit that they also constitute opportunities for reconfiguration to increase system reliability. We further conjecture that the failures that are sensitive to a system configuration depend on similar feature combinations, a phenomenon we call feature-locality, and that this locality can be combined with historical data to predict failure-prone configurations. In a case study on 128 failures reported against released versions of an open source configurable system, we find evidence to support our hypothesis. We show that only a small number of features affect the visibility of these failures, and that over time we can learn these features to avoid future failures.},
  doi       = {10.1145/2024436.2024443},
  groups    = {acm},
  isbn      = {9781450308533},
  keywords  = {highly-configurable systems, self-adaptive software},
  location  = {Szeged, Hungary},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2024436.2024443},
}

@InProceedings{Baresi2010,
  author    = {Baresi, Luciano and Ghezzi, Carlo},
  title     = {The Disappearing Boundary between Development-Time and Run-Time},
  booktitle = {Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research},
  year      = {2010},
  series    = {FoSER ’10},
  pages     = {17–22},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Modern software systems are increasingly embedded in an open world that is constantly evolving, because of changes in the requirements, in the surrounding environment, and in the way people interact with them. The platform itself on which software runs may change over time, as we move towards cloud computing. These changes are difficult to predict and anticipate, and their occurrence is out of control of the application developers. Because of these changes, the applications themselves need to change. Often, changes in the applications cannot be handled off-line, but require the software to self-react by adapting its behavior dynamically, to continue to ensure the desired quality of service. The big challenge in front of us is how to achieve the necessary degrees of flexibility and dynamism required by software without compromising the necessary dependability.This paper advocates that future software engineering research should focus on providing intelligent support to software at run-time, breaking today's rigid boundary between development-time and run-time. Models need to continue to live at run-time and evolve as changes occur while the software is running. To ensure dependability, analysis that the updated system models continue to satisfy the goals must be performed by continuous verification. If verification fails, suitable adjustment policies, supported by model-driven re-derivation of parts of the system, must be activated to keep the system aligned with its expected requirements.The paper presents the background that motivates this research focus, the main existing research directions, and an agenda for future work.},
  doi       = {10.1145/1882362.1882367},
  groups    = {acm},
  isbn      = {9781450304276},
  keywords  = {self-adaptation, service-oriented systems, runtime support},
  location  = {Santa Fe, New Mexico, USA},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1882362.1882367},
}

@InProceedings{Neamtiu2011,
  author    = {Neamtiu, Iulian},
  title     = {Elastic Executions from Inelastic Programs},
  booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2011},
  series    = {SEAMS ’11},
  pages     = {178–183},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this paper we present an approach and tool named ELASTIN for transforming inelastic programs - programs written with a specific platform or a fixed set of Cloud resources in mind - into elastic applications that run on elastic platforms by adapting, at runtime, to changes in the available resources. With ELASTIN, programmers can develop their applications with various specific configurations in mind, and let the compiler and runtime system take care of combining these configurations into a single elastic application that can safely switch between configurations on-the-fly, at runtime. We used ELASTIN to elastify two popular applications, the SQLite database engine and the Kiss FFT library, and found programmer burden to be very low. Benchmarks indicate that ELASTIN is effective in practice, and reconfigurations are in the sub-millisecond range. We envision this approach being useful in any domain where quick runtime adaptation is necessary due to changes in underlying resources.The approach can also be a stepping stone towards migrating legacy applications to the Cloud.},
  doi       = {10.1145/1988008.1988033},
  groups    = {acm},
  isbn      = {9781450305754},
  keywords  = {self-adaptive systems, resource-aware applications, dynamic software updating, runtime adaptation, elastic software, cloud computing},
  location  = {Waikiki, Honolulu, HI, USA},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988033},
}

@InProceedings{Romay2013,
  author    = {Romay, M. Pilar and Cuesta, Carlos E. and Fern\'{a}ndez-Sanz, Luis},
  title     = {On Self-Adaptation in Systems-of-Systems},
  booktitle = {Proceedings of the First International Workshop on Software Engineering for Systems-of-Systems},
  year      = {2013},
  series    = {SESoS ’13},
  pages     = {29–34},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Adaptivity and systems-of-systems (SoS) have always had a close relationship, as it is one of their defining features. Moreover, there is a clear similarity between the requirements of a SoS and those of many adaptive systems, such as autonomic and self-adaptive systems. In recent years, this kind of adaptive systems has been carefully studied; however, they often operate at a very different scale, being smaller than a typical SoS. The common nexus between both perspectives seem to be situated at the architectural level: the same adaptive techniques are recursively applied in different strata in a hierarchical composite. Therefore, the principles embodied in adaptive architectures seem to provide a good basis for the definition and description of SoS. This paper relates those principles to the corresponding structures in software evolution, and suggests to coordinate both through a pace layering strategy.},
  doi       = {10.1145/2489850.2489856},
  groups    = {acm},
  isbn      = {9781450320481},
  keywords  = {self-adaptation, ULS, software architecture, adaptive architectures, systems-of-systems, autonomic systems},
  location  = {Montpellier, France},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2489850.2489856},
}

@InProceedings{Anaya2014,
  author    = {Anaya, Ivan Dario Paez and Simko, Viliam and Bourcier, Johann and Plouzeau, No\"{e}l and J\'{e}z\'{e}quel, Jean-Marc},
  title     = {A Prediction-Driven Adaptation Approach for Self-Adaptive Sensor Networks},
  booktitle = {Proceedings of the 9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2014},
  series    = {SEAMS 2014},
  pages     = {145–154},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Engineering self-adaptive software in unpredictable environments such as pervasive systems, where network's ability, remaining battery power and environmental conditions may vary over the lifetime of the system is a very challenging task. Many current software engineering approaches leverage run-time architectural models to ease the design of the autonomic control loop of these self-adaptive systems. While these approaches perform well in reacting to various evolutions of the runtime environment, implementations based on reactive paradigms have a limited ability to anticipate problems, leading to transient unavailability of the system, useless costly adaptations, or resources waste. In this paper, we follow a proactive self-adaptation approach that aims at overcoming the limitation of reactive approaches. Based on predictive analysis of internal and external context information, our approach regulates new architecture reconfigurations and deploys them using models at runtime. We have evaluated our approach on a case study where we combined hourly temperature readings provided by National Climatic Data Center (NCDC) with fire reports from Moderate Resolution Imaging Spectroradiometer (MODIS) and simulated the behavior of multiple systems. The results confirm that our proactive approach outperforms a typical reactive system in scenarios with seasonal behavior.},
  doi       = {10.1145/2593929.2593941},
  groups    = {acm},
  isbn      = {9781450328647},
  keywords  = {predictive analytics, pervasive systems, Self-adaptation, proactive adaptation},
  location  = {Hyderabad, India},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2593929.2593941},
}

@InProceedings{Bencomo2010,
  author    = {Bencomo, Nelly and Whittle, Jon and Sawyer, Pete and Finkelstein, Anthony and Letier, Emmanuel},
  title     = {Requirements Reflection: Requirements as Runtime Entities},
  booktitle = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - Volume 2},
  year      = {2010},
  series    = {ICSE ’10},
  pages     = {199–202},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Computational reflection is a well-established technique that gives a program the ability to dynamically observe and possibly modify its behaviour. To date, however, reflection is mainly applied either to the software architecture or its implementation. We know of no approach that fully supports requirements reflection- that is, making requirements available as runtime objects. Although there is a body of literature on requirements monitoring, such work typically generates runtime artefacts from requirements and so the requirements themselves are not directly accessible at runtime. In this paper, we define requirements reflection and a set of research challenges. Requirements reflection is important because software systems of the future will be self-managing and will need to adapt continuously to changing environmental conditions. We argue requirements reflection can support such self-adaptive systems by making requirements first-class runtime entities, thus endowing software systems with the ability to reason about, understand, explain and modify requirements at runtime.},
  doi       = {10.1145/1810295.1810329},
  groups    = {acm},
  isbn      = {9781605587196},
  keywords  = {requirements, self-adaptive systems, reflection, runtime},
  location  = {Cape Town, South Africa},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1810295.1810329},
}

@InProceedings{Fredericks2018,
  author    = {Fredericks, Erik M.},
  title     = {An Empirical Analysis of the Mutation Operator for Run-Time Adaptive Testing in Self-Adaptive Systems},
  booktitle = {Proceedings of the 11th International Workshop on Search-Based Software Testing},
  year      = {2018},
  series    = {SBST ’18},
  pages     = {59–66},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {A self-adaptive system (SAS) can reconfigure at run time in response to uncertainty and/or adversity to continually deliver an acceptable level of service. An SAS can experience uncertainty during execution in terms of environmental conditions for which it was not explicitly designed as well as unanticipated combinations of system parameters that result from a self-reconfiguration or misunderstood requirements. Run-time testing provides assurance that an SAS continually behaves as it was designed even as the system reconfigures and the environment changes. Moreover, introducing adaptive capabilities via lightweight evolutionary algorithms into a run-time testing framework can enable an SAS to effectively update its test cases in response to uncertainty alongside the SAS's adaptation engine while still maintaining assurance that requirements are being satisfied. However, the impact of the evolutionary parameters that configure the search process for run-time testing may have a significant impact on test results. Therefore, this paper provides an empirical study that focuses on the mutation parameter that guides online evolution as applied to a run-time testing framework, in the context of an SAS.},
  doi       = {10.1145/3194718.3194726},
  groups    = {acm},
  isbn      = {9781450357418},
  keywords  = {search-based software testing, self-adaptive systems, run-time testing, evolutionary algorithms},
  location  = {Gothenburg, Sweden},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194718.3194726},
}

@Article{Wang2005,
  author     = {Wang, Qianxiang},
  title      = {Towards a Rule Model for Self-Adaptive Software},
  journal    = {SIGSOFT Softw. Eng. Notes},
  year       = {2005},
  volume     = {30},
  number     = {1},
  pages      = {8},
  month      = jan,
  issn       = {0163-5948},
  abstract   = {Most self-adaptive software use rules explicitly or implicitly to decide how to react to monitored events. Meanwhile, rules are usually scattered in different procedures, which makes procedures more complex. This paper proposes a Rule Model, which is used to extract scattered rules from different procedures, so as to enhance the self-adaptive ability of software. The paper presents what is Rule Model, including: three key concepts (event, parameter, and rule), hierarchical organization, role in application, and XML-based representation. The paper also introduces how to map declarative rules inside one deployable application to executable rules inside one rule engine, based on one J2EE-compliant application server.},
  address    = {New York, NY, USA},
  doi        = {10.1145/1039174.1039198},
  groups     = {acm},
  issue_date = {January 2005},
  keywords   = {rule model, self-adaptive software},
  numpages   = {5},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/1039174.1039198},
}

@InProceedings{Venero2016,
  author    = {Venero, Sheila K. and Eleut\'{e}rio, Jane D. A. S. and Rubira, Cec\'{\i}lia M. F.},
  title     = {Research Contributions on Adaptive Software Architectures: A Brazilian Female Perspective at UNICAMP},
  booktitle = {Proccedings of the 10th European Conference on Software Architecture Workshops},
  year      = {2016},
  series    = {ECSAW ’16},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The percentage of women in Computer Science in Brazil drops every year. In the Institute of Computing at the University of Campinas, we have a group, called Computing4all, that aims to increase diversity in Computer Science. Similarly, in the area of Software Architecture, the number of women remains disproportionately small. In particular, our former predominantly male research group has started to grow in its diversity, three girls are now part of our team. This paper presents three recent approaches developed by female graduate students in the research area of software architecture. These solutions apply the principles of self-adaptive systems and autonomic computing to achieve adaptation in the development of Dynamic Software Product Lines and Workflow Management Systems.},
  articleno = {3},
  doi       = {10.1145/2993412.3004851},
  groups    = {acm},
  isbn      = {9781450347815},
  keywords  = {self-adaptive systems, software architecture, women in computer science},
  location  = {Copenhagen, Denmark},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2993412.3004851},
}

@InProceedings{Guedes2017,
  author    = {Guedes, Gabriela and Silva, Carla and Soares, Monique},
  title     = {Comparing Configuration Approaches for Dynamic Software Product Lines},
  booktitle = {Proceedings of the 31st Brazilian Symposium on Software Engineering},
  year      = {2017},
  series    = {SBES’17},
  pages     = {134–143},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Dynamic Software Product Lines (DSPLs) are Software Product Lines (SPLs) in which the configuration may occur at runtime. DSPL approaches provide means for modeling variability as well as configuring the product according to its runtime context and/or non-functional requirements (NFRs) satisfaction. In this paper, we present a Requirements Engineering (RE) approach for DSPL, ConG4DaS (Contextual Goal models For Dynamic Software product lines), which provides: (i) models for capturing variability with goals, NFRs, contexts and the relationship between them; and (ii) a configuration process that takes contexts, NFRs and their priority and interactions into account. We have used simulation based assessment to compare ConG4DaS with another approach, REFAS (Requirements Engineering For self-Adaptive Software systems), with respect to the satisfaction level of the highest priority softgoal. For the comparison, we modeled two DSPL examples and simulated different scenarios where reconfiguration is necessary. Next, we compared the configurations selected by the approaches with respect to overall NFRs' satisfaction. The results showed that ConG4DaS, which uses utility function in the configuration process, selects configurations that better satisfy NFRs compared to REFAS, which uses constraint programming.},
  doi       = {10.1145/3131151.3131162},
  groups    = {acm},
  isbn      = {9781450353267},
  keywords  = {Goal Models, Dynamic Variability, Self-Adaptive Systems, Dynamic Software Product Lines},
  location  = {Fortaleza, CE, Brazil},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3131151.3131162},
}

@InProceedings{Mueller2009,
  author    = {M\"{u}ller, Hausi A.},
  title     = {Towards Self-Adaptive Software-Intensive Systems},
  booktitle = {Proceedings of the Joint International and Annual ERCIM Workshops on Principles of Software Evolution (IWPSE) and Software Evolution (Evol) Workshops},
  year      = {2009},
  series    = {IWPSE-Evol ’09},
  pages     = {7–8},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {With the rapid growth of web services and socio-technical ecosystems, the management complexity of these modern, decentralized, distributed computing systems presents significant challenges for businesses and often exceeds the capabilities of human operators. The simultaneous explosion of information and integration of technology and the continuous evolution from software intensive systems to systems of systems to ULS systems requires new and innovative approaches for evolving, running, and managing software systems. A consequence of this continuous evolution is that software systems must become more versatile, flexible, resilient, dependable, robust, continuously available, energy-efficient, recoverable, customizable, self-healing, configurable, or self-optimizing by adapting to changing contexts and environments. One of the most promising approaches to achieving such properties is to equip software systems with self-adaptation and self-management mechanisms. Autonomic computing constitutes an effective set of technologies, models, architecture patterns, standards, and processes to cope with and reign in the management complexity of dynamic computing systems using feedback control, adaptation, and self-management. At the core of such systems are control loops which sense their environment, model their behavior in that environment, and take action to change the environment or their own behavior. Computer science researchers often approach the design of such highly dynamic systems from a software architecture perspective whereas engineering researchers start with a feedback control perspective.},
  doi       = {10.1145/1595808.1595811},
  groups    = {acm},
  isbn      = {9781605586786},
  keywords  = {uls systems, autonomic elements, control loops, self-managing systems, monitoring, self-adaptive systems, autonomic computing, continuous evolution, feedback, reflection},
  location  = {Amsterdam, The Netherlands},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1595808.1595811},
}

@Article{Elhabbash2019,
  author     = {Elhabbash, Abdessalam and Salama, Maria and Bahsoon, Rami and Tino, Peter},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  title      = {Self-Awareness in Software Engineering: A Systematic Literature Review},
  year       = {2019},
  issn       = {1556-4665},
  month      = oct,
  number     = {2},
  volume     = {14},
  abstract   = {Background: Self-awareness has been recently receiving attention in computing systems for enriching autonomous software systems operating in dynamic environments. Objective: We aim to investigate the adoption of computational self-awareness concepts in autonomic software systems and motivate future research directions on self-awareness and related problems. Method: We conducted a systemic literature review to compile the studies related to the adoption of self-awareness in software engineering and explore how self-awareness is engineered and incorporated in software systems. From 865 studies, 74 studies have been selected as primary studies. We have analysed the studies from multiple perspectives, such as motivation, inspiration, and engineering approaches, among others. Results: Results have shown that self-awareness has been used to enable self-adaptation in systems that exhibit uncertain and dynamic behaviour. Though there have been recent attempts to define and engineer self-awareness in software engineering, there is no consensus on the definition of self-awareness. Also, the distinction between self-aware and self-adaptive systems has not been systematically treated. Conclusions: Our survey reveals that self-awareness for software systems is still a formative field and that there is growing attention to incorporate self-awareness for better reasoning about the adaptation decision in autonomic systems. Many pending issues and open problems outline possible research directions.},
  address    = {New York, NY, USA},
  articleno  = {5},
  doi        = {10.1145/3347269},
  groups     = {acm},
  issue_date = {December 2019},
  keywords   = {survey, Adaptation processes, self-properties, research challenges, systematic literature review, self-adaptive software, software architecture, self-aware software},
  numpages   = {42},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3347269},
}

@InProceedings{Harman2012,
  author    = {Harman, Mark and Burke, Edmund and Clark, John and Yao, Xin},
  title     = {Dynamic Adaptive Search Based Software Engineering},
  booktitle = {Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement},
  year      = {2012},
  series    = {ESEM ’12},
  pages     = {1–8},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Search Based Software Engineering (SBSE) has proved to be a very effective way of optimising software engineering problems. Nevertheless, its full potential as a means of dynamic adaptivity remains under explored. This paper sets out the agenda for Dynamic Adaptive SBSE, in which the optimisation is embedded into deployed software to create self-optimising adaptive systems. Dynamic Adaptive SBSE will move the research agenda forward to encompass both software development processes and the software products they produce, addressing the long-standing, and as yet largely unsolved, grand challenge of self-adaptive systems.},
  doi       = {10.1145/2372251.2372253},
  groups    = {acm},
  isbn      = {9781450310567},
  keywords  = {self-adaptive systems, sbse, search based optimization, autonomic computing},
  location  = {Lund, Sweden},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2372251.2372253},
}

@InProceedings{Huang2014,
  author    = {Huang, Shihong and Tognoli, Emmanuelle},
  title     = {Brainware: Synergizing Software Systems and Neural Inputs},
  booktitle = {Companion Proceedings of the 36th International Conference on Software Engineering},
  year      = {2014},
  series    = {ICSE Companion 2014},
  pages     = {444–447},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The rapid advances in the field of Brain Computer Interfaces (BCI) are expected to enrich the quality of people’s lives. BCI connects computer actions with neural inputs—signals indicating the user’s intentions, desired actions, attention, thoughts, memories, and emotions. BCI applications present significant challenges for computer science and software engineering research: an avalanche of neural signals will make their way as direct input into software systems. Given the differences between neural inputs and behavioral ones, the integration of neural inputs will require special approaches, and not simply adding yet more user interface channels to pre-existing software systems. This paper explores the challenges of designing and implementing self-adaptive software systems that could synergize brain states. After framing the problem, its rationale and possible solutions, in this paper we argue that the software engineering community ought to investigate how to incorporate neural inputs into software systems. The days are now upon us when software systems can “feel” and “anticipate” the users’ intentions and therefore react self-adaptively and synergistically to their needs.},
  doi       = {10.1145/2591062.2591131},
  groups    = {acm},
  isbn      = {9781450327688},
  keywords  = {neural input, human computer interface (HCI), self-adaptive systems, human in the loop, Brain computer interface (BCI), overt and covert behavior and attention},
  location  = {Hyderabad, India},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2591062.2591131},
}

@InProceedings{Hernandez-Martinez2016,
  author    = {Hern\'{a}ndez-Mart\'{\i}nez, Juan-Alberto and Ju\'{a}rez-Mart\'{\i}nez, Ulises},
  title     = {Model for Fusion of Software Components},
  booktitle = {Companion Proceedings of the 15th International Conference on Modularity},
  year      = {2016},
  series    = {MODULARITY Companion 2016},
  pages     = {143–145},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Current applications, especially those that cannot stop their execution, such as banking systems, airport management, and critical mission environments, among others, require of suitable mechanisms to respond immediately and automatically to constant changes of the execution environment and user requirements. In response to such issues, self-adaptation and dynamic evolution of the software allow to perform the necessary adjustments dynamically, minimizing human intervention. However, although these approaches resolve much of the problem, most of the solutions applied consist of adding functionality causing that the resulting applications to be large and/or with unnecessary or irrelevant elements. In order to strengthen the adaptation and evolution of software, the establishment of mechanisms supported in the principles of knowledge areas with greater maturity such as biology, chemistry, among others, results in an attractive alternative. In this sense, current paper proposes a new approach for adapting and creating software components at run-time based on a simplified chemical model for creating molecules. The main idea behind this approach is that every atom corresponds to a software component and every molecule correspond to a new adaptation or creation of a software component whose structure, functionality and behavior could be formed both of its own characteristics or execution environment.},
  doi       = {10.1145/2892664.2892688},
  groups    = {acm},
  isbn      = {9781450340335},
  keywords  = {Self-adaptation, Dynamic Evolution, Fusion of Software Components},
  location  = {M\'{a}laga, Spain},
  numpages  = {3},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2892664.2892688},
}

@InProceedings{Medvidovic2014,
  author    = {Medvidovic, Nenad},
  title     = {Adapting Our View of Software Adaptation: An Architectural Perspective (Keynote)},
  booktitle = {Proceedings of the 9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2014},
  series    = {SEAMS 2014},
  pages     = {5–6},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Engineers frequently neglect to carefully consider the impact of adaptation on a software system. As a result, the software system's architectural design sooner, rather than later, begins to deviate from the original designers' intent and to decay through unplanned introduction of new and/or invalidation of existing design decisions. For systems that are intended to be (self-)adaptive, this problem can be even more pronounced. A solution that was proposed over a decade ago was to keep the architectures of (self-)adaptive systems in sync with their implementations through carefully engineered implementation frameworks, and to allow implementation-level adaptations only via carefully controlled architecture-level operations. However, many approaches to (self-)adaptive software do not explicitly consider the system's architecture as the starting point for adaptation and, more generally, developers change systems in seemingly arbitrary ways all the time. This begs the question: What is the impact of system changes on a system's architecture in a general case? This keynote talk presents the results of an on-going study that has tried to shed light on this question. To date, the study has involved around 30 open-source systems and, in several cases, large numbers of versions of a given system. The keynote discusses and illustrates the challenges in extracting the architecture of a system from its implementation artifacts, the concrete problems posed by architectural decay, the difficulties of tracking the architectural impact of implementation-level changes, and the occasional arbitrariness with which the adaptation of real, widely-used software systems is approached. The keynote then identifies several promising research opportunities that present themselves for dealing with these problems in (self-)adaptive systems.},
  doi       = {10.1145/2593929.2593949},
  groups    = {acm},
  isbn      = {9781450328647},
  keywords  = {Self-Adaptation, Architecture Recovery, Software Architecture},
  location  = {Hyderabad, India},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2593929.2593949},
}

@Article{Esfahani2016,
  author     = {Esfahani, Naeem and Yuan, Eric and Canavera, Kyle R. and Malek, Sam},
  title      = {Inferring Software Component Interaction Dependencies for Adaptation Support},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2016},
  volume     = {10},
  number     = {4},
  month      = feb,
  issn       = {1556-4665},
  abstract   = {A self-managing software system should be able to monitor and analyze its runtime behavior and make adaptation decisions accordingly to meet certain desirable objectives. Traditional software adaptation techniques and recent “models@runtime” approaches usually require an a priori model for a system’s dynamic behavior. Oftentimes the model is difficult to define and labor-intensive to maintain, and tends to get out of date due to adaptation and architecture decay. We propose an alternative approach that does not require defining the system’s behavior model beforehand, but instead involves mining software component interactions from system execution traces to build a probabilistic usage model, which is in turn used to analyze, plan, and execute adaptations. In this article, we demonstrate how such an approach can be realized and effectively used to address a variety of adaptation concerns. In particular, we describe the details of one application of this approach for safely applying dynamic changes to a running software system without creating inconsistencies. We also provide an overview of two other applications of the approach, identifying potentially malicious (abnormal) behavior for self-protection, and improving deployment of software components in a distributed setting for performance self-optimization. Finally, we report on our experiments with engineering self-management features in an emergency deployment system using the proposed mining approach.},
  address    = {New York, NY, USA},
  articleno  = {26},
  doi        = {10.1145/2856035},
  groups     = {acm},
  issue_date = {February 2016},
  keywords   = {Data mining, component-based software, self-adaptation},
  numpages   = {32},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2856035},
}

@InProceedings{Liu2018,
  author    = {Liu, Yang and Bai, Di and Jiao, Wenpin},
  title     = {Generating Adaptation Rules of Software Systems: A Method Based on Genetic Algorithm},
  booktitle = {Proceedings of the 2018 10th International Conference on Machine Learning and Computing},
  year      = {2018},
  series    = {ICMLC 2018},
  pages     = {347–356},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Nowadays, applications are deployed and executed in open, uncertain and dynamic environments. Increasingly, applications are required to have the capability to automatically change its behaviors in response to changing environmental conditions. As the complexity of adaptive and autonomic systems grows, designing and managing the set of adaptation rules becomes increasingly challenging and may produce huge computation cost. If we dynamically generate adaptation rules at run time, it's difficult to deal with the changes quickly. The software system challenges the method for efficiently generating effective adaptation rules. This paper proposes an approach to combine genetic algorithm and linear regression to automatically generate adaptation rules for software systems. Unlike traditional rule-based adaptation methods, our solution enables a system to obtain a prediction function to determine the corresponding system configuration under any considered environmental condition. We have applied this genetic algorithm based approach to the dynamic reconfiguration of two different software systems. The experimental results show that our method is practical and highly-efficient in software reconfiguration under changing environmental conditions. Besides, the user's requirements can be well satisfied.},
  doi       = {10.1145/3195106.3195137},
  groups    = {acm},
  isbn      = {9781450363532},
  keywords  = {Self-adaptive system, evolutionary algorithm, intelligent control, genetic algorithm},
  location  = {Macau, China},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3195106.3195137},
}

@InProceedings{Ge2005,
  author    = {Ge, Guozheng and Whitehead, E. James},
  title     = {Automatic Generation of Rule-Based Software Configuration Management Systems},
  booktitle = {Proceedings of the 27th International Conference on Software Engineering},
  year      = {2005},
  series    = {ICSE ’05},
  pages     = {659},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {We propose a model-driven methodology and toolset for automatic SCM system repository creation and feature composition using code generation and rule engine technologies.},
  doi       = {10.1145/1062455.1062593},
  groups    = {acm},
  isbn      = {1581139632},
  keywords  = {architectural adaptation management, self-adaptive software},
  location  = {St. Louis, MO, USA},
  numpages  = {1},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1062455.1062593},
}

@InProceedings{Cheng2006a,
  author    = {Cheng, Betty H. C. and Garlan, David and de Lemos, Rog\'{e}rio and Magee, Jeff and Taylor, Richard and Fickas, Stephen and M\"{u}ller, Hausi},
  title     = {Software Engineering for Adaptive and Self-Managing Systems},
  booktitle = {Proceedings of the 28th International Conference on Software Engineering},
  year      = {2006},
  series    = {ICSE ’06},
  pages     = {1015–1016},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The objective of this workshop is to consolidate the interest in the software engineering community on autonomic, self-managing, self-healing, self-optimizing, self-configuring, and self-adaptive systems. The workshop will provide a forum for researchers to share new results, raise awareness of new adaptive concerns, and promote collaboration among the community. This workshop will be the first of several to assess progress and identify challenges in this important area.},
  doi       = {10.1145/1134285.1134480},
  groups    = {acm},
  isbn      = {1595933751},
  keywords  = {autonomic, self-optimizing, self-management, self-healing, self-adaptive},
  location  = {Shanghai, China},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1134285.1134480},
}

@InProceedings{Angelopoulos2016,
  author    = {Angelopoulos, Konstantinos and Papadopoulos, Alessandro V. and Silva Souza, V\'{\i}tor E. and Mylopoulos, John},
  title     = {Model Predictive Control for Software Systems with CobRA},
  booktitle = {Proceedings of the 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2016},
  series    = {SEAMS ’16},
  pages     = {35–46},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive software systems monitor their operation and adapt when their requirements fail due to unexpected phenomena in their environment. This paper examines the case where the environment changes dynamically over time and the chosen adaptation has to take into account such changes. In control theory, this type of adaptation is known as Model Predictive Control and comes with a well-developed theory and myriads of successful applications. The paper focuses on modelling the dynamic relationship between requirements and possible adaptations. It then proposes a controller that exploits this relationship to optimize the satisfaction of requirements relative to a cost-function. This is accomplished through a model-based framework for designing self-adaptive software systems that can guarantee a certain level of requirements satisfaction over time, by dynamically composing adaptation strategies when necessary. The proposed framework is illustrated and evaluated through a simulation of the Meeting-Scheduling System exemplar.},
  doi       = {10.1145/2897053.2897054},
  groups    = {acm},
  isbn      = {9781450341875},
  keywords  = {self-adaptive systems, awareness requirements, model predictive control},
  location  = {Austin, Texas},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2897053.2897054},
}

@InProceedings{Edwards2007,
  author    = {Edwards, George and Seo, Chiyoung and Popescu, Daniel and Malek, Sam and Medvidovic, Nenad},
  title     = {Self-* Software Architectures and Component Middleware in Pervasive Environments},
  booktitle = {Proceedings of the 5th International Workshop on Middleware for Pervasive and Ad-Hoc Computing: Held at the ACM/IFIP/USENIX 8th International Middleware Conference},
  year      = {2007},
  series    = {MPAC ’07},
  pages     = {25–30},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Software systems that execute in embedded and pervasive environments are frequently required to be self-monitoring, self-adapting, and self-healing. However, supporting these self-* capabilities in pervasive environments creates a number of unique engineering challenges. This paper first describes the challenges that we believe to be the most significant based on our experience developing real-world pervasive software applications with self-* capabilities. We then discuss each challenge in the context of four strategies commonly employed in self-* systems: dynamic software update, service discovery, transparent replication, and logical mobility. Finally, we explain how each strategy is implemented in our architectural middleware platform, Prism-MW.},
  doi       = {10.1145/1376866.1376871},
  groups    = {acm},
  isbn      = {9781595939302},
  keywords  = {middleware, software architecture, self-adapting systems},
  location  = {Newport Beach, California},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1376866.1376871},
}

@InProceedings{Gaudin2012,
  author    = {Gaudin, Benoit and Nixon, Paddy},
  title     = {Supervisory Control for Software Runtime Exception Avoidance},
  booktitle = {Proceedings of the Fifth International C* Conference on Computer Science and Software Engineering},
  year      = {2012},
  series    = {C3S2E ’12},
  pages     = {109–112},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The Supervisory Control Theory (SCT) introduced by Ramadge and Wonham offers a framework for the control of Discrete Event Systems. In this paper, we formalize some concepts about corrective software maintenance within this framework. More specifically, we consider SCT as a way to control software systems behaviors and avoid occurrences of runtime exceptions. This approach is attractive as algorithms for controllers synthesis offer a means to automate part of the corrective maintenance process. In this paper, we introduce problems related to removing observed software failures by control, as well as solutions.},
  doi       = {10.1145/2347583.2347598},
  groups    = {acm},
  isbn      = {9781450310840},
  keywords  = {monitoring, control, self-adaptation, formal method},
  location  = {Montreal, Quebec, Canada},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2347583.2347598},
}

@InProceedings{Yang2014a,
  author    = {Yang, Qiliang and Tao, Xianping and Xie, Hongwei and Xing, Jianchun and Song, Wei},
  title     = {FuAET: A Tool for Developing Fuzzy Self-Adaptive Software Systems},
  booktitle = {Proceedings of the 6th Asia-Pacific Symposium on Internetware on Internetware},
  year      = {2014},
  series    = {INTERNETWARE 2014},
  pages     = {54–63},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Handling uncertainty in software self-adaptation has become an important and challenging issue. In our previous work, we proposed a fuzzy control based approach named Software Fuzzy Self-Adaptation (SFSA) to address fuzziness, a kind of uncertainty in software self-adaptation. However, our SFSA approach still lacks a tool to efficiently support the implementation process of SFSA. Existing tools for realizing self-adaptive applications does not directly deal with fuzziness in self-adaption loops. In this paper, we present the FuAET, a tool designed for building fuzzy self-adaptive software systems. The novelty of the tool is that it can not only provide a friendly GUI for editing and testing fuzzy self-adaptation strategies in intelligible domain specific language (DSL), but also automatically convert DSL-based fuzzy selfadaptation strategies into aspect-based programming code in native-language (NL), e.g., C++. This paper describes the design framework and implementation principles of FuAET, and then proposes a general development process using FuAET for reference to developers. Finally, we conduct an empirical study for evaluation of FuAET using an industrial control application. The results show that FuAET can automate the development of SFSA and ease the burden of the software engineers.},
  doi       = {10.1145/2677832.2677840},
  groups    = {acm},
  isbn      = {9781450333030},
  keywords  = {Self-adaptive software, Software fuzzy self-adaptation},
  location  = {Hong Kong, China},
  numpages  = {10},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2677832.2677840},
}

@InProceedings{Haensel2017,
  author    = {H\"{a}nsel, Joachim and Giese, Holger},
  title     = {Towards Collective Online and Offline Testing for Dynamic Software Product Line Systems},
  booktitle = {Proceedings of the 2nd International Workshop on Variability and Complexity in Software Design},
  year      = {2017},
  series    = {VACE ’17},
  pages     = {9–12},
  publisher = {IEEE Press},
  abstract  = {Dynamic Software Product Line (DSPLs) based Systems are capable of adapting inresponse to changes concerning their observations at runtime in order toexhibit appropriate behavior. The observation space and the variability in theconfiguration space is usually known at design time. However, running a set oftests with all combinations of configuration and observation from these spacesis likely to be infeasible. We propose to make use of monitoring results frommultiple instances of systems derived from a DSPL at runtime collecting theirobservations and the employed configurations. The collective of systems isenabled to profit from an operational profile with regard to proper coverage bysystematic tests. The systematic tests are carried out offline. Additionalonline testing further improves the confidence in the system.},
  groups    = {acm},
  isbn      = {9781538628034},
  keywords  = {dynamic software product lines, self-adaptive software systems, offline testing, online testing},
  location  = {Buenos Aires, Argentina},
  numpages  = {4},
}

@Article{Angelopoulos2018,
  author     = {Angelopoulos, Konstantinos and Papadopoulos, Alessandro V. and Souza, V\'{\i}tor E. Silva and Mylopoulos, John},
  title      = {Engineering Self-Adaptive Software Systems: From Requirements to Model Predictive Control},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2018},
  volume     = {13},
  number     = {1},
  month      = apr,
  issn       = {1556-4665},
  abstract   = {Self-adaptive software systems monitor their operation and adapt when their requirements fail due to unexpected phenomena in their environment. This article examines the case where the environment changes dynamically over time and the chosen adaptation has to take into account such changes. In control theory, this type of adaptation is known as Model Predictive Control and comes with a well-developed theory and myriad successful applications. The article focuses on modeling the dynamic relationship between requirements and possible adaptations. It then proposes a controller that exploits this relationship to optimize the satisfaction of requirements relative to a cost function. This is accomplished through a model-based framework for designing self-adaptive software systems that can guarantee a certain level of requirements satisfaction over time by dynamically composing adaptation strategies when necessary. The proposed framework is illustrated and evaluated through two simulated systems, namely, the Meeting-Scheduling exemplar and an E-Shop.},
  address    = {New York, NY, USA},
  articleno  = {1},
  doi        = {10.1145/3105748},
  groups     = {acm},
  issue_date = {May 2018},
  keywords   = {awareness requirements, Self-adaptive systems, model predictive control},
  numpages   = {27},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3105748},
}

@InProceedings{Bergen2014,
  author    = {Bergen, Andreas and Desmarais, Ronald and Ganti, Sudhakar and Stege, Ulrike},
  title     = {Towards Software-Adaptive Green Computing Based on Server Power Consumption},
  booktitle = {Proceedings of the 3rd International Workshop on Green and Sustainable Software},
  year      = {2014},
  series    = {GREENS 2014},
  pages     = {9–16},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {With the proliferation of virtualization and cloud comput- ing, optimizing the power usage effectiveness of enterprise data centers has become a laudable goal and a critical re- quirement in IT operations all over the world. While a sig- nificant body of research exists to measure, monitor, and control the greenness level of hardware components, signif- icant research efforts are needed to relate hardware energy consumption to energy consumption due to program exe- cution. In this paper we report on our investigations to characterize power consumption profiles for different types of compute and memory intensive software applications. In particular, we focus on studying the effects of CPU loads on the power consumption of compute servers by monitoring rack power consumption in a data center. We conducted a series of experiments with a variety of processes of differ- ent complexity to understand and characterize the effect on power consumption. Combining processes of varying com- plexity with varying resource allocations produces different energy consumption levels. The challenge is to optimize pro- cess orchestration based on a power consumption framework to accrue energy savings. Our ultimate goal is to develop smart adaptive green computing techniques, such as adap- tive job scheduling and resource provisioning, to reduce over- all power consumption in data centers or clouds.},
  doi       = {10.1145/2593743.2593745},
  groups    = {acm},
  isbn      = {9781450328449},
  keywords  = {Power consumption measurments, data centers, power consumption framework, power application pro- files, cloud computing, green-aware, self-adaptive green computing},
  location  = {Hyderabad, India},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2593743.2593745},
}

@Article{Yuan2014a,
  author     = {Yuan, Eric and Esfahani, Naeem and Malek, Sam},
  title      = {A Systematic Survey of Self-Protecting Software Systems},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2014},
  volume     = {8},
  number     = {4},
  month      = jan,
  issn       = {1556-4665},
  abstract   = {Self-protecting software systems are a class of autonomic systems capable of detecting and mitigating security threats at runtime. They are growing in importance, as the stovepipe static methods of securing software systems have been shown to be inadequate for the challenges posed by modern software systems. Self-protection, like other self-* properties, allows the system to adapt to the changing environment through autonomic means without much human intervention, and can thereby be responsive, agile, and cost effective. While existing research has made significant progress towards autonomic and adaptive security, gaps and challenges remain. This article presents a significant extension of our preliminary study in this area. In particular, unlike our preliminary study, here we have followed a systematic literature review process, which has broadened the scope of our study and strengthened the validity of our conclusions. By proposing and applying a comprehensive taxonomy to classify and characterize the state-of-the-art research in this area, we have identified key patterns, trends and challenges in the existing approaches, which reveals a number of opportunities that will shape the focus of future research efforts.},
  address    = {New York, NY, USA},
  articleno  = {17},
  doi        = {10.1145/2555611},
  groups     = {acm},
  issue_date = {January 2014},
  keywords   = {self-adaptive systems, adaptive security, self-* properties, Self-protection, autonomic computing},
  numpages   = {41},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2555611},
}

@InProceedings{Georgas2005a,
  author    = {Georgas, John C. and van der Hoek, Andr\'{e} and Taylor, Richard N.},
  title     = {Architectural Runtime Configuration Management in Support of Dependable Self-Adaptive Software},
  booktitle = {Proceedings of the 2005 Workshop on Architecting Dependable Systems},
  year      = {2005},
  series    = {WADS ’05},
  pages     = {1–6},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The dynamic nature of some self-adaptive software systems can result in potentially unpredictable adaptations, which may be detrimental to overall system dependability by diminishing trust in the adaptation process. This paper describes our initial work with architectural runtime configuration management in order to improve dependability and overall system usefulness by maintaining a record of reconfigurations and providing support for architectural recovery operations. Our approach---fully decoupled from self-adaptive systems themselves and the adaptation management processes governing their changes---provides for better adaptation visibility and self-adaptive process dependability. We elaborate on the vision for our overall approach, present early implementation and testing results from prototyping efforts, and discuss our future plans.},
  doi       = {10.1145/1083217.1083225},
  groups    = {acm},
  isbn      = {1595931244},
  keywords  = {self-adaptive software, dependability, architectural runtime configuration management},
  location  = {St. Louis, Missouri},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1083217.1083225},
}

@InProceedings{Chen2009,
  author    = {Chen, Bihuan and Peng, Xin and Zhao, Wenyun},
  title     = {Towards Runtime Optimization of Software Quality Based on Feedback Control Theory},
  booktitle = {Proceedings of the First Asia-Pacific Symposium on Internetware},
  year      = {2009},
  series    = {Internetware ’09},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The increasingly complex environments in which software systems are running today have made runtime software quality unstable and hardly in an optimal state, especially for those systems in open and dynamic environments, e.g. Internetware. In this paper, we explore the effectiveness of software cybernetics and feedback control theory in runtime software quality optimization. We propose a method of runtime quality optimization by using feedback control theory. Specially, we consider the problem of runtime optimization for a specific quality attribute, namely throughput, for Web-based systems. We design a double-layer feedback control model for the problem and implement the runtime optimization control method. In the method, runtime feedbacks are collected and used by the control model to adjust related control parameters. The experimental study has demonstrated the effectiveness of software cybernetics and feedback control theory in runtime quality optimization.},
  articleno = {10},
  doi       = {10.1145/1640206.1640216},
  groups    = {acm},
  isbn      = {9781605588728},
  keywords  = {software quality, throughput, runtime reconfiguration, self-adaptation, control, feedback control, quality optimization},
  location  = {Beijing, China},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1640206.1640216},
}

@InProceedings{Filho2016,
  author    = {Filho, Roberto Rodrigues and Porter, Barry},
  title     = {Experiments with a Machine-Centric Approach to Realise Distributed Emergent Software Systems},
  booktitle = {Proceedings of the 15th International Workshop on Adaptive and Reflective Middleware},
  year      = {2016},
  series    = {ARM 2016},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Modern distributed systems are exposed to constant changes in their operating environment, leading to high uncertainty. Self-adaptive and self-organising approaches have become a popular solution for runtime reactivity to this uncertainty. However, these approaches use predefined, expertly-crafted policies or models, constructed at design-time, to guide system (re)configuration. They are human-centric, making modelling or policy-writing difficult to scale to increasingly complex systems; and are inflexible in their ability to deal with the unexpected at runtime (e.g. conditions not captured in a policy). We argue for a machine-centric approach to this problem, in which the desired behaviour is autonomously learned and emerges at runtime from a large pool of small alternative components, as a continuous reaction to the observed behaviour of the software and the characteristics of its operating environment. We demonstrate our principles in the context of data-centre software, showing that our approach is able to autonomously coordinate a distributed infrastructure composed of emergent web servers and a load balancer. Our initial results validate our approach, showing autonomous convergence on an optimal configuration, and also highlight the open challenges in providing fully machine-led distributed emergent software systems.},
  articleno = {1},
  doi       = {10.1145/3008167.3008168},
  groups    = {acm},
  isbn      = {9781450346627},
  keywords  = {Self-organising systems, Distributed emergent software systems, Self-adaptive systems},
  location  = {Trento, Italy},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3008167.3008168},
}

@InProceedings{Ruiz2016,
  author    = {Ruiz, Carlos and Duran-Limon, Hector A. and Parlavantzas, Nikos},
  title     = {Towards a Software Product Line-Based Approach to Adapt IaaS Cloud Configurations},
  booktitle = {Proceedings of the 9th International Conference on Utility and Cloud Computing},
  year      = {2016},
  series    = {UCC ’16},
  pages     = {398–403},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Cloud computing is nowadays one of the most promising IT technologies, since it provides seemingly unlimited resources on demand at low costs. Hence, different types of applications have been migrated to IaaS environments, e.g. multi-tier (distributed) applications. However, in order to benefit from such characteristics, cloud configurations (i.e. virtual resource configurations) should be designed accordingly to the necessities of the applications. Furthermore, such configurations have to provide the required resources not only at the application deployment-time, but also during the whole application execution time. Hence, adaptive paradigms are required when designing solutions to cloud applications with dynamic resource requirements. Software Product Lines (SPLs) provide great flexibility and a high level of abstraction to describe complete system configurations. Even though SPLs are not commonly used to describe changes after an initial product (configuration) has been created, their inherent characteristics can enable producing the required virtual resource configuration to adapt applications after their initial deployment, i.e., at runtime. In this paper, we present an approach to create and adapt cloud configurations at the IaaS level by using SPLs. We focus on the architectural design of our solution as well as on the possible implementation challenges we could face.},
  doi       = {10.1145/2996890.3007893},
  groups    = {acm},
  isbn      = {9781450346160},
  keywords  = {cloud computing, software product lines, self-adaptation},
  location  = {Shanghai, China},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2996890.3007893},
}

@InProceedings{Weisbach2017,
  author    = {Wei\ss{}bach, Martin and Springer, Thomas},
  title     = {Coordinated Execution of Adaptation Operations in Distributed Role-Based Software Systems},
  booktitle = {Proceedings of the Symposium on Applied Computing},
  year      = {2017},
  series    = {SAC ’17},
  pages     = {45–50},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Future applications will run in a highly heterogeneous and dynamic execution environment that forces them to adapt their behavior and offered functionality depending on the user's or the system's current situation. Since application components in such heterogeneous multi-device systems will be distributed over multiple interconnected devices and cooperate to achieve a common goal, a coordinated adaptation is required to ensure a consistent system behavior. In this paper we present a decentralized adaptation middleware to adapt a distributed software system. Our approach supports the reliable execution of multiple adaptation operations that depend on each other and are performed transactionally even in unsteady environments coined by message loss or node failures. We implemented our approach in a search-and-rescue robot scenario to show its feasibility and conduct first performance evaluations.},
  doi       = {10.1145/3019612.3019624},
  groups    = {acm},
  isbn      = {9781450344869},
  keywords  = {multi-device systems, decentralized coordinated adaptation, self-adaptive systems, roles},
  location  = {Marrakech, Morocco},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3019612.3019624},
}

@InProceedings{Weyns2014,
  author    = {Weyns, Danny},
  title     = {Variability: From Software Product Lines to Self-Adaptive Systems},
  booktitle = {Proceedings of the 18th International Software Product Line Conference: Companion Volume for Workshops, Demonstrations and Tools - Volume 2},
  year      = {2014},
  series    = {SPLC ’14},
  pages     = {12},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Variability is commonly understood as the ability of a software system or software artifact (e.g., component) to be changed so that it fits a specific context. Variability allows adapting the structure of a software system, its behavior, or underlying processes. These adaptations are enabled through variation points and variants as options that can be selected at these variation points. So far, variability has mainly been studied in the classic software product line domain. However, variability is not limited to product lines or families, but imposes challenges on software development in general. Many other types of today's software systems are built with variability in mind; one prominent type is self-adaptive systems that are capable to adapt autonomously at runtime, another is dynamic software product lines that combines principles from product lines with self-adaptation. In this talk, I summarize the results of an extensive survey we recently performed on the use of variability in software systems in general [1]. Based on our findings, I present dimensions of variability in software engineering. This empirically grounded set of core dimensions provides a step towards an integrated perspective of variability in software systems, spanning across loosely coupled research areas in the software engineering community. To conclude, I outline some interesting opportunities for future research.},
  doi       = {10.1145/2647908.2655959},
  groups    = {acm},
  isbn      = {9781450327398},
  keywords  = {variability, self-adaptive systems, software product lines, dynamic software product lines},
  location  = {Florence, Italy},
  numpages  = {1},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2647908.2655959},
}

@InProceedings{Liu2016,
  author    = {Liu, Yang and Zhang, Wei and Jiao, Wenpin},
  title     = {A Generative Genetic Algorithm for Evolving Adaptation Rules of Software Systems},
  booktitle = {Proceedings of the 8th Asia-Pacific Symposium on Internetware},
  year      = {2016},
  series    = {Internetware ’16},
  pages     = {103–107},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The Internetware system is a complex and distributed self-adaptive system, which executes in an open, uncertain and dynamic environment, and adapts itself to changes in the environment. We hope that Internetware systems have the ability to automatically evolve in respond to changes. An important problem related to the development of Internetware systems is how to formulate proper adaptation rules. Because of the uncertainty of environment, the adaptation rules may not be suitable to the current system. Adaptation rules always need to be evolved to obtain better results. Some traditional methods can decide adaptation actions in different environmental conditions and evolve adaptation rules. But most of these methods bring about huge computation cost, which are not highly-efficient. To resolve these problems, we propose a method for evolving adaptation rules automatically, based on genetic algorithm and linear regression. We apply this method to evolve adaptation rules for a web application based on a widely used prototype --- RUBiS, which is an auction site similar to eBay. Experiments show that our method can evolve adaptation rules and improve the web application's performance in dynamic environment.},
  doi       = {10.1145/2993717.2993731},
  groups    = {acm},
  isbn      = {9781450348294},
  keywords  = {self-adaptive system, automatic generation, simulation, generative genetic algorithm, adaptation rules},
  location  = {Beijing, China},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2993717.2993731},
}

@InProceedings{Hissam2015,
  author    = {Hissam, Scott A. and Chaki, Sagar and Moreno, Gabriel A.},
  title     = {High Assurance for Distributed Cyber Physical Systems},
  booktitle = {Proceedings of the 2015 European Conference on Software Architecture Workshops},
  year      = {2015},
  series    = {ECSAW ’15},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Distributed Adaptive Real-Time (DART) systems are interconnected and collaborating systems that continuously must satisfy guaranteed and highly critical requirements (e.g., collision avoidance), while at the same time adapt, smartly, to achieve best-effort and low-critical application requirements (e.g., protection coverage) when operating in dynamic and uncertain environments. This short paper introduces our architecture and approach to engineering a DART system so that we achieve high assurance in its runtime behavior against a set of formally specified requirements. It describes our technique to: (i) ensure asymmetric timing protection between high- and low-critical threads on each node in the DART system, and (ii) verify that the self-adaptation within, and coordination between, the nodes and their interaction with the physical environment do not violate high and low criticality requirements. We present our ongoing research to integrate advances in model-based engineering with compositional analysis techniques to formally verify safety-critical properties demanded in safety-conscious domains such as aviation and automotive; and introduce our DART model problem to demonstrate of our engineering approach.},
  articleno = {6},
  doi       = {10.1145/2797433.2797439},
  groups    = {acm},
  isbn      = {9781450333931},
  keywords  = {self-adaptation, architecture, model-checking, Real-time},
  location  = {Dubrovnik, Cavtat, Croatia},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2797433.2797439},
}

@InProceedings{Matena2016,
  author    = {Matena, Vladimir and Bures, Tomas and Gerostathopoulos, Ilias and Hnetynka, Petr},
  title     = {Model Problem and Testbed for Experiments with Adaptation in Smart Cyber-Physical Systems},
  booktitle = {Proceedings of the 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2016},
  series    = {SEAMS ’16},
  pages     = {82–88},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {In this artifact, we partially address the problem of development of smart Cyber-Physical Systems (sCPS) by providing a concrete model problem and testbed for experimenting with, comparing, and developing new adaptation techniques and algorithms pertinent to sCPS. In particular, our model problem features autonomous robots cooperating opportunistically in a highly dynamic environment with multiple sources of uncertainty and runtime failures. Our testbed provides ROS-based Stage simulation of the model problem reified in a swarm of Turtlebot robots. The testbed ties this to timing-, bandwidth- and mobility-aware simulation of the robot communication (based on OMNeT++). To enable fast prototyping, the testbed abstracts robots as autonomous components (implemented in Java) and allows describing robot communication via dynamic collaboration groups (ensembles). It also points to specific places in the simulation code where adaptation logic can be plugged in.},
  doi       = {10.1145/2897053.2897065},
  groups    = {acm},
  isbn      = {9781450341875},
  keywords  = {self-adaptation, smart cyber physical systems, testbed, model problem},
  location  = {Austin, Texas},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2897053.2897065},
}

@InProceedings{Lee2019,
  author    = {Lee, Edward A.},
  title     = {A Fundamental Look at Models and Intelligence: Abstract of Keynote},
  booktitle = {Proceedings of the 5th International Workshop on Software Engineering for Smart Cyber-Physical Systems},
  year      = {2019},
  series    = {SEsCPS ’19},
  pages     = {1},
  publisher = {IEEE Press},
  abstract  = {Comprehensible and analyzable models are central to building confidence in cyber-physical systems. Hybrid systems theories, interface theories, formal semantics, concurrent models of computation, component models, and ontologies all augment classical software engineering techniques such as object-oriented design to catch errors and to make systems more modular and composable. However, as systems integrate self-adaptive capabilities and learning algorithms, keeping models comprehensible and analyzable gets challenging. Every model lives within a modeling framework, ideally giving semantics to the model, and many modeling frameworks have been developed that enable rigorous analysis and proof of properties. But every such modeling framework is an imperfect mirror of reality. An engineered system operating in the physical world may or may not accurately reflect behaviors predicted by a model, and the model may not reflect behaviors that are critical to correct operation of the system. Software in a cyber-physical system, for example, has timing properties that are rarely represented in formal models. As artificial intelligence gets more widely used, the problem gets worse, with predictability and explainability seemingly evaporating. In this keynote talk, I examine the strengths and limitations in the use of models. I will show that two very different classes of models are used in practice, classes that I call “scientific models" and "engineering models" [1]. These two classes have complementary properties, and many misuses of models stem from confusion about which class is being used. Scientific models of intelligent systems are very different from engineering models. I will argue that rigorous and analyzable engineering models are useful even in the face of uncertainty and can be used to regulate adaptation and circumscribe the behaviors of learning-based systems.},
  doi       = {10.1109/SEsCPS.2019.00007},
  groups    = {acm},
  keywords  = {model-based design, self-adaptive systems, cyber-physical systems},
  location  = {Montreal, Quebec, Canada},
  numpages  = {1},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEsCPS.2019.00007},
}

@InProceedings{Sabatucci2018,
  author    = {Sabatucci, Luca and De Simone, Giada and Cossentino, Massimo},
  title     = {Shipboard Power System Reconfiguration: A Self-Adaptation Exemplar},
  booktitle = {Proceedings of the 4th International Workshop on Software Engineering for Smart Cyber-Physical Systems},
  year      = {2018},
  series    = {SEsCPS ’18},
  pages     = {49–52},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The Shipboard Power System (SPS) is the component responsible for granting energy to navigation, communication, and operational systems. The SPS Reconfiguration is the ability to react to electrical failure and to restore critical operations for granting vessel survivability. This work illustrate why SPS Reconfiguration software system may be implemented as a self-adaptive system. To illustrate this relation we exploit a systematic classification of SPS reconfiguration methods, by highlighting terms and attributes related to self-adaptive systems. In particular, the research method considers four types of self-adaptation systems with different degrees of autonomy and proactivity. The corresponding data analysis highlights a strong correlation between SPS Reconfiguration and Self-Adaptive systems, revealing most of the SPS reconfiguration techniques found in literature often belong to three of the four types of adaptation. The outcome of the paper is proposing SPS as an interesting benchmark for comparing self-adaptive approaches, also highlighting scenarios, tasks, norms goals and quality aspects with the support of the IEEE specifications.},
  doi       = {10.1145/3196478.3196486},
  groups    = {acm},
  isbn      = {9781450357289},
  keywords  = {systematic literature review, self-adaptation exemplar, shipboard power system},
  location  = {Gothenburg, Sweden},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3196478.3196486},
}

@InProceedings{Andrade2015,
  author    = {Andrade, Hugo and Giaimo, Federico and Berger, Christian and Crnkovic, Ivica},
  title     = {Systematic Evaluation of Three Data Marshalling Approaches for Distributed Software Systems},
  booktitle = {Proceedings of the Workshop on Domain-Specific Modeling},
  year      = {2015},
  series    = {DSM 2015},
  pages     = {71–76},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Cyber-physical systems like robots and self-driving vehicles comprise complex software systems. Their software is typically realized as distributed agents that are responsible for dedicated tasks like sensor data handling, sensor data fusion, or action planning. The modular design allows a flexible deployment as well as algorithm encapsulation to exchange software modules where needed. The distributed software exchanges data using a data marshalling layer to serialize and deserialize data structures between a sending and receiving entity. In this article, we are systematically evaluating Google Protobuf, LCM, and our self-adaptive delta marshalling approach by using a generic description language, of which instances are composed at runtime. Our results show that Google Protobuf performs well for small messages composed mainly by integral field types; the self-adaptive data marshalling approach is efficient if four or more fields of type double are present, and LCM outperforms both when a mix of many integral and double fields is used.},
  doi       = {10.1145/2846696.2846705},
  groups    = {acm},
  isbn      = {9781450339032},
  keywords  = {self-adaptive data marshalling, distributed software systems, data marshalling},
  location  = {Pittsburgh, PA, USA},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2846696.2846705},
}

@InProceedings{Giaimo2015,
  author    = {Giaimo, Federico and Andrade, Hugo and Berger, Christian and Crnkovic, Ivica},
  title     = {Improving Bandwidth Efficiency with Self-Adaptation for Data Marshalling on the Example of a Self-Driving Miniature Car},
  booktitle = {Proceedings of the 2015 European Conference on Software Architecture Workshops},
  year      = {2015},
  series    = {ECSAW ’15},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Publish/subscribe communication is a common architectural design pattern in component-based software systems used in many of today's cyber-physical systems to exchange information between distributed software components. These systems typically deal with an increased number of data transfers, with a risk of lacking resources. Our recent domain analysis for a lane-following algorithm of a self-driving miniature car unveiled that the actual "information increment" between two subsequently sent packets is often small. Such scenario enables possibilities for a more efficient data exchange by avoiding redundant and/or unnecessary information transfer. In this paper, we propose and evaluate our concept for "self-adaptive data marshalling" that transparently adapts data types in messages to be exchanged by analyzing the actual information increment. The approach could reduce the bandwidth usage by more than 50% in comparison to the current approach, and by approximately 33% compared to the use of the general-purpose compression library zlib.},
  articleno = {21},
  doi       = {10.1145/2797433.2797454},
  groups    = {acm},
  isbn      = {9781450333931},
  keywords  = {Cyber-physical systems, Communication, Self-driving cars, Self-adaptation, Publish/subscribe, Data marshalling},
  location  = {Dubrovnik, Cavtat, Croatia},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2797433.2797454},
}

@InProceedings{Palumbo2019,
  author    = {Palumbo, Francesca and Fanni, Tiziana and Sau, Carlo and Pulina, Luca and Raffo, Luigi and Masin, Michael and Shindin, Evgeny and de Rojas, Pablo Sanchez and Desnos, Karol and Pelcat, Maxime and Rodr\'{\i}guez, Alfonso and Ju\'{a}rez, Eduardo and Regazzoni, Francesco and Meloni, Giuseppe and Zedda, Katiuscia and Myrhaug, Hans and Kaliciak, Leszek and Andriaanse, Joost and de Olivieria Filho, Julio and Mu\~{n}oz, Pablo and Toffetti, Antonella},
  title     = {CERBERO: Cross-Layer ModEl-Based FRamework for Multi-OBjective DEsign of Reconfigurable Systems in UnceRtain HybRid EnvirOnments: Invited Paper: CERBERO Teams from UniSS, UniCA, IBM Research, TASE, INSA-Rennes, UPM, USI, Abinsula, AmbieSense, TNO, S\&T, CRF},
  booktitle = {Proceedings of the 16th ACM International Conference on Computing Frontiers},
  year      = {2019},
  series    = {CF ’19},
  pages     = {320–325},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Cyber-Physical Systems (CPS) are embedded computational collaborating devices, capable of sensing and controlling physical elements and, often, responding to humans. Designing and managing systems able to respond to different, concurrent requirements during operation is not straightforward, and introduce the need of proper support at design-time and run-time. The Cross-layer modEl-based fRamework for multi-oBjective dEsign of Reconfigurable systems in unceRtain hybRid envirOnments (CERBERO) EU project has developed a design environment for adaptive CPS. CERBERO approach leverages on model-based methodologies including different technologies and tools developed to cover design and operation from user interactions down to low level computing layer implementation.},
  doi       = {10.1145/3310273.3323436},
  groups    = {acm},
  isbn      = {9781450366854},
  keywords  = {self-adaptation, SW adaptivity, HW adaptivity, HW reconfiguration, CPS, verification},
  location  = {Alghero, Italy},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3310273.3323436},
}

@InProceedings{Weiss2018,
  author    = {Weiss, Gereon and Schleiss, Philipp and Schneider, Daniel and Trapp, Mario},
  title     = {Towards Integrating Undependable Self-Adaptive Systems in Safety-Critical Environments},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {26–32},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Modern cyber-physical systems (CPS) integrate more and more powerful computing power to master novel applications and adapt to changing situations. A striking example is the recent progression in the automotive market towards autonomous driving. Powerful artificial intelligent algorithms must be executed on high performant parallelized platforms. However, this cannot be employed in a safe way, as the platforms stemming from the consumer electronics (CE) world still lack required dependability and safety mechanisms. In this paper, we present a concept to integrate undependable self-adaptive subsystems into safety-critical environments. For this, we introduce self-adaptation envelopes which manage undependable system parts and integrate within a dependable system. We evaluate our approach by a comprehensive case study of autonomous driving. Thereby, we show that the potential failures of the AUTOSAR Adaptive platform as exemplary undependable system can be handled by our concept. In overall, we outline a way of integrating inherently undependable adaptive systems into safety-critical CPS.},
  doi       = {10.1145/3194133.3194157},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {autonomous driving, self-adaptive, AUTOSAR adaptive, cyber-physical systems},
  location  = {Gothenburg, Sweden},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194157},
}

@InProceedings{Dobaj2018,
  author    = {Dobaj, J\"{u}rgen},
  title     = {INSpIRA: INtegrating Security into Risk Assessment: Doctoral Project Paper},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {183–187},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Today's software and hardware technologies enable the expansion of Cyber-Physical Systems (CPSs) into the realms of mobility (car2x, autonomous driving), energy (power plants, smart grid) and healthcare (health monitoring), paving the way into a highly interlaced world. However, this also dramatically broadens the threat landscape for potential attacks on CPSs. The malfunction of these CPSs could threaten human life, cause environmental damage and major financial loss [5, 9, 16]. This drives the need for comprehensive methods that support the cross-domain design, development and implementation of safe and secure systems [3, 4]. In order to tackle these challenges, this paper proposes a method called INSpIRA, a method for INtegrating Security Into Risk Assessment, including a toolchain implementing the method. The envisioned method is supposed to be a holistic approach that supports the efficient cross-domain design, development, implementation and maintenance of dependable CPSs, where security and safety are a critical aspect that requires an in-depth risk assessment.},
  doi       = {10.1145/3194133.3194159},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {self-adaptive system, security, ICS, dependability, model based development, industrial control systems, risk assessment, safety},
  location  = {Gothenburg, Sweden},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194159},
}

@InProceedings{Moghaddam2018,
  author    = {Moghaddam, Fahimen Alizadeh and Lago, Patricia and Ban, Iulia Cristina},
  title     = {Self-Adaptation Approaches for Energy Efficiency: A Systematic Literature Review},
  booktitle = {Proceedings of the 6th International Workshop on Green and Sustainable Software},
  year      = {2018},
  series    = {GREENS ’18},
  pages     = {35–42},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The increasing energy demands of software systems have set an essential software quality requirement: energy efficiency. At the same time, the many contextual changes faced by software systems during execution can hamper their functionality and overall quality. To address both problems, self-adaptation approaches can empower software systems, at both design-time and runtime, to adapt to dynamic conditions. In this way, software systems can be more resilient to failure, hence more trustful to satisfy the demands of modern digital society. In this paper, we perform a systematic literature review to study the state-of-the-art on existing self-adaptation approaches for energy efficiency. We analyze the identified approaches from three different perspectives, namely publication trends, application domains, and types of software systems. Our findings can help solution providers to make guided decisions to enable self-adaptability in designing and engineering software systems.},
  doi       = {10.1145/3194078.3194084},
  groups    = {acm},
  isbn      = {9781450357326},
  keywords  = {systematic literature review, energy efficiency, self-adaptive software},
  location  = {Gothenburg, Sweden},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194078.3194084},
}

@InProceedings{Sousa2019,
  author    = {de Sousa, Amanda Oliveira and Bezerra, Carla I. M. and Andrade, Rossana M. C. and Filho, Jos\'{e} M. S. M.},
  title     = {Quality Evaluation of Self-Adaptive Systems: Challenges and Opportunities},
  booktitle = {Proceedings of the XXXIII Brazilian Symposium on Software Engineering},
  year      = {2019},
  series    = {SBES 2019},
  pages     = {213–218},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems (SAS) can adapt their behavior to suit user preferences or contexts, as well as monitor their performance and adjust it if necessary. In addition to adaptation operations, self-adaptive systems communicate with sensors, actuators, and other devices. Due to the complexity and dynamism of SAS, many situations can compromise the functioning of the system, such as faults in adaptations, low performance to execute tasks, and context inconsistencies. To prevent the system of these problems, it is essential to ensure high levels of quality. However, due to the peculiarities of these systems, there are still challenges to perform quality evaluations in these systems. In this sense, this paper proposes a discussion about the quality evaluation of self-adaptive systems in the last years. As a result, we identify challenges, limitations and research opportunities related to SAS quality evaluation.},
  doi       = {10.1145/3350768.3352455},
  groups    = {acm},
  isbn      = {9781450376518},
  keywords  = {quality evaluation, self-adaptive systems, measurement},
  location  = {Salvador, Brazil},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3350768.3352455},
}

@InProceedings{Uchitel2017,
  author    = {Uchitel, Sebastian},
  title     = {Runtime Controller Synthesis for Self-Adaptation: Discretion Required},
  booktitle = {Proceedings of the 10th Innovations in Software Engineering Conference},
  year      = {2017},
  series    = {ISEC ’17},
  pages     = {1},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptation is often loosely defined as the ability of systems to alter at runtime their behavior in response to changes in their environment, capabilities and goals. Yet we have been building self-adaptive systems have been engineered for decades. The shift from functional, input-output software, to reactive systems stems from the need to have software that can sense its environment, whose behavior is uncertain, and react accordingly. In this talk I will argue that this definition is too broad and that it dilutes a very real need for a particular quality of today's software systems. I will postulate that a more refined definition of adaptation should emphasize the need for systems to have the ability to react to changes that were originally unforeseen at design time, and to provide assurances on the correctness of these adaptations. How can systems be designed to account for what is unforeseen? I will argue that a key design decision for achieving self-adaptation is to endow systems with the capability of synthesizing at runtime discrete event controllers. Indeed, reactive systems that are requirements and assumptions aware, if extended with run time controller synthesis capabilities are equipped with a powerful infrastructure towards achieving assured self-adaptation. The vision of runtime discrete event controller synthesis at the heart of self-adaptation requires developing appropriate architectures. I will discuss Morph, a reference architecture that can support not only runtime synthesis but also deal with two other crucial elements: (i) interface, requirements and assumption awareness and (ii) runtime controller deployment and dynamic structural and behavioral reconfiguration.},
  doi       = {10.1145/3021460.3021486},
  groups    = {acm},
  isbn      = {9781450348560},
  keywords  = {run time controller, Self-adaptive systems, architecture},
  location  = {Jaipur, India},
  numpages  = {1},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3021460.3021486},
}

@InProceedings{Vasconcelos2014,
  author    = {Vasconcelos, Rafael Oliveira and Vasconcelos, Igor and Endler, Markus},
  title     = {A Middleware for Managing Dynamic Software Adaptation},
  booktitle = {Proceedings of the 13th Workshop on Adaptive and Reflective Middleware},
  year      = {2014},
  series    = {ARM ’14},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The design and development of adaptive systems brings new challenges since the dynamism of such systems is a multifaceted concern that range from mechanisms to enable the adaptation on the software level to the (self-) management of the entire system using adaptation plans or system administrator, for instance. Networked and mobile embedded systems are examples of systems where dynamic adaptation become even more necessary as the applications must be capable of discovering the computing resources in their near environment. While most of the current research is concerned with low-level adaptation techniques (i.e., how to dynamically deploy new components or change parameters), we are focused in providing management of distributed dynamic adaptation and facilitating the development of adaptation plans. In this paper, we present a middleware tailored for mobile embedded systems that supports distributed dynamic software adaptation, in transactional and non-transactional fashion, among mobile devices. We also present results of initial evaluation.},
  articleno = {5},
  doi       = {10.1145/2677017.2677022},
  groups    = {acm},
  isbn      = {9781450332323},
  keywords  = {dynamic adaptation, mobile communication, self-adaptive systems, adaptability, middleware},
  location  = {Bordeaux, France},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2677017.2677022},
}

@InProceedings{Beigi-Mohammadi2018,
  author    = {Beigi-Mohammadi, Nasim and Litoiu, Marin and Emami-Taba, Mahsa and Tahvildari, Ladan and Fokaefs, Marios and Merlo, Ettore and Onut, Iosif Viorel},
  title     = {A DevOps Framework for Quality-Driven Self-Protection in Web Software Systems},
  booktitle = {Proceedings of the 28th Annual International Conference on Computer Science and Software Engineering},
  year      = {2018},
  series    = {CASCON ’18},
  pages     = {270–274},
  address   = {USA},
  publisher = {IBM Corp.},
  abstract  = {Modern software is developed, deployed and operates continuously. At the same time, cyberattacks are on the rise. The continuity of development and operations and the constant threat of attacks requires novel approaches to identify, analyze and address potential security vulnerabilities. In this continuous and volatile execution environment, factors like security, performance, cost and functionality may not be able to be guaranteed in the same degree at the same time. In this work, we propose a DevOps framework for security adaptation that enables the development and operations teams to collaborate and address security vulnerabilities. The proposed framework spans across the different phases of software (development, operations, maintenance) and considers all other factors (performance, cost, functionality), when deciding for security adaptations. We demonstrate the approach on a prototype tool that shows how teams work together to tackle security concerns.},
  doi       = {10.5555/3291291.3291319},
  groups    = {acm},
  keywords  = {security, web software, software defined infrastructure, devops, self-protection, self-adaptive systems},
  location  = {Markham, Ontario, Canada},
  numpages  = {5},
  url       = {https://dl.acm.org/doi/10.5555/3291291.3291319},
}

@InProceedings{Case2014,
  author    = {Case, Denise M. and DeLoach, Scott A.},
  title     = {OBAA++: An Agent Architecture for Participating in Multiple Groups},
  booktitle = {Proceedings of the 2014 International Conference on Autonomous Agents and Multi-Agent Systems},
  year      = {2014},
  series    = {AAMAS ’14},
  pages     = {1367–1368},
  address   = {Richland, SC},
  publisher = {International Foundation for Autonomous Agents and Multiagent Systems},
  abstract  = {Organization-based agents dynamically create, manage, and participate in groups governed by common goals. In complex applications, agents may participate simultaneously in multiple organizations, requiring agents to manage their associations and assignments in a consistent, unambiguous way. The Organization-Based Agent Architecture(OBAA++) explicitly supports multigroup agents and is being used to evaluate a holonic MAS for power quality control.},
  doi       = {10.5555/2615731.2617476},
  groups    = {acm},
  isbn      = {9781450327381},
  keywords  = {organization-based agents, agent architectures, agent-oriented software engineering, self-adaptive systems},
  location  = {Paris, France},
  numpages  = {2},
  url       = {https://dl.acm.org/doi/10.5555/2615731.2617476},
}

@InProceedings{Schlegel2011,
  author    = {Schlegel, Thomas and Pietschmann, Stefan},
  title     = {Model-Based Interactive Ubiquitous Systems},
  booktitle = {Proceedings of the 3rd ACM SIGCHI Symposium on Engineering Interactive Computing Systems},
  year      = {2011},
  series    = {EICS ’11},
  pages     = {337–338},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Ubiquitous systems are introducing a new quality of interaction both into our lives and into software engineering. Software becomes increasingly dynamic making frequent changes to system structures, distribution, and behavior necessary. Also, adaptation to user needs and contexts as well as different modalities and communication channels make these systems differ strongly from what has been standard over the last decades. Model-driven engineering forms a promising approach for coping with the dynamics and uncertainties inherent to interactive ubiquitous systems (IUS). This workshop discusses models and model-driven architectures addressing the challenges of interaction with and engineering of IUS with regard to the design and runtime.},
  doi       = {10.1145/1996461.1996554},
  groups    = {acm},
  isbn      = {9781450306706},
  keywords  = {mda, context-awareness, ubiquitous systems, ubiquitous interaction, models, self-adaptation, eics workshop, software engineering, multimodal interfaces},
  location  = {Pisa, Italy},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1996461.1996554},
}

@InProceedings{Bowers2018,
  author    = {Bowers, Kate M. and Hariri, Reihaneh H. and Price, Katey A.},
  title     = {3CAP: Categorizing the Cognitive Capabilities of Alzheimer’s Patients in a Smart Home Environment},
  booktitle = {Proceedings of the 4th ACM SIGSOFT International Workshop on NLP for Software Engineering},
  year      = {2018},
  series    = {NL4SE 2018},
  pages     = {34–37},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Alzheimer’s disease is a progressive illness that affects more than 5.5 million people in the United States with no effective cure or treatment. Symptoms of the disease include declines in memory and speech abilities and increases in aggression and insomnia. Recent research suggests that NLP techniques can detect early cognitive decline as well as monitor the rate of decline over time. The processed data can be used in a smart home environment to enhance the level of home care for Alzheimer’s patients. This paper proposes early-stage research in software engineering and natural language processing for quantifying and evaluating the patient’s cognitive state to determine the required level of support in a smart home.},
  doi       = {10.1145/3283812.3283824},
  groups    = {acm},
  isbn      = {9781450360555},
  keywords  = {self-adaptive systems, smart home, cyber-physical systems, natural language processing, Alzheimer’s disease},
  location  = {Lake Buena Vista, FL, USA},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3283812.3283824},
}

@Article{Viroli2016,
  author     = {Viroli, Mirko and Diaconescu, Ada and Kandasamy, Nagarajan},
  title      = {SASO 2014: Selected, Revised, and Extended Best Papers},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2016},
  volume     = {11},
  number     = {2},
  month      = jul,
  issn       = {1556-4665},
  abstract   = {The international conference IEEE SASO (Self-Adapting and Self-Organizing Systems) is the main forum for studying and discussing the foundations of a principled approach to engineering systems, networks, and services based on self-adaptation and self-organization. Over the past decade, it has consolidated as the primary scientific conference for sharing ideas on algorithms, technologies, tools, and applications across a wide range of scientific fields. In 2014, the conference was hosted by Imperial College in London, United Kingdom; its scientific program comprised full papers, short papers, poster presentations, demo sessions, workshops, and tutorials. This special issue of ACM TAAS champions some of the most solid research results of SASO 2014, presenting selected, revised, and extended best articles.},
  address    = {New York, NY, USA},
  articleno  = {5},
  doi        = {10.1145/2939206},
  groups     = {acm},
  issue_date = {July 2016},
  keywords   = {Self-adapting systems, self-organizing systems},
  numpages   = {2},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2939206},
}

@Article{Pitt2015,
  author     = {Pitt, Jeremy and Holvoet, Tom},
  title      = {SASO 2013: Selected, Revised, and Extended Best Papers},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2015},
  volume     = {10},
  number     = {2},
  month      = jun,
  issn       = {1556-4665},
  abstract   = {IEEE SASO (Self-Adapting and Self-Organizing Systems) is the premier international conference for computer systems and networks that autonomously change some aspect of themselves: code, form, function, shape, structure, components, and so on. Over the past 10 years, it has emerged as a key multidisciplinary event for sharing theoretical insights and technical innovations across the numerous scientific fields and application domains impacted by this research. In 2013, the conference was hosted by Drexel University in Philadelphia, Pennsylvania, and offered an extensive program of high-quality papers. This special issue of ACM TAAS presents selected, revised, and extended best articles, which showcase the rich variety and depth of the SASO scientific community.},
  address    = {New York, NY, USA},
  articleno  = {7},
  doi        = {10.1145/2746344},
  groups     = {acm},
  issue_date = {June 2015},
  keywords   = {Self-adapting systems, self-organizing systems},
  numpages   = {3},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2746344},
}

@Article{Cabri2017,
  author     = {Cabri, Giacomo and Picard, Gauthier and Suri, Niranjan},
  title      = {SASO 2016: Selected, Revised, and Extended Best Papers},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2017},
  volume     = {12},
  number     = {3},
  month      = sep,
  issn       = {1556-4665},
  abstract   = {The IEEE International Conference on Self-Adapting and Self-Organizing Systems (SASO) is the main forum for studying and discussing the foundations of a principled approach to engineering systems, networks, and services based on self-adaptation and self-organization. Over the past decade, it has consolidated as the primary scientific conference for sharing ideas on algorithms, technologies, tools, and applications across a wide range of scientific fields. In 2016, the conference was hosted by the University of Augsburg, in Augsburg, Germany; its scientific program comprised full papers, short papers, poster and demo presentations, workshops, doctoral symposium and tutorials. This special issue of ACM TAAS champions some of the most solid research results of SASO 2016, presenting selected, revised, and extended best articles.},
  address    = {New York, NY, USA},
  articleno  = {11},
  doi        = {10.1145/3127332},
  groups     = {acm},
  issue_date = {October 2017},
  keywords   = {Self-Organizing Systems, Self-Adaptive Systems},
  numpages   = {3},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3127332},
}

@InProceedings{Rodrigues2018,
  author    = {Rodrigues, Arthur and Caldas, Ricardo Diniz and Rodrigues, Gena\'{\i}na Nunes and Vogel, Thomas and Pelliccione, Patrizio},
  title     = {A Learning Approach to Enhance Assurances for Real-Time Self-Adaptive Systems},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {206–216},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {The assurance of real-time properties is prone to context variability. Providing such assurance at design time would require to check all the possible context and system variations or to predict which one will be actually used. Both cases are not viable in practice since there are too many possibilities to foresee. Moreover, the knowledge required to fully provide the assurance for self-adaptive systems is only available at runtime and therefore difficult to predict at early development stages. Despite all the efforts on assurances for self-adaptive systems at design or runtime, there is still a gap on verifying and validating real-time constraints accounting for context variability. To fill this gap, we propose a method to provide assurance of self-adaptive systems, at design-and runtime, with special focus on real-time constraints. We combine off-line requirements elicitation and model checking with on-line data collection and data mining to guarantee the system's goals, both functional and non-functional, with fine tuning of the adaptation policies towards the optimization of quality attributes. We experimentally evaluate our method on a simulated prototype of a Body Sensor Network system (BSN) implemented in OpenDaVINCI. The results of the validation are promising and show that our method is effective in providing evidence that support the provision of assurance.},
  doi       = {10.1145/3194133.3194147},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {learning approach, assurance evidence, self-adaptive systems, goal-oriented, real-time systems, data mining},
  location  = {Gothenburg, Sweden},
  numpages  = {11},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194147},
}

@InProceedings{Garcia-Galan2016,
  author    = {Garc\'{\i}a-Gal\'{a}n, Jes\'{u}s and Pasquale, Liliana and Grispos, George and Nuseibeh, Bashar},
  title     = {Towards Adaptive Compliance},
  booktitle = {Proceedings of the 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2016},
  series    = {SEAMS ’16},
  pages     = {108–114},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Mission critical software is often required to comply with multiple regulations, standards or policies. Recent paradigms, such as cloud computing, also require software to operate in heterogeneous, highly distributed, and changing environments. In these environments, compliance requirements can vary at runtime and traditional compliance management techniques, which are normally applied at design time, may no longer be sufficient. In this paper, we motivate the need for adaptive compliance by illustrating possible compliance concerns determined by runtime variability. We further motivate our work by means of a cloud computing scenario, and present two main contributions. First, we propose and justify a process to support adaptive compliance that extends the traditional compliance management lifecycle with the activities of the Monitor-Analyse-Plan-Execute (MAPE) loop, and enacts adaptation through re-configuration. Second, we explore the literature on software compliance and classify existing work in terms of the activities and concerns of adaptive compliance. In this way, we determine how the literature can support our proposal and what are the open research challenges that need to be addressed in order to fully support adaptive compliance.},
  doi       = {10.1145/2897053.2897070},
  groups    = {acm},
  isbn      = {9781450341875},
  keywords  = {self-adaptation, adaptive compliance, challenges, compliance as a service},
  location  = {Austin, Texas},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2897053.2897070},
}

@InProceedings{Vogel2018,
  author    = {Vogel, Thomas},
  title     = {MRUBiS: An Exemplar for Model-Based Architectural Self-Healing and Self-Optimization},
  booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2018},
  series    = {SEAMS ’18},
  pages     = {101–107},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive software systems are often structured into an adaptation engine that manages an adaptable software by operating on a runtime model that represents the architecture of the software (model-based architectural self-adaptation). Despite the popularity of such approaches, existing exemplars provide application programming interfaces but no runtime model to develop adaptation engines. Consequently, there does not exist any exemplar that supports developing, evaluating, and comparing model-based self-adaptation off the shelf. Therefore, we present mRUBiS, an extensible exemplar for model-based architectural self-healing and self-optimization. mRUBiS simulates the adaptable software and therefore provides and maintains an architectural runtime model of the software, which can be directly used by adaptation engines to realize and perform self-adaptation. Particularly, mRUBiS supports injecting issues into the model, which should be handled by self-adaptation, and validating the model to assess the self-adaptation. Finally, mRUBiS allows developers to explore variants of adaptation engines (e.g., event-driven self-adaptation) and to evaluate the effectiveness, efficiency, and scalability of the engines.},
  doi       = {10.1145/3194133.3194161},
  groups    = {acm},
  isbn      = {9781450357159},
  keywords  = {simulator, architecture, runtime models, self-adaptation},
  location  = {Gothenburg, Sweden},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194161},
}

@InProceedings{Ghannem2017,
  author    = {Ghannem, Adnane and Hamdi, Mohamed Salah and Ammar, Hany H. and Soui, Makram},
  title     = {A Systematic Classification of Requirements Engineering Approaches for Adaptive Systems},
  booktitle = {Proceedings of the Second International Conference on Internet of Things, Data and Cloud Computing},
  year      = {2017},
  series    = {ICC ’17},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Requirements Engineering for Adaptive Systems (REAS) is a wide-open research area that aims to improve the adaptation of the systems according to the requirements known (adaptability) or newly detected (adaptivity). While existing work proposed methodologies to deal with the adaptivity problem, few of them have classified and evaluated these proposals in order to give insight for system development in application domains such as Smart City Operations (SCO's). In this paper, we investigate the modeling methodologies, Requirements Engineering (RE) activities, and application domains based on relevant papers that tackled REAS in the literature. To this end, we conduct a systematic literature review by searching relevant papers and extracting data in order to answer specific research questions. We provide an updated review of the state of the art, supporting researchers to better understand trends in REAS in general and SCO's in particular.},
  articleno = {44},
  doi       = {10.1145/3018896.3018939},
  groups    = {acm},
  isbn      = {9781450347747},
  keywords  = {systematic classification, adaptive systems, self-adaptive systems, requirements engineering},
  location  = {Cambridge, United Kingdom},
  numpages  = {9},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3018896.3018939},
}

@Article{Moreno2018,
  author     = {Moreno, Gabriel A. and C\'{a}mara, Javier and Garlan, David and Schmerl, Bradley},
  title      = {Flexible and Efficient Decision-Making for Proactive Latency-Aware Self-Adaptation},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2018},
  volume     = {13},
  number     = {1},
  month      = apr,
  issn       = {1556-4665},
  abstract   = {Proactive latency-aware adaptation is an approach for self-adaptive systems that considers both the current and anticipated adaptation needs when making adaptation decisions, taking into account the latency of the available adaptation tactics. Since this is a problem of selecting adaptation actions in the context of the probabilistic behavior of the environment, Markov decision processes (MDPs) are a suitable approach. However, given all the possible interactions between the different and possibly concurrent adaptation tactics, the system, and the environment, constructing the MDP is a complex task. Probabilistic model checking has been used to deal with this problem, but it requires constructing the MDP every time an adaptation decision is made to incorporate the latest predictions of the environment behavior. In this article, we describe PLA-SDP, an approach that eliminates that runtime overhead by constructing most of the MDP offline. At runtime, the adaptation decision is made by solving the MDP through stochastic dynamic programming, weaving in the environment model as the solution is computed. We also present extensions that support different notions of utility, such as maximizing reward gain subject to the satisfaction of a probabilistic constraint, making PLA-SDP applicable to systems with different kinds of adaptation goals.},
  address    = {New York, NY, USA},
  articleno  = {3},
  doi        = {10.1145/3149180},
  groups     = {acm},
  issue_date = {May 2018},
  keywords   = {Markov decision process, proactive latency awareness, Self-adaptive systems},
  numpages   = {36},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/3149180},
}

@InProceedings{Shevtsov2016,
  author    = {Shevtsov, Stepan and Weyns, Danny},
  title     = {Keep It SIMPLEX: Satisfying Multiple Goals with Guarantees in Control-Based Self-Adaptive Systems},
  booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  year      = {2016},
  series    = {FSE 2016},
  pages     = {229–241},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {An increasingly important concern of software engineers is handling uncertainties at design time, such as environment dynamics that may be difficult to predict or requirements that may change during operation. The idea of self-adaptation is to handle such uncertainties at runtime, when the knowledge becomes available. As more systems with strict requirements require self-adaptation, providing guarantees for adaptation has become a high-priority. Providing such guarantees with traditional architecture-based approaches has shown to be challenging. In response, researchers have studied the application of control theory to realize self-adaptation. However, existing control-theoretic approaches applied to adapt software systems have primarily focused on satisfying only a single adaptation goal at a time, which is often too restrictive for real applications. In this paper, we present Simplex Control Adaptation, SimCA, a new approach to self-adaptation that satisfies multiple goals, while being optimal with respect to an additional goal. SimCA offers robustness to measurement inaccuracy and environmental disturbances, and provides guarantees. We evaluate SimCA for two systems with strict requirements that have to deal with uncertainties: an underwater vehicle system used for oceanic surveillance, and a tele-assistance system for health care support.},
  doi       = {10.1145/2950290.2950301},
  groups    = {acm},
  isbn      = {9781450342186},
  keywords  = {simplex, multiple goals, control theory, Self-adaptive system},
  location  = {Seattle, WA, USA},
  numpages  = {13},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2950290.2950301},
}

@InProceedings{Moreno2015,
  author    = {Moreno, Gabriel A. and C\'{a}mara, Javier and Garlan, David and Schmerl, Bradley},
  title     = {Proactive Self-Adaptation under Uncertainty: A Probabilistic Model Checking Approach},
  booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  year      = {2015},
  series    = {ESEC/FSE 2015},
  pages     = {1–12},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive systems tend to be reactive and myopic, adapting in response to changes without anticipating what the subsequent adaptation needs will be. Adapting reactively can result in inefficiencies due to the system performing a suboptimal sequence of adaptations. Furthermore, when adaptations have latency, and take some time to produce their effect, they have to be started with sufficient lead time so that they complete by the time their effect is needed. Proactive latency-aware adaptation addresses these issues by making adaptation decisions with a look-ahead horizon and taking adaptation latency into account. In this paper we present an approach for proactive latency-aware adaptation under uncertainty that uses probabilistic model checking for adaptation decisions. The key idea is to use a formal model of the adaptive system in which the adaptation decision is left underspecified through nondeterminism, and have the model checker resolve the nondeterministic choices so that the accumulated utility over the horizon is maximized. The adaptation decision is optimal over the horizon, and takes into account the inherent uncertainty of the environment predictions needed for looking ahead. Our results show that the decision based on a look-ahead horizon, and the factoring of both tactic latency and environment uncertainty, considerably improve the effectiveness of adaptation decisions.},
  doi       = {10.1145/2786805.2786853},
  groups    = {acm},
  isbn      = {9781450336758},
  keywords  = {Latency-aware, probabilistic model checking, self-adaptation, proactive},
  location  = {Bergamo, Italy},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2786805.2786853},
}

@InProceedings{Solano2019,
  author    = {Solano, Gabriela F\'{e}lix and Caldas, Ricardo Diniz and Rodrigues, Gena\'{\i}na Nunes and Vogel, Thomas and Pelliccione, Patrizio},
  title     = {Taming Uncertainty in the Assurance Process of Self-Adaptive Systems: A Goal-Oriented Approach},
  booktitle = {Proceedings of the 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2019},
  series    = {SEAMS ’19},
  pages     = {89–99},
  publisher = {IEEE Press},
  abstract  = {Goals are first-class entities in a self-adaptive system (SAS) as they guide the self-adaptation. A SAS often operates in dynamic and partially unknown environments, which cause uncertainty that the SAS has to address to achieve its goals. Moreover, besides the environment, other classes of uncertainty have been identified. However, these various classes and their sources are not systematically addressed by current approaches throughout the life cycle of the SAS. In general, uncertainty typically makes the assurance provision of SAS goals exclusively at design time not viable. This calls for an assurance process that spans the whole life cycle of the SAS. In this work, we propose a goal-oriented assurance process that supports taming different sources (within different classes) of uncertainty from defining the goals at design time to performing self-adaptation at runtime. Based on a goal model augmented with uncertainty annotations, we automatically generate parametric symbolic formulae with parameterized uncertainties at design time using symbolic model checking. These formulae and the goal model guide the synthesis of adaptation policies by engineers. At runtime, the generated formulae are evaluated to resolve the uncertainty and to steer the self-adaptation using the policies. In this paper, we focus on reliability and cost properties, for which we evaluate our approach on the Body Sensor Network (BSN) implemented in OpenDaVINCI. The results of the validation are promising and show that our approach is able to systematically tame multiple classes of uncertainty, and that it is effective and efficient in providing assurances for the goals of self-adaptive systems.},
  doi       = {10.1109/SEAMS.2019.00020},
  groups    = {acm},
  keywords  = {adaptation policy, self-adaptive systems, goal modeling, uncertainty, symbolic model checking},
  location  = {Montreal, Quebec, Canada},
  numpages  = {11},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2019.00020},
}

@InProceedings{Angelopoulos2015,
  author    = {Angelopoulos, Konstantinos and Papadopoulos, Alessandro Vittorio and Mylopoulos, John},
  title     = {Adaptive Predictive Control for Software Systems},
  booktitle = {Proceedings of the 1st International Workshop on Control Theory for Software Engineering},
  year      = {2015},
  series    = {CTSE 2015},
  pages     = {17–21},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {Self-adaptive software systems are designed to support a number of alternative solutions for fulfilling their requirements. These define an adaptation space. During operation, a self-adaptive system monitors its performance and when it finds that its requirements are not fulfilled, searches its adaptation space to select a best adaptation. Two major problems need to be addressed during the selection process: (a) Handling environmental uncertainty in determining the impact of an adaptation; (b) maintain an optimal equilibrium among conflicting requirements. This position paper investigates the application of Adaptive Model Predictive Control ideas from Control Theory to design self-adaptive software that makes decisions by predicting its future performance for alternative adaptations and selects ones that minimize the cost of requirement failures using quantitative information. The technical details of our proposal are illustrated through the meeting-scheduler exemplar.},
  doi       = {10.1145/2804337.2804340},
  groups    = {acm},
  isbn      = {9781450338141},
  keywords  = {predictive control, software requirements, self-adaptive systems, Control theory},
  location  = {Bergamo, Italy},
  numpages  = {5},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2804337.2804340},
}

@Article{Pani2015,
  author     = {Pani, Danilo and Sau, Carlo and Palumbo, Francesca and Raffo, Luigi},
  title      = {Computing Swarms for Self-Adaptiveness and Self-Organization in Floating-Point Array Processing},
  journal    = {ACM Trans. Auton. Adapt. Syst.},
  year       = {2015},
  volume     = {10},
  number     = {3},
  month      = sep,
  issn       = {1556-4665},
  abstract   = {Advancements in CMOS technology enable the integration of a huge number of resources on the same system-on-chip. Managing the consequent growing complexity, including fault tolerance issues in deep submicron technologies, is a hard challenge for hardware designers. Self-organization may represent a viable path toward the development of massively parallel architectures in current and future technologies. This approach is progressively more studied in multiprocessor architectures where, however, a further mind-set shift in terms of programming paradigm is required. In this article, self-organization and self-adaptiveness are exploited for the design of a coprocessing unit for array computations, supporting floating-point arithmetic. From the experience of previous explorations, an architecture embodying some principle of swarm intelligence to pursue adaptability, scalability, and fault tolerance is proposed. The architecture realizes a loosely structured collection of hardware agents implementing fixed behavioral rules aimed at the best exploitation of the available resources in whatever kind of context without any hardware reconfiguration. Comparisons with off-the-shelf very long instruction word (VLIW) digital signal processors (DSPs) on specific tasks reveal similar performance thus not paying the improved robustness with performance. The multitasking capabilities, together with the intrinsic scalability, make this approach valuable for future extensions as well, especially in the field of neuronal networks simulators.},
  address    = {New York, NY, USA},
  articleno  = {16},
  doi        = {10.1145/2746346},
  groups     = {acm},
  issue_date = {October 2015},
  keywords   = {collaborative processing, swarm intelligence, coprocessing unit, Self-organization, self-adaptiveness},
  numpages   = {34},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi-org.eaccess.ub.tum.de/10.1145/2746346},
}

@InProceedings{Abbas2011,
  author    = {Abbas, Nadeem},
  title     = {Towards Autonomic Software Product Lines},
  booktitle = {Proceedings of the 15th International Software Product Line Conference, Volume 2},
  year      = {2011},
  series    = {SPLC ’11},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {We envision an Autonomic Software Product Line (ASPL). The ASPL is a dynamic software product line that supports self adaptable products. We plan to use reflective architecture to model and develop ASPL. To evaluate the approach, we have implemented three autonomic product lines which show promising results. The ASPL approach is at initial stages, and require additional work. We plan to exploit online learning to realize more dynamic software product lines to cope with the problem of product line evolution. We propose on-line knowledge sharing among products in a product line to achieve continuous improvement of quality in product line products.},
  articleno = {44},
  doi       = {10.1145/2019136.2019187},
  groups    = {acm},
  isbn      = {9781450307895},
  keywords  = {on-line learning, self-adaptation, knowledge},
  location  = {Munich, Germany},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2019136.2019187},
}

@InProceedings{Abbas2011a,
  author    = {Abbas, Nadeem and Andersson, Jesper and Weyns, Danny},
  title     = {Knowledge Evolution in Autonomic Software Product Lines},
  booktitle = {Proceedings of the 15th International Software Product Line Conference, Volume 2},
  year      = {2011},
  series    = {SPLC ’11},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {We describe ongoing work in knowledge evolution management for autonomic software product lines. We explore how an autonomic product line may benefit from new knowledge originating from different source activities and artifacts at run time. The motivation for sharing run-time knowledge is that products may self-optimize at run time and thus improve quality faster compared to traditional software product line evolution. We propose two mechanisms that support knowledge evolution in product lines: online learning and knowledge sharing. We describe two basic scenarios for runtime knowledge evolution that involves these mechanisms. We evaluate online learning and knowledge sharing in a small product line setting that shows promising results.},
  articleno = {36},
  doi       = {10.1145/2019136.2019177},
  groups    = {acm},
  isbn      = {9781450307895},
  keywords  = {online learning, software design, self-adaptation, product-line management, software product-lines, knowledge sharing},
  location  = {Munich, Germany},
  numpages  = {8},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2019136.2019177},
}

@InProceedings{He2017,
  author    = {L. {He} and Q. {Li} and L. {Wang} and J. {Wan}},
  title     = {Self-adaptive systems framework based on agent and search-based optimization},
  booktitle = {2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER)},
  year      = {2017},
  pages     = {557-558},
  month     = {Feb},
  abstract  = {Future-generation SASs need to have the adaptive abilities to efficiently handle changes from different sources and to mitigate conflicts caused by multiple simultaneous changes. However, existing methods cannot simultaneously make Future-generation SASs have the above abilities. This paper proposes an adaptive system framework based on agent technology and search-based software engineering technology (SBSE) for developing future-generation SASs with above-mentioned abilities. The framework integrates a hybrid adaptation logic based on agents to deal with various software changes from different layers, and an adaptation planning method with search-based optimization mechanism to mitigate conflicts caused by multiple simultaneous changes.},
  doi       = {10.1109/SANER.2017.7884675},
  groups    = {ieee},
  keywords  = {optimisation;software agents;software engineering;self-adaptive systems framework;future-generation SAS;agent-based optimization;search-based optimization;conflict mitigation;multiple simultaneous changes;agent technology;search-based software engineering technology;SBSE;hybrid adaptation logic;Adaptive systems;Software engineering;Planning;Software;Monitoring;Optimization;Collaboration;Self-adaptive systems;Adaptation logic;Multi-agent systems;Search-based software engineering},
}

@InProceedings{Georgas2005c,
  author    = {J. C. {Georgas}},
  title     = {Knowledge-based architectural adaptation management for self-adaptive systems},
  booktitle = {Proceedings. 27th International Conference on Software Engineering, 2005. ICSE 2005.},
  year      = {2005},
  pages     = {658-},
  month     = {May},
  abstract  = {Self-adaptive systems continually evaluate and modify their own behavior to meet changing demands. An important element in the construction of architecture-based self-adaptive software is the specification of adaptation policy: this extended abstract presents an overview of work towards basing such specification on architecture-centric knowledge-based policies. This approach leverages techniques from the artificial intelligence field to explicitly represent adaptation policy at the architectural level, providing for strong decoupling between policy specification and architectural compositions, and supports dynamic runtime policy evolution promoting reuse potential and runtime flexibility.},
  doi       = {10.1109/ICSE.2005.1553638},
  groups    = {ieee},
  issn      = {1558-1225},
  keywords  = {software architecture;software reusability;self-adjusting systems;formal specification;knowledge based systems;self-adaptive system;knowledge-based architectural adaptation management;architecture-based self-adaptive software;adaptation policy specification;architecture-centric knowledge-based policy;artificial intelligence;dynamic runtime policy evolution;software reusability;runtime flexibility;Knowledge management;Software architecture;Runtime;Artificial intelligence;Engineering management;Software engineering;Decision making;Timing;Application software;Scalability},
}

@InProceedings{Calinescu2018,
  author    = {R. {Calinescu} and D. {Weyns} and S. {Gerasimou} and M. U. {Iftikhar} and I. {Habli} and T. {Kelly}},
  title     = {ENTRUST: Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases},
  booktitle = {2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE)},
  year      = {2018},
  pages     = {495-495},
  month     = {May},
  abstract  = {Software systems are increasingly expected to cope with variable workloads, component failures and other uncertainties through self-adaptation. As such, self-adaptive software has been the subject of intense research over the past decade. Our work focuses on the use of self-adaptive software in applications with strict functional and non-functional requirements. These applications need compelling assurances that the software continues to meet its requirements while it reconfigures its architecture and parameters at runtime. To address this need, we introduce an end-to-end methodology for the ENgineering of TRUstworthy Self-adaptive sofTware (ENTRUST).},
  doi       = {10.1145/3180155.3182540},
  groups    = {ieee},
  issn      = {1558-1225},
  keywords  = {formal specification;software architecture;trusted computing;engineering trustworthy self-adaptive software;dynamic assurance cases;software systems;nonfunctional requirements;self-adaptive software;Computer science;Runtime;Software systems;Standards;Safety;self adaptive software systems;software engineering methodology;assurance evidence;assurance cases},
}

@InBook{Hinchey2018,
  pages     = {107-120},
  title     = {Requirements Engineering for Adaptive and Self�\Adaptive Systems},
  publisher = {IEEE},
  year      = {2018},
  author    = {M. {Hinchey}},
  isbn      = {9781119174226},
  abstract  = {Requirements engineering for adaptive and self�\adaptive systems targets requirements related to system adaptation when a system needs to cope with changes to ensure realization of its objectives. This entry outlines an approach to adaptation�\related requirements called autonomy requirements engineering (ARE). The approach converts adaptation issues into autonomy requirements targeting the realization of special features requiring limited or no human control. Therefore, by using ARE, software engineers can determine what autonomic features to develop as well as what artifacts that requirements engineering process might generate.},
  booktitle = {Software Technology: 10 Years of Innovation in IEEE Computer},
  doi       = {10.1002/9781119174240.ch6},
  groups    = {ieee},
  keywords  = {Analytical models;Requirements engineering;Software;Natural languages;Monitoring;Adaptive systems;IEEE Sections},
  url       = {https://ieeexplore-ieee-org.eaccess.ub.tum.de/document/8471051},
}

@InProceedings{Xia2008,
  author    = {X. {Xia} and B. {Cao}},
  title     = {The Design and Definition of Architecture-Centric Agent Self-Adaption Model},
  booktitle = {2008 International Conference on Computer Science and Software Engineering},
  year      = {2008},
  volume    = {2},
  pages     = {464-467},
  month     = {Dec},
  abstract  = {This paper is to implement the architecture-centric self-adaption. The basic components is formally defined as agent abstraction, then their relations are establishment. Flexible pivot of models are ground on agent-oriented concept. By architecture rulespsila relationship, the implementation conditions are defined formally and abilities simulated. In final, self-adaptive architecture is gotten as "modularization of relations" and "relationship of models".},
  doi       = {10.1109/CSSE.2008.800},
  groups    = {ieee},
  keywords  = {object-oriented programming;software architecture;software reusability;architecture-centric agent self-adaption model;agent abstraction;agent-oriented concept;software reusability;Computer architecture;Computer science;Software quality;Decision making;Switches;Software engineering;Software design;Educational institutions;Programming;Visualization;Software Reusability;Architecture-centric;Agent;Self-adaptive;Modularization of Relations;Relationship of models},
}

@InProceedings{Tang2015,
  author    = {S. {Tang} and L. {Li} and X. {Cao} and W. {Tan}},
  title     = {Bridging the gap between requirement analysis and architecture design of self-adaptive systems},
  booktitle = {2015 6th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
  year      = {2015},
  pages     = {1102-1105},
  month     = {Sep.},
  abstract  = {Modern software systems often run on a changing and unpredictable environment, they need to adapt itself at runtime in response to changing requirements of users and running environment. Therefore, numerous methods have been proposed to support the development of self-adaptive system. Some approaches are requirements-based. Other approaches are architecture-based. By considering only a partial view of software systems, such proposals are limited in specifying the adaptivity of a software system. Aiming at this problem, this paper will discuss how to bridge the gap between the requirement analysis and architecture design of self-adaptive systems.},
  doi       = {10.1109/ICSESS.2015.7339244},
  groups    = {ieee},
  issn      = {2327-0594},
  keywords  = {formal specification;software architecture;requirement analysis;architecture design;self-adaptive systems;software system adaptivity specification;users requirements;running environment;requirements-based approach;architecture-based approach;Adaptation models;Runtime;Software systems;Monitoring;Computer architecture;Analytical models;self-adaptive system;goal model;requirement model;software architecture model;MAPE-K control loop},
}

@InProceedings{Cheng2016,
  author    = {B. H. C. {Cheng}},
  title     = {Addressing Assurance for Self-Adaptive Systems in the Face of Uncertainty},
  booktitle = {2016 IEEE International Conference on Autonomic Computing (ICAC)},
  year      = {2016},
  pages     = {2-2},
  month     = {July},
  abstract  = {This presentation will overview several research projects that investigate novel ways to model, analyze, and mitigate uncertainty for self-adaptive cyber-physical systems, with a particular focus on assurance. First, uncertainty about the physical environment can lead to suboptimal, and sometimes catastrophic, results as the system tries to adapt to unanticipated or poorly-understood environmental conditions. Second, uncertainty in the cyber environment can lead to unexpected and adverse effects, including not only performance impacts (load, traffic, etc.) but also potential threats or overt attacks. Finally, uncertainty can exist with the components themselves and how they interact upon reconfiguration, including unexpected and unwanted feature interactions. Each of these sources of uncertainty can potentially be identified at different stages, respectively design time and run time, but their mitigation might be done at the same or at a different stage. Based on the related literature and our investigations, we argue that the following three overarching techniques are essential and warrant further research to provide enabling technologies to address uncertainty during both stages: model-based development, automated assurance techniques, and self-adaptation. Furthermore, we posit that in order to go beyond incremental improvements to current software engineering techniques, we need to infuse these three areas with successful techniques and inspirations from other disciplines, such as control theory, machine learning, and biology.},
  doi       = {10.1109/ICAC.2016.53},
  groups    = {ieee},
  keywords  = {adaptive systems;cyber-physical systems;learning (artificial intelligence);security of data;uncertain systems;uncertainty;self-adaptive cyber-physical systems;physical environment;cyber environment;threats;overt attacks;model-based development;automated assurance technique;self-adaptation;software engineering technique;control theory;machine learning;biology;Uncertainty;Software engineering;Conferences;Computer science;Software;Face;Computational modeling},
}

@InProceedings{Calinescu2019,
  author    = {R. {Calinescu} and D. {Weyns} and S. {Gerasimou} and I. {Habli}},
  title     = {Architecting Trustworthy Self-Adaptive Systems (Tutorial)},
  booktitle = {2019 IEEE International Conference on Software Architecture Companion (ICSA-C)},
  year      = {2019},
  pages     = {3-4},
  month     = {March},
  abstract  = {Architecting self-adaptive software systems is challenging. These systems must achieve their goals not only in the environment in which they are deployed initially, but also as this environment changes over time. When self-adaptive systems are used in safety-critical and business-critical applications, this challenge is compounded by the need to also provide guarantees that the system operates correctly at all times. For traditional software systems, such guarantees are provided through assurance cases. These are structured arguments which use comprehensive development-time evidence to explain why a system can be trusted when used for its planned application in a given environment. This tutorial presents the ENTRUST methodology for achieving a similar level of trust in self-adaptive systems [1]. ENTRUST is the first end-to-end methodology for architecting trustworthy self-adaptive systems and dynamic assurance cases guaranteeing the suitability of the software for its intended applications. As advocated by major research initiatives such as the UK-led Assuring Autonomy International Programme (https://www.york.ac.uk/assuring-autonomy/). ENTRUST dynamic assurance cases seamlessly combine evidence obtained during the development of a self-adaptive software system with evidence obtained from its additional verification at runtime. As such, each reconfiguration of an ENTRUST self-adaptive system is accompanied by a new version of the assurance case that confirms the trustworthiness of the reconfigured system architecture. The tutorial starts with an overview of self -adaptive systems used in safety -critical and business -critical applications. This is followed by an introduction to assurance cases, an explanation of the recent paradigm shift to dynamic assurance cases, and the description of the ENTRUST methodology. We use the last part of the tutorial to show how ENTRUST can be used to engineer a self -adaptive unmanned underwater vehicle system and a self -adaptive service -based system. The tutorial actively engages the attendees and includes practical demonstrations. Attending it benefits researchers and software architects with an interest in self -adaptive and autonomous software systems, as well as those interested in the rigorous modelling, analysis and verification of the control software of such systems.},
  doi       = {10.1109/ICSA-C.2019.00008},
  groups    = {ieee},
  keywords  = {safety-critical software;software architecture;comprehensive development-time evidence;trustworthy self-adaptive systems;ENTRUST dynamic assurance cases;self-adaptive software system;reconfigured system architecture;business-critical applications;safety-critical applications;ENTRUST methodology;dynamic assurance cases;software architects;autonomous software systems;unmanned underwater vehicle system;self-adaptive service-based system;Tutorials;Runtime;Software systems;Computer architecture;Computational modeling},
}

@Article{Filieri2016,
  author   = {A. {Filieri} and G. {Tamburrelli} and C. {Ghezzi}},
  title    = {Supporting Self-Adaptation via Quantitative Verification and Sensitivity Analysis at Run Time},
  journal  = {IEEE Transactions on Software Engineering},
  year     = {2016},
  volume   = {42},
  number   = {1},
  pages    = {75-99},
  month    = {Jan},
  issn     = {1939-3520},
  abstract = {Modern software-intensive systems often interact with an environment whose behavior changes over time, often unpredictably. The occurrence of changes may jeopardize their ability to meet the desired requirements. It is therefore desirable to design software in a way that it can self-adapt to the occurrence of changes with limited, or even without, human intervention. Self-adaptation can be achieved by bringing software models and model checking to run time, to support perpetual automatic reasoning about changes. Once a change is detected, the system itself can predict if requirements violations may occur and enable appropriate counter-actions. However, existing mainstream model checking techniques and tools were not conceived for run-time usage; hence they hardly meet the constraints imposed by on-the-fly analysis in terms of execution time and memory usage. This paper addresses this issue and focuses on perpetual satisfaction of non-functional requirements, such as reliability or energy consumption. Its main contribution is the description of a mathematical framework for run-time efficient probabilistic model checking. Our approach statically generates a set of verification conditions that can be efficiently evaluated at run time as soon as changes occur. The proposed approach also supports sensitivity analysis, which enables reasoning about the effects of changes and can drive effective adaptation strategies.},
  doi      = {10.1109/TSE.2015.2421318},
  groups   = {ieee},
  keywords = {probability;program verification;software reliability;self-adaptation;quantitative verification;run time analysis;software-intensive systems;software design;software models;perpetual automatic reasoning;requirements violation;on-the-fly analysis;execution time;memory usage;perpetual satisfaction;nonfunctional requirements;mathematical framework;probabilistic model checking;sensitivity analysis;Model checking;Adaptation models;Software;Markov processes;Probabilistic logic;Computational modeling;Reliability;Self-adaptive Systems;Software Evolution;Non-functional Requirements;Discrete-Time Markov models;Rewards;Software Reliability;Costs;Probabilistic Model Checking;Models at Runtime;Self-adaptive systems;software evolution;non-functional requirements;discrete-time Markov models;rewards;software reliability;costs;probabilistic model checking;models at runtime},
}

@InProceedings{Minelli2014,
  author    = {R. {Minelli}},
  title     = {Towards Self-Adaptive IDEs},
  booktitle = {2014 IEEE International Conference on Software Maintenance and Evolution},
  year      = {2014},
  pages     = {666-666},
  month     = {Sep.},
  abstract  = {Developers use Integrated Development Environments (IDEs) to maintain and evolve software systems. IDEs facilitate development activities such as navigating, reading, understanding, and writing source code. Development activities are composed of many basic events, such as browsing the source code of a method or editing the body of a method. We call these actions "interaction data". We believe that collecting, processing, and exploiting these interactions at run-time can potentially augment the productivity of developers. Our goal is to create self-adaptive IDEs: IDEs that collect, mine, and leverage the interactions of developers to better support the developers' workflow. We envision a development environment that automatically and seamlessly adapts itself to support developers while maintaining and evolving software systems. To reach our goal, we will develop means to reshape the user interface of the IDE, interaction-based recommenders, and integrate live and adaptive visualizations inside the IDE. As a first step towards our vision, we have developed DFlow, a tool that non-intrusively records all IDE interactions while a developer is programming. At the moment DFlow collects all the interactions between the developer and the IDE, and enables retrospective analysis by means of software visualizations.},
  doi       = {10.1109/ICSME.2014.121},
  groups    = {ieee},
  issn      = {1063-6773},
  keywords  = {program visualisation;software maintenance;self-adaptive IDEs;integrated development environments;development activities;software system maintenance;software system evolution;user interface;interaction-based recommenders;adaptive visualizations;DFlow;IDE interaction recording;software visualizations;Navigation;Adaptive systems;Visualization;Conferences;Software maintenance;Writing;interaction data;ide;user interface;developer behavior},
}

@InProceedings{Raibulet2016,
  author    = {C. {Raibulet}},
  title     = {Five Object-Oriented Design Principles to Improve the Quality of Self-Adaptivity Using MAPE Loops},
  booktitle = {2016 IEEE 1st International Workshops on Foundations and Applications of Self* Systems (FAS*W)},
  year      = {2016},
  pages     = {96-97},
  month     = {Sep.},
  abstract  = {Design principles define a set of guidelines for the development of software. Their objective is to provide mechanisms to design and implement good software and to avoid making inappropriate design decisions which may affect the quality of the software during its life cycle and which make software difficult to maintain and extend. The object-oriented design community uses several design principles, among which the most diffused ones are: single responsibility, open-closed, Liskov substitution, interface segregation, and dependency inversion. In this paper, it is investigated how these design principles may be interpreted and adopted for the development of self-adaptive software which exploit MAPE feedback control loops. Attention is focused on the quality improvement of self-adaptive systems through these design principles.},
  doi       = {10.1109/FAS-W.2016.31},
  groups    = {ieee},
  keywords  = {object-oriented methods;self-adjusting systems;software quality;object-oriented design principles;self-adaptivity quality improvement;software design;software quality;software lifecycle;open-closed design principles;single responsibility design principles;Liskov substitution;interface segregation;dependency inversion;self-adaptive software development;MAPE feedback control loops;Software;Feedback control;Adaptive systems;Runtime;Monitoring;Computer architecture;design principle;self-adaptivity;software quality},
}

@InProceedings{Andrade2014,
  author    = {S. S. {Andrade} and R. J. d. A. {Mac��do}},
  title     = {Do Search-Based Approaches Improve the Design of Self-Adaptive Systems? A Controlled Experiment},
  booktitle = {2014 Brazilian Symposium on Software Engineering},
  year      = {2014},
  pages     = {101-110},
  month     = {Sep.},
  abstract  = {Endowing software systems with self-adaptation capabilities has shown to be quite effective in coping with uncertain and dynamic operational environments as well as managing the complexity generated by non-functional requirements. Nowadays, a large number of approaches tackle the issue of enabling self-adaptive behavior from different perspectives and under diverse assumptions, making it harder for architects to make judicious decisions about design alternatives and quality attributes tradeoffs. It has currently been claimed that search-based software design approaches may improve the quality of resulting artifacts and the productivity of design processes, as a consequence of promoting a more comprehensive and systematic representation of design knowledge and preventing design bias and false intuition. To the best of our knowledge, no controlled experiments have been performed to provide sound evidence of such claim in the self-adaptive systems domain. In this paper, we report the results of a quasi-experiment performed with 24 students of a graduate program in Distributed and Ubiquitous Computing. The experiment evaluated the design of self-adaptive systems using a search-based approach, in contrast to the use of a style-based non-automated approach. The results show that search-based approaches can improve the effectiveness of resulting architectures and reduce design complexity. We found no evidence regarding the method's potential for leveraging the acquisition of distilled design knowledge by novice software architects.},
  doi       = {10.1109/SBES.2014.17},
  groups    = {ieee},
  keywords  = {software architecture;software metrics;software quality;software systems;self-adaptation capabilities;dynamic operational environments;nonfunctional requirements;self-adaptive behavior;quality attributes tradeoffs;search-based software design approaches;design bias;false intuition;self-adaptive systems domain;distributed computing;ubiquitous computing;style based nonautomated approach;design complexity;software architects;Computer architecture;Unified modeling language;Complexity theory;Optimization;Measurement;Software;Engines;empirical software engineering;search-based software engineering;self-adaptive systems;software architecture design;software modeling;multi-objective optimization},
}

@InProceedings{Cao2009,
  author    = {B. {Cao} and X. {Xia}},
  title     = {Architecture-Centric Self-Adaptation Flow's Definition and Rules' Realization Driven by Decision-Making Factor},
  booktitle = {2009 WRI World Congress on Software Engineering},
  year      = {2009},
  volume    = {3},
  pages     = {480-484},
  month     = {May},
  abstract  = {Focusing on the self-adaptive implementation mechanism of architecture, this paper puts forwards architecture differentiation and assembling integration rules supported by decision-making factor. Agent is as the basic self-adaptive supporting granularity, its self-adaptive mapping rule is analyzed. Then, Agent-0 achieves the description and capturing from decision-making factor to business dimension. Furthermore, under the control of rule, there builds an integrative self-adaptive agent flow between requirement spaces to implementation topology space, until it is to get goal's transformation and iterative character penetration.},
  doi       = {10.1109/WCSE.2009.140},
  groups    = {ieee},
  keywords  = {decision making;inference mechanisms;software agents;software architecture;architecture-centric self-adaptation flow definition;architecture-centric self-adaptation rule realization;decision-making factor;architecture differentiation;assembling integration;self-adaptive supporting granularity agent;business dimension;software system;reasoning rule;Decision making;Computer architecture;Network topology;Logic;Engines;Software engineering;Computer science;Educational institutions;Assembly;Software reusability;Decision-making Factor;Self-adaptive;Architecture-centric;Iterative Character Penetration;Requirement Space;Implementation Topology Space},
}

@InProceedings{Yu2015,
  author    = {D. {Yu} and Q. {Li} and L. {Wang} and Y. {Lin}},
  title     = {An Agent-Based Self-Adaptive Mechanism with Reinforcement Learning},
  booktitle = {2015 IEEE 39th Annual Computer Software and Applications Conference},
  year      = {2015},
  volume    = {3},
  pages     = {582-585},
  month     = {July},
  abstract  = {In order to solve the problem in choosing action for a system in a dynamic environment, a self-adaptive mechanism combining the technology of agent and reinforcement learning is presented in this paper. With such a mechanism, the system determines all possible initial states of the agent's execution strategy, and adopts Q-learning algorithm on all the initial states. And then, the best result of all learning results is chosen as the current execution strategy. Meanwhile, agents can share learning results to improve the efficiency of the system. At the end of this paper, a case study is illustrated to validate the effectiveness of the proposed mechanism.},
  doi       = {10.1109/COMPSAC.2015.276},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {learning (artificial intelligence);multi-agent systems;agent-based self-adaptive mechanism;reinforcement learning;agent execution strategy;Q-learning algorithm;learning results;Learning (artificial intelligence);Software;Electronic mail;Algorithm design and analysis;Software engineering;Adaptive systems;Computers;multi-agent system; reinforcement learning; selfadaptive mechanism},
}

@InProceedings{Eberhardinger2014,
  author    = {B. {Eberhardinger} and W. {Reif} and F. {Wotawa} and T. {Holvoet}},
  title     = {Quality Assurance for Self-Adaptive, Self-Organising Systems (Message from the Workshop Organisers)},
  booktitle = {2014 IEEE Eighth International Conference on Self-Adaptive and Self-Organizing Systems Workshops},
  year      = {2014},
  pages     = {108-109},
  month     = {Sep.},
  abstract  = {Welcome to the first edition of the Workshop on Quality Assurance for Self-adaptive, Self-organising Systems (QA4SASO 2014). Developing self-adaptive, self-organising systems that fulfil the requirements of different stakeholders is no simple matter. Quality assurance is required at each phase of the entire development process, starting from requirements elicitation, agent design, system architecture design, and finally in the implementation, testing, and deployment of the system. The quality of the artefacts from each development phase affects the rest of the system, since all parts are closely related to each other. Furthermore, the shift of adaptation decisions from design-time to run-time - necessitated by the need of the systems to adapt to changing circumstances - makes it difficult, but even more essential, to assure high quality standards in these kind of systems. Accordingly, the analysis and evaluation of these self-systems has to take into account the specific operational context to achieve high quality standards. As a consequence, we like to address the following challenges in the workshop on quality assurance for self-adaptive, self-organising systems: Evolutionary developing system, interleaving mechanisms, uncertainty according the system environment, open system architecture, and large number of system participants. The necessity to investigate this field has already been recognised and addressed in different communities, but there exists so far no platform to bring all these communities together. Therefore, the workshop provides an open stage for discussions about the different aspects of quality assurance for self-adaptive, self-organising systems.},
  doi       = {10.1109/SASOW.2014.30},
  groups    = {ieee},
  keywords  = {evolutionary computation;quality assurance;self-adjusting systems;quality assurance;self-adaptive system;self-organising system;development process;requirements elicitation;agent design;system architecture design;development phase;quality standards;evolutionary developing system;interleaving mechanisms;system environment;open system architecture;Conferences;Educational institutions;Adaptive systems;Quality assurance;Communities;Software engineering;Adaptation models;Modelling;Verification;Empirical Evaluation;Test-centred Development;Self-organising Systems;Adaptive Systems;Software Testing},
}

@InProceedings{Huang2015a,
  author    = {S. {Huang} and P. {Miranda}},
  title     = {Incorporating Human Intention into Self-Adaptive Systems},
  booktitle = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  year      = {2015},
  volume    = {2},
  pages     = {571-574},
  month     = {May},
  abstract  = {Self-adaptive systems are fed with contextual information from the environments in which the systems operate,from within themselves, and from the users. Traditional self-adaptive systems research has focused on inputs of systems performance, resources, exception, and error recovery that drive systems' reaction to their environments. The intelligent ability ofthese self-adaptive systems is impoverished without knowledge ofa user's covert attention (thoughts, emotions, feelings). As a result, it is difficult to build effective systems that anticipate and react to users' needs as projected by covert behavior. This paperpresents the preliminary research results on capturing users'intention through neural input, and in reaction, commanding actions from software systems (e.g., load an application) based on human intention. Further, systems can self-adapt and refine their behaviors driven by such human covert behavior. The long-term research goal is to incorporate and synergize human neural input.Thus establishing software systems with a self-adaptive capability to "feel" and "anticipate" users intentions and put the human in the loop.},
  doi       = {10.1109/ICSE.2015.196},
  groups    = {ieee},
  issn      = {1558-1225},
  keywords  = {human computer interaction;software engineering;self-adaptive systems;human intention;contextual information;software systems;human covert behavior;human neural input;human computer interface;Electroencephalography;Mice;Computers;Digital signal processing;Software systems;Software engineering;Adaptive systems;Brain computer interface (BCI);human computer interface (HCI);neural input;self-adaptive systems;overt and covert behavior;human in the loop},
}

@InProceedings{Li2017,
  author    = {Y. {Li} and Q. {Li} and L. {Wang} and W. {Cheng} and T. {Wu}},
  title     = {ADAPT: An agent-based development toolkit and operation platform for self-adaptive systems},
  booktitle = {2017 IEEE Conference on Open Systems (ICOS)},
  year      = {2017},
  pages     = {53-58},
  month     = {Nov},
  abstract  = {Self-adaptive software (SAS) needs to handle complex software changes at runtime which are multiple, interrelated and unpredictable. However, existing specialized toolkits or platforms for SAS cannot fully assist the software in handling the changes with all the characteristics mentioned above at the same time. Therefore, based on the theories on MultiAgent Systems (MASs) and Search-based Software Engineering (SBSE), this paper proposes a reference architecture of SAS to handle the changes, and provides an Agent-based. Development toolkit and operAtion PlaTform for self-adaptive systems, called ADAPT, to support the development and operation of SAS according to the reference architecture. ADAPT can effectively handle complex changes with Agent technology and search-based planning method. It can also achieve automation in a way to reduce the burden of developers. Moreover, it provides adaptive abilities to SAS from the design time to runtime, reflecting the used methods in the whole process of software engineering.},
  doi       = {10.1109/ICOS.2017.8280274},
  groups    = {ieee},
  issn      = {2473-3660},
  keywords  = {adaptive systems;multi-agent systems;software agents;software engineering;software engineering;development toolkit;operation platform;self-adaptive systems;self-adaptive software;specialized toolkits;reference architecture;software changes;multiagent systems;ADAPT platform;Conferences;Open systems;Erbium;Self-adaptive systems;Multi-agent systems;development toolkit;operation platform},
}

@Article{Vassev2015,
  author   = {E. {Vassev} and M. {Hinchey}},
  title    = {KnowLang: Knowledge Representation for Self-Adaptive Systems},
  journal  = {Computer},
  year     = {2015},
  volume   = {48},
  number   = {2},
  pages    = {81-84},
  month    = {Feb},
  issn     = {1558-0814},
  abstract = {The KnowLang framework models uncertainty into the development of software-intensive systems to create enhanced possibilities for self-adaptation.},
  doi      = {10.1109/MC.2015.50},
  groups   = {ieee},
  keywords = {knowledge representation;KnowLang;knowledge representation;self-adaptive system;software-intensive system;Cognition;Software development;Robots;Context modeling;Knowledge representation;Computer languages;Computer applications;knowledge representation;self-adaptation;KnowLang;artificial intelligence;software engineering;Software Technologies},
}

@InProceedings{Savargiv2017,
  author    = {M. {Savargiv} and E. {Nazemi} and S. {MehrMolaei}},
  title     = {Improved self-management architecture in self-adaptive system},
  booktitle = {2017 Artificial Intelligence and Robotics (IRANOPEN)},
  year      = {2017},
  pages     = {1-5},
  month     = {April},
  abstract  = {Redesigning the large and complex software systems requires very high costs time and money. Hence, automatic management and automatic adaptability with minimal human intervention is unavoidable. Self-management is the greatest level of self-adaptive which include all self-adaptive details. Scalability and dynamic analysis support in the face of change are the main challenges of self-management. Due to the fact that self-managing is relevance to the all details of self-adaptive, it is required to special type of software architecture which be able to respond to all requirements of self-adaptive aspects. In this case, dynamic architecture is the best option. Regarding to the dynamic architecture, there are diverse criteria. If software architecture be able to meet these criteria, it will know as a dynamic architecture and it has license to apply in the self-management architecture. Different types of applications can be imagined for the issue of self-management software systems, some of them are: semantic web and middle ware service, networking, load balancing in distributed systems, service communication in service oriented system, etc. In this paper self-managing dynamic architecture is discussed and evaluated and a dynamic architecture for improving the self-managing architecture is proposed.},
  doi       = {10.1109/RIOS.2017.7956435},
  groups    = {ieee},
  keywords  = {software architecture;software management;system monitoring;improved self-management architecture;self-adaptive system;large complex software systems;automatic management;automatic adaptability;dynamic analysis;software architecture;dynamic architecture;self-management software systems;Computer architecture;Software systems;Optimization;Computers;Service-oriented architecture;Self-adaptive;Self-management;Dynamic architecture},
}

@InProceedings{Musliner2012,
  author    = {D. J. {Musliner} and J. M. {Rye} and T. {Woods} and T. {Marble} and K. {Raison}},
  title     = {Automatic Self-Adaptation to Mitigate Software Vulnerabilities: A Fuzzbuster Progress Report (Extended Abstract for Poster)},
  booktitle = {2012 IEEE Sixth International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2012},
  pages     = {235-236},
  month     = {Sep.},
  abstract  = {Today's computer systems are under relentless attack from cyber attackers armed with sophisticated vulnerability search and exploit development toolkits. Under DARPA's Clean-slate design of Resilient, Adaptive, Survivable Hosts (CRASH) program, we are developing FUZZBUSTER to provide self-adaptive immunity from these and other cyber threats. This poster describes the most up-to-date results from the millions of fuzz-testing operations FUZZBUSTER has conducted, as well as its results in self-adapting to mitigate the vulnerabilities it finds.},
  doi       = {10.1109/SASO.2012.46},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {program testing;security of data;software fault tolerance;automatic self-adaptation;software vulnerability mitigation;FUZZBUSTER Progress Report;computer systems;cyber attackers;vulnerability search;development toolkits;DARPA;clean-slate design of resilient-adaptive-survivable hosts program;CRASH program;self-adaptive immunity;cyber threats;fuzz-testing operations;Testing;Conferences;Software;Computer crashes;Radio access networks;Browsers;Abstracts;self-adaptive immunity;cyber-security;fuzz-testing},
}

@InProceedings{Alda2004a,
  author    = {S. {Alda}},
  title     = {Component-based self-adaptability in peer-to-peer architectures},
  booktitle = {Proceedings. 26th International Conference on Software Engineering},
  year      = {2004},
  pages     = {33-35},
  month     = {May},
  abstract  = {Current peer-to-peer architectures are hardly resistant against unanticipated exceptions such as the failure of single peers. This can be justified by the absence of sophisticated models for detecting and handling exception in peer-to-peer architectures. On the other hand, existing models for such self-adaptable architectures are rather generic and less practical for end-users. In this work, a component-based self-adaptability model for peer-to-peer architectures is presented that supports end-users in the handling of exceptions during use time. Support is also provided to handle exceptions during deployment and adaptation of an application. All these approaches are integral parts of DeEvolve, a peer-to-peer runtime environment for component-based peer services.},
  doi       = {10.1109/ICSE.2004.1317413},
  groups    = {ieee},
  issn      = {0270-5257},
  keywords  = {object-oriented programming;exception handling;distributed programming;software architecture;distributed processing;component-based self-adaptability;peer-to-peer architectures;DeEvolve;component-based peer services;component technology;composition languages;HCI;human computer interaction;Peer to peer computing;Computer architecture;Application software;Runtime environment;Software architecture;Concrete;Computer science;Human computer interaction;Web and internet services;Personal communication networks},
}

@InProceedings{Wohlrab2017,
  author    = {R. {Wohlrab}},
  title     = {Continuous Management of Design- and Run-Time Artifacts for Self-Adaptive Systems},
  booktitle = {2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C)},
  year      = {2017},
  pages     = {473-474},
  month     = {May},
  abstract  = {With the rise of smart and autonomous systems, self-adaptation plays a significant role in the capabilities of software-intensive systems. When developing and operating self-adaptive systems, a growing amount of information is required. This information forms the basis to systems' evolution and adaptation at run time, but is also used at design time to evolve and maintain the systems. To support development organizations in the future, efficient ways to manage information throughout the systems' lifecycle are needed. However, there is currently a lack of methods to continuously manage artifacts for self-adaptive systems. In our research, we aim to close this gap by developing methods and techniques to manage both design-time and run-time artifacts. We conduct empirical studies to identify practitioners' needs and challenges. Then we develop innovative solutions and technologies and evaluate them in practical scenarios.},
  doi       = {10.1109/ICSE-C.2017.31},
  groups    = {ieee},
  keywords  = {software engineering;run-time artifacts;design-time artifacts;self-adaptive systems;smart systems;autonomous systems;software-intensive systems;systems lifecycle;Software engineering;Collaboration;Maintenance engineering;Adaptation models;Conferences;Modeling;self-adaptive systems;information management;traceability;collaboration},
}

@InProceedings{Morandini2008,
  author    = {M. {Morandini} and L. {Penserini} and A. {Perini}},
  title     = {Automated Mapping from Goal Models to Self-Adaptive Systems},
  booktitle = {2008 23rd IEEE/ACM International Conference on Automated Software Engineering},
  year      = {2008},
  pages     = {485-486},
  month     = {Sep.},
  abstract  = {Self-adaptive systems should autonomously adapt at run time to changes in their operational environment, guided by the goals assigned by their stakeholders. We present a tool that supports goal-oriented modelling and generation of code for goal-directed, self-adaptive systems, supporting Tropos4AS, an extension of the software engineering methodology Tropos.},
  doi       = {10.1109/ASE.2008.83},
  groups    = {ieee},
  issn      = {1938-4300},
  keywords  = {program compilers;software engineering;automated mapping;goal models;self-adaptive systems;goal-oriented modelling;Tropos4AS;software engineering;Tropos;Adaptation model;Unified modeling language;Adaptive systems;Software engineering;Analytical models;Robots;Java},
}

@InProceedings{Han2017,
  author    = {D. {Han} and J. {Xing} and Q. {Yang} and J. {Li} and X. {Zhang} and Y. {Chen}},
  title     = {Integrating Goal Models and Problem Frames for Requirements Analysis of Self-Adaptive CPS},
  booktitle = {2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC)},
  year      = {2017},
  volume    = {2},
  pages     = {529-535},
  month     = {July},
  abstract  = {As Cyber-Physical Systems (CPS) operate in open, dynamic and diverse environments, they need to be self-adaptive to address the uncertainty challenges. And it is urgent to study self-adaptive software intensive Cyber-Physical Systems (self-adaptive CPS). As self-adaptive CPS interact closely with the environments and users, their requirements analysis is particularly challenging. General requirement models (e.g., goal models and problem frames) of CPS or self-adaptive software cannot be directly applied to self-adaptive CPS. In this paper, we present the Adapt-Requirement Model, which integrates goal models and problem frames, and further extends both models with self-adaptive CPS concepts. The integrated approach incorporates advantages of both goal models and problem frames, and can specify adaptation objectives of stakeholders as well as dynamic contexts of the system. Moreover, we create a UML Profile to represent Adapt-Requirement Model, and create a supporting tool for it. The UML profile and supporting tool has established continuity and integratability between Adapt-Requirement Model and UML design models. The applicability of our approach is illustrated using an example of Smart Building Firefighting System.},
  doi       = {10.1109/COMPSAC.2017.152},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {cyber-physical systems;formal verification;Unified Modeling Language;goal models;problem frames;requirements analysis;self-adaptive CPS;self-adaptive software intensive cyber-physical systems;adapt-requirement model;UML profile;UML design models;smart building firefighting system;Adaptation models;Unified modeling language;Analytical models;Stakeholders;Software;Concrete;Computational modeling;Self-adaptive software;Cyber-Physical Systems;Self-adaptive CPS;Problem frames;Goal model},
}

@InProceedings{Stier2016,
  author    = {C. {Stier} and A. {Koziolek}},
  title     = {Considering Transient Effects of Self-Adaptations in Model-Driven Performance Analyses},
  booktitle = {2016 12th International ACM SIGSOFT Conference on Quality of Software Architectures (QoSA)},
  year      = {2016},
  pages     = {80-89},
  month     = {April},
  abstract  = {Model-driven performance engineering allows software architects to reason on performance characteristics of a software system in early design phases. In recent years, model-driven analysis techniques have been developed to evaluate performance characteristics of self-adaptive software systems. These techniques aim to reason on the ability of a self-adaptive software system to fulfill performance requirements in transient phases. A transient phase is the interval in which the behavior of the system changes, e.g., due to a burst in user requests. However, the effectiveness and efficiency with which a system is able to adapt depends not only on the time when it triggers adaptation actions but also on the time at which they are completed. Executing an adaptation action can cause additional stress on the adapted system. This can further impede the performance of the system in the transient phase. Model-driven analyses of self-adaptive software do not consider these transient effects. This paper outlines an approach for evaluating transient effects in model-driven analyses of self-adaptive software systems. The evaluation applied our approach to a horizontally scaling media hosting application in three experiments. By considering the delay in booting new Virtual Machines (VMs), we were able to improve the accuracy of predicted response times. The second and third experiment demonstrated that the increased accuracy enables an early detection and resolution of design deficiencies of self-adaptive software systems.},
  doi       = {10.1109/QoSA.2016.14},
  groups    = {ieee},
  keywords  = {software architecture;software performance evaluation;virtual machines;transient effects;model-driven performance engineering;software architects;model-driven analysis techniques;self-adaptive software systems;virtual machines;Adaptation models;Transient analysis;Software systems;Load modeling;Analytical models;Computer architecture;Performance analysis;Software Performance Engineering;Model-Driven Engineering;Software Performance Prediction;Component Based Software Engineering},
}

@InProceedings{Song2007,
  author    = {Y. {Song}},
  title     = {Adaptation Hiding Modularity for Self-Adaptive Systems},
  booktitle = {29th International Conference on Software Engineering (ICSE'07 Companion)},
  year      = {2007},
  pages     = {87-88},
  month     = {May},
  abstract  = {Growth in the complexity of computing systems, in the dynamism of the environments they operate in, and the need for timely adaptations as conditions change, now pose significant challenges for manual systems management and reconfiguration. There is thus increasing interest in systems that sense relevant conditions and adapt automatically as they change. A problem the author observed in designing such systems is that we lack principles and methods to guide their design. The author's thesis is that the modern notion of information hiding as a guide to modularization of software artifacts and design processes can be re-interpreted to provide a guide for organizing runtime structures and adaptation dynamics in self-adaptive systems. The author argues that such an approach is important to achieving a number of key system properties, including scalability, analyzability, and efficiency. The author also plans to develop and evaluate his approach through a combination of case studies in a collaboration on self-adapting wireless sensor networks, by application to small, representative examples, and by arguments from first principles.},
  doi       = {10.1109/ICSECOMPANION.2007.15},
  groups    = {ieee},
  keywords  = {data encapsulation;fault tolerant computing;system monitoring;systems analysis;self-adaptive system management;self-adaptive system reconfiguration;information hiding;software artifact modularization;system design process;runtime structure organization;automatic adaptation hiding modularity;computing system complexity;self-adapting wireless sensor network;Wireless sensor networks;Software design;Scalability;Collaboration;Software systems;Runtime environment;Control systems;Switches;Computer science;Environmental management},
}

@Article{Huang2017,
  author   = {H. {Huang} and F. {Liu} and X. {Zhuo} and Z. {Hao}},
  title    = {Differential Evolution Based on Self-Adaptive Fitness Function for Automated Test Case Generation},
  journal  = {IEEE Computational Intelligence Magazine},
  year     = {2017},
  volume   = {12},
  number   = {2},
  pages    = {46-55},
  month    = {May},
  issn     = {1556-6048},
  abstract = {Testing is one of the most important parts of the software process, which aims at detecting software faults/bugs and thus guarantees the quality of the final product. Its expense is nearly half of the total cost of software development [7], [9]. Most of the current approaches to software testing are manual, but it has been recently suggested [1] that automated testing should be done to save human resources and budget, as well as to produce high-quality software.},
  doi      = {10.1109/MCI.2017.2670462},
  groups   = {ieee},
  keywords = {evolutionary computation;program testing;software quality;differential evolution;self-adaptive fitness function;automated test case generation;software faults;software development;software testing;high-quality software;Algorithm design and analysis;Software testing;Search methods;Genetic algorithms;Statistics;Software product lines;Software algorithms;Software engineering},
}

@InProceedings{Borda2018,
  author    = {A. {Borda} and L. {Pasquale} and V. {Koutavas} and B. {Nuseibeh}},
  title     = {Compositional Verification of Self-Adaptive Cyber-Physical Systems},
  booktitle = {2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2018},
  pages     = {1-11},
  month     = {May},
  abstract  = {Cyber-Physical Systems (CPSs) must often self-adapt to respond to changes in their operating environment. However, using formal verification techniques to provide assurances that critical requirements are satisfied can be computationally intractable due to the large state space of self-adaptive CPSs. In this paper we propose a novel language, Adaptive CSP, to model self-adaptive CPSs modularly and provide a technique to support compositional verification of such systems. Our technique allows system designers to identify (a subset of) the CPS components that can affect satisfaction of given requirements, and define adaptation procedures of these components to preserve the requirements in the face of changes to the system's operating environment. System designers can then use Adaptive CSP to represent the system including potential self-adaptation procedures. The requirements can then be verified only against relevant components, independently from the rest of the system, thus enabling computationally tractable verification. Our technique enables the use of existing formal verification technology to check requirement satisfaction. We illustrate this through the use of FDR, a refinement checking tool. To achieve this, we provide an adequate translation from a subset of Adaptive CSP to the language of FDR. Our technique allows system designers to identify alternative adaptation procedures, potentially affecting different sets of CPS components, for each requirement, and compare them based on correctness and optimality. We demonstrate the feasibility of our approach using a substantive example of a smart art gallery. Our results show that our technique reduces the computational complexity of verifying self-adaptive CPSs and can support the design of adaptation procedures.},
  groups    = {ieee},
  issn      = {2157-2305},
  keywords  = {cyber-physical systems;formal specification;formal verification;self-adaptive CPSs;compositional verification;requirement satisfaction;FDR refinement checking tool;Adaptive CSP language;self-adaptive cyber-physical systems;formal verification;Image restoration;Art;Floors;HVAC;Adaptation models;Cyber-physical systems;Servers;Self Adaptive Systems;Verification;Process Calculi},
}

@InProceedings{McKinley2007,
  author    = {P. K. {McKinley} and B. H. C. {Cheng} and C. A. {Ofria}},
  title     = {Applying Digital Evolution to the Development of Self-Adaptive ULS Systems},
  booktitle = {International Workshop on Software Technologies for Ultra-Large-Scale Systems (ULS '07)},
  year      = {2007},
  pages     = {3-3},
  month     = {May},
  abstract  = {A key characteristic for ultra-large scale (ULS) software- intensive systems is the need to adapt at run time in response to changing environmental conditions. Given the scale, complexity, and heterogeneity of ULS elements, innovative, but rigorous software engineering techniques are needed to address the development and the evolution of these systems. The developer of self-adaptive ULS systems must anticipate how and when the software will need to adapt in the future, codify this behavior in decision-making components to govern the adaptation, and ensure that system integrity is not compromised during adaptations. We contend that the full potential of dynamically adaptive software systems cannot be realized without environments that enable the developer to actively explore the "adaptation space " of the system during the early stages of design. We propose an approach to this problem that leverages and extends digital evolution techniques. By mapping models of adaptive software programs into digital organisms and studying traces of their evolution, the developer can gain critical insight into software decision making, software assurance, and the software infrastructure needed to support desired adaptations.},
  doi       = {10.1109/ULS.2007.1},
  groups    = {ieee},
  keywords  = {decision making;software prototyping;system monitoring;systems analysis;digital evolution technique;self-adaptive ultra-large scale software-intensive system development;software engineering technique;software decision-making component;digital organism;adaptive software program;software assurance;software infrastructure;run-time adaptation;Organisms;Adaptive systems;Software systems;Software design;Software quality;Software tools;Vehicle dynamics;Decision making;Space exploration;Computers},
}

@InProceedings{Garlan2013,
  author    = {D. {Garlan}},
  title     = {A 10-year perspective on software engineering self-adaptive systems (keynote)},
  booktitle = {2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2013},
  pages     = {2-2},
  month     = {May},
  abstract  = {In 2002 I helped organize the 1st ACM Workshop on Self-healing Systems (WOSS), a workshop that eventually morphed into this SEAMS Conference. As with SEAMS today, the goal then was to bring researchers together to gain a better understanding of the software engineering challenges and approaches for this emerging area. Now, just over 10 years later, it seems a fitting time to reflect back on the progress of the field during this formative period and to consider some of the broader implications for the software engineering agenda. In particular, in this talk I will try to tease out some common themes and research challenges that have emerged as the core concerns for this subfield. I will also do a bit of soul-searching to reflect on my own research agenda in architecture-based self-adaptation as exemplified by the Rainbow System �� considering both the decisions that we made that were good, and the ones that I think need to be revisited.},
  doi       = {10.1109/SEAMS.2013.6595486},
  groups    = {ieee},
  issn      = {2157-2321},
}

@InProceedings{Ardito2013,
  author    = {L. {Ardito}},
  title     = {Energy aware self-adaptation in mobile systems},
  booktitle = {2013 35th International Conference on Software Engineering (ICSE)},
  year      = {2013},
  pages     = {1435-1437},
  month     = {May},
  abstract  = {The increasing proliferation of mobile handsets, and the migration of the information access paradigm to mobile platforms, leads researchers to study the energy consumption of this class of devices. The literature still lacks metrics and tools that allow software developers to easily measure and optimize the energy efficiency of their code. Energy efficiency can definitely improve user experience increasing battery life. This paper aims to describe a technique to adapt the execution of a mobile application, based on the actual energy consumption of the device, without using external equipment.},
  doi       = {10.1109/ICSE.2013.6606736},
  groups    = {ieee},
  issn      = {1558-1225},
  keywords  = {mobile computing;optimisation;power aware computing;energy aware self-adaptation;mobile systems;mobile handsets;information access paradigm;mobile platforms;energy efficiency optimization;battery life;mobile application;Energy consumption;Mobile communication;Batteries;Software;Smart phones;Energy efficiency;Self-Adaptation;Energy Awareness;Energy Aware Software;Android;Context-Awareness},
}

@InProceedings{Andrade2013,
  author    = {S. S. {Andrade} and R. J. d. A. {Mac��do}},
  title     = {Toward Systematic Conveying of Architecture Design Knowledge for Self-Adaptive Systems},
  booktitle = {2013 IEEE 7th International Conference on Self-Adaptation and Self-Organizing Systems Workshops},
  year      = {2013},
  pages     = {23-24},
  month     = {Sep.},
  abstract  = {With the increasing complexity and stringent requirements of modern large-scale distributed systems, well-structured representations of software design knowledge arise as a promising approach to keep delivering high quality products in a timely and cost-effective way. Although domain-specific architecture styles and reference architectures help in conveying such design knowledge, the lack of systematic and structured representations makes it hard to grasp design alternatives promptly and support well-informed trade-off analysis. This short paper presents DuSE-MT - a supporting tool for the DuSE approach to architectural design of self-adaptive systems. DuSE-MT implements: i) a generic met model or systematic representation of design spaces (DuSE), which enables automated architecture design and analysis, ii) a specific design space for the self-adaptive systems domain (SA:DuSE), iii) a set of metrics that capture quality attributes of resulting self-adaptive architectures, and iv) a multi-objective optimization approach to explicitly elicit trade-off decision by finding out a set of Pareto-optimal candidate architectures. Our approach has been evaluated in a case study involving self-adaptive cloud-based services.},
  doi       = {10.1109/SASOW.2013.13},
  groups    = {ieee},
  keywords  = {adaptive systems;Pareto optimisation;software architecture;software metrics;software quality;architecture design knowledge;self-adaptive systems;DuSE-MT;generic met model;design spaces systematic representation;automated architecture design;automated architecture analysis;multiobjective optimization approach;Pareto-optimal candidate architectures;self-adaptive cloud-based services;Computer architecture;Unified modeling language;Aerospace electronics;Optimization;Systematics;Measurement;Conferences;Self-Adaptive Systems;Feedback Control;Software Architecture Design;Search-Based Software Engineering},
}

@InProceedings{Hamoui2010,
  author    = {F. {Hamoui} and C. {Urtado} and S. {Vauttier} and M. {Huchard}},
  title     = {SAASHA: A Self-Adaptable Agent System for Home Automation},
  booktitle = {2010 36th EUROMICRO Conference on Software Engineering and Advanced Applications},
  year      = {2010},
  pages     = {227-230},
  month     = {Sep.},
  abstract  = {This paper proposes SAASHA, a Self-Adaptable Agent System for Home Automation that provides end-users with the capacity of defining custom scenarios to act on their environment. The proposed system adapts dynamically to the environment without any expert intervention. It is composed of two types of component-based software agents: Graphical User Interface Agents that constitute the system's front-end and Device Control Agents that control the devices from the environment and implement user-defined scenarios. SAASHA seamlessly avoids scenario conflicts and automatically recovers from device failures.},
  doi       = {10.1109/SEAA.2010.57},
  groups    = {ieee},
  issn      = {2376-9505},
  keywords  = {adaptive systems;graphical user interfaces;home automation;home computing;software agents;ubiquitous computing;home automation;component based software agent;graphical user interface;device control agent;user defined scenario;self-adaptable agent system;Home automation;Graphical user interfaces;Computer architecture;Context;USA Councils;Multiagent systems;Registers},
}

@InProceedings{Cheng2009,
  author    = {S. {Cheng} and D. {Garlan} and B. {Schmerl}},
  title     = {RAIDE for engineering architecture-based self-adaptive systems},
  booktitle = {2009 31st International Conference on Software Engineering - Companion Volume},
  year      = {2009},
  pages     = {435-436},
  month     = {May},
  abstract  = {Rainbow is an approach for engineering self-adaptive systems, with run-time, closed-loop control over target systems to monitor, detect, decide, and act on opportunities for system improvement. RAIDE enables adaptation engineers to customize the Rainbow framework, simulate adaptation behavior, and deploy Rainbow run-time components.},
  doi       = {10.1109/ICSE-COMPANION.2009.5071049},
  groups    = {ieee},
  keywords  = {object-oriented programming;software architecture;RAIDE;engineering architecture;self-adaptive systems;run-time closed-loop control;Rainbow framework;Rainbow run-time components;Systems engineering and theory;Maintenance engineering;Probes;Monitoring;Adaptation model;Navigation;Control systems;Runtime;Software systems;Humans},
}

@InProceedings{Gharbaoui2018,
  author    = {M. {Gharbaoui} and C. {Contoli} and G. {Davoli} and G. {Cuffaro} and B. {Martini} and F. {Paganelli} and W. {Cerroni} and P. {Cappanera} and P. {Castoldi}},
  title     = {Demonstration of Latency-Aware and Self-Adaptive Service Chaining in 5G/SDN/NFV infrastructures},
  booktitle = {2018 IEEE Conference on Network Function Virtualization and Software Defined Networks (NFV-SDN)},
  year      = {2018},
  pages     = {1-2},
  month     = {Nov},
  abstract  = {This paper will demonstrate an orchestration system for 5G infrastructure supporting latency-minimized and self-adaptive service chaining over geographically distributed edge clouds interconnected through SDN. The demo will show an orchestration system that comprises dynamic virtual function selection and intent-based traffic steering control functionalities to provide optimized service chains in terms of end-to-end latency and adjustable with respect to the context (e.g., service dynamics, network status).},
  doi       = {10.1109/NFV-SDN.2018.8725645},
  groups    = {ieee},
  keywords  = {5G mobile communication;minimisation;software defined networking;telecommunication traffic;dynamic virtual function selection;intent-based traffic steering control functionalities;latency-aware demonstration;5G-SDN-NFV infrastructures;self-adaptive service chain optimization;geographically distributed edge cloud interconnection;Cloud computing;Wide area networks;Switches;Software defined networking;5G mobile communication;Topology;SDN;NFV;orchestration;service chaining},
}

@InProceedings{Wu2019,
  author    = {T. {Wu} and Q. {Li} and L. {Wang}},
  title     = {A Validation Method of Self-Adaptive Strategy Based on POMDP},
  booktitle = {2019 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  year      = {2019},
  pages     = {373-375},
  month     = {Sep.},
  abstract  = {Self-Adaptive Systems (SASs) can dynamically adjust themselves to adapt to the changes, by planning some strategies to guide the adjustments. However, many uncertainties in runtime affect the efficiency of strategies and the ability to attain goals for SASs. So, it is necessary to validate strategies before they are executed. At present, most of the validation methods ignore the fact that less data can be observed at runtime, so it is difficult to describe the state accurately with these data. Most methods do not support uncertain state reasoning, but state transition is uncertain. This will result in the verification method not dealing well with the uncertainties. This paper proposes a strategy validation method based on Partially Observable Markov Decision Process, and makes several key contributions: (1) a uncertain state model that not only support description of states through partial information, but also describe the uncertain transitions of states, (2) a validation method to validate whether the strategies meets the requirements at runtime, (3) a strategy correction method to get effective strategies as quickly as possible.},
  doi       = {10.1109/ICSME.2019.00061},
  groups    = {ieee},
  issn      = {2576-3148},
  keywords  = {decision theory;learning (artificial intelligence);Markov processes;software maintenance;uncertain state reasoning;state transition;verification method;strategy validation method;partially observable Markov decision process;strategy correction method;self-adaptive strategy;SASs;self-adaptive systems;Runtime;Software;Adaptation models;Uncertainty;Markov processes;Predictive models;Self-Adaptive Systems, Strategy Validation, Partially Observable Markov Decision Process, Reinforcement Learning},
}

@InProceedings{Mallya2018,
  author    = {R. {Mallya} and S. {Kothari}},
  title     = {Self-Adaptive Woman Health Monitoring System Using MAPE Components},
  booktitle = {2018 3rd International Conference for Convergence in Technology (I2CT)},
  year      = {2018},
  pages     = {1-7},
  month     = {April},
  abstract  = {In the model-driven software development, various models are generated during development process. In traditional software engineering, due to stable requirements development models were fixed during complete development. But some of these models are changed at runtime if requirements specifications are changed for modern software systems. To manage the changes at runtime, runtime models are developed and used. The developed software will be self-adaptive with self-optimizing and self-healing capabilities. Based on feedback loops, uncertainty is identified and MAPE components are used to implement self-adaptive plan. In this paper, the approach of self-adaptivity is applied to woman health monitoring system to make monitoring system responsive to new scenarios and autonomic. The system is useful for any age woman to monitor health data and make it available to physician for treatment. The state chart models are generated to describe how self-adaptation is analyzed, planned and executed when requirements specifications are changed.},
  doi       = {10.1109/I2CT.2018.8529760},
  groups    = {ieee},
  keywords  = {formal specification;health care;patient monitoring;self-adaptive woman health monitoring system;MAPE components;model-driven software development;traditional software engineering;stable requirements development models;requirements specifications;modern software systems;self-adaptive plan;self-adaptivity;health data;state chart models;Monitoring;Biomedical monitoring;Software;Fetus;Temperature measurement;Temperature sensors;Runtime;self-adaptive software;MAPE components;feedback loops;WHMS},
}

@InProceedings{Ahn2017,
  author    = {J. {Ahn} and Y. B. {Park}},
  title     = {AiTES: The self-adaptive framework for environment change of IoT},
  booktitle = {2017 4th International Conference on Computer Applications and Information Processing Technology (CAIPT)},
  year      = {2017},
  pages     = {1-4},
  month     = {Aug},
  abstract  = {As the network and hardware technology development, IoT devices that have sensors and communication functions on various objects are increasing rapidly. As result IoT management software that manages various IoT devices in system is becoming important. However, most management systems are designed to perform only limited functions for the registered devices. In this paper, we propose a framework of Adaptive Internet Things EcoSystem that control behavior by changing software module adaptively to environment change of IoT devices. This system is composed two parts. One is the software adaption part defined to adapt IoT environmental change for each Internet things. And the conducting part is defined to construct IT Ecosystem, so that each software adaption part interact others. We show the functions and execution behavior of the Framework to achieve controlling device behavior adaptively upon environmental changes of IoT.},
  doi       = {10.1109/CAIPT.2017.8320726},
  groups    = {ieee},
  keywords  = {Internet;Internet of Things;sensors;communication functions;result IoT management software;IoT devices;management systems;registered devices;Adaptive Internet Things EcoSystem;software module;IoT environmental change;controlling device behavior;self-adaptive framework;hardware technology development;software adaption part;conducting part;AiTES;Ecosystems;Software;Databases;Adaptation models;Internet of Things;Adaptive systems;Setf-Adaptive Systems;Internet of Things;IT Ecosystem},
}

@InProceedings{Morandini2008a,
  author    = {M. {Morandini} and L. {Penserini} and A. {Perini}},
  title     = {Modelling Self-Adaptivity: A Goal-Oriented Approach},
  booktitle = {2008 Second IEEE International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2008},
  pages     = {469-470},
  month     = {Oct},
  abstract  = {Self-adaptive systems aim at autonomously achieving their objectives in a dynamic environment, adapting their behavior to different circumstances. We claim that appropriate software engineering methodologies are needed to define and to model the information necessary for a system to perform autonomous diagnosis and decision making at runtime.In this short paper we focus on conceptual modeling for the design of self-adaptive software. Our design framework adopts a goal-oriented approach to specify variability in system requirements, coping with some limits of current goal modeling approaches.},
  doi       = {10.1109/SASO.2008.67},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {decision making;software engineering;self-adaptivity modelling;self-adaptive systems;dynamic environment;software engineering methodologies;autonomous diagnosis;decision making;self-adaptive software;Decision making;Runtime;Software engineering;Software design;Adaptive systems;Robustness;Best practices;Monitoring;Computer architecture;Steady-state;Self-adaptive systems;goal-orientation;conceptual modelling;environment},
}

@InProceedings{Marco2010,
  author    = {A. D. {Marco} and F. {Gallo} and P. {Inverardi} and R. {Ippoliti}},
  title     = {Towards a Stem Architecture Description Language for Self-Adaptive Systems},
  booktitle = {2010 Fourth IEEE International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2010},
  pages     = {269-270},
  month     = {Sep.},
  abstract  = {In the software domain, self-adaptive systems are able to modify their behavior at run-time to respond to internal and external changes. In life science, biological cells are power entities able to adapt to the (unpredictable) situations they incur in, in a complete decentralized fashion. We are working on a new architectural paradigm for self-adaptive software systems inspired by the adaptation mechanism coming from the cell life-cycle. In order to address the complexity and the variety of self adaptive systems we found that the cell lifecycle is interesting for three main features: i) their ability to specialize behaviors starting from the most general one, i.e. the stem cell, ii) the cell ability to make regular use of the programmed death mechanism (apoptosis) to get rid of obsolete behaviors. iii) a sort of architectural principle that allows the living organisms to be very efficient systems by maintaining the right trade off between general/universal cells (stem cells)and specialized/labouring ones. In this poster paper we present our STEM paradigm by proposing new roles and architectural structure that will be part of the STEM architecture description language.},
  doi       = {10.1109/SASO.2010.37},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {living systems;molecular biophysics;self-adjusting systems;software architecture;specification languages;architecture description language;self-adaptive systems;cell life cycle;living organisms;STEM;biological cells;programmed death mechanism;Computer architecture;Microprocessors;Stem cells;Software systems;Adaptive systems;Self-adaptive software system;ADL;Bio-Inspired Architectural Paradigm},
}

@InProceedings{Weyns2007,
  author    = {D. {Weyns} and T. {Holvoet}},
  title     = {An Architectural Strategy for Self-Adapting Systems},
  booktitle = {International Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS '07)},
  year      = {2007},
  pages     = {3-3},
  month     = {May},
  abstract  = {Self-adaptation is the ability of a software system to adapt to dynamic and changing operating conditions autonomously. In this paper, we present an architectural strategy for self-adapting systems. An architectural strategy embodies architectural knowledge about a particular solution approach. The architectural strategy for self-adapting systems structures the software into a number of interacting autonomous entities (agents) that are situated in an environment. It integrates a set of architectural patterns that have proved to be valuable in the design of various self-adapting applications. The self-adapting properties of the approach are based on the agents' abilities to adapt their behavior to dynamic and changing circumstances. The architectural strategy provides an asset base architects can draw from when developing new self-adapting applications that share its common base.},
  doi       = {10.1109/SEAMS.2007.3},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {multi-agent systems;software architecture;software reliability;software reusability;self-adapting system;multiagent system;software architecture;software reliability;software reusability;Software systems;Application software;Control systems;Large-scale systems;Multiagent systems;Computer science;Computer networks;Distributed computing;Communications technology;Communication system traffic control},
}

@InProceedings{Cheng2018,
  author    = {W. {Cheng} and Q. {Li} and L. {Wang} and L. {He}},
  title     = {Handling Uncertainty Online for Self-Adaptive Systems},
  booktitle = {2018 5th International Conference on Soft Computing Machine Intelligence (ISCMI)},
  year      = {2018},
  pages     = {135-139},
  month     = {Nov},
  abstract  = {Self-Adaptive Systems (SASs) are required to adapt to the frequent changes from external environments, user requirements and their own. However, the potential uncertainties challenge the SASs. In which, the uncertainties in Monitor is mainly that the monitoring data is inaccurate, and the uncertainties in Analyze is mainly that the abnormal state is difficult to match accurately. These uncertainties lead to identify changes inaccurately and directly affect the reliability of SASs. So they are particularly critical. To deal with them, current adaptive methods, which either consider only uncertainties at design or rely on specific scenarios without versatility. This paper deal with both two uncertainties of Monitor and Analyze at runtime, and introduces Fuzzy Theory and Semantic Distance Technology to handle them online to ensure the reliability of SASs, and our methods are common to all SASs. Finally, we exemplify these methods with the Bookstore System, which proves the effectiveness of the methods.},
  doi       = {10.1109/ISCMI.2018.8703227},
  groups    = {ieee},
  issn      = {2640-0146},
  keywords  = {fuzzy set theory;ontologies (artificial intelligence);self-adjusting systems;semantic networks;software reliability;uncertainty handling;external environments;user requirements;SASs;Bookstore system;data monitoring;semantic distance technology;fuzzy theory;uncertainty online handling;self-adaptive systems;Monitoring;Uncertainty;Semantics;Ontologies;Runtime;Time factors;Filtering theory;uncertainty;Self-Adaptive Systems;Monitor and Analyze;Fuzzy Theory;Semantic Distance},
}

@InProceedings{Hernandez-Sosa2005,
  author    = {D. {Hernandez-Sosa} and A. C. {Dominguez-Brito} and C. {Guerra-Artal} and J. {Cabrera-Gamez}},
  title     = {Runtime self-adaptation in a component-based robotic framework},
  booktitle = {2005 IEEE/RSJ International Conference on Intelligent Robots and Systems},
  year      = {2005},
  pages     = {2700-2705},
  month     = {Aug},
  abstract  = {The development and maintenance of software for robotic systems is a hard task due to the complexity inherent in these systems. Besides, the resulting applications have to deal with limited resources and variable execution conditions that must be considered in order to keep an acceptable system performance. To address both problems we have integrated a set of dynamic adaptation policies inside CoolBOT, a component oriented framework for programming robotic systems. CoolBOT contributes to reduce the programming effort, promoting robustness and code reuse, while the adaptation scheme provides a dynamic modulation of system performance to meet available computational resources at runtime. In this paper we also present two demonstrators that outline the benefits of using the proposed approach in the development of real robotic applications.},
  doi       = {10.1109/IROS.2005.1545578},
  groups    = {ieee},
  issn      = {2153-0866},
  keywords  = {robot programming;software maintenance;object-oriented programming;robust control;adaptive control;software reusability;runtime self-adaptation;component-based robotics;software development;software maintenance;robotic system software;CoolBOT;component oriented software;robotic system programming;robustness;code reuse;self-adaptive software components;Runtime;Application software;Robot programming;Dynamic programming;Calibration;Software maintenance;Software systems;System performance;Robustness;Adaptive control;Robotic systems;self-adaptive software components},
}

@InProceedings{Nascimento2013,
  author    = {A. S. {Nascimento} and C. M. F. {Rubira} and F. {Castor}},
  title     = {Using CVL to Support Self-Adaptation of Fault-Tolerant Service Compositions},
  booktitle = {2013 IEEE 7th International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2013},
  pages     = {261-262},
  month     = {Sep.},
  abstract  = {We present a dynamic software product line to support fault-tolerant service compositions. Architectural variability is specified and resolved by Common Variability Language (CVL). CVL is a generic variability modeling language that enables the transformation of a product line model into a configured, new product model. At runtime, whenever it is necessary to determine a fault tolerance technique more adapted to the context (i.e. a new product) the correspondent product model is dynamically generated by executing CVL model-to-model transformation. Based on the comparison of the reflection model with the target product model, the adaptation process is fully automated.},
  doi       = {10.1109/SASO.2013.34},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {product development;self-adjusting systems;simulation languages;software fault tolerance;software reusability;fault-tolerant service composition self-adaptation;dynamic software product line;architectural variability;Common Variability Language;generic variability modeling language;product line model;runtime;CVL model-to-model transformation;reflection model;Adaptation models;Fault tolerance;Fault tolerant systems;Software;Unified modeling language;Runtime;Quality of service;Fault-tolerant Systems;Self-Adaptation;CVL},
}

@InProceedings{Bagula1983,
  author    = {M. {Bagula} and R. {Wong}},
  title     = {A 5V self adaptive microcomputer with 16Kb of E2program storage and security},
  booktitle = {1983 IEEE International Solid-State Circuits Conference. Digest of Technical Papers},
  year      = {1983},
  volume    = {XXVI},
  pages     = {34-35},
  month     = {Feb},
  doi       = {10.1109/ISSCC.1983.1156543},
  groups    = {ieee},
  keywords  = {Microcomputers;Testing;Security;Integrated circuit interconnections;Registers;Protection;Application software;Production;Manufacturing;Voltage},
}

@InProceedings{Li2016,
  author    = {J. {Li} and Y. {Zhang} and Y. {Chen}},
  title     = {A Self-Adaptive Traffic Light Control System Based on Speed of Vehicles},
  booktitle = {2016 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C)},
  year      = {2016},
  pages     = {382-388},
  month     = {Aug},
  abstract  = {Intelligent transportation is a typical case of cyber-physical system (CPS). Due to the rapid increasing of the number of vehicles in city, problems caused by vehicles, like congestion and environment pollution, are becoming more and more serious. Traffic light control system is often used to control the vehicles passing for a solution of the congestion in the city. Present control systems used are normally assigned as to be static, i.e., traffic light signal changes in a static way. The aim of this paper is to propose a dynamical traffic light control system, i.e., change the traffic light signals in real time following the speed of vehicles. This system is an instance of V2I(Vehicle to Infrastructure) communication model, realizing data transmission between vehicles and traffic lights. Vehicles send speed messages to the traffic light when passing an intersection, then the traffic light analyzes the information and adjusts the signal time in real time. Each traffic light in each direction has a control strategy of itself without the orthogonal requirement. Therefore, the traffic light is a kind of cyber-physical system. This traffic light control system can maximize the number of vehicles passing intersection, and as a result, minimize the congestion and pollution. A traffic light control algorithm based on speed of vehicles and its simulation are presented. The safety and liveness of this control system are discussed too.},
  doi       = {10.1109/QRS-C.2016.58},
  groups    = {ieee},
  keywords  = {adaptive control;cyber-physical systems;intelligent control;intelligent transportation systems;optimisation;road safety;road traffic control;self-adjusting systems;self-adaptive traffic light control system;vehicle speed;intelligent transportation;cyber-physical system;CPS;environment pollution;dynamical traffic light control system;V2I communication model;vehicle to infrastructure communication model;data transmission;speed message;signal time adjustment;vehicle maximization;road intersection;congestion minimization;pollution minimization;safety;Control systems;Automobiles;Safety;Algorithm design and analysis;Roads;Intelligent transportation;Traffic light control system;Algorithm and Simulation},
}

@InProceedings{Ledeczi2000,
  author    = {A. {Ledeczi} and G. {Karsai} and T. {Bapty}},
  title     = {Synthesis of self-adaptive software},
  booktitle = {2000 IEEE Aerospace Conference. Proceedings (Cat. No.00TH8484)},
  year      = {2000},
  volume    = {4},
  pages     = {501-507 vol.4},
  month     = {March},
  abstract  = {Embedded applications are constantly being pushed toward achieving autonomy, allowing them to function reliably in all circumstances and under extreme design constraints. Our approach to embedded systems introduces a feedback loop characterizing adaptive systems: the adaptation mechanism monitors system performance and changes the structure accordingly to optimize performance. These self-adaptive systems can be designed and implemented using model-integrated computing. To represent dynamic software architectures, the system is modeled in a generative manner. Here, the components of the architecture are prepared, but their number and connectivity patterns are not fully defined at design time. Instead, an algorithmic description and architectural parameters are provided that specify how the architecture could be generated "on-the-fly". These design-time models are then embedded in the run-time system along with generators that configure/reconfigure the system by changing certain architectural parameters.},
  doi       = {10.1109/AERO.2000.878461},
  groups    = {ieee},
  issn      = {1095-323X},
  keywords  = {software architecture;embedded systems;feedback;data flow computing;program interpreters;application generators;self-adaptive software;embedded applications;feedback loop;adaptation mechanism;model-integrated computing;dynamic software architectures;connectivity patterns;algorithmic description;on-the-fly generation;design-time models;model interpreters;metaprogramming interface;Application software;Microwave integrated circuits;Software systems;Feedback loop;Adaptive systems;System performance;Software architecture;Computer architecture;Unified modeling language;Embedded system},
}

@InProceedings{Schmerl2015,
  author    = {B. {Schmerl}},
  title     = {RADIANCE 2015 Keynote: Challenges in Engineering Dependable Self-Adaptive System},
  booktitle = {2015 IEEE International Conference on Dependable Systems and Networks Workshops},
  year      = {2015},
  pages     = {26-26},
  month     = {June},
  abstract  = {To provide some levels of dependency in software systems, self-adaptive systems have been proposed as a principled approach to engineering software systems to adapt systems to meet requirements even in the face of changes and uncertainty in the environment. But how can we show that changing a system at run time will make systems more dependable? In this keynote, I will outline a set of challenges for providing assurances for self-adaptive systems, and describe work that our group has been doing that can provide evidence for assurances in a number of contexts, including collaborative self-adaptation with humans-in-the-loop. I will discuss how probabilistic model checking can be used to explore the state space of self-adaptive systems, and how they can provide more realistic models of the impacts that adapting a system may have on the system.},
  doi       = {10.1109/DSN-W.2015.36},
  groups    = {ieee},
  issn      = {2325-6664},
  keywords  = {formal verification;groupware;software reliability;state-space methods;engineering dependable self-adaptive system;engineering software system;collaborative self-adaptation;humans-in-the-loop;probabilistic model checking;state space;Software systems;Space exploration;Computer science;Uncertainty;Context},
}

@InProceedings{YaliZhu2004,
  author    = {{Yali Zhu} and {Gang Huang} and {Hong Mei}},
  title     = {Quality attribute scenario based architectural modeling for self-adaptation supported by architecture-based reflective middleware},
  booktitle = {11th Asia-Pacific Software Engineering Conference},
  year      = {2004},
  pages     = {2-9},
  month     = {Nov},
  abstract  = {Reflective middleware is proposed for guaranteeing desired qualities of middleware based systems which reside in the extremely open and dynamic Internet. Current researches and practices focus on how to monitor and change the whole system through reflective mechanisms provided by middleware. However, they put little attention on why, when and what to monitor and change because it is very hard for middleware to collect enough knowledge which is usually specific to the whole system. Being an important artifact in software development, software architecture records plentiful design information, especially the considerations for quality attributes of the target system. It is a natural idea to provide reflective middleware with enough knowledge via software architecture. This paper presents a demonstration of the idea. In this demonstration, the self-adaptations can be analyzed in a quality attribute scenario based way and specified by an extended architecture description language. Such knowledge prescribed at the design phase can be used directly by an architecture based reflective middleware which then automatically adapts itself at runtime.},
  doi       = {10.1109/APSEC.2004.79},
  groups    = {ieee},
  issn      = {1530-1362},
  keywords  = {software architecture;middleware;Internet;specification languages;software quality;quality attributes;scenario based architectural model;reflective middleware;Internet;software development;software architecture;extended architecture description language;Middleware;Software architecture;Delay;Runtime;Internet;Architecture description languages;Computer science;Electronic mail;Computerized monitoring;Programming;Software architecture;Reflective middleware;Quality attributes;Architectural description language},
}

@InProceedings{Perini2012,
  author    = {A. {Perini}},
  title     = {Self-adaptive service based applications: Challenges in requirements engineering},
  booktitle = {2012 Sixth International Conference on Research Challenges in Information Science (RCIS)},
  year      = {2012},
  pages     = {1-1},
  month     = {May},
  abstract  = {Service-Based Applications (SBA) are defined as software systems, which are composed of multiple services made available over computer networks by different service providers, and that can be accessed by service consumers, through a variety of connecting devices.},
  doi       = {10.1109/RCIS.2012.6240416},
  groups    = {ieee},
  issn      = {2151-1357},
  keywords  = {formal specification;software fault tolerance;systems analysis;self-adaptive service based applications;requirements engineering;software systems;service providers;service consumers;computer networks;Context;Adaptation models;Abstracts;Information technology;Electronic mail;Software systems},
}

@InProceedings{Pandey2017,
  author    = {A. {Pandey} and D. {Garlan}},
  title     = {Hybrid Planning in Self-Adaptive Systems},
  booktitle = {2017 IEEE 2nd International Workshops on Foundations and Applications of Self* Systems (FAS*W)},
  year      = {2017},
  pages     = {366-368},
  month     = {Sep.},
  abstract  = {Self-adaptive software systems make decisions at run time that seek to change their behavior in response to faults, changing environments and attacks. Therefore, having an appropriate planning approach to find an adaptation plan is critical to successful self-adaptation. For many realistic systems, ideally one would like to have a planning approach that is both quick and finds an optimal adaptation plan. However, due to the fundamental trade-off between quality and timeliness of planning, often designers have to compromise between an approach that is quick to find a plan and an approach that is slow but finds an optimal plan. To deal with this trade-off, this work proposes a hybrid planning approach that combines more than one planning approach to bring their benefits together.},
  doi       = {10.1109/FAS-W.2017.176},
  groups    = {ieee},
  keywords  = {planning (artificial intelligence);self-adjusting systems;software fault tolerance;system monitoring;self-adaptive software systems;optimal adaptation plan;hybrid planning approach;planning approach;self-adaptation;system behavior;planning quality;planning timeliness;Planning;Adaptive systems;Conferences;Artificial intelligence;Software;Cognition;Planning;Self-adaptation;Autonomic computing},
}

@InProceedings{Gomaa2012,
  author    = {H. {Gomaa} and K. {Hashimoto}},
  title     = {Dynamic self-adaptation for distributed service-oriented transactions},
  booktitle = {2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2012},
  pages     = {11-20},
  month     = {June},
  abstract  = {Dynamic software adaptation addresses software systems that need to change their behavior during execution. To address reuse in dynamic software adaptation, software adaptation patterns, also referred to as software reconfiguration patterns, have been developed. A software adaptation pattern defines how a set of components that make up an architecture or design pattern dynamically cooperate to change the software configuration to a new configuration given a set of adaptation commands. This paper describes a dynamic self-adaptation pattern for distributed transaction management in service-oriented applications.},
  doi       = {10.1109/SEAMS.2012.6224386},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {distributed processing;object-oriented methods;service-oriented architecture;dynamic self-adaptation pattern;distributed service-oriented transactions;dynamic software adaptation patterns;software systems;software reconfiguration patterns;design pattern;software configuration;distributed transaction management;Connectors;Service oriented architecture;Protocols;Computer architecture;Adaptation models;Software systems;service-oriented architecture;dynamic software adaptation;software adaptation pattern;distributed transactions},
}

@InProceedings{Li2018a,
  author    = {N. {Li} and D. {Bai} and Y. {Peng} and Z. {Yang} and W. {Jiao}},
  title     = {Verifying Stochastic Behaviors of Decentralized Self-Adaptive Systems: A Formal Modeling and Simulation Based Approach},
  booktitle = {2018 IEEE International Conference on Software Quality, Reliability and Security (QRS)},
  year      = {2018},
  pages     = {67-74},
  month     = {July},
  abstract  = {The development of self-adaptive software has attracted a lot of attention. Decentralization is an effective way to manage the complexity of modern self-adaptive software systems. However, there are still tremendous challenges remained in decentralized self-adaptive systems. One major challenge is to guarantee the achievements of both local goals and global goals. Another challenge is to ensure the performance of the systems operating in highly dynamic environments with existence of internal changes. To solve these problems, we introduce an integrated system framework combining self-adaptive mechanisms with decentralization features, with a formal modeling method based on stochastic timed automata to allow the system to be analyzed and verified. Timed computational tree logic is used to specify the system properties and then stochastic simulations in a dynamic environment are conducted to study system performance. The whole approach is illustrated and evaluated with a motivation example from practical applications in UAV emergency mission scenarios.},
  doi       = {10.1109/QRS.2018.00020},
  groups    = {ieee},
  keywords  = {adaptive systems;formal logic;formal specification;formal verification;stochastic automata;trees (mathematics);stochastic behaviors;decentralized self-adaptive systems;simulation based approach;self-adaptive software systems;integrated system framework;self-adaptive mechanisms;decentralization features;formal modeling method;stochastic timed automata;stochastic simulations;UAV emergency mission scenarios;Drones;Adaptation models;Stochastic processes;Computational modeling;Automata;Software systems;Adaptive systems;self-adaptive software;decentralization;modeling;stochastic model checking},
}

@InProceedings{BaoxiangCao2010,
  author    = {{Baoxiang Cao} and {Xiaona Xia} and {Jiguo Yu}},
  title     = {The barycenter's design and service sequence's evolution about service-driven self-adaptive architecture-centric system},
  booktitle = {2010 2nd International Conference on Advanced Computer Control},
  year      = {2010},
  volume    = {3},
  pages     = {288-293},
  month     = {March},
  abstract  = {Architecture-centric system is s self-adaptive goal's implementation platform, requirement is processed as business services, which is the driven power, agent internetware is built as granularity service's carrier, achieves autonomous barycenter model about architecture rules, completes its self-adaptive reasoning, in order to get services' discovery and design. About flexible real-time business sequence's logic, service agent's decision-making cluster is the learning adjustment mechanism, which can finish implementation topology's evolution of architecture-centric service.},
  doi       = {10.1109/ICACC.2010.5486618},
  groups    = {ieee},
  keywords  = {software agents;software architecture;Web services;architecture-centric system;service-driven self-adaptive architecture;barycenter model;business services;agent Internetware;self-adaptive reasoning;service discovery;service agent decision-making cluster;learning adjustment mechanism;Decision making;Logic;Computer architecture;Web and internet services;Network topology;Business communication;Collaborative software;Computer science;Power system modeling;Communication system software;Architecture-centric;Self-adaptive;Service-driven;Internetware;Agent;Barycenter Model;Decision-making Cluster},
}

@InProceedings{Tian-hanGao2004,
  author    = {{Tian-han Gao} and {Nan Guo} and {Hong Zhao}},
  title     = {A self-adapting mobile IPv6 model based on MAP},
  booktitle = {IEEE International Conference on e-Technology, e-Commerce and e-Service, 2004. EEE '04. 2004},
  year      = {2004},
  pages     = {473-476},
  month     = {March},
  abstract  = {A self-adapting mobile IPv6 model based on MAP is presented to optimize the performance when mobile node moves frequently at remote region. Through enhancing the MAP, adopting the self-adapting binding update policy and intra-CN process, the model optimizes mobile node's moving performance, owns the capability of self-adapting to exterior network changes as well as improves the utilization of network resources.},
  doi       = {10.1109/EEE.2004.1287349},
  groups    = {ieee},
  keywords  = {access protocols;transport protocols;IP networks;mobile communication;mobile computing;resource allocation;wireless LAN;self-adapting mobile IPv6 model;MAP;mobile node;self-adapting binding;intra-CN process;network resource utilization;Software performance;Computer industry;Costs;Utility programs;Algorithm design and analysis},
}

@InProceedings{Patikirikorala2013,
  author    = {T. {Patikirikorala} and A. {Colman} and J. {Han}},
  title     = {Can Control-Component Libraries Reduce the Costs of Developing Control Engineering-Based Self-Adaptive Systems?},
  booktitle = {2013 20th Asia-Pacific Software Engineering Conference (APSEC)},
  year      = {2013},
  volume    = {1},
  pages     = {42-49},
  month     = {Dec},
  abstract  = {Many approaches have been proposed to develop self-adaptive software systems based on control engineering methods in recent years. However, these research works only evaluate the self-adaptive capabilities of the proposed control solution, but no evaluation is performed to quantify the costs of implementing such a control solution. This paper provides results of an empirical study, conducted to quantify the implementation, testing and knowledge requirement costs of building a self-adaptive software system using control engineering methods. Our objective is to investigate, whether these costs can be significantly reduced if a library of prepackaged control components is available to software engineers. The findings of the study indicate that the aforementioned costs can be significantly reduced when supporting libraries are available. We also list the lessons learned from this study and recommendations, which may be useful in designing experiments to evaluate engineering costs of self-adaptive methods in the future.},
  doi       = {10.1109/APSEC.2013.17},
  groups    = {ieee},
  issn      = {1530-1362},
  keywords  = {control engineering;self-adjusting systems;software cost estimation;software engineering;software libraries;control-component libraries;control engineering-based self-adaptive systems;implementation costs;testing costs;knowledge requirement costs;self-adaptive software system building;prepackaged control components library;software engineers;cost reduction;Libraries;Control engineering;Software systems;Computer architecture;Knowledge engineering;self-adaptive systems;control engineering;empirical study},
}

@InProceedings{Horcas2017,
  author    = {J. M. {Horcas} and M. {Pinto} and L. {Fuentes} and N. {G��mez}},
  title     = {Self-Adaptive Energy-Efficent Applications: The HADAS Developing Approach},
  booktitle = {2017 IEEE 15th Intl Conf on Dependable, Autonomic and Secure Computing, 15th Intl Conf on Pervasive Intelligence and Computing, 3rd Intl Conf on Big Data Intelligence and Computing and Cyber Science and Technology Congress(DASC/PiCom/DataCom/CyberSciTech)},
  year      = {2017},
  pages     = {828-835},
  month     = {Nov},
  abstract  = {Software systems have a strong impact on the energy consumption of the hardware they use. For this reason, software developers should be more aware of the energy consumed by their systems. Moreover, software systems should be developed to be able to adapt their behavior to minimize the energy consumed during their execution. This paper illustrates how to address the problem of developing self-adaptive energy-efficient applications using the HADAS approach. HADAS makes use of advanced software engineering methods, such as Dynamic Software Product Lines and Aspect-Oriented Software Development. The main steps of the HADAS approach, both during the design of the application and also at runtime are illustrated by applying them to a running case study.},
  doi       = {10.1109/DASC-PICom-DataCom-CyberSciTec.2017.140},
  groups    = {ieee},
  keywords  = {object-oriented programming;software product lines;HADAS developing approach;software systems;energy consumption;software engineering methods;self-adaptive energy-efficent applications;dynamic software product lines;aspect-oriented software development;Runtime;Energy consumption;Energy efficiency;Tools;Hardware;Software systems;energy-efficient applications;self-adaptation;HADAS;Dynamic Software Product Lines;Aspect-Oriented Software Development},
}

@Article{Nallur2013,
  author   = {V. {Nallur} and R. {Bahsoon}},
  title    = {A decentralized self-adaptation mechanism for service-based applications in the cloud},
  journal  = {IEEE Transactions on Software Engineering},
  year     = {2013},
  volume   = {39},
  number   = {5},
  pages    = {591-612},
  month    = {May},
  issn     = {1939-3520},
  abstract = {Cloud computing, with its promise of (almost) unlimited computation, storage, and bandwidth, is increasingly becoming the infrastructure of choice for many organizations. As cloud offerings mature, service-based applications need to dynamically recompose themselves to self-adapt to changing QoS requirements. In this paper, we present a decentralized mechanism for such self-adaptation, using market-based heuristics. We use a continuous double-auction to allow applications to decide which services to choose, among the many on offer. We view an application as a multi-agent system and the cloud as a marketplace where many such applications self-adapt. We show through a simulation study that our mechanism is effective for the individual application as well as from the collective perspective of all applications adapting at the same time.},
  doi      = {10.1109/TSE.2012.53},
  groups   = {ieee},
  keywords = {cloud computing;electronic commerce;multi-agent systems;quality of service;decentralized self-adaptation mechanism;service-based applications;cloud computing;QoS requirements;market-based heuristics;continuous double-auction;multiagent system;Quality of service;Pricing;Reliability;Resource management;Measurement;Adaptation models;Cloud computing;Self-adaptation;market based;multi-agent systems},
}

@InProceedings{Wu2008,
  author    = {H. {Wu} and Q. {Tan}},
  title     = {Utility-Function-Based Self-Adaptation in Elevator Group Control System},
  booktitle = {2008 International Conference on Computer Science and Software Engineering},
  year      = {2008},
  volume    = {1},
  pages     = {1158-1161},
  month     = {Dec},
  abstract  = {Utility functions provide a natural and advantageous way for achieving self-adaptation in distributed systems. We implemented in a realistic prototype elevator group control system(EGCS), that demonstrates how utility functions can continually optimize the use of elevators in a dynamic environment. A global manager allocates elevators among the whole system based on throughput obtained from the monitors of the floors. We present empirical data that demonstrate the effectiveness of our utility function scheme in handling realistic, fluctuating workloads running on a test PC .},
  doi       = {10.1109/CSSE.2008.1299},
  groups    = {ieee},
  keywords  = {distributed control;lifts;utility-function-based self-adaptation;elevator group control system;distributed systems;global manager;Elevators;Control systems;Prototypes;Resource management;Humans;Road transportation;Computer science;Software engineering;Distributed computing;Software prototyping;Utility Function;Self-adaptation;Elevator Group Control System;EGCS},
}

@InProceedings{Yuan2016,
  author    = {L. {Yuan} and Q. {Yu} and C. {Shen} and W. {Hu} and Z. {Yang}},
  title     = {New watershed segmentation algorithm based on hybrid gradient and self-adaptive marker extraction},
  booktitle = {2016 2nd IEEE International Conference on Computer and Communications (ICCC)},
  year      = {2016},
  pages     = {624-628},
  month     = {Oct},
  abstract  = {In order to overcome the problem of over-segmentation in the traditional watershed algorithm, this paper proposes a new watershed segmentation algorithm, based on hybrid gradient and self-adaptive marker extraction. The algorithm uses color space to calculate image gradient, and improves the gradient function with the information entropy theory. Then, this paper suggests a self-adaptive calculation method of h-minima threshold to mark the gradient image, and uses the marker to modify the gradient image. Finally, the watershed segmentation is applied by using the modified gradient. A series of experiments proved that the new algorithm can effectively enhance weak edges, and overcome the problem of traditional marker extraction which needs to set threshold parameters by users. Also the new approach can obtain a good watershed segmentation result, and effectively reduce the over segmentation phenomenon.},
  doi       = {10.1109/CompComm.2016.7924776},
  groups    = {ieee},
  keywords  = {entropy;feature extraction;image colour analysis;image segmentation;transforms;watershed segmentation algorithm;over-segmentation problem;hybrid gradient self-adaptive marker extraction;image gradient;color space;gradient function;information entropy theory;self-adaptive calculation method;h-minima threshold;Image segmentation;Image edge detection;Databases;watershed algorithm;information entropy;hybrid gradient;marker extraction;h-minima transformation},
}

@InProceedings{Guohong2011,
  author    = {L. {Guohong} and N. {Jun} and Z. {Bin} and D. {Pengxiang} and Z. {Yuesong}},
  title     = {Dynamic Pick Method of Web Service Selection Algorithms Based on Use Mode in Self-adaptive Web Service Composition},
  booktitle = {2011 International Joint Conference on Service Sciences},
  year      = {2011},
  pages     = {22-26},
  month     = {May},
  abstract  = {To solve the contradiction between self-adaptive efficiency and optimization effect existing in the execution of current self-adaptive Web service composition, this paper proposes a dynamic pick method of Web service selection algorithms based on use mode. The dynamic pick method chooses service selection algorithm which best fits the runtime self-adaptive situation as adaptive strategy in self-adaptive Web service composite. And to achieve the dynamic pick, this paper presents two estimation methods of service selection algorithm's execution time in different ways. Through implementation and analysis, this paper adopts an associative way of two estimation methods. At last, this paper implements and tests the dynamic pick method. Test results show that the dynamic pick method based on use mode can effectively relieve the contradiction.},
  doi       = {10.1109/IJCSS.2011.13},
  groups    = {ieee},
  keywords  = {aspect-oriented programming;optimisation;Web services;dynamic pick method;Web service selection algorithms;self-adaptive Web service;self-adaptive efficiency;optimization;service selection algorithm;Heuristic algorithms;Web services;Estimation;Algorithm design and analysis;Optimization;Runtime;Complexity theory;Web service somposition;Self-adaption;Service selection algorithm;Dynamic pick},
}

@InProceedings{Uchitel2016,
  author    = {S. {Uchitel} and V. A. {Braberman} and N. {D��Ippolito}},
  title     = {Runtime Controller Synthesis for Self-Adaptation: Be Discrete! (Keynote)},
  booktitle = {2016 IEEE/ACM 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2016},
  pages     = {1-3},
  month     = {May},
  abstract  = {Self-adaptation is often defined as the ability of systems to alter at runtime their behaviour in response to changes in their environment, capabilities and goals. In this talk I will argue that this definition is too broad and that it dilutes a very real need for a particular quality of today's software systems. I will postulate that a more refined definition of adaptation should emphasise the need for systems to have the ability to react to changes that were originally unforseen at design time, and to provide assurances on the correctness of these adaptations. How can systems be designed to account for what is unforseen? I will argue that a key design decision for achieving self-adaptation is to endow systems with the capability of synthesising at runtime discrete event controllers. Indeed, reactive systems that are requirements and assumptions aware, if extended with run time controller synthesis capabilities are equipped with a powerful infrastructure towards achieving assured self-adaptation.},
  doi       = {10.1109/SEAMS.2016.008},
  groups    = {ieee},
  keywords  = {adaptive control;control system synthesis;discrete event systems;reactive systems;runtime discrete event controller synthesis;self-adaptation;runtime controller synthesis;Adaptive systems;Runtime;Software;Control theory;Cognition;Planning;Controller Synthesis;Adaptive Systems},
}
{C��mara2017,
  author        = {J. {C��mara} and R. {de Lemos} and N. {Laranjeiro} and R. {Ventura} and M. {Vieira}},
  title         = {Robustness-Driven Resilience Evaluation of Self-Adaptive Software Systems},
  journal       = {IEEE Transactions on Dependable and Secure Computing},
  year          = {2017},
  volume        = {14},
  number        = {1},
  pages         = {50-64},
  month         = {Jan},
  issn          = {1941-0018},
  __markedentry = {[guan:6]},
  abstract      = {An increasingly important requirement for certain classes of software-intensive systems is the ability to self-adapt their structure and behavior at run-time when reacting to changes that may occur to the system, its environment, or its goals. A major challenge related to self-adaptive software systems is the ability to provide assurances of their resilience when facing changes. Since in these systems, the components that act as controllers of a target system incorporate highly complex software, there is the need to analyze the impact that controller failures might have on the services delivered by the system. In this paper, we present a novel approach for evaluating the resilience of self-adaptive software systems by applying robustness testing techniques to the controller to uncover failures that can affect system resilience. The approach for evaluating resilience, which is based on probabilistic model checking, quantifies the probability of satisfaction of system properties when the target system is subject to controller failures. The feasibility of the proposed approach is evaluated in the context of an industrial middleware system used to monitor and manage highly populated networks of devices, which was implemented using the Rainbow framework for architecture-based self-adaptation.},
  doi           = {10.1109/TDSC.2015.2429128},
  keywords      = {probability;program testing;software architecture;system recovery;robustness-driven resilience evaluation;self-adaptive software systems;software-intensive systems;robustness testing;satisfaction probability;controller failures;Rainbow framework;architecture-based self-adaptation;Resilience;Robustness;Testing;Probes;Context;Software systems;Monitoring;Resilience evaluation;self-adaptive systems;robustness testing techniques;probabilistic model checking},
}

@InProceedings{Shang-WenCheng2004,
  author    = {{Shang-Wen Cheng} and {An-Cheng Huang} and D. {Garlan} and B. {Schmerl} and P. {Steenkiste}},
  title     = {Rainbow: architecture-based self-adaptation with reusable infrastructure},
  booktitle = {International Conference on Autonomic Computing, 2004. Proceedings.},
  year      = {2004},
  pages     = {276-277},
  month     = {May},
  abstract  = {Software-based systems today are increasingly expected to dynamically self-adapt to accommodate resource variability, changing user needs, and system faults. Recent work uses closed-loop control based on external models to monitor and adapt system behavior at run time. Taking this externalized approach, the Rainbow framework we have developed uses software architectural models to dynamically monitor and adapt a running system. A key goal and primary challenge of this framework is to support the reuse of adaptation strategies and infrastructure across different systems. We show that the separation of a generic adaptation infrastructure from system-specific adaptation knowledge makes this reuse possible.},
  doi       = {10.1109/ICAC.2004.1301377},
  groups    = {ieee},
  keywords  = {software architecture;adaptive systems;closed loop systems;system monitoring;software reusability;Rainbow;architecture-based self-adaptation;reusable infrastructure;software-based systems;resource variability;system faults;closed-loop control;adaptation strategies;Engines;Probes;Computer science;Computerized monitoring;Environmental management;Control systems;Runtime;Architecture description languages;Aggregates},
}

@InProceedings{Weyns2015,
  author    = {D. {Weyns} and R. {Calinescu}},
  title     = {Tele Assistance: A Self-Adaptive Service-Based System Exemplar},
  booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2015},
  pages     = {88-92},
  month     = {May},
  abstract  = {Research on adaptive and self-managing systems is hindered by a lack of prototypical applications that researchers could use to evaluate and compare new methods, techniques and tools. To address this limitation, we introduce a reference implementation of a Tele Assistance System (TAS) for research on self-adaptation in the domain of service-based systems. Our TAS exemplar of service-based systems comes with pre-defined scenarios for comparing the effectiveness of different self-adaptation solutions. Other researchers can easily exploit the underlying service platform, reusable components and development method we devised for TAS to speed up the engineering of additional research exemplars for service-based systems.},
  doi       = {10.1109/SEAMS.2015.27},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {fault tolerant computing;telemedicine;self-adaptive service-based system examplar;self-managing systems;adaptive systems;prototypical applications;tele assistance system;TAS;self-adaptation solutions;service platform;service-based systems;Reliability;Adaptive systems;Quality of service;Software engineering;Probes;Measurement;Uncertainty;self-adaptation;artifact;service-based system;tele assistance},
}

@InProceedings{Peng2008,
  author    = {P. {Peng} and G. {Zhang}},
  title     = {Optimal PID Control of Self-Adapted Ant Colony Algorithm Based on Genetic Gene},
  booktitle = {2008 International Conference on Computer Science and Software Engineering},
  year      = {2008},
  volume    = {1},
  pages     = {1142-1145},
  month     = {Dec},
  abstract  = {Ant colony algorithm is a brand-new type of simulate evolution algorithm, which focus on its solution to assembled optimized question. The author utilizes this algorithm to optimize PID control parameter, but in basic ant colony algorithm, there are some defects of slow convergence speed, easy to get stagnate, and low ability of full search. This paper presents a method of optimized PID control of self-adapted ant colony algorithm based on genetic gene and design out the parameter optimized diagram. This method not only overcome the shortage of ant colony algorithm, but also perfectly realize the optimization of PID control parameter. The result of simulation experiments which compare to the result of Z-N optimization and evolution of genetic algorithm optimization have been greatly improved. The experiments show that this method have its practical value on controlling other objection and process.},
  doi       = {10.1109/CSSE.2008.760},
  groups    = {ieee},
  keywords  = {genetic algorithms;optimal control;three-term control;optimal PID control;self-adapted ant colony algorithm;genetic gene;genetic algorithm optimization;Three-term control;Optimal control;Genetics;Cities and towns;Ant colony optimization;Software algorithms;Proportional control;Intelligent control;Design optimization;Computer science;Genetic gene;Ant colony algorithm;Information element;PID control},
}

@InProceedings{Xiang2008,
  author    = {L. {Xi'ang} and X. {Jinsong} and Y. {Donghe} and L. {Yingchun}},
  title     = {Cocoon Edge Detection based on Self-Adaptive Canny Operator},
  booktitle = {2008 International Conference on Computer Science and Software Engineering},
  year      = {2008},
  volume    = {6},
  pages     = {7-10},
  month     = {Dec},
  abstract  = {To overcome the problems of detecting the fake edge as well as losing local edge arising from the detection of the cocoon edge by Canny operator, a new method is proposed in this paper to adaptively determine the high and low thresholds of Canny operator using exponential entropy by the edge gradient feature of the cocoon image. Experimental results show that the edge obtained by using the self-adaptive Canny operator has better connectivity, higher positioning precision and stronger anti-noise capability, and consequently, improved automation of cocoon edge detection, compared with traditional edge detecting methods such as Roberts operator, Sobel operator and Prewitt operator.},
  doi       = {10.1109/CSSE.2008.1046},
  groups    = {ieee},
  keywords  = {edge detection;entropy;feature extraction;image denoising;cocoon edge detection;self-adaptive Canny operator;exponential entropy;edge gradient feature;antinoise capability;Image edge detection;Entropy;Electronic mail;Filters;Testing;Computer science;Software engineering;Information systems;Detectors;Information filtering},
}

@InProceedings{Zhu2008,
  author    = {H. {Zhu} and Y. {Liang} and Y. {Zhang}},
  title     = {Description Logic-Based Web Service Self-Adaptation Strategy Representation},
  booktitle = {2008 International Conference on Computer Science and Software Engineering},
  year      = {2008},
  volume    = {1},
  pages     = {1146-1149},
  month     = {Dec},
  abstract  = {Method of representation for Web service self-adaptation strategy is studied. By this method, description logic is exploited to support the modeling of self-adaptation strategies. The framework of description logic-based adaptation strategy representation is presented with syntax and semantics. Examples are given to show the formalization of self-adaptation strategy. Furthermore, self-adaptation strategy reasoning using description logic is introduced, which mainly includes self-adaptation strategy subsumption reasoning and realization reasoning. Three different subsumptions between strategies suitable for different tasks are identified: abstraction subsumption, goal subsumption, and applicability subsumption. The proposed way has the potential to provide a formal and semantically rich representation for self-adaptation strategy.},
  doi       = {10.1109/CSSE.2008.1214},
  groups    = {ieee},
  keywords  = {formal logic;inference mechanisms;Web services;description logic;Web service;self-adaptation strategy representation;subsumption reasoning;realization reasoning;abstraction subsumption;goal subsumption;applicability subsumption;Web services;Logic;Educational institutions;Information science;Costs;Runtime;Computer science;Software engineering;Agricultural engineering;Statistics},
}

@InProceedings{Dongyuan2007,
  author    = {G. {Dongyuan} and J. {Shousheng}},
  title     = {Self-Adaptive PD Control of Robot Manipulator},
  booktitle = {Eighth ACIS International Conference on Software Engineering, Artificial Intelligence, Networking, and Parallel/Distributed Computing (SNPD 2007)},
  year      = {2007},
  volume    = {1},
  pages     = {605-610},
  month     = {July},
  abstract  = {In the first place mathematic model of manipulator is established according to the dynamic theories. Then self-adaptive PD controller is designed in lined with its disturbance's supremum which is not ascertain. The self-adaptive PD controller could make the systems' PD feedback control take main effects, which could avoid too large initial torque while the initial errors is large at first, while the disturbances errors decrease the self-adaptive controller take predominance acts to make the systems have good dynamic performances.},
  doi       = {10.1109/SNPD.2007.355},
  groups    = {ieee},
  keywords  = {adaptive control;control system synthesis;feedback;manipulators;PD control;self-adjusting systems;torque control;self-adaptive PD control;robot manipulator;PD feedback control;disturbances errors;self-adaptive controller;PD control;Manipulator dynamics;Torque control;Control systems;Error correction;Software engineering;Artificial intelligence;Distributed computing;Intelligent robots;Parallel robots;Robot;Self-adaptive PD Controller;Manipulator;Lyapunov Function.},
}

@InProceedings{Yonbawi2018,
  author    = {S. {Yonbawi} and R. {Calinescu}},
  title     = {Towards Self-Adaptive Systems with Hierarchical Decentralised Control},
  booktitle = {2018 IEEE 3rd International Workshops on Foundations and Applications of Self* Systems (FAS*W)},
  year      = {2018},
  pages     = {14-16},
  month     = {Sep.},
  abstract  = {Self-adaptive systems reconfigure dynamically in response to deviations such as component failures and environmental changes. Such systems are increasingly found in domains including healthcare, transportation, and e-commerce. Many of these systems are inherently distributed, with multiple components running on different computers or devices. Despite recent advances in the engineering of self-adaptive systems, many open challenges remain in this area. This doctoral research focuses on engineering distributed self-adaptive systems that can provide assurance in meeting their requirements.},
  doi       = {10.1109/FAS-W.2018.00017},
  groups    = {ieee},
  keywords  = {adaptive systems;control engineering computing;decentralised control;electronic commerce;health care;multi-agent systems;reconfigurable architectures;self-adjusting systems;towards self-adaptive systems;hierarchical decentralised control;component failures;environmental changes;engineering distributed self-adaptive systems;Task analysis;Robots;Decentralized control;Software;Runtime;Adaptive systems;self-adaptive;decentralised control;cyber physical system;runtime verification},
}

@InProceedings{Vassev2008,
  author    = {E. {Vassev} and M. {Hinchey}},
  title     = {An Emergent Self-Adapting Behavior Model for NASA Swarm-Based Exploration Missions},
  booktitle = {2008 Second IEEE International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2008},
  pages     = {473-474},
  month     = {Oct},
  abstract  = {We describe a biologically-inspired approach to modeling self-adapting behavior for NASA swarm-based exploration missions, whereby individuals can sacrifice themselves for the greater good of the entire system. Our approach is inspired by the self-sacrifice behavior observed in some hive cultures.},
  doi       = {10.1109/SASO.2008.22},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {aerospace engineering;emergent phenomena;self-adjusting systems;emergent self-adapting behavior model;NASA swarm-based exploration missions;biologically-inspired approach;self-sacrifice behavior;hive cultures;NASA;Space vehicles;Insects;Software engineering;Humans;Biological system modeling;Protection;Signal processing;Educational institutions;Performance gain;biologically-inspired;self-adapting;swarm;nasa},
}

@InProceedings{Tao2009,
  author    = {Y. {Tao} and S. {Zhang}},
  title     = {Dormancy Scheduling Algorithm Based on Node's Self-Adaptive Density in WSN},
  booktitle = {2009 Fifth International Joint Conference on INC, IMS and IDC},
  year      = {2009},
  pages     = {494-500},
  month     = {Aug},
  abstract  = {This paper will firstly analyze Ditian algorithm and Chi-fu Huang algorithm, pointing out the advantages and disadvantages for both of them, then propose a new algorithm called DSA combining the two algorithms, which can self-adapt its algorithm complexity and communication cost based on the density variation for the nodes in the network.},
  doi       = {10.1109/NCM.2009.174},
  groups    = {ieee},
  keywords  = {communication complexity;scheduling;wireless sensor networks;dormancy scheduling algorithm;self-adaptive density;wireless sensor network;Ditian algorithm;Chi-fu Huang algorithm;algorithm complexity;communication cost;density variation;network nodes;Scheduling algorithm;Wireless sensor networks;Costs;Algorithm design and analysis;Wireless application protocol;Energy consumption;Software algorithms;Broadcasting;Hardware;Mood;algorithm self-adaptive DSA},
}

@InProceedings{JiangTao2000,
  author    = {{Jiang Tao} and {Liu Ji-Ren} and {Qin Yang}},
  title     = {The research on dynamic self-adaptive network security model based on mobile agent},
  booktitle = {Proceedings 36th International Conference on Technology of Object-Oriented Languages and Systems. TOOLS-Asia 2000},
  year      = {2000},
  pages     = {134-139},
  month     = {Oct},
  abstract  = {The rapid development and wide application of computer networks presents a new challenge to information security and network security. Traditional security models and single security technology cannot keep up with the change of complicated network structure and varied intrusion measures. Network security management based on policy has traits of low management cost, high agility and wide applicability. The mobile agent not only collects but also processes data, overcomes traditional agent's shortcomings, improves response and relieves network burden. This paper introduces network security management based on policy and a mobile agent into a new network security framework, and emphases its structure, control strategy and implementation.},
  doi       = {10.1109/TOOLS.2000.885909},
  groups    = {ieee},
  issn      = {1530-2067},
  keywords  = {telecommunication security;security of data;computer networks;distributed programming;software agents;Java;distributed object management;dynamic self-adaptive network security model;computer networks;information security;intrusion measures;network security management;cost;mobile agent;Java;Mobile agents;Information security;Data security;Technology management;National security;Computer network management;Costs;Access control;Authentication;Identity management systems},
}

@InProceedings{Saeed2018,
  author    = {A. A. A. {Saeed} and S. {Lee}},
  title     = {Non-functional Requirements Trade-Off in Self-Adaptive Systems},
  booktitle = {2018 4th International Workshop on Requirements Engineering for Self-Adaptive, Collaborative, and Cyber Physical Systems (RESACS)},
  year      = {2018},
  pages     = {9-15},
  month     = {Aug},
  abstract  = {Context and Motivation: Non-Functional Requirements (NFR) play a crucial role during the software development process. Currently, Non-Functional Requirements considered to be more important than Functional Requirements and can determine the success of the software system. Non-Functional Requirements can be very complicated to understand due to their subjective manner and especially their conflicting nature. Many approaches and techniques have been introduced to manage the conflicts between multiple Non-functional Requirements and to analyze the trade-off in costs and benefits between the alternative solutions that satisfy them. Problem: Self-Adaptive Systems tends to change its behavior and configurations due to the changes in its environment. Current solutions might not be suitable for the current situations, because current approaches managing Non-Functional Requirements trade-off stops managing them during the system runtime. Approach and Objective: In this paper, we investigated the trade-offs between multiple Non-Functional Requirements in Self-Adaptive Systems. We fragmentized the NonFunctional Requirements and its alternative solutions in form of Multi-entity Bayesian network fragments. As a result, when changes occur, our system creates a situation specific Bayesian network to measure the impact of the system's conditions and environmental changes on the Non-Functional Requirements satisfaction. Furthermore, it dynamically decides which alternative solution is suitable for the current situation.},
  doi       = {10.1109/RESACS.2018.00007},
  groups    = {ieee},
  keywords  = {adaptive systems;belief networks;software engineering;nonfunctional requirements trade-off;self-adaptive systems;software development process;multi entity bayesian network fragments;Bayes methods;Probabilistic logic;Uncertainty;Monitoring;Synthetic aperture sonar;Random variables;Software;Goal model;Non Functional Requirements trade-off;Multi-entity Bayesian network;Self-Adaptive Systems;Uncertainty},
}

@InProceedings{Sen2015,
  author    = {S. {Sen} and S. D. {Alesio} and D. {Marijan} and A. {Sarkar}},
  title     = {Evaluating Reconfiguration Impact in Self-Adaptive Systems -- An Approach Based on Combinatorial Interaction Testing},
  booktitle = {2015 41st Euromicro Conference on Software Engineering and Advanced Applications},
  year      = {2015},
  pages     = {250-254},
  month     = {Aug},
  abstract  = {Self-adaptive software adapts its behavior to the operational context via automatic run-time reconfiguration of software components. Particular reconfigurations may negatively affect the system Quality of Service (QoS), and therefore their impact over the system performance needs to be thoroughly evaluated. In this paper, we present an approach, based on Combinatorial Interaction Testing (CIT), that generates a sequence of configurations aimed at evaluating the extent to which reconfigurations affect the system QoS. Specifically, we transform a Classification Tree Models (CTM) of the configurations domain to a Constraint Satisfaction Problem (CSP) in ALLOY, whose solution is a sequence of reconfigurations achieving T-wise coverage between system features, and R-wise coverage between configurations in the sequence. The resolution of the CSP is performed by an incremental growth algorithm that divides the generation of the sequence into sub-problems, and merges the results into a final set of test configurations. Preliminary validation in a self adaptive vision system shows that our methodology effectively identifies critical reconfigurations exhibiting a high variation in QoS. This result encourages the use of CIT as a strategy to evaluate the performance of self-adaptive systems.},
  doi       = {10.1109/SEAA.2015.72},
  groups    = {ieee},
  issn      = {2376-9505},
  keywords  = {constraint satisfaction problems;program testing;software performance evaluation;software quality;trees (mathematics);self-adaptive system;combinatorial interaction testing;self-adaptive software;behavior adaptation;automatic run-time reconfiguration;software components;system quality of service;system QoS;system performance evaluation;CIT;classification tree model;CTM;constraint satisfaction problem;CSP;ALLOY;T-wise coverage;system features;R-wise coverage;incremental growth algorithm;self adaptive vision system;critical reconfigurations;Metals;Quality of service;Software;Testing;Adaptive systems;Runtime;Adaptation models;self-adaptive sytems;combinatorial interaction coverage;classification tree modeling;reconfiguration impact;qos evaluation;performance testing},
}

@InProceedings{Fuller2015,
  author    = {T. R. {Fuller} and G. E. {Deane}},
  title     = {Creating Complex Applications via Self-Adapting Autonomous Agents in an Intelligent System Framework},
  booktitle = {2015 IEEE 9th International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2015},
  pages     = {164-165},
  month     = {Sep.},
  abstract  = {In this paper, we present a process, developed over years of practical commercial use, where applications accomplishing a wide variety of complex tasks are created from a common framework, through the use, recombination and iterative refinement of autonomous agents in a Multi-Agent Intelligent System. Driven by a need to solve real-world problems, our focus is to make businesses run more efficiently in an increasingly complex world of systems and software that must work together seamlessly. By listening closely to our customers' problems, we discovered points of commonality, as well as patterns of anomalies related to the flow of data through communication channels and data processing systems, include accounting, inventory, customer relationship management, scheduling systems and many more. We solved their problems through the creation of an Intelligent System, where we defined and implemented software agents that were highly configurable, responsive in real-time and useable in various settings. Autonomous agents adhere to a standard format of three major components: the goal or triggering criteria, the action, and the adaptation response. Agents run within a common Intelligent System framework and agent libraries provide a vast set of component behaviors to build applications from. Agents have one or more of the following component behaviors: sensory aware, geo-position aware, temporally aware, API aware, device aware, and many more. Additionally, there are manager-level agents whose goal is to keep the overall system in balance, through dynamic resource allocation on a system level. To prove the viability of this process, we present a variety of applications representing wide ranging behaviors, many with overlapping agents, created via this approach, all of which are in active commercial use. Finally, we discuss future enhancements toward self-organization, where end users express their requirements declaratively to solve larger business needs, resulting in the automatic instantiation of a solution specific intelligent system.},
  doi       = {10.1109/SASO.2015.27},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {application program interfaces;business data processing;customer relationship management;multi-agent systems;resource allocation;scheduling;software agents;complex applications;self-adapting autonomous agents;intelligent system framework;iterative refinement;multiagent intelligent system;businesses;customer relationship management;scheduling systems;software agents;agent libraries;component behaviors;sensory aware behavior;geo-position aware behavior;temporally aware behavior;API aware behavior;device aware behavior;manager-level agents;dynamic resource allocation;business needs;solution specific intelligent system;Conferences;multi-agent intelligent system;autonomous agent;dynamic processing;application framework;artificial intelligence;automated integration;resource allocation},
}

@InProceedings{Chun2011,
  author    = {I. {Chun} and H. {Lee} and W. {Kim} and S. {Park} and E. {Lee}},
  title     = {Smart Home Service Robot applying self-adaptation technologies},
  booktitle = {2011 IEEE International Conference on Consumer Electronics (ICCE)},
  year      = {2011},
  pages     = {853-854},
  month     = {Jan},
  abstract  = {Smart Home Service Robot(S-HSR) is a robot used for household chores on behalf of human. Human desires to get free of household affairs have increased the necessity of S-HSR. In the near future, every home will at least possess and use more than one S-HSR[1].},
  doi       = {10.1109/ICCE.2011.5722901},
  groups    = {ieee},
  issn      = {2158-4001},
  keywords  = {adaptive control;home automation;human-robot interaction;service robots;smart home service robot;self-adaptation technology;S-HSR;household chore;Consumer electronics;Conferences},
}

@InProceedings{DingXiao2015,
  author    = {{Ding Xiao} and {Xu Li} and {Xiuqin Lin} and {Chuan Shi}},
  title     = {A time Series Prediction method based on self-adaptive RBF neural network},
  booktitle = {2015 4th International Conference on Computer Science and Network Technology (ICCSNT)},
  year      = {2015},
  volume    = {01},
  pages     = {685-688},
  month     = {Dec},
  abstract  = {Time Series Prediction is widely used in our daily life. We propose a forecasting method based on RBF neural network for time series prediction in this paper. This approach consists of two phases, training phase and working phase. During training phase, we integrate subtractive clustering method and k-means method to generate the centers of RBF neural network, which can cover the shortage of only using k-means method. Then we use orthogonal least squares method to calculate the weight for the output layer. And during the working phase, we bring in a performance evaluation mechanism to determine whether to update the training set or not. If the output data of the network do not perform well, then we put the relative input data into training set and go back to the training phase to reconstruct the network. The experiment shows that this approach improves the prediction accuracy than the traditional method only using k-means to train the network, and it makes the RBF neural network has the ability to change with different input data.},
  doi       = {10.1109/ICCSNT.2015.7490837},
  groups    = {ieee},
  keywords  = {least squares approximations;mathematics computing;pattern clustering;radial basis function networks;time series;training set;relative input data;performance evaluation mechanism;output layer;orthogonal least squares method;k-means method;subtractive clustering method;working phase;training phase;forecasting method;self-adaptive RBF neural network;time series prediction method;Neural networks;Training;Clustering methods;Neurons;Time series analysis;Performance evaluation;Computational modeling;time series prediction;hybrid clustering;self-adaptive;rbf neural network},
}

@InProceedings{Sun2017,
  author    = {W. {Sun} and Y. {Xing} and C. {Zhou} and S. {Zhang}},
  title     = {QSACO: A QoS-Based Self-Adapted Ant Colony Optimization},
  booktitle = {2017 5th IEEE International Conference on Mobile Cloud Computing, Services, and Engineering (MobileCloud)},
  year      = {2017},
  pages     = {157-160},
  month     = {April},
  abstract  = {Unmanned aerial vehicles have some characteristics such as strong flexibility and lower costs that are suitable for capturing information in special scenarios and environments. Collaborative working of multi-UAV system is an important performance metric for mobile computing in wireless networks. Ant Colony Algorithm is a dynamic path selecting optimization algorithm and it can be used in multi-UAV system to adapt dynamic situations. An improved ACO based on PSO algorithm called QSACO is proposed to dynamically adjust the parameters of ACO and to ensure the users' QoS demands. To solve the high-computing-acquirement problems of QSACO, the proposed method could be used in the mobile cloud environment.},
  doi       = {10.1109/MobileCloud.2017.25},
  groups    = {ieee},
  keywords  = {ant colony optimisation;autonomous aerial vehicles;multi-robot systems;path planning;quality of service;QoS-based self-adapted ant colony optimization;unmanned aerial vehicles;multiUAV system;performance metric;dynamic path selecting optimization algorithm;improved ACO;PSO algorithm;QSACO;Quality of service;Heuristic algorithms;Algorithm design and analysis;Mobile communication;Cloud computing;Ad hoc networks;Simulation;multi-UAV system;self-adaptive;QSACO;mobile cloud},
}

@InProceedings{Lu2013,
  author    = {F. {Lu} and B. {Shen} and J. {Lin} and H. {Zhang}},
  title     = {A Method of SNS Topic Models Extraction Based on Self-Adaptively LDA Modeling},
  booktitle = {2013 Third International Conference on Intelligent System Design and Engineering Applications},
  year      = {2013},
  pages     = {112-115},
  month     = {Jan},
  abstract  = {While SNS(Social Network Services) playing an increasingly important role in today's online world, SNA(Social Network Analysis) and text mining based on such communication are becoming more and more useful for a wide variety of applications. However, topic models, which have been widely used in information classification and retrieval, are not proper for some SNS such as microblogging. Moreover, It is also quite important but difficult to select topic number for a specific target. In this paper, first we present a new evaluation metric for topic models extraction from SNS dataset. Then, by combining LDA modeling with this metric, a self-adaptively LDA modeling method is proposed. Experiments were successfully performed, and the results show that the proposed LDA modeling method can self-adaptively reach the appropriate number of social topics without losing performance for microblogging-like dataset.},
  doi       = {10.1109/ISDEA.2012.34},
  groups    = {ieee},
  keywords  = {data mining;social networking (online);text analysis;SNS topic model;social network service;self-adaptively LDA modeling;SNA;social network analysis;text mining;microblogging;information classification;information retrieval;social topic;SNS dataset;latent Dirichlet allocation;topic model extraction;Measurement;Communities;Adaptation models;Security;Social network services;Semantics;Probabilistic logic;SNS;Latent Dirichlet Allocation;Topic Models;Microblogging;Density},
}

@InProceedings{Price2001,
  author    = {E. J. {Price} and S. {Reece} and P. {Probert-Smith}},
  title     = {Statistical signatures for self-adaptive sensing},
  booktitle = {Conference Documentation International Conference on Multisensor Fusion and Integration for Intelligent Systems. MFI 2001 (Cat. No.01TH8590)},
  year      = {2001},
  pages     = {141-146},
  month     = {Aug},
  abstract  = {Designing signal processing software is difficult. it is difficult because the world is unpredictable and it is impossible to guarantee software reliability in unforeseen circumstances. Further, it is difficult to anticipate sensor behaviour, as ambient conditions-for example, lighting or weather, can affect the data they output in a multitude of ways. Autonomous, on-line, self-adaptive image processing software is required, that can be adjusted when novel sensing environments are encountered. The appropriate choice of sensor and signal processing tools is a matter of context and the contextual consensus that is available within the framework of a multiple sensor system.},
  doi       = {10.1109/MFI.2001.1013522},
  groups    = {ieee},
  keywords  = {sensor fusion;adaptive systems;statistical analysis;online operation;image processing;statistical signatures;self-adaptive sensing;signal processing software design;ambient conditions;autonomous online self-adaptive image processing software;signal processing tools;contextual consensus;multiple sensor system;Sensor systems;Signal processing algorithms;Sensor phenomena and characterization;Signal processing;Adaptive signal processing;Robot sensing systems;Reliability engineering;Design engineering;Software design;Process design},
}

@InProceedings{Villarreal-Vasquez2017,
  author    = {M. {Villarreal-Vasquez} and B. {Bhargava} and P. {Angin} and N. {Ahmed} and D. {Goodwin} and K. {Brin} and J. {Kobes}},
  title     = {An MTD-Based Self-Adaptive Resilience Approach for Cloud Systems},
  booktitle = {2017 IEEE 10th International Conference on Cloud Computing (CLOUD)},
  year      = {2017},
  pages     = {723-726},
  month     = {June},
  abstract  = {Advances in cloud computing have made it a feasible and cost-effective solution to improve the resiliency of enterprise systems. However, the replication approach taken by cloud computing to provide resiliency leads to an increase in the number of ways an attacker can exploit or penetrate the systems. This calls for designing cloud systems that can accurately detect anomalies and dynamically adapt themselves to keep performing mission-critical functions even under attacks and failures. In this paper, we propose a self-adaptive resiliency approach for cloud enterprise systems that employs a live monitoring and moving target defense based approach to automatically detect deviations from normal behavior and reconfigure critical cloud processes through software-defined networking to mitigate attacks and reduce system downtime. The proposed solution is promising to present a unified framework for resilient cloud systems.},
  doi       = {10.1109/CLOUD.2017.101},
  groups    = {ieee},
  issn      = {2159-6190},
  keywords  = {business data processing;cloud computing;security of data;software defined networking;self-adaptive resilience approach;cloud computing;feasible cost-effective solution;replication approach;resiliency leads;self-adaptive resiliency approach;cloud enterprise systems;live monitoring;moving target defense based approach;critical cloud processes;system downtime;resilient cloud systems;MTD;anomaly detection;software-defined networking;Cloud computing;Monitoring;Virtual machining;Tools;Security;Anomaly detection;Electronic mail;moving target defense;resiliency;adaptability;cloud security},
}

@InProceedings{Stefanec2001,
  author    = {M. {Stefanec} and I. {Benc} and S. {Srbljic}},
  title     = {Hybrid self-adaptive WWW cache coherence protocol (hSATTL): improving the coherence of WWW objects},
  booktitle = {EUROCON'2001. International Conference on Trends in Communications. Technical Program, Proceedings (Cat. No.01EX439)},
  year      = {2001},
  volume    = {2},
  pages     = {297-300 vol.2},
  month     = {July},
  abstract  = {Proxy caches in classical server-client architecture may decrease the amount of data transfer and reduce network congestion, hut they also impose a cache-coherence problem. Objects replicated in proxy caches must be kept coherent. Although various protocols for maintaining cache coherence in the World Wide Web (WWW) have been introduced, there does not exist a highly efficient solution to the coherence problem. We have designed a new hybrid self-adaptive protocol (hSATTL) for maintaining cache coherence. The protocol dynamically switches between three basic cache coherence mechanisms: server-oriented write-invalidate, server-oriented write-update, and proxy-oriented time-to-live (TTL). We describe the implementation of the hSATTL protocol and compare it to other currently used protocols. In order to perform measurements, we also develop a special software package. As performance measures, we use the level of coherence maintained by the protocols and the amount of network traffic generated by the protocols in order to maintain cache coherence.},
  doi       = {10.1109/EURCON.2001.938118},
  groups    = {ieee},
  keywords  = {memory protocols;Internet;client-server systems;software packages;hybrid self-adaptive protocol;WWW;cache coherence protocol;hSATTL;object coherence;proxy caches;server-client architecture;World-Wide Web;server-oriented write-invalidate mechanism;server-oriented write-update mechanism;proxy-oriented time-to-live mechanism;software package;network traffic;World Wide Web;Protocols;Coherence;Telecommunication traffic;IP networks;Network servers;Web server;Computer networks;Computer architecture;Web sites},
}

@InProceedings{Ahmed2013,
  author    = {Y. E. E. {Ahmed} and B. A. {Mohamed} and S. O. A. {Alzubaidi} and Y. {Mohamed} and M. M. G. H. {Khamisi}},
  title     = {Design and test of a USB/Bluetooth/IP self-adaptive connector for sensor network application},
  booktitle = {2013 INTERNATIONAL CONFERENCE ON COMPUTING, ELECTRICAL AND ELECTRONIC ENGINEERING (ICCEEE)},
  year      = {2013},
  pages     = {168-171},
  month     = {Aug},
  abstract  = {This research work provides a simple programmable interconnection medium to be used as sensor node in sensor network with the capability to adapt itself according to the network coverage and resources available or selected: either USB, Bluetooth network or IP network. Microcontroller, USB modules, Bluetooth module internet module and temperature sensor used for system test in addition to C programming language editor used for test software development. The developed system successfully detects and responds via these techniques. Therefore, it can be used in monitoring and measuring medical systems in addition to wide area monitoring and control sensor networks with different communication techniques.},
  doi       = {10.1109/ICCEEE.2013.6633926},
  groups    = {ieee},
  keywords  = {automatic test software;Bluetooth;C language;distributed sensors;electric connectors;Internet;peripheral interfaces;sensor network application;programmable interconnection medium;sensor node;network coverage;IP network;microcontroller;USB modules;Bluetooth module;Internet module;temperature sensor;C programming language editor;test software development;medical system measurement;medical system monitoring;control sensor networks;communication techniques;Bluetooth connector;IP self-adaptive connector;USB connector;Bluetooth;Universal Serial Bus;Robot sensing systems;IP networks;Wireless sensor networks;Connectors;Internet;Monitoring;telemedicine;arduino;Bluetooth;USB;Internet protocol;self adaptive},
}

@InProceedings{Han2006,
  author    = {S. {Han} and S. {Zhang} and Y. {Zhang}},
  title     = {Self-Adaptive Pervasive Computing Application Based on Code Mobility},
  booktitle = {2006 2nd IEEE International Symposium on Dependable, Autonomic and Secure Computing},
  year      = {2006},
  pages     = {145-154},
  month     = {Sep.},
  abstract  = {A traditional application with only one design paradigm can not well adapt to the constant variations of contexts and user preferences in pervasive computing. In this paper, we argue that a pervasive computing application should support multiple design paradigms and present an approach to dynamically selecting the most appropriate paradigm at runtime according to environmental changes. Based on analyzing the characteristics of adaptive software architecture, this paper presents the general paradigm selection rules which can be combined with the specific context to automatically or semi-automatically create the applicable software (re)configuration strategies. For mobile components paradigm, a novel heuristic software partitioning algorithm is proposed to reasonably allocate a pervasive computing application among machines for resource conservation. Finally, we discuss a case study that demonstrates the flexibility and effectiveness of our approach},
  doi       = {10.1109/DASC.2006.43},
  groups    = {ieee},
  keywords  = {self-adjusting systems;software architecture;ubiquitous computing;selfadaptive pervasive computing;code mobility;adaptive software architecture;software reconfiguration;software partitioning algorithm;Pervasive computing;Application software;Software architecture;Java;Mobile computing;Runtime environment;Partitioning algorithms;Distributed computing;Mobile agents;Computer networks;Design Paradigm;Dynamic Selection;Pervasive Computing;Software Architecture},
}

@InProceedings{Xia2008a,
  author    = {X. {Xia} and B. {Cao}},
  title     = {The Self-Adaptive Design Model of Architecture-Centric Granularity Service Cluster},
  booktitle = {2008 International Symposium on Intelligent Information Technology Application Workshops},
  year      = {2008},
  pages     = {979-982},
  month     = {Dec},
  abstract  = {This paper discusses architecture-centric concept. For its adaptive all-purpose demand, decision-making and belief mechanism of agent is put forward, whose logic relations will be built. According to self-adaptive agent network mechanism, fine-grained service and coarse-grained service defined specifically. By AA/TT engine's topology process, service clusters are selected and optimized as agent group, that is implemented in architecture supported by Variation Facade.},
  doi       = {10.1109/IITA.Workshops.2008.79},
  groups    = {ieee},
  keywords  = {belief maintenance;decision making;fault tolerant computing;multi-agent systems;software architecture;self-adaptive agent design model;architecture-centric granularity service cluster;decision-making;belief mechanism;fine-grained service;coarse-grained service;Decision making;Logic;Engines;Computer architecture;System buses;Encapsulation;Information technology;Application software;Computer science;Educational institutions;Architecture-centric;Agent;Facade Mode;Trusted Customer;Granularity;Service Cluster;Agent Group},
}

@InProceedings{Moghaddam2017a,
  author    = {F. A. {Moghaddam} and M. {Simaremare} and P. {Lago} and P. {Grosso}},
  title     = {A self-adaptive framework for enhancing energy efficiency in mobile applications},
  booktitle = {2017 Sustainable Internet and ICT for Sustainability (SustainIT)},
  year      = {2017},
  pages     = {1-3},
  month     = {Dec},
  abstract  = {Nowadays, many software applications are executed in mobile devices. This poses new challenges on optimizing the limited capacity set by battery life without compromising energy efficiency and performance. In this paper, we propose a framework for mobile applications to enable and evaluate self-adaptability for the purpose of improving energy efficiency without sacrificing performance. Our framework consists of two main parts: the mobile apps simulator and the scheduler.},
  doi       = {10.23919/SustainIT.2017.8379811},
  groups    = {ieee},
  keywords  = {energy conservation;mobile computing;power aware computing;mobile apps;self-adaptive framework;mobile applications;software applications;mobile devices;battery life;energy efficiency enhancement;Mobile handsets;Network interfaces;Mobile applications;Runtime;Computational modeling;Energy consumption;Monitoring},
}

@InProceedings{Lee2019a,
  author    = {S. {Lee} and S. {Park} and Y. B. {Park}},
  title     = {Self-Adaptive System Verification based on SysML},
  booktitle = {2019 International Conference on Electronics, Information, and Communication (ICEIC)},
  year      = {2019},
  pages     = {1-3},
  month     = {Jan},
  abstract  = {In the development of current technology, systems are being used in various fields. The system may be newly configured depending on the environment, and may be added to the existing environment. There are also cases where the systems need to collaborate with each other due to environmental changes. Especially, in real-time systems, it is necessary to cope with continuously changing environment. And, you should check whether the result of the correspondence adversely affects other systems. Recognition requirements engineering has been studied for self-adaptive system configuration. A variety of self-adaptation frameworks have also been studied. Formal verification techniques are also being studied to verify the self-adaptive system. However, there is a lack of research to verify self-adaptive systems based on requirements. In this paper, we propose a self-adaptive system verification scheme using Requirement Diagram and State Diagram used in SysML. Requirement analysis contents are expressed as Requirement Diagram and system state information is displayed as State Diagram to establish the basis for verifying whether the requirements are functionally satisfied. Also, based on the Awareness Requirement, the requirements specification technique is used to provide a basis for expressing non-functional requirements.},
  doi       = {10.23919/ELINFOCOM.2019.8706383},
  groups    = {ieee},
  keywords  = {adaptive systems;formal specification;formal verification;program verification;real-time systems;SysML;systems analysis;requirements specification technique;SysML;environmental changes;recognition requirements engineering;self-adaptive system configuration;self-adaptation frameworks;formal verification techniques;self-adaptive system verification scheme;system state information;state diagram;awareness requirement;requirement diagram;requirement analysis contents;Unified modeling language;Adaptive systems;System verification;Embedded systems;Task analysis;Software engineering;Complex systems;SysML;Self-Adaptive;Verification;Requirement;Formal Verification},
}

@InProceedings{Abeywickrama2012,
  author    = {D. B. {Abeywickrama} and F. {Zambonelli} and N. {Hoch}},
  title     = {Towards Simulating Architectural Patterns for Self-Aware and Self-Adaptive Systems},
  booktitle = {2012 IEEE Sixth International Conference on Self-Adaptive and Self-Organizing Systems Workshops},
  year      = {2012},
  pages     = {133-138},
  month     = {Sep.},
  abstract  = {Novel models and tools are required to support the engineering of systems that are self-aware of their current situations and capable of dynamically modifying their behavior and structure using feedback loops. In this paper, with the help of a case study in the area of e-mobility and based on our past work in self-adaptive systems modeling, we introduce a new tool (i.e., an Eclipse-based simulation plug-in) that we are developing for engineering and simulating architectural patterns based on feedback loops. Our plug-in can facilitate modeling of self-adaptive patterns using UML 2, visual animation of behavior to expose run-time information, animating composite structure, model-level debugging, simulating event-driven models, and run-time prompting.},
  doi       = {10.1109/SASOW.2012.31},
  groups    = {ieee},
  keywords  = {computer animation;discrete event simulation;mobile computing;object-oriented methods;program debugging;software architecture;software tools;Unified Modeling Language;architectural pattern simulation;self-aware systems;self-adaptive systems;system engineering;feedback loops;e-mobility;Eclipse-based simulation plug-in;self-adaptive pattern modeling;UML 2;behavior visual animation;run-time information;composite structure animation;model-level debugging;event-driven model simulation;run-time prompting;architectural design patterns;software engineering;architectural design patterns;self-adaptive systems;self-aware systems;feedback loops;simulation;software engineering;UML},
}

@Article{delaIglesia2015,
  author   = {D. G. {de la Iglesia} and J. F. {Calder��n} and D. {Weyns} and M. {Milrad} and M. {Nussbaum}},
  title    = {A Self-Adaptive Multi-Agent System Approach for Collaborative Mobile Learning},
  journal  = {IEEE Transactions on Learning Technologies},
  year     = {2015},
  volume   = {8},
  number   = {2},
  pages    = {158-172},
  month    = {April},
  issn     = {1939-1382},
  abstract = {Mobile technologies have emerged as facilitators in the learning process, extending traditional classroom activities. However, engineering mobile learning applications for outdoor usage poses severe challenges. The requirements of these applications are challenging, as many different aspects need to be catered, such as resource access and sharing, communication between peers, group management, activity flow, etc. Robustness is particularly important for learning scenarios to guarantee undisturbed and smooth user experiences, pushing the technological aspects in the background. Despite significant research in the field of mobile learning, very few efforts have focused on collaborative mobile learning requirements from a software engineering perspective. This paper focuses on aspects of the software architecture, aiming to address the challenges related to resource sharing in collaborative mobile learning activities. This includes elements such as autonomy for personal interactive learning, richness for large group collaborative learning (indoor and outdoor), as well as robustness of the learning system. Additionally, we present self-adaptation as a solution to mitigate risks of resource unavailability and organization failures that arise from environment and system dynamism. Our evaluation provides indications regarding the system correctness with respect to resource sharing and collaboration concerns, and offers qualitative evidence of self-adaptation benefits for collaborative mobile learning applications.},
  doi      = {10.1109/TLT.2014.2367493},
  groups   = {ieee},
  keywords = {engineering education;mobile learning;multi-agent systems;resource allocation;software architecture;self-adaptive multiagent system approach;engineering mobile learning applications;outdoor usage;resource sharing;software engineering perspective;collaborative mobile learning requirements;software architecture;collaborative mobile learning activities;personal interactive learning;learning system;resource unavailability risks;organization failures;system dynamism;self-adaptation benefits;Mobile communication;Collaboration;Mobile handsets;Software;Robustness;Computer architecture;Performance evaluation;Mobile Learning;Software Architecture;Multi-Agent Systems;Self-Adaptation;Mobile learning;software architecture;multi-agent systems;self-adaptation},
}

@InProceedings{Perera2015,
  author    = {I. {Perera} and D. {Meedeniya} and M. {Bandara}},
  title     = {A traceability management framework for artefacts in self-adaptive systems},
  booktitle = {2015 IEEE 10th International Conference on Industrial and Information Systems (ICIIS)},
  year      = {2015},
  pages     = {37-42},
  month     = {Dec},
  abstract  = {We expect software systems to be dependable and sufficiently responsive to the inevitable changes regularly happen in their operational environments. This can be a challenging task to achieve when systems are in enterprise scale and large enough to cater for multiple complex business processes. One approach to address this is by incorporating suitable software process models and managing various artefacts within the process. However, once deployed, only maintenance of the software is viable through the process; it may not be sufficient for the needed changes due to the essential difficulties associated with software engineering. In order to overcome this challenge, self-adaptive systems with dynamically modifying architectures are becoming popular and sufficiently warrant for a mainstream practice in future. In light of these developments, we identified an important yet missing part in self-adaptive system engineering, i.e. artefact traceability management at runtime. This paper presents the research work on developing a generic traceability management toolkit with a traceability interlink visualizer aiding software engineers to explore artefact inconsistencies rapidly. The toolkit was then extended with a widely used self-adaptive system framework. The evaluation of the developed traceability management framework with a case system is presented.},
  doi       = {10.1109/ICIINFS.2015.7398982},
  groups    = {ieee},
  keywords  = {adaptive systems;software engineering;software management;systems engineering;generic traceability management toolkit;artefact traceability management;self-adaptive systems engineering;software engineering;software maintenance;software process model;multiple complex business processes;software system;traceability management framework;Software;Computer architecture;Unified modeling language;Runtime;Artificial intelligence;Visual databases;Visualization;Self-adaptive systems;Artefact consistency;Traceability management;Runtime traceability mapping},
}

@InProceedings{Wu2016,
  author    = {R. {Wu} and L. {Huang} and P. {Yu} and K. {Shen} and Q. {Shi} and H. {Zhou}},
  title     = {Meta-Model Evolution with Self-Adaptation: An Empirical Development Approach for Distributed Parallel Computing Framework},
  booktitle = {2016 IEEE Trustcom/BigDataSE/ISPA},
  year      = {2016},
  pages     = {2227-2234},
  month     = {Aug},
  abstract  = {Distributed parallel computing platform performs well in processing big data. However, due to the platform's complexity and distributed characteristics, it is hard to design and achieve. For example, during the platform's design phase, variations are unpredictable. To address these issues, a highly structured object-oriented framework for systematic modeling, which has high flexibility, reusability and maintainability, is needed. In this paper, we present and implement an empirical development approach to achieve the specific modeling framework, based on meta-model evolution with hot-spots (variable parts) recognition. Our work expands this idea into the following directions. Firstly, we define a generic and stable meta-model. We give out concept models, object models and dynamic models of main objects. General data partitioning, job division and inter-node communication mechanism are designed. Secondly, based on the meta-model, we complete framework's incremental adaptation using an iterative process according to design variations. Practical experience of our empirical case study shows, the approach gets a relatively mature framework for design theory instruction. The integrated framework clearly expresses main objects and their relationship. This work promotes the development of parallel computing framework to have a qualitative leap, and eventually have more extensive application and popularization of the established framework.},
  doi       = {10.1109/TrustCom.2016.0343},
  groups    = {ieee},
  issn      = {2324-9013},
  keywords  = {Big Data;object-oriented methods;parallel programming;software maintenance;software reusability;meta-model evolution;self-adaptation;distributed parallel computing;Big Data processing;object-oriented framework;systematic modeling;reusability;maintainability;hot-spots recognition;concept models;object models;dynamic models;data partitioning;job division;inter-node communication;incremental adaptation;iterative process;Parallel processing;Computational modeling;Object oriented modeling;Computer architecture;Unified modeling language;Software;Computers;big data processing;platform;distributed parallel computing;development approach;modeling;meta-model;evolution},
}

@InProceedings{Wu2012,
  author    = {X. {Wu} and Z. {Wang} and C. {Li}},
  title     = {A Novel Self-Adaptive Localization Scheme in Wireless Sensor Networks},
  booktitle = {2012 8th International Conference on Wireless Communications, Networking and Mobile Computing},
  year      = {2012},
  pages     = {1-4},
  month     = {Sep.},
  abstract  = {Node localization problem is crucial to many applications in wireless sensor networks (WSNs).A lot of researches have been done in finding range-based and range - free methods for localization in WSNs. Range-based methods estimate location more precisely than range-free methods. However, range-free methods are cost-effective and simpler to implement for resource constrained sensor nodes. In this paper, a novel self-adaptive localization scheme that combines range-based (RSSI) and range-free (DV-hop) algorithm for wireless sensor networks is proposed. First and foremost, we decide to make use of the RSSI or DV-hop according to the numbers of neighbor anchors; Secondly, in order to improve the accuracy of localization further, we need to choose some appropriate anchor nodes; Finally, the virtual anchors are utilized to improve the numbers of anchor nodes, which can enhance the efficient localization for the position nodes when the original anchors are sparse. This algorithm can not only combine the range-free and range-based advantages, but can locate nodes for nodes density sparse networks more effectively and enhance the localization accuracy.},
  doi       = {10.1109/WiCOM.2012.6478350},
  groups    = {ieee},
  issn      = {2161-9654},
  keywords  = {resource allocation;sensor placement;wireless sensor networks;self-adaptive node localization scheme;wireless sensor networks;WSN;range-based methods;range free methods;location estimation;resource constrained sensor nodes;RSSI algorithm;DV-hop algorithm;neighbor anchors;virtual anchors;nodes density sparse networks;Wireless sensor networks;Accuracy;Position measurement;Algorithm design and analysis;Wireless communication;Measurement uncertainty;Hardware},
}

@InProceedings{Zhou2010,
  author    = {J. {Zhou} and Z. {Ji} and W. {Huang} and T. {Tian}},
  title     = {Face Recognition Using Gabor Wavelet and Self-Adaptive Intelligent Single Particle Optimizer},
  booktitle = {2010 Chinese Conference on Pattern Recognition (CCPR)},
  year      = {2010},
  pages     = {1-5},
  month     = {Oct},
  abstract  = {A Gabor wavelet based face recognition algorithm of PSOGabor is introduced in this paper. By using particular Gabor filters in feature extraction on important region of face image, PSOGabor can attain more representative feature information with less processing time. To overcome the drawback of overly dependence on the input parameters in intelligent single particle optimizer (ISPO), an improved algorithm of self-adaptive ISPO (AdpISPO) is proposed in this paper. With no critical parameter required, AdpISPO can achieve higher performance than original algorithms. Experimental results demonstrated that, by employing AdpISPO in Gabor filters' selection, PSOGabor can attain higher recognition rate with less computational time.},
  doi       = {10.1109/CCPR.2010.5659208},
  groups    = {ieee},
  keywords  = {computational complexity;face recognition;feature extraction;Gabor filters;optimisation;wavelet transforms;face recognition;Gabor wavelet;selfadaptive intelligent single particle optimizer;Gabor filter;feature extraction;face image;input parameter;AdpISPO;PSOGabor;recognition rate;computational time;Face recognition;Particle swarm optimization;Kernel;USA Councils;Principal component analysis;Face},
}

@InProceedings{WuHuifeng2008,
  author    = {{Wu Huifeng} and {Yan Yi} and {Fu Chunjie}},
  title     = {Research on multi-voltage self-adaptive Low Voltage Disconnect based on fuzzy PWM},
  booktitle = {2008 IEEE International Conference on Industrial Technology},
  year      = {2008},
  pages     = {1-4},
  month     = {April},
  abstract  = {Presently low voltage disconnect (LVD) only fits single power system and drives a given rated voltage contactor, which limits the use of LVD. Furthermore, the LVD would misoperate because the contactor coil voltage is changed when the LVD input bus voltage is floating. Based on the researches on the voltages self-adaptation of LVD, a progressive scheme for driving contactor through pulse width modulation (PWM) fuzzy controlled is proposed. The LVD identifies the outside condition, i.e., the input bus voltage and the contactorpsilas rated voltage. Then the microcontroller of the LVD outputs relevant PWM to drive the contactor. As the input bus voltage would be influenced by the environmental factors, fuzzy arithmetic is applied. The new LVD can work in both 24 V and 48 V systems, and can drive different rated contactors. The application of fuzzy arithmetic stabilizes the coil voltage and protects the contactor from coming to harm. A multi-voltage self-adaptive LVD based on PIC is developed, and related experiment is accomplished. The results of the experiment show that the scheme solves the interchanging of the LVDs through their testing and applying, and improves the self-adaptation and the stability of the system greatly.},
  doi       = {10.1109/ICIT.2008.4608588},
  groups    = {ieee},
  keywords  = {fuzzy control;power system control;power system stability;pulse width modulation;multivoltage self-adaptive low voltage disconnect;fuzzy PWM;rated voltage contactor;LVD;contactor coil voltage;pulse width modulation;environmental factors;voltage 24 V;voltage 48 V;Pulse width modulation;Coils;Voltage control;Microcontrollers;Batteries;Fuzzy control;Power systems},
}

@Article{Xue2014,
  author   = {Y. {Xue} and Y. {Zhuang} and T. {Ni} and S. {Ni} and X. {Wen}},
  title    = {Self-adaptive learning based discrete differential evolution algorithm for solving CJWTA problem},
  journal  = {Journal of Systems Engineering and Electronics},
  year     = {2014},
  volume   = {25},
  number   = {1},
  pages    = {59-68},
  month    = {Feb},
  issn     = {1004-4132},
  abstract = {Cooperative jamming weapon-target assignment (CJWTA) problem is a key issue in electronic countermeasures (ECM). Some symbols which relevant to the CJWTA are defined firstly. Then, a formulation of jamming fitness is presented. Finally, a model of the CJWTA problem is constructed. In order to solve the CJWTA problem efficiently, a self-adaptive learning based discrete differential evolution (SLDDE) algorithm is proposed by introducing a self-adaptive learning mechanism into the traditional discrete differential evolution algorithm. The SLDDE algorithm steers four candidate solution generation strategies simultaneously in the framework of the self-adaptive learning mechanism. Computational simulations are conducted on ten test instances of CJWTA problem. The experimental results demonstrate that the proposed SLDDE algorithm not only can generate better results than only one strategy based discrete differential algorithms, but also outperforms two algorithms which are proposed recently for the weapon-target assignment problems.},
  doi      = {10.1109/JSEE.2014.00007},
  groups   = {ieee},
  keywords = {Jamming;Radar;Weapons;Next generation networking;Military equipment;Algorithm design and analysis;Electronic countermeasures;Learning systems;Computational modeling;global optimization;self-adaptive;discrete differential evolution;weapon-target assignment (WTA);cooperative jamming},
}

@InProceedings{Liang2011,
  author    = {M. {Liang} and J. {Du} and Y. {Yang}},
  title     = {Self-adaptive emergency topic tracking model based on CHI_LDA and timing characteristics},
  booktitle = {2011 4th IEEE International Conference on Broadband Network and Multimedia Technology},
  year      = {2011},
  pages     = {647-651},
  month     = {Oct},
  abstract  = {According to some flaws in the existing topic tracking methods, a new method of self-adaptive emergency topic tracking model based on CHI_LDA and timing characteristics is proposed in this paper. Apply the CHI_LDA method to establish the model for the news topics and reports, not only resolving the problems of high dimension and sparseness in the feature space and semantic relevance, but also improving the time efficiency for the LDA method to realize the semantic mapping of the feature space. Then establish the topic tracker combined with the news topic timing characteristics, and meanwhile realize the self-adaptive updating of the topic model so as to track the dynamic changes in topic. Experimental results indicate that this method of topic tracking has a better performance, further improving the effect of topic tracking.},
  doi       = {10.1109/ICBNMT.2011.6156015},
  groups    = {ieee},
  keywords  = {data mining;information retrieval;probability;self-adaptive emergency topic tracking model;CHI_LDA;space relevance;semantic relevance;time efficiency;LDA method;semantic mapping;feature space;topic tracker;topic timing characteristics;self-adaptive updating;topic model;Timing;Training;Accuracy;Semantics;Adaptation models;Mathematical model;Educational institutions;Topic tracking;CHI_LDA;topic model;timing characteristics;self-adaptive},
}

@InProceedings{Zhang2012,
  author    = {L. {Zhang} and C. {Xu} and X. {Ma} and T. {Gu} and X. {Hong} and C. {Cao} and J. {Lu}},
  title     = {Resynchronizing Model-Based Self-Adaptive Systems with Environments},
  booktitle = {2012 19th Asia-Pacific Software Engineering Conference},
  year      = {2012},
  volume    = {1},
  pages     = {184-193},
  month     = {Dec},
  abstract  = {Self-adaptive systems are attractive due to their ability of adapting to changeable environments automatically. However, such systems may be subject to runtime failures when all environmental dynamics cannot be adequately considered at design time. When such failures occur at runtime, a system's internal adaptation logic usually has become inconsistent with its environment, according to our observation. We call this inconsistency sync-loss error. From our project experiences, we empirically identified a strong correlation between sync-loss error and system failure. This motivated us to fix sync-loss error in order to reduce failure for self-adaptive systems. In this paper, we formulate the problem of detecting sync-loss error, and present a framework ReSync to automatically fix sync-loss errors by desynchronizing a system with its environment. We experimentally evaluated ReSync on real robot cars with 20 different system versions. The evaluation reported promising results that ReSync can automatically recover our robot car systems from sync-loss errors, and significantly reduce the failure rate from 90.9% to 11.7-28.8%.},
  doi       = {10.1109/APSEC.2012.62},
  groups    = {ieee},
  issn      = {1530-1362},
  keywords  = {adaptive control;automobiles;mobile robots;model-based self-adaptive system;changeable environment;environmental dynamics;internal adaptation logic;inconsistency sync-loss error detection;system failure;ReSync framework;robot car system;resynchronization;Robot sensing systems;Adaptation models;Runtime;Legged locomotion;Synchronization;Transient analysis;self-adaptive system;sync-loss error;resynchronization},
}
{Mu?oz-Fern��ndez2018,
  author        = {J. C. {Mu?oz-Fern��ndez} and R. {Mazo} and C. {Salinesi} and G. {Tamura}},
  title         = {10 Challenges for the specification of self-adaptive software},
  booktitle     = {2018 12th International Conference on Research Challenges in Information Science (RCIS)},
  year          = {2018},
  pages         = {1-12},
  month         = {May},
  __markedentry = {[guan:6]},
  abstract      = {The demand for systems that continue on operation by adapting themselves in response to disturbing changes in their environment has increased in the last decades. Those systems, termed self-adaptive software (SAS) systems, should be developed with techniques and methods appropriated for analysing and designing this kind of systems, starting from the requirements phase. Several contributions propose approaches to improve the specification of requirements for those systems. This paper aims to review the most significant challenges still open in the domains of languages for requirements specification and methods for model verification of self-adaptive systems, independently of their particular application areas. More concretely, the main contribution of this paper is a list of ten challenges to achieve a better-defined specification of requirements for SAS systems, and a more effective verification of such specifications. These challenges are well worthy of being addressed in both communities, the requirements engineering (RE) and the SAS one.},
  doi           = {10.1109/RCIS.2018.8406640},
  issn          = {2151-1357},
  keywords      = {formal specification;formal verification;requirements specification;self-adaptive systems;SAS systems;requirements engineering;self-adaptive software system specification;Synthetic aperture sonar;Adaptation models;Software;Requirements engineering;Runtime;Systematics;Uncertainty;software requirements;self-adaptive software systems;requirements engineering;requirements specification},
}

@InProceedings{Heinzemann2013b,
  author    = {C. {Heinzemann} and J. {Rieke} and W. {Sch?fer}},
  title     = {Simulating Self-Adaptive Component-Based Systems Using MATLAB/Simulink},
  booktitle = {2013 IEEE 7th International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2013},
  pages     = {71-80},
  month     = {Sep.},
  abstract  = {The automotive industry uses MATLAB/Simulink models for specifying the behavior of software components and for early validation of that behavior using model-in-the-loop simulations. During a simulation run, these models may not structurally change. Thus, MATLAB/Simulink is not amenable to realizing self-adaption behavior, where the software architecture of the system evolves during runtime. In this paper, we show how to model self-adaptive software using our language Mechatronic UML and how we transform a model specified in Mechatronic UML into a MATLAB/Simulink model automatically. In particular, we generate several helper functions that emulate self-adaptive behavior in MATLAB/Simulink, relying only on standard Simulink blocks. We illustrate our approach using an example of car platoons.},
  doi       = {10.1109/SASO.2013.17},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {automobile industry;formal specification;object-oriented programming;production engineering computing;software architecture;Unified Modeling Language;self-adaptive component-based systems;Matlab;Simulink;automotive industry;software components behavior specification;model-in-the-loop simulations;self-adaption behavior;software architecture;Mechatronic UML language;Unified Modeling Language;car platoons;Ports (Computers);Computational modeling;MATLAB;Switches;Unified modeling language},
}

@InProceedings{Haesevoets2009,
  author    = {R. {Haesevoets} and D. {Weyns} and T. {Holvoet} and W. {Joosen}},
  title     = {A formal model for self-adaptive and self-healing organizations},
  booktitle = {2009 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2009},
  pages     = {116-125},
  month     = {May},
  abstract  = {Multi-agent systems typically consist of autonomous entities, capable of adapting their behavior and interaction patterns in dynamic environments, making them an interesting approach for modeling self-adaptive systems. The interactions among agents, a key challenge in engineering multi-agent systems, are often structured and managed by means of organizations. In previous work we have built a prototype of an organization middleware, which encapsulates the management of dynamic organizations as a reusable service and offers organizations as first-class programming abstractions to application developers. To develop a mature middleware, we face two key challenges: realizing the integration of the middleware with the rest of the system in a disciplined way and assuring properties, such as self-adaptivity and self- healing, of services offered by the middleware. This paper presents a formal specification of an organization and management model for dynamic organizations, a first step in facing these challenges. Both models contribute to the integration of the middleware with the rest of the system. The organization model rigorously describes the main programming abstractions to which application developers have to conform, while the management model can be used to derive specific monitoring and control points required by the middleware to realize self-* properties. In addition, the management model offers a foundation to reason about self- * properties.},
  doi       = {10.1109/SEAMS.2009.5069080},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {fault tolerant computing;formal specification;middleware;multi-agent systems;software agents;software development management;system monitoring;formal model;self-healing organization;self-adaptive organization;multi agent system;autonomous entity;formal specification;dynamic organization management model;middleware;self-* property;interaction pattern;behavior pattern;dynamic environment;programming abstraction;application developer;Middleware;Formal specifications;Monitoring;Multiagent systems;Telecommunication traffic;Cameras;Prototypes;Dynamic programming;Collaborative work;Traffic control},
}

@InProceedings{Liang1992,
  author    = {H. -. {Liang} and Y. -. {Zhong}},
  title     = {A microprocessor-based self-adaptive trigger for thyristor converters},
  booktitle = {[1992] Proceedings of the IEEE International Symposium on Industrial Electronics},
  year      = {1992},
  pages     = {720-724 vol.2},
  month     = {May},
  abstract  = {A digital trigger with lock-phase synchro power makes it possible to trace, automatically the change of a power network's frequency and to ensure symmetrical phases trigger pulses. It is used for thyristor power convertors to restrain the harmful effect of harmonics on power networks. In this paper, a scheme of implementing digital lock-phase by a microprocessor is presented: the principle of digital lock-phase is discussed and a self-adaptive trigger adopting a single chip microprocessor as its core is introduced. The design of a hardware circuit and software system are also given. Finally, this paper analyzes pulse stability and the pulse loss problem, poses an effective solution measure. Because phase-locked loop synchro power is used, the symmetrical error between trigger pulses can be minimized to 0.054 degrees . Practical application shows that this type of trigger not only saves hardware, but also has excellent properties, and the powerful ability of anti-disturbance.<>},
  doi       = {10.1109/ISIE.1992.279698},
  groups    = {ieee},
  keywords  = {adaptive control;digital control;microcomputer applications;power convertors;self-adjusting systems;switching circuits;thyristor applications;trigger circuits;voltage control;voltage control;digital control;pulse loss;switching circuits;self-adaptive trigger;lock-phase synchro power;harmonics;microprocessor;design;hardware;software;pulse stability;phase-locked loop;Thyristors;Pulse measurements;Microprocessors;Hardware;Frequency;Converters;Power system harmonics;Software systems;Circuit stability;Stability analysis},
}

@InProceedings{WangXiuCai1997,
  author    = {{Wang XiuCai} and {Xiang ShiWu} and {Zhang Yong} and {Leng Jing}},
  title     = {The design of a self-adaptive fuzzy control system},
  booktitle = {1997 IEEE International Conference on Intelligent Processing Systems (Cat. No.97TH8335)},
  year      = {1997},
  volume    = {1},
  pages     = {305-308 vol.1},
  month     = {Oct},
  abstract  = {Fuzzy control has many advantages over traditional control, e.g. the PID algorithm, but the basic capacity of fuzzy control to adapt to time varying environment conditions and system parameters is rather poor. In order to improve the control system's robustness and its response characteristics, we have designed a fuzzy controller with a self-regulating scaling factors algorithm. The design of the fuzzy control hardware logic circuits and fuzzy control software algorithms are introduced. Finally, an application example is presented.},
  doi       = {10.1109/ICIPS.1997.672787},
  groups    = {ieee},
  keywords  = {fuzzy control;robust control;self-adjusting systems;microcontrollers;self-adaptive fuzzy control system;fuzzy control;time varying environment conditions;system parameter;robustness;response characteristics;fuzzy controller;self-regulating scaling factors;hardware logic circuits;fuzzy control software algorithms;Fuzzy control;Control systems;Algorithm design and analysis;Three-term control;Time varying systems;Robust control;Fuzzy systems;Hardware;Logic circuits;Software algorithms},
}

@InProceedings{JinMingLi2008,
  author    = {{JinMing Li} and {MeiFang Wang}},
  title     = {Afforestation Program based on self-adaptive Genetic Algorithm},
  booktitle = {2008 3rd International Conference on Intelligent System and Knowledge Engineering},
  year      = {2008},
  volume    = {1},
  pages     = {545-548},
  month     = {Nov},
  abstract  = {For a long time, afforestation program workers mainly depend on manual planning or use of some common computer software to aid planning, which make the work tedious and inefficient, and bring about rough design and unscientific calculation. The paper sets forward genetic algorithm to determine the most effectual scheme under the restricted conditions of funds, variety and quantities of seedlings. The mathematical models and concrete methods are offered and discussed. And it is found out the satisfactory results by applying this algorithm on afforestation program under the restricted conditions.},
  doi       = {10.1109/ISKE.2008.4730991},
  groups    = {ieee},
  keywords  = {forestry;genetic algorithms;planning;afforestation program;self-adaptive genetic algorithm;manual planning;computer software;rough design;unscientific calculation;Genetic algorithms;Forestry;Optimization methods;Convergence;Intelligent systems;Artificial intelligence;Knowledge engineering;Educational institutions;Software;Technology management},
}

@InProceedings{Fujiwara2002,
  author    = {Y. {Fujiwara} and B. {Matsuzawa} and O. {Shin-Ichirou}},
  title     = {Learning assistance expert system based on Java production system with a self-adaptive function},
  booktitle = {International Conference on Computers in Education, 2002. Proceedings.},
  year      = {2002},
  pages     = {158-159 vol.1},
  month     = {Dec},
  abstract  = {This paper proposes a new production system (PS) with a self-adaptive function based on the Java language, in order to realize a knowledge-base (KB) development environment featuring platform independence and no requirement for special software tools. This new PS, called Adaptive Java Production System (A-JPS) in this paper also features a user profile evaluation mechanism using a causal network (CN) allowing general DAG structures. By means of experiments using an experimental learning assistance KB based on A-JPS, it is demonstrated that the proposed self-adaptation method is effective.},
  doi       = {10.1109/CIE.2002.1185890},
  groups    = {ieee},
  keywords  = {Java;distance learning;computer aided instruction;expert systems;Learning assistance expert system;Java production system;self-adaptive function;Adaptive Java Production System;knowledge-base development environment;platform independence;software tools;user profile evaluation mechanism;causal network;distance learning assistance systems;general DAG structures;Expert systems;Java;Production systems;Adaptive systems;Qualifications;Books;Humans;Testing;Software tools;Computer aided instruction},
}

@InProceedings{Fredericks2016a,
  author    = {E. M. {Fredericks}},
  title     = {Automatically Hardening a Self-Adaptive System against Uncertainty},
  booktitle = {2016 IEEE/ACM 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2016},
  pages     = {16-27},
  month     = {May},
  abstract  = {A self-adaptive system (SAS) can reconfigure to adapt to potentially adverse conditions that can manifest in the environment at run time. However, the SAS may not have been explicitly developed with such conditions in mind, thereby requiring additional configuration states or updates to the requirements specification for the SAS to provide assurance that it continually satisfies its requirements and delivers acceptable behavior. By discovering both adverse environmental conditions and the SAS configuration states that can mitigate those conditions at design time, an SAS can be hardened against uncertainty prior to deployment, effectively extending its lifetime. This paper introduces two search-based techniques, Ragnarok and Valkyrie, for hardening an SAS against uncertainty. Ragnarok automatically discovers adverse conditions that negatively impact an SAS by searching for environmental conditions that explicitly cause requirements violations. Valkyrie then searches for SAS configurations that improve requirements satisficement throughout execution in response to discovered adverse environmental conditions. Together, these techniques can be used to improve the design and implementation of an SAS. We apply each technique to an industry-provided remote data mirroring application that can self-reconfigure in response to unknown or adverse conditions, such as network message delays, network link failures, and sensor noise.},
  doi       = {10.1109/SEAMS.2016.010},
  groups    = {ieee},
  keywords  = {search problems;software engineering;systems analysis;uncertainty handling;self-adaptive system automatic hardening;uncertainty;SAS configuration states;lifetime extension;search-based techniques;Ragnarok;Valkyrie;environmental condition searching;industry-provided remote data mirroring application;self-reconfiguration;Software engineering;Adaptive systems;search-based software engineering;self-adaptive systems;genetic algorithms;software assurance;requirements engineering},
}

@InProceedings{Shevtsov2017,
  author    = {S. {Shevtsov} and D. {Weyns} and M. {Maggio}},
  title     = {Handling New and Changing Requirements with Guarantees in Self-Adaptive Systems Using SimCA},
  booktitle = {2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2017},
  pages     = {12-23},
  month     = {May},
  abstract  = {Self-adaptation provides a principled way to deal with change during operation. As more systems with strict goals require self-adaptation, the need for guarantees in self-adaptive systems is becoming a high-priority concern. Designing adaptive software using principles from control theory has been identified as one of the approaches to provide guarantees. However, current solutions can only handle pre-specified requirements either in the form of setpoint values (S-reqs) or values to be optimized (O-reqs). This paper presents SimCA* that makes two contributions to control-based self-adaptation: (a) it allows the user to specify a third type of requirement that keeps a value above/below a threshold (T-reqs), and (b) it can deal with requirement sets that change at runtime (i.e., requirements can be adjusted, activated, and deactivated on the fly). SimCA* offers robustness to disturbances and provides adaptation guarantees. We evaluate SimCA* for two systems with strict goals from different domains: an underwater vehicle system used for oceanic surveillance, and a tele-assistance system for health care support. The test results demonstrate that SimCA* can deal with the three types of requirements (STO-reqs) operating under various types of dynamics and the set of requirements can be changed on the fly.},
  doi       = {10.1109/SEAMS.2017.3},
  groups    = {ieee},
  keywords  = {data flow analysis;formal specification;formal verification;optimisation;self-adjusting systems;software fault tolerance;systems analysis;requirements;self-adaptive systems;SimCA;adaptive software design;control theory;values optimization;system runtime;Software;Sensors;Control theory;Runtime;Surveillance;Stakeholders;Time factors;self-adaptation;control theory;software;SimCA},
}

@InProceedings{Lim2015,
  author    = {Y. J. {Lim} and E. {Jee} and D. {Shin} and D. {Bae}},
  title     = {Efficient Testing of Self-Adaptive Behaviors in Collective Adaptive Systems},
  booktitle = {2015 IEEE 39th Annual Computer Software and Applications Conference},
  year      = {2015},
  volume    = {2},
  pages     = {216-221},
  month     = {July},
  abstract  = {Collective adaptive systems (CAS) consist of multiple agents that adapt to changing system and environmental conditions in order to satisfy system goals and quality requirements. As more applications involve using CAS in a critical context, ensuring the correct and safe adaptive behaviors of quality-driven CAS has become more important. In this paper, we propose Collective Adaptive System Testing (CAST), a scalable and efficient approach to testing self-adaptive behaviors of CAS. We propose a selective method to instantiate and execute test cases relevant to the current adaptation context. This enables testers to focus testing on key self-adaptive behaviors while dealing with the scale and dynamicity of the system. An experimental evaluation using a traffic monitoring system is performed to validate its scalability, efficiency, and fault-detection effectiveness. The experimental results provide insights into how CAST can serve as a feasible and effective assurance technique for CAS.},
  doi       = {10.1109/COMPSAC.2015.131},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {intelligent transportation systems;multi-agent systems;program testing;software quality;self-adaptive behavior testing;multiple agents;agent adaptation;environmental conditions;system goals;quality requirements;quality-driven CAS;collective adaptive system testing;CAST;test case execution;system scale;system dynamicity;traffic monitoring system;fault-detection effectiveness;Cameras;Testing;Adaptive systems;Monitoring;Organizations;Context;Scalability;software quality attributes;system testing;collective adaptive system;agent-based adaptive system},
}

@InProceedings{Sinangil2014,
  author    = {Y. {Sinangil} and S. M. {Neuman} and M. E. {Sinangil} and N. {Ickes} and G. {Bezerra} and E. {Lau} and J. E. {Miller} and H. C. {Hoffmann} and S. {Devadas} and A. P. {Chandraksan}},
  title     = {A self-aware processor SoC using energy monitors integrated into power converters for self-adaptation},
  booktitle = {2014 Symposium on VLSI Circuits Digest of Technical Papers},
  year      = {2014},
  pages     = {1-2},
  month     = {June},
  abstract  = {This paper presents a self-aware processor with energy monitoring circuits that can measure actual energy consumption of the key blocks. The monitors are embedded into on-chip DC/DC converters and generate results within 10% of accuracy with minimal power (<;0.1%) and area (<;1%) overhead. Our system, which is implemented in 0.18��m technology, is designed to be voltage scalable from 1.8V down to 0.6V. Low-voltage SRAM operation is made possible through the use of 8T bit-cells and write-assists. The d-caches are designed to be re-configurable in associativity and size to adapt to compute- versus cache-bound phases of applications. Cache configuration is performed in <; 3 clock cycles including tag invalidation. These hardware features enable a software self-aware computation engine (SEEC) to dynamically adapt the processor to meet performance and energy goals. Measurement results show that up to 8.4�� energy savings can be achieved with DVFS and self-adaptation.},
  doi       = {10.1109/VLSIC.2014.6858424},
  groups    = {ieee},
  issn      = {2158-5636},
  keywords  = {cache storage;DC-DC power convertors;SRAM chips;system-on-chip;self-aware processor;power converters;self-adaptation;energy monitoring circuits;energy consumption;on-chip DC/DC converters;low-voltage SRAM operation;d-caches;cache configuration;software self-aware computation engine;SoC;voltage 1.8 V to 0.6 V;size 0.18 mum;Monitoring;System-on-chip;Temperature measurement;Energy consumption;Temperature sensors;Clocks;Engines},
}

@InProceedings{Weyns2013a,
  author    = {D. {Weyns} and M. {Usman Iftikhar} and J. {S?derlund}},
  title     = {Do external feedback loops improve the design of self-adaptive systems? A controlled experiment},
  booktitle = {2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2013},
  pages     = {3-12},
  month     = {May},
  abstract  = {Providing high-quality software in the face of uncertainties, such as dealing with new user needs, changing availability of resources, and faults that are difficult to predict, raises fundamental challenges to software engineers. These challenges have motivated the need for self-adaptive systems. One of the primary claimed benefits of self-adaptation is that a design with external feedback loops provide a more effective engineering solution for self-adaptation compared to a design with internal mechanisms. While many efforts indicate the validity of this claim, to the best of our knowledge, no controlled experiments have been performed that provide scientifically founded evidence for it. Such experiments are crucial for researchers and engineers to underpin their claims and improve research. In this paper, we report the results of a controlled experiment performed with 24 final-year students of a Master in Software Engineering program in which designs based on external feedback loops are compared with designs based on internal mechanisms. The results show that applying external feedback loops can reduce control flow complexity and fault density, and improve productivity. We found no evidence for a reduction of activity complexity.},
  doi       = {10.1109/SEAMS.2013.6595487},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {software engineering;external feedback loop;self-adaptive system design;high-quality software;software engineering;self-adaptation benefit;flow complexity;fault density;activity complexity;Cameras;Complexity theory;Monitoring;Software;Productivity;Feedback loop;Robustness},
}

@InProceedings{Sedgewick2018,
  author    = {P. E. {Sedgewick} and R. {de Lemos}},
  title     = {Self-Adaptation Made Easy with Blockchains},
  booktitle = {2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2018},
  pages     = {192-193},
  month     = {May},
  abstract  = {This position paper describes how blockchains facilitate the implementation of distributed self-adaptive systems. We demonstrate how the master/slave decentralised control pattern for self-adaptive systems, integrated with a permissioned blockchain, can protect nodes of a network against attacks by continuously adapting the membership of an access control list. Whenever malicious behaviour is detected, consensus on an updated access control list is reached, and that node is removed from the network. Using a smart home, as an example, we demonstrate that a permissioned blockchain is able to maintain a consistent view of a network of Internet of Things (IoT) devices in the presence of malicious nodes.},
  groups    = {ieee},
  issn      = {2157-2305},
  keywords  = {adaptive systems;authorisation;cryptocurrencies;decentralised control;Internet of Things;telecommunication security;distributed self-adaptive systems;malicious behaviour;malicious nodes;smart home;IOT;Internet of things;master-slave decentralised control pattern;blockchain permission;access control list;Blockchain;Peer-to-peer computing;Access control;Monitoring;Internet of Things;Smart homes;self-adaptive systems;blockchains;IoT;MultiChain;access control},
}

@InProceedings{Xu2017a,
  author    = {H. {Xu} and W. {Huang} and J. {Wang} and D. {Wang}},
  title     = {A self-adaptive Bayesian network classifier by means of genetic optimization},
  booktitle = {2017 8th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
  year      = {2017},
  pages     = {688-691},
  month     = {Nov},
  abstract  = {In the design of conventional Bayes network classifiers (e.g. Naive Bayes Classifier, Tree Augment Naive Bayes classifier), the network classifier structures are always fixed. Such network structures are very difficult to reflect the relationships among nodes (attributes). In this paper, we propose a self-adaptive Bayesian Network classifier based on genetic optimization. Genetic optimization is exploited here to realize the Self-adaptiveness, which means the network structure can be gradually optimized when constructing Bayesian network classifier. Experimental results show that the proposed method leads to a high classification accuracy than Naive Bayes classifier, Tree Augment Naive Bayes classifier, and KNN classifier on some benchmarks.},
  doi       = {10.1109/ICSESS.2017.8343007},
  groups    = {ieee},
  issn      = {2327-0594},
  keywords  = {Bayes methods;belief networks;genetic algorithms;learning (artificial intelligence);pattern classification;trees (mathematics);self-adaptive Bayesian network classifier;genetic optimization;conventional Bayes network classifiers;Tree Augment Naive Bayes classifier;network classifier structures;KNN classifier;Bayes methods;Classification algorithms;Genetics;Optimization;Benchmark testing;Task analysis;Genetic algorithms;Bayesian Network;self-adaptive;Genetic optimization;network structrue},
}

@InProceedings{Wei2011,
  author    = {W. {Wei} and D. {HongYu}},
  title     = {The research of SMO algorithm self-adaption improvement on SVM},
  booktitle = {2011 IEEE 3rd International Conference on Communication Software and Networks},
  year      = {2011},
  pages     = {693-696},
  month     = {May},
  abstract  = {The SVM (Support Vector Machine) is a kind of important statistical machine learning algorithm. The SMO (Sequential Minimal Optimization) is one of the algorithms on SVM. It is more effective method in practical application. And the SMO algorithm is the solution of support vector machine quadratic programming problem for a series of smaller problems decomposition, thus it realizes serial minimum optimization. The method is used in SMO algorithm of adaptive learning thoughts, and is solving convex quadratic programming optimization problems on the basis on improvement, which has been proposed in this paper. Therefore, based on the idea of adaptive learning algorithm is improved the SMO. The SVM algorithm can adapt to the practical application of more rapid and efficient needs.},
  doi       = {10.1109/ICCSN.2011.6014362},
  groups    = {ieee},
  keywords  = {convex programming;learning (artificial intelligence);quadratic programming;statistical analysis;support vector machines;SMO algorithm self-adaption improvement;support vector machine;statistical machine learning algorithm;sequential minimal optimization;quadratic programming problem;serial minimum optimization;adaptive learning;convex quadratic programming optimization problem;adaptive learning algorithm;SVM algorithm;Support vector machines;machine learning;support vector machine;sequential minimal optimization;algorithm;self-adaption},
}

@InProceedings{Senjie2017,
  author    = {L. {Senjie} and L. {Qinrang} and W. {Yiteng} and W. {Xiaolong}},
  title     = {A self-adaptive timeout mechanism in Mimic Defense System},
  booktitle = {2017 8th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
  year      = {2017},
  pages     = {588-591},
  month     = {Nov},
  abstract  = {Cask effect is existed in the time expenditure of multi-mode arbitration in Mimic Defense System, and for preventing the congestion of tasks, a timeout mechanism is required. We proposed a self-adaptive timeout mechanism based on Regression Spline to solve the problem of the poor adaptability of the previous timeout mechanism. With the concept of sliding time window, the arbitration timeout parameter was set up and adjusted adaptively during the system operation. Experimental results shown that the proposed self-adaptive timeout mechanism was capable to reduce the time-expenditure of arbitration effectively with the same system timeout rate, compared with existing timeout mechanism.},
  doi       = {10.1109/ICSESS.2017.8342984},
  groups    = {ieee},
  issn      = {2327-0594},
  keywords  = {computer network security;regression analysis;splines (mathematics);self-adaptive timeout mechanism;multimode arbitration;arbitration timeout parameter;system timeout rate;mimic defense system;cask effect;regression spline;Splines (mathematics);Redundancy;Prediction algorithms;Fitting;Security;Adaptive systems;Mathematical model;mimic defense;adaptive timeout;regression spline},
}

@InProceedings{Zhai2010,
  author    = {Y. {Zhai} and L. {Liu} and Q. {Li}},
  title     = {System Identification and Application Based on Parameters Self-Adaptive SMO},
  booktitle = {2010 International Conference on Computational Intelligence and Software Engineering},
  year      = {2010},
  pages     = {1-4},
  month     = {Dec},
  abstract  = {This paper studies the identification algorithm of parameters self adaptive SMO based on linear kernel function, and analyses its performance and advantages. For ARX model and long-term prediction model, the method is used to identify the model of main steam pressure of thermal system and dual-lane gas turbine engine of aero system. The simulation results show that the algorithm can effectively identify model parameters and has a higher accuracy, reducing the requirements of training data including quantity and quality, so that its engineering applications and implementation are easier.},
  doi       = {10.1109/CISE.2010.5676952},
  groups    = {ieee},
  keywords  = {identification;optimisation;support vector machines;system identification;parameters self adaptive SMO;linear kernel function;ARX model;main steam pressure;thermal system;dual lane gas turbine engine;aero system;Support vector machines;Predictive models;Testing;Data models;Kernel;Training;Prediction algorithms},
}

@InProceedings{ZhaoHuakai2016,
  author    = {{Zhao Huakai} and {Dong Guangliang} and {Li Haitao}},
  title     = {A self-adaptive deep space DTN routing model},
  booktitle = {2016 7th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
  year      = {2016},
  pages     = {333-336},
  month     = {Aug},
  abstract  = {In this paper, we summarize and propose the DTN physical model for deep-space communication. According to deep-space characteristics, we design a new self-adaptive routing protocol for deep-space DTN. The new routing protocol can work well in long-delay and intermittent network environment. We have many contrast simulation experiments on our DTN simulator.},
  doi       = {10.1109/ICSESS.2016.7883079},
  groups    = {ieee},
  issn      = {2327-0594},
  keywords  = {delay tolerant networks;routing protocols;space communication links;self-adaptive deep space DTN routing model;delay tolerant network physical model;deep-space communication;routing protocol;long-delay environment;intermittent network environment;contrast simulation experiments;Delays;Routing;Satellites;Interference;delay tolerant;delay tolerant network;simulator;routing;DTN},
}

@InProceedings{Xiong2008,
  author    = {W. {Xiong} and C. {Wang}},
  title     = {Feature Selection: A Hybrid Approach Based on Self-Adaptive Ant Colony and Support Vector Machine},
  booktitle = {2008 International Conference on Computer Science and Software Engineering},
  year      = {2008},
  volume    = {4},
  pages     = {751-754},
  month     = {Dec},
  abstract  = {Ant colony optimization (ACO) is a kind of bionic swarm intelligence algorithm belongs to artificial intelligence (AI) field and has been successfully applied in resolving complex optimization problems. Support vector machine (SVM) is a new machine learning method with greater generalization performance, and has shown its superiority in classification and regression problems. By combining the advantages of two approaches, this paper proposes a new hybrid method based on self-adaptive ant colony optimization and SVM for feature selection in data mining which exploits novel heuristic information and takes results of feature subset classified by SVM method as a positive feedback adjustment factor for ACO. Experiments and results showed the hybrid method has a higher classification accuracy or smaller feature subset when having the same classification accuracy as other algorithm.},
  doi       = {10.1109/CSSE.2008.1023},
  groups    = {ieee},
  keywords  = {learning (artificial intelligence);optimisation;pattern classification;regression analysis;support vector machines;self-adaptive ant colony;support vector machine;ant colony optimization;bionic swarm intelligence algorithm;artificial intelligence;complex optimization problems;machine learning method;pattern classification;regression problems;data mining;heuristic information;positive feedback adjustment factor;Support vector machines;Support vector machine classification;Ant colony optimization;Artificial intelligence;Particle swarm optimization;Machine learning algorithms;Learning systems;Diversity reception;Data mining;Feedback;swarm intelligence;self-adaptive ACO;feature selection;classification;SVM},
}

@InProceedings{Yang2013a,
  author    = {K. {Yang} and H. {Gao} and L. {Chen} and Q. {Yuan}},
  title     = {Self-adaptive clustering data stream algorithm based on SSMC-tree},
  booktitle = {2013 IEEE 4th International Conference on Software Engineering and Service Science},
  year      = {2013},
  pages     = {342-345},
  month     = {May},
  abstract  = {Due to the data stream is real-time, fast, unlimited, one-pass, clustering data stream requires algorithms which are capable to process the data stream in the limited time and memory. In this paper, we propose a clustering algorithm based on the improved similarity search tree (SSMC-Tree), and introduce buffer, hitchhike processing and local aggregation strategy, it can adapt to different speed data stream. We adopt an outlier processing mechanism by introducing potential core-micro-cluster buffer and outlier micro-cluster buffer to process noise in the data stream. Experimental results show that our algorithm can adapt to the high-speed data stream with noise.},
  doi       = {10.1109/ICSESS.2013.6615320},
  groups    = {ieee},
  issn      = {2327-0594},
  keywords  = {pattern clustering;trees (mathematics);self-adaptive data stream clustering algorithm;SSMC-tree;local aggregation strategy;hitchhike processing;outlier processing mechanism;potential core-microcluster buffer;simiiarity search with microclusters tree;high-speed data stream;outlier microcluster buffer;Clustering algorithms;Data Stream;Data Mining;Hierarchic Clustering},
}

@InProceedings{Zhang2017a,
  author    = {Z. {Zhang} and Y. {Shen} and G. {Zhang} and Y. {Song} and Y. {Zhu}},
  title     = {Short-term prediction for opening price of stock market based on self-adapting variant PSO-Elman neural network},
  booktitle = {2017 8th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
  year      = {2017},
  pages     = {225-228},
  month     = {Nov},
  abstract  = {Stock price is one of intricate non-linear dynamic system. Typically, Elman neural network is a local recurrent neural network, having one context layer that memorizes the past states, which is quite fit for resolving time series issues. Given this, this paper takes Elman network to predict the opening price of stock market. Considering that Elman network is limited, this paper adopts self-adapting variant PSO algorithm to optimize the weights and thresholds of network. Afterwards, the optimized data, regarded as initial weight and threshold value, is given to Elman network for training, accordingly the prediction model for opening price of stock market based on self-adapting variant PSO-Elman network is formed. Finally, this paper verifies that model by some stock prices, and compares with BP network and Elman network, so as to draw the result that shows the precision and stability of this predication model both are superior to the traditional neural network.},
  doi       = {10.1109/ICSESS.2017.8342901},
  groups    = {ieee},
  issn      = {2327-0594},
  keywords  = {particle swarm optimisation;prediction theory;recurrent neural nets;share prices;stock markets;opening price;stock market;self-adapting variant PSO-Elman neural network;stock price;local recurrent neural network;self-adapting variant PSO algorithm;short-term prediction;Biological neural networks;Predictive models;Stock markets;Prediction algorithms;Data models;Neurons;Self-adapting variant PSO;Elman network;stock market prediction;MATLAB},
}

@InProceedings{Leitner2012,
  author    = {P. {Leitner} and S. {Dustdar} and B. {Wetzstein} and F. {Leymann}},
  title     = {Cost-based prevention of violations of service level agreements in composed services using self-adaptation},
  booktitle = {2012 First International Workshop on European Software Services and Systems Research - Results and Challenges (S-Cube)},
  year      = {2012},
  pages     = {34-35},
  month     = {June},
  abstract  = {Providers of composite Web services face the challenge of having to comply to SLAs, which are agreements governing the minimum performance that customers can expect from a composite service. In this work, a framework for optimizing adaptations of service compositions with regards to SLA violations has been developed. The framework, dubbed PREvent (Prediction and Prevention of SLA Violations Based on Events), uses techniques from the areas of machine learning and heuristic optimization to construct models for prediction of SLA violations at runtime, and to decide which adaptation actions may be used to improve overall performance in a composition instance. An optimizer component decides, whether applying these changes makes sense economically (i.e., whether the costs of violating the SLAs are bigger than the adaptation costs). If this is the case, the respective actions are applied in an automated way. At its core, PREvent is a self-optimizing system in the sense of autonomic computing, with the target of minimizing the total costs of adaptations and SLA violations for the service provider.},
  doi       = {10.1109/S-Cube.2012.6225506},
  groups    = {ieee},
  keywords  = {fault tolerant computing;learning (artificial intelligence);optimisation;service-oriented architecture;Web services;cost-based prevention;service level agreements;self-adaptation;Web services;composite service;service compositions;SLA violations;PREvent;prediction and prevention of SLA violations-based on events;machine learning;heuristic optimization;optimizer component;self-optimizing system;autonomic computing;service provider;Optimization;Runtime;Monitoring;Quality of service;Machine learning;Equations;Conferences;service-based computing;autonomic computing;heuristic optimization},
}

@InProceedings{Zhao2016,
  author    = {T. {Zhao}},
  title     = {The Generation and Evolution of Adaptation Rules in Requirements Driven Self-Adaptive Systems},
  booktitle = {2016 IEEE 24th International Requirements Engineering Conference (RE)},
  year      = {2016},
  pages     = {456-461},
  month     = {Sep.},
  abstract  = {One of the challenges in self-adaptive software systems is to make adaptation plans in response to possible changes. A good plan mechanism shall have the capability of: 1) selecting the most appropriate adaptation actions in response to changes both in the environment and requirements, 2) making adaptation decisions efficiently to react timely to arising situations at run-time. In existing approaches for plan process, rule-based adaptation provides an efficient offline planning method. However, it can react neither to changeable requirements nor to unexpected environment changes. On the contrary, goal-based and utility-based approaches provide online planning mechanisms, which can well handle a highly uncertain environment with dynamically changing requirements and environment. However, online adaptation decision making is often computationally expensive and may encounter less-efficiency problems. The aim of our research is to improve the planning processin requirements driven self-adaptive systems, i.e., enabling the self-adaptive system to efficiently make adaptation plans to cope with the dynamic environment and changeable requirements. To achieve such advantages, we propose a solution to enhance the traditional rule-based adaptation with a rule generation and a rule evolution process, so that the proposed approach can maintain the advantages of efficient planning process while being enhanced with the capability of dealing with runtime uncertainty.},
  doi       = {10.1109/RE.2016.18},
  groups    = {ieee},
  issn      = {2332-6441},
  keywords  = {decision making;formal specification;knowledge based systems;runtime uncertainty;dynamic environment;planning processing requirements;online adaptation decision making;online planning mechanisms;utility-based approaches;goal-based approaches;offline planning method;rule-based adaptation;plan process;adaptation actions;requirements driven self-adaptive software systems;adaptation rule evolution;adaptation rule generation;Planning;Learning (artificial intelligence);Algorithm design and analysis;Software algorithms;Machine learning algorithms;Software systems;requirement driven self-adaptation;adaptation plan;reinforcement learning;case-based reasoning},
}

@InProceedings{Alkhabbas2020,
  author    = {F. {Alkhabbas} and I. {Murturi} and R. {Spalazzese} and P. {Davidsson} and S. {Dustdar}},
  title     = {A Goal-Driven Approach for Deploying Self-Adaptive IoT Systems},
  booktitle = {2020 IEEE International Conference on Software Architecture (ICSA)},
  year      = {2020},
  pages     = {146-156},
  month     = {March},
  abstract  = {Engineering Internet of Things (IoT) systems is a challenging task partly due to the dynamicity and uncertainty of the environment including the involvement of the human in the loop. Users should be able to achieve their goals seamlessly in different environments, and IoT systems should be able to cope with dynamic changes. Several approaches have been proposed to enable the automated formation, enactment, and self-adaptation of goal-driven IoT systems. However, they do not address deployment issues. In this paper, we propose a goal-driven approach for deploying self-adaptive IoT systems in the Edge-Cloud continuum. Our approach supports the systems to cope with the dynamicity and uncertainty of the environment including changes in their deployment topologies, i.e., the deployment nodes and their interconnections. We describe the architecture and processes of the approach and the simulations that we conducted to validate its feasibility. The results of the simulations show that the approach scales well when generating and adapting the deployment topologies of goal-driven IoT systems in smart homes and smart buildings.},
  doi       = {10.1109/ICSA47634.2020.00022},
  groups    = {ieee},
  keywords  = {cloud computing;Internet of Things;software architecture;goal-driven approach;self-adaptive IoT systems;Internet of Things systems;goal-driven IoT systems;deployment issues;deployment topologies;deployment nodes;edge-cloud continuum;smart homes;smart buildings;software architecture;Topology;Cloud computing;Computer architecture;Internet of Things;Buildings;Adaptation models;Software;Deploying Self adaptive IoT Systems;Goal driven IoT Systems;Edge-Cloud Continuum;Software Architecture},
}

@InProceedings{Xu2013,
  author    = {C. {Xu} and {Wenhua Yang} and X. {Ma} and C. {Cao} and J. {L��}},
  title     = {Environment rematching: Toward dependability improvement for self-adaptive applications},
  booktitle = {2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  year      = {2013},
  pages     = {592-597},
  month     = {Nov},
  abstract  = {Self-adaptive applications can easily contain faults. Existing approaches detect faults, but can still leave some undetected and manifesting into failures at runtime. In this paper, we study the correlation between occurrences of application failure and those of consistency failure. We propose fixing consistency failure to reduce application failure at runtime. We name this environment rematching, which can systematically reconnect a self-adaptive application to its environment in a consistent way. We also propose enforcing atomicity for application semantics during the rematching to avoid its side effect. We evaluated our approach using 12 self-adaptive robot-car applications by both simulated and real experiments. The experimental results confirmed our approach's effectiveness in improving dependability for all applications by 12.5-52.5%.},
  doi       = {10.1109/ASE.2013.6693118},
  groups    = {ieee},
  keywords  = {automobiles;mobile robots;self-adjusting systems;environment rematching;dependability improvement;consistency failure;application failure;application semantics;self-adaptive robot-car applications;Noise measurement;Semantics;Correlation;Legged locomotion;Robot sensing systems;Consistency failure;environment rematching},
}

@InProceedings{Colonese2007,
  author    = {E. M. {Colonese} and D. S. {Loubach} and A. M. {da Cunha}},
  title     = {Self-adaptive component-based interoperability framework for real-time systems},
  booktitle = {2007 IEEE/AIAA 26th Digital Avionics Systems Conference},
  year      = {2007},
  pages     = {2.B.3-1-2.B.3-10},
  month     = {Oct},
  abstract  = {Component-based software engineering offers a way to break complex systems into well-defined parts. Self-adaptive mechanisms are crucial to enable run-time reconfiguration and increase parts reuse in other computer systems and environments. These systems must satisfy functional and nonfunctional requirements. Despite efficient data integration being a common aspiration, the practicality of achieving interoperability remains a challenge for quickly transforming functional processes. For other components work together with the existing ones, and for the new system components development to operate seamlessly with and among other systems, while maintaining proprietary information integrity, the adoption of a common set of "building codes" is required. This paper proposes a self-adaptive framework for a real-time system through a scope analysis of stakeholders' requirement. It implements generic behavioral models for Systems Servers and Invokers. Changes on a statechart dimension while adapting a system to the framework lead software engineers to a nearly transparent integration process. Platform dependencies are also captured separately, enabling code-generation subsystem to reuse same components across a wide range of heterogeneous platforms and real-time systems. The framework can lead software components to high degrees of cost-effective reuse and it is tested in a real-time system prototype developed in the Brazilian Aeronautical Institute of Technology (Instituto Tecnologico de Aerondutica -ITA). The proposed framework focused on self-adaptive services components at run-time and on an efficient interoperability approach. At the end, functional requirements and the software architectural structure are enforced such that the end-to-end timing behavior of the resulting system and its specifications can be verified.},
  doi       = {10.1109/DASC.2007.4391850},
  groups    = {ieee},
  issn      = {2155-7209},
  keywords  = {object-oriented programming;open systems;program compilers;real-time systems;software engineering;self-adaptive component-based interoperability;real-time systems;component-based software engineering;complex systems;systems servers and invokers;code-generation subsystem;software components;Brazilian Aeronautical Institute of Technology;self-adaptive services components;functional requirements;end-to-end timing behavior;Real time systems;Quality of service;Object oriented modeling;Software engineering;Runtime environment;Design engineering;Software testing;System testing;Software prototyping;Timing},
}

@InProceedings{Roth2015,
  author    = {F. M. {Roth} and C. {Krupitzer} and C. {Becker}},
  title     = {Runtime Evolution of the Adaptation Logic in Self-Adaptive Systems},
  booktitle = {2015 IEEE International Conference on Autonomic Computing},
  year      = {2015},
  pages     = {141-142},
  month     = {July},
  abstract  = {Self-adaptive systems, which are highly related to Autonomic Computing, are a response to the increasing complexity and size of information systems. They are able to adapt their behavior to changes in the environment or system resources. A self-adaptive system consists of managed resources that realize functionality and an adaptation logic that controls the adaptations. So far, many research has been performed on adapting the managed resources. However, only few works cover adapting the adaptation logic, which might be necessary in several cases, e.g., When the architecture of the managed resources changes. This work adresses why adaptation of the adaptation logic might be beneficial, how it can be achieved, and what challenges arise.},
  doi       = {10.1109/ICAC.2015.20},
  groups    = {ieee},
  keywords  = {formal logic;adaptation logic;runtime evolution;self-adaptive systems;autonomic computing;information systems;Adaptation models;Runtime;Computer architecture;Synthetic aperture sonar;Monitoring;Computational modeling;Software;Self-adaptive system;adaptation logic;runtime evolution},
}

@InProceedings{Camara2009,
  author    = {J. {Camara} and C. {Canal} and G. {Salaun}},
  title     = {Behavioural self-adaptation of services in ubiquitous computing environments},
  booktitle = {2009 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2009},
  pages     = {28-37},
  month     = {May},
  abstract  = {Self-adaptive software systems are those able to manage changing operating conditions dynamically and autonomously. Currently, most proposals in this field rely on an explicit representation of the constituent elements and goals of the system. This approach is suitable for systems where constituent elements are well known at design time. However, in systems where new elements may dynamically enter or leave the execution environment, it is not possible to obtain a predefined description of the system's architecture nor a complete specification of its goals. Paradigmatic examples of such systems can be found in ubiquitous computing, or dynamic web service discovery and composition, where new adaptability problems arise, such as the (dis)connection of unforeseen elements to an already running system, or ensuring properties of the composition among services, which cannot be addressed at static verification time since the state space of the system is not closed anymore. In this paper, we present our approach for the composition and resolution of interface mismatch among services in ubiquitous computing environments, dynamically reconfiguring the system as new services are integrated or disconnected.},
  doi       = {10.1109/SEAMS.2009.5069071},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {software architecture;ubiquitous computing;Web services;services behavioural self-adaptation;ubiquitous computing environments;self-adaptive software systems;system architecture;dynamic Web service discovery;interface mismatch;Ubiquitous computing;Web services;Airports;Protocols;Quality of service;Software quality;Software systems;Availability;Context-aware services;Handheld computers},
}

@InProceedings{Cheng2009a,
  author    = {S. {Cheng} and D. {Garlan} and B. {Schmerl}},
  title     = {Evaluating the effectiveness of the Rainbow self-adaptive system},
  booktitle = {2009 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2009},
  pages     = {132-141},
  month     = {May},
  abstract  = {Rainbow is a framework for engineering a system with run-time, self-adaptive capabilities to monitor, detect, decide, and act on opportunities for system improvement. We applied Rainbow to a system, Znn.com, and evaluated its effectiveness to self-adapt on three levels: its effectiveness to maintain quality attribute in the face of changing conditions, run-time overheads of adaptation, and the engineering effort to use it to add self-adaptive capabilities to Znn.com. We make Znn.com and the associated evaluation tools available to the community so that other researchers can use it to evaluate their own systems and the community can compare different systems. In this paper, we report on our evaluation experience, reflect on some principles for benchmarking self-adaptive systems, and discuss the suitability of our evaluation tools for this purpose.},
  doi       = {10.1109/SEAMS.2009.5069082},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {software architecture;software maintenance;software performance evaluation;software quality;system monitoring;systems engineering;rainbow self-adaptive system;system monitoring;quality attribute maintenance;run-time overhead;rainbow evaluation tool;system engineering;architecture-based technique;Znn.com experimental platform;Maintenance engineering;Monitoring;Systems engineering and theory;Humans;Automatic control;Utility theory;Face detection;Runtime;Quality of service;Control systems},
}

@Article{Lu2018,
  author   = {B. {Lu} and Z. {Qin} and Y. {Sun} and J. {Hu} and L. {Wang}},
  title    = {A Dynamic Self-Adapting Mechanism for ZigBee Performance Assurance Under Wi-Fi Interference},
  journal  = {IEEE Sensors Journal},
  year     = {2018},
  volume   = {18},
  number   = {9},
  pages    = {3900-3909},
  month    = {May},
  issn     = {1558-1748},
  abstract = {As the increasing number of the wireless devices, the unlicensed industrial scientific medical band becomes more and more crowded. The highly uncertain cross technology interference (CTI) has shown to adversely affect the performance of low-power wireless sensor networks (WSN). Because of the incompatible physical and medium access control layer, the low-power WSN suffers serious packet loss during the transmission. It raises the need for agile methods that can assess the channel conditions and assure the performance and robustness of wireless sensor networks. In this paper, we present a light-weight and self-adapting CTI mitigation strategy that quantifies the channel idle state and improves the packet reception rate (PRR) of the communication. Based on the background received signal strength indicator, we propose a new metric to quantify the constantly changing channel state in the temporal domain. We employ logistic regression as the machine learning classifier to decide whether the communication is viable over the interfered link. Through the collected Wi-Fi traffic, we find that the channel is idle in most of the time, which motivated the design of our scheme. Extensive experiments show that our scheme can achieve over 91% of the PRR, which gain the improvement of 40%. Carrying on further, our scheme consumes less energy via degrading packet loss rate in the energy consumption part.},
  doi      = {10.1109/JSEN.2018.2815525},
  groups   = {ieee},
  keywords = {radiofrequency interference;telecommunication traffic;wireless LAN;wireless sensor networks;Zigbee;dynamic self-adapting mechanism;ZigBee performance assurance;Wi-Fi Interference;wireless devices;low-power wireless sensor networks;medium access control layer;channel idle state;packet reception rate;PRR;signal strength indicator;packet loss rate;ZigBee;Wireless fidelity;Interference;Measurement;Wireless sensor networks;Sensors;White spaces;Cross technology interference;Wi-Fi;ZigBee;heterogeneous coexistence},
}

@InProceedings{Hachicha2016,
  author    = {M. {Hachicha} and E. {Dammak} and R. B. {Halima} and A. H. {Kacem}},
  title     = {A correct by construction approach for modeling and formalizing self-adaptive systems},
  booktitle = {2016 17th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)},
  year      = {2016},
  pages     = {379-384},
  month     = {May},
  abstract  = {Self-adaptive systems adapt their own behavior autonomously in order to control the satisfaction of their requirements under changing environmental conditions. MAPE (Monitor, Analyze, Plan and Execute) control loops have been used as important models for realizing self-adaptation. Adaptive systems are generally more difficult to design, specify and verify due to their high complexity. In this paper, we propose a formal refinement approach that aims first to model self-adaptive systems based on MAPE control loop. Second, our approach aims to formally specify self-adaptive systems at a high level of abstraction using the Event-B method providing correct by construction software. This formal specification provides a way to verify correctness of self-adaptive systems regarding a number of criteria. We provide a software tool (as an Eclipse plug-in) that supports designers in their architectural choices by defining a set of patterns describing the different ways of organizing MAPE loops, such as Master/Slave, coordinated control and hierarchical control. We illustrate our approach within a marine monitoring environment case study for validation purpose.},
  doi       = {10.1109/SNPD.2016.7515928},
  groups    = {ieee},
  keywords  = {formal specification;self-adjusting systems;software architecture;software tools;architectural choice;marine monitoring environment;hierarchical control;coordinated control;master-slave;software tool;formal specification;abstraction;Event-B method;monitor-analyze-plan-and-execute control loops;MAPE control loop;formal refinement approach;self-adaptive systems;Unified modeling language;Monitoring;Adaptation models;Temperature sensors;Context;Probes;Temperature measurement;Self-adaptive systems;MAPE control loop;Design patterns;Event-B method;UML profile},
}

@InProceedings{BinLiu2001,
  author    = {{Bin Liu} and {Wen Gao} and {Tie-Jun Huang} and {Shi Wang}},
  title     = {Open Bookmark service based on self-adaptive information agents},
  booktitle = {2001 International Conferences on Info-Tech and Info-Net. Proceedings (Cat. No.01EX479)},
  year      = {2001},
  volume    = {6},
  pages     = {136-143 vol.6},
  month     = {Oct},
  abstract  = {As the Web grows, the massive increase in information is placing severe burdens on information retrieval. Automated search engines and information directories with small editorial staff are unable to keep up with the increasing submissions of Web sites. To address the problem, this article introduces the Open Bookmark service based on self-adaptive information agents. One can record favorite URLs and easily manage them in the Web site. All the records are stored in a directory-tree, with different types of records in different directories. To perform information filtering, self-adaptive information agents are established to extract the user's profile from his bookmark records that represent his interests. This makes it possible for a personal and active information service. The agents are trained through interaction with the user so as to represent his interests more exactly. Open Bookmark service is also an open framework, in which information agents communicate with each other and exchange useful information. Thus the quality of information service can be greatly improved. Our application experiences show that Open Bookmark service is much more powerful than a conventional one.},
  doi       = {10.1109/ICII.2001.983018},
  groups    = {ieee},
  keywords  = {information resources;Internet;search engines;information retrieval;software agents;adaptive systems;Open Bookmark service;self-adaptive information agents;information retrieval;search engines;information directories;Web sites;URL;directory-tree;information filtering;user profile;active information service;user interaction;open framework;Internet;Search engines;Information filtering;Information retrieval;Data mining;Web mining;Web sites;Uniform resource locators;Books;Databases;Navigation},
}

@InProceedings{Keymeulen2006,
  author    = {D. {Keymeulen} and R. {Zebulum} and R. {Rajeshuni} and A. {Stoica} and S. {Katkoori} and S. {Graves} and F. {Novak} and C. {Antill}},
  title     = {Self-Adaptive System Based on Field Programmable Gate Array for Extreme Temperature Electronics},
  booktitle = {First NASA/ESA Conference on Adaptive Hardware and Systems (AHS'06)},
  year      = {2006},
  pages     = {296-300},
  month     = {June},
  abstract  = {Space missions often require radiation and extreme-temperature hardened electronics to survive the harsh environments beyond earth's atmosphere. Traditional approaches to preserve electronics incorporate radiation shielding, insulation and redundancy at the expense of power and weight. In this work, we report the implementation of a self-adaptive system using a field programmable gate array (FPGA) and data converters. The self-adaptive system can autonomously recover the lost functionality of a reconfigurable analog array (RAA) integrated circuit (IC). Both the RAA IC and the self-adaptive system are operating in extreme temperatures (from 120 degC down to -180degC). The RAA IC consists of reconfigurable analog blocks interconnected by several switches and programmable by bias voltages. It implements filters/amplifiers with bandwidth up to 20 MHz. The self-adaptive system controls the RAA IC and is realized on commercial-off-the-shelf (COTS) parts. It implements a basic compensation algorithm that corrects a RAA IC in less than a few milliseconds. Experimental results for the cold temperature environment (down to -180degC) demonstrate the feasibility of this approach},
  doi       = {10.1109/AHS.2006.64},
  groups    = {ieee},
  keywords  = {field programmable analogue arrays;field programmable gate arrays;high-temperature electronics;logic CAD;reconfigurable architectures;software packages;self-adaptive system;field programmable gate array;extreme temperature electronics;space mission;data converters;reconfigurable analog array;integrated circuit;bias voltage;commercial-off-the-shelf;COTS;compensation algorithm;Field programmable gate arrays;Temperature;Analog integrated circuits;Field programmable analog arrays;Space missions;Radiation hardening;Terrestrial atmosphere;Insulation;Integrated circuit interconnections;Switches},
}

@InProceedings{Sironi2018,
  author    = {C. F. {Sironi} and M. H. M. {Winands}},
  title     = {Analysis of Self-Adaptive Monte Carlo Tree Search in General Video Game Playing},
  booktitle = {2018 IEEE Conference on Computational Intelligence and Games (CIG)},
  year      = {2018},
  pages     = {1-4},
  month     = {Aug},
  abstract  = {A purpose of General Video Game Playing (GVGP) is to create agents capable of playing many different real-time video games. Instead of using a fixed general strategy, a challenging aspect is devising strategies that adapt the search to each video game being played. Recent work showed that on-line parameter tuning can be used to adapt Monte-Carlo Tree Search (MCTS) in real-time. This paper extends prior work on Self-adaptive Monte-Carlo Tree Search (SA-MCTS) by further testing one of the previously proposed on-line parameter tuning strategies, based on the N-Tuple Bandit Evolutionary Algorithm (NTBEA). Results show that, both for a simple and a more advanced MCTS agent, on-line parameter tuning has impact on performance only for a few GVGP games. Moreover, an informed strategy as NTBEA shows a significant performance increase only in one case. In a real-time domain as GVGP, advanced parameter tuning does not seem very promising. Randomizing pre-selected parameters for each simulation appears to be a robust approach.},
  doi       = {10.1109/CIG.2018.8490402},
  groups    = {ieee},
  issn      = {2325-4289},
  keywords  = {computer games;evolutionary computation;Monte Carlo methods;software agents;tree searching;Self-adaptive Monte Carlo Tree Search;General Video Game Playing;Self-adaptive Monte-Carlo Tree Search;on-line parameter tuning strategies;advanced MCTS agent;GVGP games;advanced parameter tuning;real-time video games;SA-MCTS;n-tuple bandit evolutionary algorithm;NTBEA;pre-selected parameter randomization;Games;Resource management;Tuners;Evolutionary computation;Monte Carlo methods;Real-time systems;Monte-Carlo tree search;self-adaptive search;general video game playing;on-line parameter tuning},
}

@InProceedings{Leeuwen2014,
  author    = {C. J. v. {Leeuwen} and J. M. d. {Gier} and J. A. O. d. {Filho} and Z. {Papp}},
  title     = {Model-Based Architecture Optimization for Self-Adaptive Networked Signal Processing Systems},
  booktitle = {2014 IEEE Eighth International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2014},
  pages     = {187-188},
  month     = {Sep.},
  abstract  = {This short paper introduces a closed-loop design optimization method for self-organizing and self-optimizing networked systems with a focus on signal processing and control. The design process starts with creating graph-based model of the system using a dedicated modelling language. The design is exported and converted to executable code in order to obtain the properties of the runtime behaviour of the system using a simulation environment. The embedding optimization loop iteratively invokes the evaluation and searches for optimal architectures and parameterization in the user defined design space. A distinguishing feature of the tool is that it allows for runtime changes in the models, i.e. it is capable of evaluating runtime reconfigurable architectures. The design space is split into two disjunct sub-spaces: one of them defines the runtime reconfigurability (the self-capabilities), the other defines the region of design time optimization. The tool is demonstrated via a real-time monitoring application.},
  doi       = {10.1109/SASO.2014.37},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {graph theory;signal processing;software architecture;specification languages;model-based architecture optimization;self-adaptive networked signal processing system;closed-loop design optimization method;self-organizing networked systems;self-optimizing networked systems;graph-based model;modelling language;system runtime behaviour;embedding optimization loop;user defined design space;runtime reconfigurable architecture;design space;design time optimization;Unified modeling language;Mathematical model;Optimization;Runtime;Adaptation models;Signal processing;Conferences;model-based design;design optimization;sensor-network simulation},
}

@InProceedings{Ge2010,
  author    = {L. {Ge} and B. {Zhang}},
  title     = {A Modeling Approach on Self-Adaptive Composite Services},
  booktitle = {2010 International Conference on Multimedia Information Networking and Security},
  year      = {2010},
  pages     = {240-244},
  month     = {Nov},
  abstract  = {Self-Adaptation has gained wide attention in SOA (Service Oriented Architecture). Composite services adjust dynamically to the change of environment during execution through adaptation. Most existing performance analyzing methods on composite service neglect the distinguished feature of environment, which impedes their application in self-adaptive composite services. This paper proposes a stochastic Petri net based method on modeling an environment-aware self-adaptive strategy which is also suggested in this paper. Our method builds separate models for both service and environment, which would contribute to model the environment checking procedure in EaSA. As we discussed in the paper, the idea of separate model for service and environment would play a significant role in modeling self-adaptive composite services.},
  doi       = {10.1109/MINES.2010.60},
  groups    = {ieee},
  issn      = {2162-8998},
  keywords  = {Petri nets;service-oriented architecture;software performance evaluation;stochastic processes;self-adaptive composite services;SOA;service oriented architecture;execution;performance analysis;stochastic Petri net;EaSA;Adaptation model;Reliability;Stochastic processes;Analytical models;Service oriented architecture;Predictive models;Environment-aware Self-adaption;EaSA;Performace Model;Stochastic Petri Net},
}

@InProceedings{Jahan2017,
  author    = {S. {Jahan} and A. {Marshall} and R. {Gamble}},
  title     = {Visualizing Self-Adaptive Plan Simulations Given Embedded Verification Concerns},
  booktitle = {2017 IEEE 2nd International Workshops on Foundations and Applications of Self* Systems (FAS*W)},
  year      = {2017},
  pages     = {389-390},
  month     = {Sep.},
  abstract  = {A system that dynamically self-adapts at runtime, should comply with critical requirements. However, runtime verification is difficult even when the system was originally formulated to expect adaptation and allowable changes are preconfigured or prespecified. Our approach examines verification processes originally performed for compliance with system requirements to identify specific verification concerns, such as variables, safety and liveness property conditions, and architecture properties. The expectation is that if a verification concern is impacted by an adaptation then the reuse of the original verification process may be restricted. If verification process reuse is inhibited, then there is increased likelihood that the requirements relying on that verification concern may no longer be guaranteed. In this demonstration, we illustrate our approach to take identified verification concerns for each requirement and embed them as checkpoints within the code, given the flow of the verification process from which they were derived. Simulating an adaptation plan produces log files based on which checkpoints are reached. Failure to complete a path through the checkpoints without raising a flag indicates that the verification process may not be repeatable and the adaptation plan may be risky to perform. We visualize the paths using ProM which shows where and how an adaptation plan may be problematic.},
  doi       = {10.1109/FAS-W.2017.185},
  groups    = {ieee},
  keywords  = {checkpointing;data visualisation;embedded systems;formal verification;safety-critical software;self-adaptive plan simulations;embedded verification concerns;runtime verification;system requirements;safety;liveness property conditions;log files;checkpoints;PROM;Visualization;Adaptation models;Runtime;Computer architecture;Fuels;Conferences;verification;self-adaptation;Linear Temporal Logic;verification process reuse;adaptive plans;ProM},
}

@InProceedings{Krupitzer2013,
  author    = {C. {Krupitzer} and S. {Vansyckel} and C. {Becker}},
  title     = {FESAS: Towards a Framework for Engineering Self-Adaptive Systems},
  booktitle = {2013 IEEE 7th International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2013},
  pages     = {263-264},
  month     = {Sep.},
  abstract  = {The complexity and size of information systems are growing, resulting in an increasing effort for maintenance. Self-adaptive systems (SAS) that autonomously adapt to changes in the environment or in the system itself (e.g. disfunction of components) can be a solution. So far, the development of SAS is frequently tailored to specific use case requirements. The creation of frameworks with reusable process elements and system components is often neglected. However, with such a framework developing SAS would become faster and less error prone. This work addresses this gap by providing a framework for engineering SAS.},
  doi       = {10.1109/SASO.2013.36},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {software engineering;FESAS framework;engineering self-adaptive systems framework;SAS development;information systems;use case requirements;reusable process elements;system components;Adaptation models;Synthetic aperture sonar;Libraries;Object oriented modeling;Middleware;Complexity theory;Runtime;Self-Adaptive Systems;Framework;Adaptation},
}

@InProceedings{Gentzsch2005,
  author    = {W. {Gentzsch} and K. {Iwano} and D. {Johnston-Watt} and M. A. {Minhas} and M. {Yousif}},
  title     = {Self-Adaptable Autonomic Computing Systems: An Industry View},
  booktitle = {16th International Workshop on Database and Expert Systems Applications (DEXA'05)},
  year      = {2005},
  pages     = {201-205},
  month     = {Aug},
  abstract  = {This paper reflects different industry views on self-adaptable autonomic computing, as perceived by representatives from Enigmatec, IBM, Intel, MCNC, and Oracle. The statements in this paper serve as starting points for the panel discussion on methodologies, engineering requirements, and technical challenges, during the SAACS Conference},
  doi       = {10.1109/DEXA.2005.173},
  groups    = {ieee},
  issn      = {2378-3915},
  keywords  = {DP industry;DP management;self-adjusting systems;software houses;self-adaptable autonomic computing systems;industry view;Enigmatec;IBM;Intel;MCNC;Oracle;engineering requirements;technical challenges;SAACS Conference;Computer industry;Computer architecture;Monitoring;Medical services;Collaborative work;Protection;Time to market;Financial management;Management information systems;Service oriented architecture},
}

@InProceedings{Shyam2019,
  author    = {G. K. {Shyam} and F. {Azam}},
  title     = {Agent-based Self-Adaptive System for Cloud},
  booktitle = {2019 1st International Conference on Advances in Information Technology (ICAIT)},
  year      = {2019},
  pages     = {59-63},
  month     = {July},
  abstract  = {There is a need to analyze the appropriate assets/resource requirements and identify the reason for Quality-of-Service (QoS) degradation (if any), and ensure better assets/resource allocation decisions in Cloud computing scenario. In this work, agents are used to achieve the same through the condition of assets/resource at run-time and about expectations by clients. We have developed an agent application learning system for decision making including readily available globalized and localized information, and client assets/resource requirements etc. Results demonstrate that the proposed system can enhance assets/resource utility, while fulfilling the QoS requested by clients.},
  doi       = {10.1109/ICAIT47043.2019.8987406},
  groups    = {ieee},
  keywords  = {cloud computing;decision making;multi-agent systems;quality of service;resource allocation;software agents;agent-based self-adaptive system;Quality-of-Service degradation;QoS;Cloud computing scenario;agent application learning system;decision making;localized information;globalized information},
}

@InProceedings{Zhiwu2009,
  author    = {D. {Zhiwu} and L. {Hongwei}},
  title     = {Research on Self-Adaptived Algorithm in Data Distributed Management},
  booktitle = {2009 International Forum on Information Technology and Applications},
  year      = {2009},
  volume    = {3},
  pages     = {150-153},
  month     = {May},
  abstract  = {In order to resolve the general adaptive problem of the dynamic grid-based algorithm in distributed interactive simulation based on HLA, the adaptive dynamic grid-based algorithm is suggested out through thoroughly researching the theory proof and formula deduction of the dynamic grid-based algorithm in this paper. The availability of dynamic grid-based algorithm is studied under three special situations by theory proving and formula deducing dwell on, and the results of instance imply that the dynamic grid-based algorithm is availability under three special situations by changing the implement process of the dynamic grid-based algorithm. The conclusions show that the adaptive dynamic grid-based algorithm is self-adaptive, can reach the goal of the data distributed management and hugely improves the effect and efficiency of the high complexity simulation system based on HLA.},
  doi       = {10.1109/IFITA.2009.474},
  groups    = {ieee},
  keywords  = {grid computing;software architecture;theorem proving;self-adaptived algorithm;data distributed management;dynamic grid-based algorithm;distributed interactive simulation;high level architecture;theory proving;formula deduction;Heuristic algorithms;Routing;Filters;Distributed decision making;Information technology;Finance;Financial management;Technology management;Libraries;Filtering theory;data distributed management;dynamic grid-based method;adaptation},
}

@InProceedings{Xin2006,
  author    = {M. {Xin} and C. {Wu} and W. {Li}},
  title     = {An Approach to Self-Adaptive Active Control Mechanism to Support E-Government Based On Multi-Agent System},
  booktitle = {2006 5th IEEE International Conference on Cognitive Informatics},
  year      = {2006},
  volume    = {2},
  pages     = {711-715},
  month     = {July},
  abstract  = {In the distributed CSCW system, a cooperative workflow will always be interacted with many kinds of services during their interactive process, which make the application have much high demand for the quality of active control mechanism to support e-government platform. On the basis of discussing multi-agent system (MAS) interactive architecture under distributed network environment, it takes emphasis research on the active control strategy to support e-government platform. Then, a multi-agent supported self-adaptive structure of e-government is proposed to deal with multi-domain distributed applications in this paper. Furthermore, both the self-adaptive interactive control mechanism and communication protocol are implemented under network environment. Finally, it realizes the dynamic model of active control mechanism and carries out the self-adaptive environment, so it make the control structure be self-adaptive to the application of e-government platform effectively and satisfactorily},
  doi       = {10.1109/COGINF.2006.365576},
  groups    = {ieee},
  keywords  = {adaptive control;distributed processing;government data processing;groupware;multi-agent systems;protocols;software architecture;self-adaptive active control;e-government;multiagent system;distributed system;computer supported cooperative work system;cooperative workflow;interactive architecture;interactive control;communication protocol;Control systems;Electronic government;Multiagent systems;Communication system control;Collaborative work;Quality of service;Computer science;Resource management;Protocols;Decision making;Multi-agent system;active control;self-adaptive mechanism;architecture;E-government},
}

@InProceedings{Jiuxin2007,
  author    = {C. {Jiuxin} and M. {Bo} and L. {Junzhou} and G. {Liang}},
  title     = {Self-Adapting and Agent-based Personalized Courseware Model},
  booktitle = {21st International Conference on Advanced Information Networking and Applications (AINA '07)},
  year      = {2007},
  pages     = {695-701},
  month     = {May},
  abstract  = {In this paper, a super-media courseware system infrastructure based on the knowledge description is propose which features in separation of knowledge description from knowledge entity. Using agent technology, a personalized learning environment is developed with dynamical, real-time user information matching. The courseware system infrastructure is not only capable of balancing network load, but also proves self-adaptive to the users' circumstances. The simulation tests are run to demonstrate the advantage in performance.},
  doi       = {10.1109/AINA.2007.127},
  groups    = {ieee},
  issn      = {2332-5658},
  keywords  = {courseware;grid computing;resource allocation;software agents;agent-based personalized courseware model;knowledge description;knowledge entity;real-time user information matching;network load balancing;self-adaptive system;grid computing;Courseware;Laboratories;Testing;Material storage;Electronic learning;Mesh generation;Computer science;Knowledge engineering;Information security;Computer networks},
}

@Article{Khan2008,
  author   = {M. U. {Khan} and R. {Reichle} and K. {Geihs}},
  title    = {Architectural Constraints in the Model-Driven Development of Self-Adaptive Applications},
  journal  = {IEEE Distributed Systems Online},
  year     = {2008},
  volume   = {9},
  number   = {7},
  pages    = {1-1},
  month    = {July},
  issn     = {1541-4922},
  abstract = {In component-based software development, a composition of connected components represents a software system's architecture. This component framework supports adaptation through application variability. The adaptation decision is made at runtime by resolving the variation points and computing the utility of all application variants. Following the application variability model, a huge number of application variants may arise, many of which are not feasible in reality. Architectural constraints may be applied to filter out such infeasible variants before checking their utilities. This article presents an approach to specify architectural constraints while following a model-driven development approach.},
  doi      = {10.1109/MDSO.2008.19},
  groups   = {ieee},
  keywords = {object-oriented programming;software architecture;self-adaptive applications;component-based software development;software system architecture;adaptation decision;model-driven development approach;Application software;Runtime;Unified modeling language;Art;Personal digital assistants;Batteries;Adaptation model;Middleware;Scalability;Smart phones;self-adaptive applications;model-driven development;architectural constraints;variability;component-based software development},
}

@InProceedings{Pauna2012,
  author    = {A. {Pauna}},
  title     = {Improved self adaptive honeypots capable of detecting rootkit malware},
  booktitle = {2012 9th International Conference on Communications (COMM)},
  year      = {2012},
  pages     = {281-284},
  month     = {June},
  abstract  = {The latest trends in the development of high interaction honeypots show that adaptive honeypots, which lure attackers by changing their behavior, are a feasible solution for gathering of as much information as possible about them. Adaptive Honeypot systems based on Game theory are in a development stage and the systems created until now are focused mostly on applying game-theoretic concepts for the configuration and reciprocal actions of high-interaction honeypots [1]. The paper presents a tested proof of concept system that integrates dynamic taint analysis with an existing adaptive honeypot in order to detect the rootkit malware that the attacker installs.},
  doi       = {10.1109/ICComm.2012.6262612},
  groups    = {ieee},
  keywords  = {computer network security;game theory;invasive software;self-adaptive honeypots;rootkit malware detection;game theory;high-interaction honeypot development;dynamic taint analysis;Malware;Adaptive systems;Monitoring;Unified modeling language;Kernel;Game theory;Organizations;honeypot;game theory;dynamic taint analysis;user mode linux},
}

@InProceedings{Franke2010,
  author    = {C. {Franke} and M. {Fritzsche} and S. {Pacheco-Sanchez}},
  title     = {Self-Adaptive Model-Based Performance Management in Industrial Data Centers},
  booktitle = {2010 Seventh IEEE International Conference and Workshops on Engineering of Autonomic and Autonomous Systems},
  year      = {2010},
  pages     = {33-42},
  month     = {March},
  abstract  = {System Management of large Data Centers addresses both the initial provisioning of software systems on top of the available infrastructure and the operational management of resources at runtime. The system management aims to optimize the provider's defined objectives, while satisfying the given system and customers constraints. In this paper, we propose an autonomous system management approach, which incorporates, if available, software models of business applications and the applications' management experiences from the past. We discuss existing approaches and present an extended management architecture that is built and trained at design-time and calibrated at runtime.},
  doi       = {10.1109/EASe.2010.13},
  groups    = {ieee},
  issn      = {2168-1872},
  keywords  = {business data processing;computer centres;software agents;software management;software performance evaluation;self-adaptive model-based performance management;industrial data centers;system management;software systems;operational resource management;customers constraints;business applications;extended management architecture;autonomous system management;Monitoring;Resource management;Ontologies;Proposals;Maintenance;Software systems;Neural networks;Computer network management;Technology management;Scalability},
}

@InProceedings{Bunte2019,
  author    = {A. {Bunte} and P. {Wunderlich} and N. {Moriz} and P. {Li} and A. {Mankowski} and A. {Rogalla} and O. {Niggemann}},
  title     = {Why Symbolic AI is a Key Technology for Self-Adaption in the Context of CPPS},
  booktitle = {2019 24th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA)},
  year      = {2019},
  pages     = {1701-1704},
  month     = {Sep.},
  abstract  = {The vision of smart factories are self-diagnosing, self-optimizing and self-adapting Cyber-Physical Production Systems (CPPS). Self-adaption, on which this paper focuses on, means that the CPPS can adapt itself to a changing environment, so that the downtime costs can be reduced by using the system modules most efficient. An architecture is introduced and demonstrated on a concrete use case to show how this capability can be achieved by using different Artificial Intelligence (AI) techniques. For each technique, we define challenges that have to be solved to use it in a real world environment. Additionally, we illustrate the symbolic and subsymbolic AI and argue why symbolic AI is an important aspect in the context of CPPS.},
  doi       = {10.1109/ETFA.2019.8869082},
  groups    = {ieee},
  issn      = {1946-0759},
  keywords  = {artificial intelligence;cyber-physical systems;factory automation;production engineering computing;CPPS;changing environment;downtime costs;artificial intelligence techniques;world environment;symbolic AI;smart factories;self-adaption cyber-physical production systems;self-optimizing cyber-physical production systems;self-adapting cyber-physical production systems;system modules;subsymbolic AI;Planning;Artificial intelligence;Data analysis;Process planning;Automation;Adaptation models},
}

@InProceedings{Nakagawa2008,
  author    = {H. {Nakagawa} and A. {Ohsuga} and S. {Honiden}},
  title     = {Constructing Self-Adaptive Systems Using a KAOS Model},
  booktitle = {2008 Second IEEE International Conference on Self-Adaptive and Self-Organizing Systems Workshops},
  year      = {2008},
  pages     = {132-137},
  month     = {Oct},
  abstract  = {Self-adaptive systems have recently attracted attention as flexible software because they can change their own behaviors to react to changes in their environments. Such systems have also attracted attention in the field of pervasive computing. This paper describes our approach to developing self-adaptive systems utilizing a requirements model to build the system architecture. This paper also discusses the implementation style we used using the acquired architecture model, and our evaluation of the feasibility of our development process through a case study.},
  doi       = {10.1109/SASOW.2008.35},
  groups    = {ieee},
  keywords  = {software architecture;ubiquitous computing;self-adaptive systems;KAOS model;flexible software;pervasive computing;requirements model;Computer architecture;Cleaning;Robots;Conferences;Informatics;Pervasive computing;Software architecture;Software systems;Programming;Guidelines;self-adaptive systems;requirements analysis;software architecture},
}

@InProceedings{ZizhongChen2004,
  author    = {{Zizhong Chen} and J. {Dongarra} and P. {Luszczek} and K. {Roche}},
  title     = {The LAPACK for clusters project: an example of self adapting numerical software},
  booktitle = {37th Annual Hawaii International Conference on System Sciences, 2004. Proceedings of the},
  year      = {2004},
  pages     = {10 pp.-},
  month     = {Jan},
  abstract  = {This article describes the context, design, and recent development of the LAPACK for clusters (LFC) project (LAPACK stands for Linear Algebra PACKage). It has been developed in the framework of self-adapting numerical software (SANS) since we believe such an approach can deliver the convenience and ease of use of existing sequential environments bundled with the power and versatility of highly-tuned parallel codes that execute on clusters. Accomplishing this task is far from trivial as we argue in the paper by presenting pertinent case studies and possible usage scenarios.},
  doi       = {10.1109/HICSS.2004.1265664},
  groups    = {ieee},
  keywords  = {mathematics computing;linear algebra;LAPACK;clusters project;self-adapting numerical software;linear algebra package;Application software;Linear algebra;Storage area networks;Computational modeling;Hardware;Laboratories;Software algorithms;Linear systems;Lifting equipment;Software packages},
}

@InProceedings{Fredericks2015,
  author    = {E. M. {Fredericks} and B. H. C. {Cheng}},
  title     = {An Empirical Analysis of Providing Assurance for Self-Adaptive Systems at Different Levels of Abstraction in the Face of Uncertainty},
  booktitle = {2015 IEEE/ACM 8th International Workshop on Search-Based Software Testing},
  year      = {2015},
  pages     = {8-14},
  month     = {May},
  abstract  = {Self-adaptive systems (SAS) must frequently continue to deliver acceptable behavior at run time even in the face of uncertainty. Particularly, SAS applications can self-reconfigure in response to changing or unexpected environmental conditions and must therefore ensure that the system performs as expected. Assurance can be addressed at both design time and run time, where environmental uncertainty poses research challenges for both settings. This paper presents empirical results from a case study in which search-based software engineering techniques have been systematically applied at different levels of abstraction, including requirements analysis, code implementation, and run-time validation, to a remote data mirroring application that must efficiently diffuse data while experiencing adverse operating conditions. Experimental results suggest that our techniques perform better in terms of providing assurance than alternative software engineering techniques at each level of abstraction.},
  doi       = {10.1109/SBST.2015.9},
  groups    = {ieee},
  keywords  = {environmental factors;formal verification;software engineering;self-adaptive system;SAS application;environmental condition;environmental uncertainty;search-based software engineering technique;requirements analysis;runtime validation;remote data mirroring application;Synthetic aperture sonar;Uncertainty;Context;Mirrors;Mathematical model;Testing;Adaptation models;assurance;search-based software engineering;self-adaptive systems},
}

@InProceedings{Barros2005,
  author    = {F. J. {Barros}},
  title     = {Requirements for Modeling and Simulation of Self-Adaptive Systems: A Hierarchical and Modular Approach},
  booktitle = {16th International Workshop on Database and Expert Systems Applications (DEXA'05)},
  year      = {2005},
  pages     = {186-190},
  month     = {Aug},
  abstract  = {Complex systems exhibiting structural changes should be represented by models that mimic these transformations. This direct representation of the reconfigurations occurring in real systems produces more intuitive models that are easier to build and test. The heterogeneous flow system specification (HFSS) is a comprehensive formalism that can describe a large variety of models using a unifying representation for both continuous and discrete event systems. The HFSS formalism represents models in a hierarchical and modular form. This explicit representation of structure makes possible to describe self-adaptive systems. As an application of the HFSS formalism, we introduce a representation of a self-adaptive communication network based on fluid queues},
  doi       = {10.1109/DEXA.2005.164},
  groups    = {ieee},
  issn      = {2378-3915},
  keywords  = {discrete event systems;distributed processing;formal specification;modelling;self-adjusting systems;simulation;modeling requirements;simulation requirements;self-adaptive systems;heterogeneous flow system specification;discrete event systems;self-adaptive communication network;fluid queues;Biological systems;System testing;Discrete event systems;Application software;Communication networks;Adaptive systems;Computer architecture;Manufacturing systems;Software architecture;Production},
}

@InProceedings{Yu2008,
  author    = {L. {Yu} and Y. {Li} and X. {Xia}},
  title     = {Image Encryption Algorithm Based on Self-Adaptive Symmetrical-Coupled Toggle Cellular Automata},
  booktitle = {2008 Congress on Image and Signal Processing},
  year      = {2008},
  volume    = {3},
  pages     = {32-36},
  month     = {May},
  abstract  = {In this paper, a novel image encryption algorithm, which based on one dimension cellular automata (1 ? D,CA), is proposed. Before encryption an original image is separated into two parts. Accordingly, secret key is also divided into two subkeys in order to encrypt the two parts of the image. Corresponding to the two subsections of image, only obtain two parts of cipher text can a receiver decrypt it correctly. The key space of this encryption system not only bases on secret key, which generated by a keystream generator, but also depends on inverse rules of toggle cellular automata. Furthermore, symmetrical-coupled structure of CAs simplifies the cryptosystem's hardware. The proposed image encryption method satisfies the properties of confusion and diffusion due to the wonderful CA substitution. The characteristics of the proposed image encryption system are sharable hardware structure by encryption and decryption, key sharing, self-adaptive inverse rules, very large number of keys and favorable fault tolerance. Simulation results for gray image show that the proposed image encryption method works as out expectations.},
  doi       = {10.1109/CISP.2008.48},
  groups    = {ieee},
  keywords  = {Cryptography;Signal processing algorithms;Software algorithms;Computer science;Content addressable storage;Hardware;Physics computing;Computational modeling;Automata;Software engineering;image encryption;toggle cellular automata;key-sharing and divided-deposit;symmetrical-coupled},
}

@InProceedings{Lu2012,
  author    = {Y. {Lu} and X. {Jiang} and W. {Li} and Y. {Yang}},
  title     = {A New Trust Region Method with Self-adaptive Update Rules for Unconstrained Optimization},
  booktitle = {2012 Fifth International Joint Conference on Computational Sciences and Optimization},
  year      = {2012},
  pages     = {234-236},
  month     = {June},
  abstract  = {We propose a new class of trust region method with a self-adaptive trust region radius update rules. Trust region radius is automatically adjusted according to the weighted sum of the ratios between the actual reduction and the prediction reduction. At some assumptions, the global convergence are proved. Finally, numerical experiments show that the method is robust and effective.},
  doi       = {10.1109/CSO.2012.59},
  groups    = {ieee},
  keywords  = {convergence;optimisation;trust region method;self-adaptive update rules;unconstrained optimization;self-adaptive trust region radius update rules;actual reduction;prediction reduction;global convergence;Optimization;Convergence;Educational institutions;Software algorithms;Software;trust region method;unconstrained optimization;global convergence},
}

@InProceedings{Moreno2018a,
  author    = {G. A. {Moreno} and J. {C��mara} and D. {Garlan} and M. {Klein}},
  title     = {Uncertainty Reduction in Self-Adaptive Systems},
  booktitle = {2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2018},
  pages     = {51-57},
  month     = {May},
  abstract  = {Self-adaptive systems depend on models of themselves and their environment to decide whether and how to adapt, but these models are often affected by uncertainty. While current adaptation decision approaches are able to model and reason about this uncertainty, they do not consider ways to reduce it. This presents an opportunity for improving decision-making in self-adaptive systems, because reducing uncertainty results in a better characterization of the current and future states of the system and the environment (at some cost), which in turn supports making better adaptation decisions. We propose uncertainty reduction as the natural next step in uncertainty management in the field of self-adaptive systems. This requires both an approach to decide when to reduce uncertainty, and a catalog of tactics to reduce different kinds of uncertainty. We present an example of such a decision, examples of uncertainty reduction tactics, and describe how uncertainty reduction requires changes to the different activities in the typical self-adaptation loop.},
  groups    = {ieee},
  issn      = {2157-2305},
  keywords  = {decision making;software fault tolerance;self-adaptive systems;adaptation decisions;uncertainty management;decision-making;uncertainty reduction;Uncertainty;Servers;Computational modeling;Adaptation models;Decision making;Adaptive systems;self adaptive;uncertainty;tactics},
}

@InProceedings{Huang2015b,
  author    = {C. {Huang} and H. {Chen} and T. {Huang} and P. {Chen} and Y. {Tzeng}},
  title     = {A vehicle information security system with self-adaptation},
  booktitle = {2015 IEEE International Conference on Consumer Electronics - Taiwan},
  year      = {2015},
  pages     = {276-277},
  month     = {June},
  abstract  = {To provide complete vehicle information protection mechanism, this work proposes a vehicle information security system (VISS) with self-adaptation. The VISS integrates the concept of role-based access control, so that it can support multiuser access mechanism to avoid illegal modification. Further, all the access control policies for the information are realized as hardware circuits, so that the VISS provides irregular access method to enhance the protection of vehicle information. To ensure the security of data transfers on the network and to meet real-time requirements, the cryptographic functions in the VISS are also implemented in hardware. By integrating the partial reconfiguration technique into the design, the VISS can dynamically adapt its hardware functions, including the cryptographic functions and the access control functions, to different system requirements. Our experiments have also demonstrated the VISS can accelerate by up to 3.75x the processing time required by using the software solution, even though the frequency of the VISS is much lower than that of software solution.},
  doi       = {10.1109/ICCE-TW.2015.7216896},
  groups    = {ieee},
  keywords  = {authorisation;automobile industry;cryptography;vehicle information security system;vehicle information protection mechanism;VISS;access control policies;data transfers;cryptographic functions;partial reconfiguration technique;Vehicles;Hardware;Cryptography;Access control;Software;Field programmable gate arrays;Information security},
}

@InProceedings{Fresi2015,
  author    = {F. {Fresi}},
  title     = {Self-adaptation technique for bandwidth-variable transponders},
  booktitle = {2015 International Conference on Photonics in Switching (PS)},
  year      = {2015},
  pages     = {157-159},
  month     = {Sep.},
  abstract  = {Self-adaptive technique for Bandwidth Variable Transponders (BVTs) supporting superchannels in next generation optical networks is proposed. Automatic transponder configuration includes chromatic dispersion estimation, local oscillator fine tuning, maximization of information rate, subcarrier spacing optimization, while monitoring quality of transmission (QoT). The proposed procedure has been exploited in 1Tb/s field trial transmission over 1300 km.},
  doi       = {10.1109/PS.2015.7328985},
  groups    = {ieee},
  keywords  = {next generation networks;transponders;QoT;quality of transmission;subcarrier spacing optimization;information rate maximization;local oscillator fine tuning;chromatic dispersion estimation;automatic transponder;next generation optical networks;bandwidth variable transponders;self-adaptive technique;self-adaptation technique;bit rate 1 Tbit/s;distance 1300 km;Photonics;Optical switches;Optical fiber networks;flexible grid;flex-grid;time frequency packing (TFP);bandwidth variable transponder (BVT);monitoring;software defined network (SDN);elastic optical networks (EON)},
}
{DeNittoPerson��2019,
  author        = {V. {De Nitto Person��} and V. {Grassi}},
  title         = {Architectural Issues for Self-Adaptive Service Migration Management in Mobile Edge Computing Scenarios},
  booktitle     = {2019 IEEE International Conference on Edge Computing (EDGE)},
  year          = {2019},
  pages         = {27-29},
  month         = {July},
  __markedentry = {[guan:6]},
  abstract      = {We present a simple analytical model as a first step toward a thorough investigation of the effectiveness of different architectural solutions for the management of service migration in mobile edge computing scenarios.},
  doi           = {10.1109/EDGE.2019.00020},
  keywords      = {mobile computing;service-oriented architecture;telecommunication network management;self-adaptive service migration management;mobile edge computing scenarios;Mobile handsets;Computer architecture;Cloud computing;Optimized production technology;Planning;Edge computing;Adaptation models;mobile edge computing;service migration;self adaptation;software architecture},
}

@InProceedings{Park2015,
  author    = {S. {Park} and J. {Song}},
  title     = {Self-adaptive middleware framework for Internet of Things},
  booktitle = {2015 IEEE 4th Global Conference on Consumer Electronics (GCCE)},
  year      = {2015},
  pages     = {81-82},
  month     = {Oct},
  abstract  = {A recent trend in Internet of Things (IoT) is to connect billions of ordinary objects to the Internet and allows these objects to exchange data for smarter services. As smartphones have widely spread in the world and generate various data, it will represent a large portion of heterogeneous interconnected IoT devices. This trend influence users to perceive that the usability of the smartphone mobile application represents the usability of the general IoT service. This article introduces a novel IoT middleware framework to improve the usability of a mobile application, and thereby improve the usability of the IoT service provided through the mobile application. The core idea of our self-adaptive IoT middleware framework is to monitor and analyze application user's behavior, identify symptoms reducing application usability, and autonomously improve the application's interface for users without any intervention from the application developer. The effectiveness of the proposed framework is shown through case studies comparing several different mobile applications from a same business domain.},
  doi       = {10.1109/GCCE.2015.7398741},
  groups    = {ieee},
  keywords  = {Internet of Things;middleware;mobile computing;smart phones;self-adaptive middleware framework;Internet of Things;data exchange;smart phone mobile application;IoT middleware framework;IoT service usability;mobile application;Mobile applications;Usability;Middleware;Graphical user interfaces;Internet of things;Mobile communication;Interent of Things;self-adaptive software;usability of mobile application},
}

@InProceedings{Scionti2014,
  author    = {A. {Scionti} and S. {Kavvadias} and R. {Giorgi}},
  title     = {Dynamic power reduction in self-adaptive embedded systems through benchmark analysis},
  booktitle = {2014 3rd Mediterranean Conference on Embedded Computing (MECO)},
  year      = {2014},
  pages     = {62-65},
  month     = {June},
  abstract  = {Discovering the most appropriate reconfiguration instants for improving performance and lowering power consumption is not a trivial problem. In this paper we show the benefit in terms of performance gain and power reduction of the dynamic adaptation (e.g., cache size, clock frequency, and core issue-width) of an embedded platform, through a design space exploration campaign, and focusing on a relevant case study. To this end, we analyze a set of benchmarks belonging to the embedded application domain with the aim of illustrating how the appropriate selection of reconfiguration instants can positively influence system performance and power consumption. Experimental results using the cjpeg benchmark show that power consumption can be reduced by an average of 22%. Our methodology can be used to create a set of run-time management policies for driving the adaptation process.},
  doi       = {10.1109/MECO.2014.6862659},
  groups    = {ieee},
  issn      = {2377-5475},
  keywords  = {Benchmark testing;Power demand;Embedded systems;Clocks;Reconfigurable architectures;reconfigurable architectures;low-power electronics;embedded software},
}

@InProceedings{Piel2011,
  author    = {��. {Piel} and A. {Gonzalez-Sanchez} and H. {Gross} and A. J. C. v. {Gemund}},
  title     = {Spectrum-Based Health Monitoring for Self-Adaptive Systems},
  booktitle = {2011 IEEE Fifth International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2011},
  pages     = {99-108},
  month     = {Oct},
  abstract  = {An essential requirement for the operation of self-adaptive systems is information about their internal health state, i.e., the extent to which the constituent software and hardware components are still operating reliably. Accurate health information enables systems to recover automatically from (intermittent) failures in their components through selective restarting, or self-reconfiguration. This paper explores and assesses the utility of Spectrum-based Fault localisation (SFL) combined with automatic health monitoring for self-adaptive systems. Their applicability is evaluated through simulation of online diagnosis scenarios, and through implementation in an adaptive surveillance system inspired by our industrial partner. The results of the studies performed confirm that the combination of SFL with online monitoring can successfully provide health information and locate problematic components, so that adequate self-* techniques can be deployed.},
  doi       = {10.1109/SASO.2011.21},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {fault diagnosis;object-oriented programming;self-adjusting systems;software fault tolerance;system recovery;spectrum-based health monitoring;self-adaptive systems;internal health state;software components;hardware components;health information;intermittent failures;self-reconfiguration;spectrum-based fault localisation;SFL;automatic health monitoring;online diagnosis scenarios;adaptive surveillance system;online monitoring;problematic components;Monitoring;Business;Computational modeling;Topology;Testing;Adaptive systems;Context;Online diagnosis;runtime;self-monitoring;system health;fault localisation},
}

@InProceedings{Song2019,
  author    = {Z. {Song} and C. {Tang} and X. {Chen} and S. {Song} and J. {Ji}},
  title     = {A Self-adaptive Mechanism Embedded Gravitational Search Algorithm},
  booktitle = {2019 12th International Symposium on Computational Intelligence and Design (ISCID)},
  year      = {2019},
  volume    = {1},
  pages     = {108-112},
  month     = {Dec},
  abstract  = {Gravitational search algorithm (GSA) has attracted more and more attention in dealing with complex optimization problems. However, it still suffers from some major drawbacks, such as poor exploitation. This paper has proposed a novel self-adaptive chaotic search mechanism embedded GSA (SA-GSA), in which different chaotic maps are utilized to guide the local search in a self-adaptive way. Specifically, instead of defining the search range randomly and arbitrarily, the distance between distinct individuals has been utilized in the current population as the search range. Thus the search range will decrease synchronously according to the convergence speed of the population, which is thought to improve the exploitation ability of GSA effectively. To evaluate the performance of SA-GSA, we compare it with classic GSA and the classic chaotic GSA (CGSA) on 23 benchmark optimization problems. The experimental results and statistic analysis verify that SA-GSA is superior to its competitors in terms of convergence speed and solution accuracy rate.},
  doi       = {10.1109/ISCID.2019.00031},
  groups    = {ieee},
  issn      = {2473-3547},
  keywords  = {chaos;optimisation;search problems;self-adaptive mechanism embedded gravitational search algorithm;complex optimization problems;novel self-adaptive chaotic search mechanism;SA-GSA;different chaotic maps;local search;search range;classic chaotic GSA;optimization problems;Optimization;Search problems;Sociology;Statistics;Benchmark testing;Convergence;Gravity;gravitational search algorithm;self-adaptive;chaotic;local search;exploitation},
}

@InProceedings{ShiSuming2010,
  author    = {{Shi Suming} and {Yang Zhi} and {Yu Min} and {Peng Yali}},
  title     = {Logarithm increase-linear decrease backoff algorithm based on self-adaptive optimal contention window},
  booktitle = {2010 International Conference on Computer Application and System Modeling (ICCASM 2010)},
  year      = {2010},
  volume    = {10},
  pages     = {V10-657-V10-661},
  month     = {Oct},
  abstract  = {According to different sizes of wireless sensor network (WSN), we propose a novel backoff algorithm of self-adaptive optimal contention window (SA-LL). The algorithm uses the number of nodes of competitive channel as logarithm function parameter, it not only dynamically adjusts contention window to optimal value but also makes the trend of backoff more reasonable. At the same time, the algorithm uses probability of transmission for linear parameter. It not only effectively resolves the disadvantages of BEB algorithm that it doesn't record the current congestion and backoff times but also improves the problem of slowly linear change of MILD algorithm. Simulation results show that the algorithm can accurately estimate the congestion of the network and can improve the performances of the throughput, delay and fair.},
  doi       = {10.1109/ICCASM.2010.5622226},
  groups    = {ieee},
  issn      = {2161-9077},
  keywords  = {wireless sensor networks;logarithm increase linear decrease backoff algorithm;self-adaptive optimal contention window;wireless sensor network;logarithm function parameter;MILD algorithm;Wireless sensor networks;WSN;contention window;probability of transmission;backoff algorithm},
}

@InProceedings{Li2018b,
  author    = {X. {Li} and D. {Li}},
  title     = {Dynamic Self-Adaptive Chaotic Particle Swarm Optimization Algorithm in Optimal Control of Public Transit Priority Traffic Signal},
  booktitle = {2018 10th International Conference on Intelligent Human-Machine Systems and Cybernetics (IHMSC)},
  year      = {2018},
  volume    = {02},
  pages     = {208-213},
  month     = {Aug},
  abstract  = {Public transit priority is an important part of advanced public transportation system, and the optimal control of traffic signal in intersections of urban roads under the public transit priority can effectively improve the efficiency of urban public transportation. In order to realize public transit priority and meet the requirements of social vehicles flow, a traffic signal timing model for single intersections with the goal of minimum delay of each passenger is established, and a dynamic self-adaptive chaotic particles swarm optimization algorithm is proposed to solve the model. This algorithm introduces dynamic self-adaptive strategy and chaotic optimization strategy to solve the prematurity and low optimization ability of standard particle swarm optimization algorithm. Simulation experiments show that the proposed model and algorithm have good practicability; a better signal timing plan can be obtained through the proposed algorithm, and delays decrease to certain extent in social vehicles, public transit and each passenger.},
  doi       = {10.1109/IHMSC.2018.10154},
  groups    = {ieee},
  keywords  = {chaos;optimal control;particle swarm optimisation;public transport;road traffic control;road vehicles;optimal control;public transit priority traffic signal;advanced public transportation system;urban public transportation;traffic signal timing model;low optimization ability;dynamic self-adaptive chaotic particle swarm optimization algorithm;urban roads;social vehicles;Heuristic algorithms;Particle swarm optimization;Optimization;Mathematical model;Delays;Vehicle dynamics;public transit priority;road intersection;traffic signal control;particle swarm optimization algorithm},
}

@InProceedings{PengWang2010,
  author    = {{Peng Wang} and {Shaochun Zhong}},
  title     = {Research on self-adaptive learning system based on memory model},
  booktitle = {2010 2nd International Conference on Education Technology and Computer},
  year      = {2010},
  volume    = {4},
  pages     = {V4-148-V4-151},
  month     = {June},
  abstract  = {This paper explores the forgotten rules of psychology into adaptive learning system to estimate the learner's learning situation of knowledge, and thus to provide a reference for the development of learning strategies. It also studies the application of data mining to establish student's memory model, based on which researchers raised an adaptive learning system and designed an implementation model.},
  doi       = {10.1109/ICETC.2010.5529713},
  groups    = {ieee},
  issn      = {2155-1812},
  keywords  = {computer aided instruction;data mining;distance learning;learning systems;psychology;self-adjusting systems;self-adaptive learning system;memory model;psychology;knowledge learning situation;data mining;Learning systems;Educational technology;Adaptive systems;Predictive models;Humans;Computer science education;Paper technology;Psychology;Cognition;Data mining;memory model;Self-adaptive Learning System;learner model},
}

@InProceedings{Zhang2008,
  author    = {Y. {Zhang} and Z. {Zhai} and X. {Nie} and C. {Ma} and F. {Zuo}},
  title     = {An Extended Self-Adaptive Kalman Filtering Object Motion Prediction Model},
  booktitle = {2008 International Conference on Intelligent Information Hiding and Multimedia Signal Processing},
  year      = {2008},
  pages     = {421-424},
  month     = {Aug},
  abstract  = {Aiming at overcoming the weakness that the traditional prediction model based on Kalman filtering does not provide the error estimate of the position prediction, we put forward an extended self-adaptive Kalman filtering model, which can show us the state equation of the prediction errors about the position, velocity and acceleration of the object described. This method realizes the purpose on the effectively error estimate of the position prediction. Simulation experiments indicate that our method not only inherits the good adaptability for mechanical motion of the original but also preferably provides the way on how to estimate the error of the position prediction; therefore, the shortage of the traditional model could be covered effectively by the way presented, which provides a higher speed and accuracy of the estimation.},
  doi       = {10.1109/IIH-MSP.2008.124},
  groups    = {ieee},
  keywords  = {error analysis;Kalman filters;motion estimation;video signal processing;extended self-adaptive Kalman filtering;object motion prediction model;state equation;prediction errors;error estimate;video object tracking;Kalman filters;Filtering;Predictive models;Prediction algorithms;Acceleration;Tracking;Adaptation model},
}

@InProceedings{Pandey2017a,
  author    = {A. {Pandey} and I. {Ruchkin} and B. {Schmerl} and J. {C��mara}},
  title     = {Towards a Formal Framework for Hybrid Planning in Self-Adaptation},
  booktitle = {2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2017},
  pages     = {109-115},
  month     = {May},
  abstract  = {Decision-making approaches in self-adaptation face a fundamental trade-off between quality and timeliness of adaptation plans. Due to this trade-off, designers often have to make an offline compromise between finding adaptation plans quickly and finding closer-to-optimal plans that demand longer computation times. Recent work has proposed that hybrid planning can resolve this trade-off dynamically, achieving higher utility than either fast or slow approaches individually. The promise of hybrid planning is to combine multiple decision-making approaches at run time to produce adaptation plans of the high quality within given time constraints. However, the diversity of decision-making approaches makes the problem of hybrid planning complex and multi-faceted. This paper advances the theory of hybrid planning by formalizing the central concepts and four sub-problems of hybrid planning. This formalization can serve as a foundation for creating and evaluating hybrid planners in the future.},
  doi       = {10.1109/SEAMS.2017.14},
  groups    = {ieee},
  keywords  = {decision making;formal verification;planning;formal framework;hybrid planning;decision-making approaches;self-adaptation;offline compromise;Planning;Decision making;Time factors;Adaptive systems;Cognition;Servers;Face;Self-adaptive systems;Decision-making;Planning;Formal model},
}

@InProceedings{DAndrea2019,
  author    = {G. {D'Andrea} and T. {Di Mascio} and G. {Valente}},
  title     = {Self-adaptive loop for CPSs: is the Dynamic Partial Reconfiguration profitable?},
  booktitle = {2019 8th Mediterranean Conference on Embedded Computing (MECO)},
  year      = {2019},
  pages     = {1-5},
  month     = {June},
  abstract  = {Nowadays, Cyber-Physical Systems play an important role in the context of several large industries; the need for interaction with a changeable physical world leads the system adapting itself to physical changes. Adaptivity, dependability and reducing communication overheads then appear as the most wanted requirements that are moving on the adoption of the edge-computing. In turn, in this world, the demand for HW platforms able to manage increasing requirements is leading to the use of FPGAs, due to their inherent run-time reconfigurability. However, the dynamic partial reconfiguration process of an FPGA has a timing performance impact that cannot be neglected. This impact, if not well considered, can nullify the advantage obtained using a Dynamic Partial Reconfiguration. Therefore, when exploiting FPGAs with dynamic partial reconfiguration, a crucial problem is to understand whether is profitable or not to dynamically reconfigure them. In this paper, an innovative run-time manager adopting a metric to evaluate the impact of reconfiguration time is introduced, together with its validation through its usage on a basic application implemented on FPGA.},
  doi       = {10.1109/MECO.2019.8760036},
  groups    = {ieee},
  issn      = {2637-9511},
  keywords  = {cyber-physical systems;distributed processing;field programmable gate arrays;reconfigurable architectures;inherent run-time reconfigurability;dynamic partial reconfiguration process;innovative run-time manager;cyber-physical systems;communication overheads;self-adaptive loop;CPS;edge-computing;HW platform;FPGA;Field programmable gate arrays;Monitoring;Timing;Bandwidth;Vehicle dynamics;Aerodynamics;Embedded computing;Edge-Computing;Dynamic Partial Reconfiguration;Cyber-Physical Systems},
}

@InProceedings{Shrobe2007,
  author    = {H. {Shrobe} and R. {Laddaga} and B. {Balzer} and N. {Goldman} and D. {Wile} and M. {Tallis} and T. {Hollebeek} and A. {Egyed}},
  title     = {Self-Adaptive Systems for Information Survivability: PMOP and AWDRAT},
  booktitle = {First International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2007)},
  year      = {2007},
  pages     = {332-335},
  month     = {July},
  abstract  = {Information systems form the backbones of the critical infrastructures of modern societies. Unfortunately, these systems are highly vulnerable to attacks that can result in enormous damage. This paper describes two related systems PMOP and AWDRAT that were developed during the DARPA Self Regenerative Systems program. PMOP defends against insider attacks while AWDRAT is intended to detect compromises to software systems. Both rely on self-monitoring, diagnosis and self-adaptation. We describe both systems and show the results of experiments with each.},
  doi       = {10.1109/SASO.2007.50},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {system monitoring;system recovery;self-adaptive system;information systems survivability;PMOP;AWDRAT;system monitoring;error detection;fault diagnosis;system recovery;Java;Software systems;Monitoring;Predictive models;Protection;Marine technology;Information systems;Spine;Control systems;Adaptive systems},
}

@InProceedings{Leca2012,
  author    = {M. {Leca}},
  title     = {Self adaptive protection systems},
  booktitle = {2012 International Conference and Exposition on Electrical and Power Engineering},
  year      = {2012},
  pages     = {25-28},
  month     = {Oct},
  abstract  = {The work propose the modeling and the conceiving of a conduction system for the cross differential protection of the parallel lines, by using the formalism of the Petri networks. By these models the facilities provided by the use of the Petri networks are justified as far as the analysis of the protection operating dynamism is concerned and also the possibility of using the model in the effective conduction of the same by means of a proper software. For the protection modeling and conduction a non-autonomous Petri network of RP Pr T-temp is used.},
  doi       = {10.1109/ICEPE.2012.6463892},
  groups    = {ieee},
  keywords  = {Petri nets;relay protection;self adaptive protection systems;parallel line cross differential protection;nonautonomous Petri network;RP Pr T-temp;relay protection;Software;Process control;Circuit faults;Analytical models;Relays;Adaptive systems;Adaptation models;Petri network;remote protection},
}

@InProceedings{Frikha2012,
  author    = {T. {Frikha} and N. {Benamor} and K. {Loukil} and A. {Ghorbel} and M. {Abid} and J. {Diguet}},
  title     = {Hardware accelerator for self adaptive augmented reality systems},
  booktitle = {2012 International Conference on High Performance Computing Simulation (HPCS)},
  year      = {2012},
  pages     = {295-299},
  month     = {July},
  abstract  = {The emergency of multimedia applications particularly in mobile embedded systems puts new challenges for the design of such systems. The major difficulty is the embedded system's reduced energy and computational resources that must be carefully used to execute complex application often in unpredictable environments. So the system architecture must be energy efficient and flexible enough to adapt resources to application requirements to manage the environment architectures and mobile's constraints. The augmented reality is a very promising 3D embedded multimedia application. It's based on the addition of specific 3D's animations on a video flow. In this paper, we describe our concept of flexible architecture and we give implementation results based on Pixel Shader Accelerator. This is the first step of the project and we compare various hardware and software implementation.},
  doi       = {10.1109/HPCSim.2012.6266927},
  groups    = {ieee},
  keywords  = {adaptive systems;augmented reality;computer animation;embedded systems;mobile computing;multimedia systems;hardware accelerator;mobile embedded systems;embedded system energy reduction;computational resources;environment architectures;mobile constraints;3D embedded multimedia application;3D animations;video flow;pixel shader accelerator;Hardware;Computer architecture;Software;Filling;Geometry;Extremities;Image color analysis},
}

@InProceedings{YunlinLuo2009,
  author    = {{Yunlin Luo} and {Xiaohua Liu}},
  title     = {The study of actuator controller based on fuzzy self-adaptive PID},
  booktitle = {2009 Chinese Control and Decision Conference},
  year      = {2009},
  pages     = {3327-3331},
  month     = {June},
  abstract  = {Aiming at requirement of the driving and control system in the plane actuator, teaching the mechanical & electrical system of aircraft and improving students' hands-on capacity, we introduce a design Actuator Loop system's control, which is designed on the basis of a SPCE061 A MCU. This article briefly introduced Actuator Loop system's hardware structure, software design which consists of network deliver and serial communication and Fuzzy adaptive incremental PID control simulation in detail in the paper. Through Simulation and experiments we can make a conclusion that the controller has a tight structure, a low cost, and also has a good reliability and practicability.},
  doi       = {10.1109/CCDC.2009.5192169},
  groups    = {ieee},
  issn      = {1948-9447},
  keywords  = {actuators;adaptive control;aircraft control;control engineering education;control system synthesis;fuzzy control;intelligent control;three-term control;fuzzy self-adaptive PID;driving system;control system;plane actuator;mechanical system;electrical system;aircraft;student hands-on capacity;design actuator loop system control;SPCE061A MCU;network delivery;serial communication;fuzzy control;adaptive control;incremental PID control simulation;Actuators;Fuzzy control;Three-term control;Communication system control;Control systems;Education;Aircraft;Aerospace control;Hardware;Software design;Electric Actuator;SPCE061A;Fuzzy self-adaptive PID},
}

@Article{Garlan2004a,
  author   = {D. {Garlan} and S. -. {Cheng} and A. -. {Huang} and B. {Schmerl} and P. {Steenkiste}},
  title    = {Rainbow: architecture-based self-adaptation with reusable infrastructure},
  journal  = {Computer},
  year     = {2004},
  volume   = {37},
  number   = {10},
  pages    = {46-54},
  month    = {Oct},
  issn     = {1558-0814},
  abstract = {While attractive in principle, architecture-based self-adaptation raises a number of research and engineering challenges. First, the ability to handle a wide variety of systems must be addressed. Second, the need to reduce costs in adding external control to a system must be addressed. Our rainbow framework attempts to address both problems. By adopting an architecture-based approach, it provides reusable infrastructure together with mechanisms for specializing that infrastructure to the needs of specific systems. The specialization mechanisms let the developer of self-adaptation capabilities choose what aspects of the system to model and monitor, what conditions should trigger adaptation, and how to adapt the system.},
  doi      = {10.1109/MC.2004.175},
  groups   = {ieee},
  keywords = {software architecture;software reusability;client-server systems;open systems;system monitoring;Rainbow architecture-based self-adaptation;reusable infrastructure;system variety handling;cost reduction;specialization mechanisms;adaptation triggering;client-server system software architecture;Software architecture;Monitoring;Computer architecture;Costs;Protocols;Control systems;Software systems;Computer interfaces;Environmental management;Computer languages},
}

@InProceedings{Bodden2018,
  author    = {E. {Bodden}},
  title     = {Self-Adaptive Static Analysis},
  booktitle = {2018 IEEE/ACM 40th International Conference on Software Engineering: New Ideas and Emerging Technologies Results (ICSE-NIER)},
  year      = {2018},
  pages     = {45-48},
  month     = {May},
  abstract  = {Static code analysis is a powerful approach to detect quality deficiencies such as performance bottlenecks, safety violations or security vulnerabilities already during a software system's implementation. Yet, as current software systems continue to grow, current static-analysis systems more frequently face the problem of insufficient scalability. We argue that this is mainly due to the fact that current static analyses are implemented fully manually, often in general-purpose programming languages such as Java or C, or in declarative languages such as Datalog. This design choice predefines the way in which the static analysis evaluates, and limits the optimizations and extensions static-analysis designers can apply. To boost scalability to a new level, we propose to fuse static-analysis with just-in-time-optimization technology, introducing for the first time static analyses that are managed and inherently self-adaptive. Those analyses automatically adapt themselves to yield a performance/precision tradeoff that is optimal with respect to the analyzed software system and to the analysis itself. Self-adaptivity is enabled by the novel idea of designing a dedicated intermediate representation, not for the analyzed program but for the analysis itself. This representation allows for an automatic optimization and adaptation of the analysis code, both ahead-of-time (through static analysis of the static analysis) as well as just-in-time during the analysis' execution, similar to just-in-time compilers.},
  groups    = {ieee},
  keywords  = {just-in-time;optimisation;program diagnostics;security of data;software quality;automatic optimization;static code analysis;safety violations;security vulnerabilities;software system;self adaptive static analysis;just-in-time-optimization technology;quality deficiencies detection;Static analysis;Optimization;Tools;Virtual machining;Engines;Software;Java;Static program analysis;virtual machines;intermediate representations},
}

@InProceedings{Kahani2017,
  author    = {N. {Kahani} and N. {Hili} and J. R. {Cordy} and J. {Dingel}},
  title     = {Evaluation of UML-RT and Papyrus-RT for Modelling Self-Adaptive Systems},
  booktitle = {2017 IEEE/ACM 9th International Workshop on Modelling in Software Engineering (MiSE)},
  year      = {2017},
  pages     = {12-18},
  month     = {May},
  abstract  = {This paper is an evaluation of UML for Real-Time (UML-RT) for modelling Self-Adaptive Software (SAS) systems. Using a systematic review of the different features of UML-RT (optional capsules, SAP/SPP communication, hierarchical state machines, etc.), we analyse the suitability of the language for modelling structural and behavioural adaptations at design-and run-time. We evaluate these features in the context of their current state of support in Papyrus-RT, an Eclipse-based MDE tool for UML-RT recently developed by the Eclipse PolarSys Working Group. The use of UML-RT and Eclipse Papyrus for Real-Time (Papyrus-RT) for different kinds of adaptation is demonstrated using two real-time system case studies.},
  doi       = {10.1109/MiSE.2017.4},
  groups    = {ieee},
  keywords  = {finite state machines;real-time systems;self-adjusting systems;software engineering;Unified Modeling Language;UML-RT evaluation;Papyrus-RT evaluation;self-adaptive systems modelling;UML for real-time evaluation;self-adaptive software systems;SAS system modelling;optional capsules;SAP-SPP communication;hierarchical state machines;structural adaptations;behavioural adaptations;run-time modelling;design-time modelling;Eclipse-based MDE tool;Eclipse PolarSys Working Group;Eclipse Papyrus for real-time;Eclipse Papyrus-RT;Unified modeling language;Servers;Adaptation models;Real-time systems;Synthetic aperture sonar;Connectors;Computational modeling;UML-RT;Papyrus for Real-Time;Model-Driven Development (MDD);Model-Driven Engineering (MDE);Self-Adaptive Software (SAS) Systems;Structural and Behavioural Adaptations;Load-balancing;Failover System},
}

@InProceedings{Zambonelli2011,
  author    = {F. {Zambonelli} and N. {Bicocchi} and G. {Cabri} and L. {Leonardi} and M. {Puviani}},
  title     = {On Self-Adaptation, Self-Expression, and Self-Awareness in Autonomic Service Component Ensembles},
  booktitle = {2011 Fifth IEEE Conference on Self-Adaptive and Self-Organizing Systems Workshops},
  year      = {2011},
  pages     = {108-113},
  month     = {Oct},
  abstract  = {Software systems operating in open-ended and unpredictable environments have to become autonomic, i.e., capable of dynamically adapting their behavior in response to changing situations. To this end, key research issues include: (i) framing the schemes that can facilitate components (or ensembles of) to exhibit self-adaptive behaviors, (ii) identifying mechanisms to enable components or ensembles to self-express the most suitable adaptation scheme, and (iii) acquiring the proper degree of self-awareness to enable putting in action self-adaptation and self-expression schemes. In this position paper, with the help of a representative case study, we frame and discuss the above issues, survey the state of the art in the area, and sketch the main research challenges that will be faced in the ASCENS project towards the definition of a fully-fledged framework for autonomic services.},
  doi       = {10.1109/SASOW.2011.24},
  groups    = {ieee},
  keywords  = {fault tolerant computing;self-adaptation;self-expression;self-awareness;autonomic service component ensembles;software system;self-adaptive behavior;ASCENS project;Robot kinematics;Adaptation models;Software systems;Switches;Context;Self-adaptation;autonomic computing;self-awareness},
}

@InProceedings{Grua2019,
  author    = {E. M. {Grua} and I. {Malavolta} and P. {Lago}},
  title     = {Self-Adaptation in Mobile Apps: a Systematic Literature Study},
  booktitle = {2019 IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2019},
  pages     = {51-62},
  month     = {May},
  abstract  = {With their increase, smartphones have become more integral components of our lives but due to their mobile nature it is not possible to develop a mobile application the same way another software system would be built. In order to always provide the full service, a mobile application needs to be able to detect and deal with changes of context it may be presented with. A suitable method to achieve this goal is self-adaptation. However, as of today it is difficult to have a clear view of existing research on self-adaptation in the context of mobile applications. In this paper, we apply the systematic literature review methodology on selected peer-reviewed papers focusing on self-adaptability in the context of mobile applications. Out of 607 potentially relevant studies, we select 44 primary studies via carefully-defined exclusion and inclusion criteria. We use known modelling dimensions for self-adaptive software systems as our classification framework, which we apply to all selected primary studies. From the synthesized data we obtained, we produce an overview of the state of the art. The results of this study give a solid foundation to plan for future research and practice on engineering self-adaptive mobile applications.},
  doi       = {10.1109/SEAMS.2019.00016},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {mobile computing;reviews;smart phones;software engineering;engineering self-adaptive mobile applications;mobile apps;peer-reviewed papers;software systems;smartphones;Mobile applications;Data mining;Google;Software systems;Systematics;Hardware;Batteries;Self-adaptive systems;Mobile Apps;Systematic Literature Study},
}

@InProceedings{Alexandrou2009,
  author    = {D. A. {Alexandrou} and I. E. {Skitsas} and G. N. {Mentzas}},
  title     = {A holistic environment for the design and execution of self-adaptive clinical pathways},
  booktitle = {2009 9th International Conference on Information Technology and Applications in Biomedicine},
  year      = {2009},
  pages     = {1-5},
  month     = {Nov},
  abstract  = {As scientific achievements in the area of Healthcare have evolved during the last decade, inevitably there has been an increase of treatment quality. One of the challenges to be confronted is the personalization of treatment since each patient constitutes a unique case. The personalization requires the continuous reconfiguration of the treatment schemes since the clinical status of each patient and circumstances inside a healthcare organization constantly change. In this paper we present a holistic software environment that provides an IT solution concerning the real-time adaptation of healthcare processes. The software comprises a healthcare process execution engine assisted by a semantic info-structure for reconfiguring the pathways. The semantic info-structure utilizes an ontology enclosing the required knowledge and a semantic rule-set. During the execution of clinical pathways, the system reasons over the rules, the knowledge and information, and reconfigures the next steps of the treatment. The results of the rule-set execution may generate knowledge objects to be inserted in the ontology. A graphical designer is provided for the definition of the rule-set for the clinical pathways adaptation.},
  doi       = {10.1109/ITAB.2009.5394358},
  groups    = {ieee},
  issn      = {2168-2208},
  keywords  = {health care;knowledge based systems;medical computing;ontologies (artificial intelligence);patient treatment;self adaptive clinical pathway design;self adaptive clinical pathway execution;treatment quality;personalised treatment;treatment scheme reconfiguration;holistic software environment;health care process execution engine;semantic infostructure;ontology;semantic rule set;Medical services;Medical treatment;Engines;Ontologies;Personnel;Real time systems;Monitoring;Decision making;Environmental management;Knowledge representation;adaptive clinical pathways;semantics;semantic rule-set;adaptive treatment;personalized treatment;pathway dynamic reconfiguration;SWRL},
}

@InProceedings{Zhang2010a,
  author    = {Y. {Zhang} and W. {Weng} and Z. {Xi} and J. {Su} and Z. {Wang}},
  title     = {A Self-Adaptive Monitoring and Analysis System for Students' Behaviors in Laboratory Course},
  booktitle = {2010 International Conference on Electrical and Control Engineering},
  year      = {2010},
  pages     = {2629-2632},
  month     = {June},
  abstract  = {Recently, there are many problems in software laboratory course management. It is, particularly, widespread that student play video games or do other things which are unrelated to the course. However, most of present monitoring software are all based on the operation of teachers, rather than a real-time system, which is very inconvenient. In order to carry out the laboratory course management better and help teachers to monitor and analyze students' behaviors of operating computer, we design and implement a model of Self-adaptive Monitoring and Analysis System (SMAS) for students' behaviors in laboratory course. For monitoring, we implement a module which uses the technology neural-network-based expert system, with which we can monitor the students' behavior real-time and self-adaptively. For analysis, with the methodologies such as Factor Analysis, Cluster Analysis, and Discriminant Analysis, we propose and implement an evaluation algorithm, which can evaluate the students' performance in a course quantificationally and obviously.},
  doi       = {10.1109/iCECE.2010.643},
  groups    = {ieee},
  keywords  = {behavioural sciences;computer science education;computerised monitoring;educational administrative data processing;educational courses;expert systems;neural nets;student experiments;software laboratory course management;student behavior;self-adaptive monitoring and analysis system;neural-network-based expert system;factor analysis;cluster analysis;discriminant analysis;student performance;Monitoring;Expert systems;Artificial neural networks;Computers;Computational modeling;Laboratories;Law;Self-adaptive;monitor;analysis;expert system;BP neural network;evaluation system},
}

@InProceedings{Lee2015,
  author    = {K. {Lee} and S. {Lee}},
  title     = {Applying Game Theoretic Approach to Goal-Driven Requirements Trade-Off Analysis for Self-Adaptation},
  booktitle = {2015 IEEE 39th Annual Computer Software and Applications Conference},
  year      = {2015},
  volume    = {3},
  pages     = {330-335},
  month     = {July},
  abstract  = {A self-adaptive software aims at adjusting itself in response to changes at runtime while considering several important factors. To do this task, such a system should realize the adaptation process, which consists of four phases. Among those phases, we just focus on the deciding (planning) process, especially addressing adequate reflection of requirements to adaptation. In this paper, we represent the arising requirements trade-off problem in terms of goal oriented requirements engineering while adapting to the changes. In addition we apply a game theoretical approach which gives us an insight into analyzing conflicts among requirements. It could provide self-adaptive software with the rationale behind selecting adaptation behaviors.},
  doi       = {10.1109/COMPSAC.2015.158},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {formal specification;formal verification;game theory;game theoretic approach;goal-driven requirement trade-off analysis;self-adaptive software;goal oriented requirements engineering;Games;Adaptation models;Software;Game theory;Analytical models;Servers;Context;requirements engineering;self-adaptive software;game theory},
}

@InProceedings{Yanxiu2007,
  author    = {W. {Yanxiu} and L. {Xinrong}},
  title     = {Self-adaptation PID Ramp Controller in Freeway Based on Single Neuron},
  booktitle = {2007 Chinese Control Conference},
  year      = {2007},
  pages     = {254-257},
  month     = {July},
  abstract  = {An improved self-adaptation PID control method based on single neuron is proposed to regulate the number of vehicles entering a freeway entrance point. The freeway traffic flow dynamic model is first built. Then the ramp control objective is determined. According to nonlinear feedback principle, a self-adaptation PID ramp controller based on single neuron is designed, and an improved algorithm is used to obtain the weight values. Finally, the controller is simulated in MATLAB software. The result shows that the controller designed has strong robustness, fast response, and good dynamic and steady-state performance. This method has a good effect on freeway ramp control.},
  doi       = {10.1109/CHICC.2006.4346872},
  groups    = {ieee},
  issn      = {1934-1768},
  keywords  = {control system synthesis;dynamic response;feedback;mathematics computing;neurocontrollers;nonlinear control systems;road traffic;robust control;three-term control;traffic control;single neuron;self-adaptation PID ramp controller;freeway traffic flow dynamic model;nonlinear feedback principle;MATLAB software;Three-term control;Traffic control;Neurons;Vehicle dynamics;Road vehicles;Mathematical model;Neurofeedback;Algorithm design and analysis;MATLAB;Robust control;Freeway;Traffic Flow Model;Self-adaptation PID Controller;Ramp Metering},
}

@InProceedings{Jiang2009,
  author    = {T. {Jiang} and X. {Liang}},
  title     = {Fuzzy Self-Adaptive PID Controller for Freeway Ramp Metering},
  booktitle = {2009 International Conference on Measuring Technology and Mechatronics Automation},
  year      = {2009},
  volume    = {2},
  pages     = {570-573},
  month     = {April},
  abstract  = {Aiming at the nonlinear and time-varying characteristics of freeway traffic system, a fuzzy self-adaptive PID controller is designed and applied to freeway ramp metering in this paper. A traffic flow model to describe the freeway flow process is firstly built. Based on the model and in conjunction with nonlinear feedback theory, a fuzzy-PID ramp controller is then designed. The ramp metering rate is determined by the PID controller whose parameters are tuned by fuzzy logic according to the density tracking error and error variation. Gauss and triangle curves are used for the membership functions of the fuzzy variables. The rule base including 49 fuzzy rules is also established. Finally, the control system is simulated in MATLAB software. The results show that this controller designed has fast response, good dynamic and steady-state performance. It can achieve a desired traffic density along the mainline of a freeway, and can make vehicles travel more efficiently and safely. This approach is quite effective to freeway ramp metering.},
  doi       = {10.1109/ICMTMA.2009.191},
  groups    = {ieee},
  issn      = {2157-1481},
  keywords  = {adaptive control;control system synthesis;feedback;fuzzy control;fuzzy set theory;Gaussian processes;nonlinear control systems;road safety;road traffic;road vehicles;three-term control;time-varying systems;fuzzy self-adaptive PID controller;freeway ramp metering;nonlinear characteristics;time-varying characteristics;freeway traffic system;controller design;traffic flow model;freeway flow process;nonlinear feedback theory;fuzzy logic;density tracking error;error variation;Gauss curves;triangle curves;fuzzy variable membership function;fuzzy rules;MATLAB software;traffic density;road vehicles;road safety;Fuzzy control;Three-term control;Traffic control;Mathematical model;Error correction;Time varying systems;Fuzzy systems;Nonlinear control systems;Control systems;Feedback;freeway;ramp metering;traffic flow model;fuzzy logic;PID control},
}

@InProceedings{Li2018c,
  author    = {X. {Li} and W. {Zhang}},
  title     = {Linearly Parallel and Self-adaptive Robot Hand with Sliding Base Compensation for Grasping on the Surface},
  booktitle = {2018 IEEE International Conference on Robotics and Biomimetics (ROBIO)},
  year      = {2018},
  pages     = {1822-1827},
  month     = {Dec},
  abstract  = {The traditional underactuated linkage Self-adaptive robot hand can provide greater grasping force, but the trajectory of the end of the distal phalanx is an arc. So it has an upward or downward displacement on the grasping plane. Affected by this, hand cannot grasp the thin and small objects on the surface. Linearly parallel and self-adaptive robot hand with sliding base compensation (SBC-LPS hand), the displacement at the end of the distal phalanx can be offset by the displacement at the sliding base, realizing the end of the distal phalanx moving in line, to make up for the shortage of traditional mechanism. The feasibility of the design is confirmed by design calculation, 3D modeling and software simulation.},
  doi       = {10.1109/ROBIO.2018.8665199},
  groups    = {ieee},
  keywords  = {couplings;dexterous manipulators;position control;grasping plane;parallel self-adaptive robot hand;sliding base compensation;SBC-LPS hand;distal phalanx;upward displacement;downward displacement;software simulation;3D modeling;design calculation;sliding base;grasping force;Couplings;Gears;Service robots;Thumb;Grasping;Robot hand;Sliding base;Linearly;Parallel and Self-adaptive},
}

@InProceedings{Yanovsky2013,
  author    = {M. {Yanovsky} and V. {Kharchenko} and A. {Gorbenko}},
  title     = {Self-adaptive mobile wireless hotspot zones: Initial issues},
  booktitle = {East-West Design Test Symposium (EWDTS 2013)},
  year      = {2013},
  pages     = {1-4},
  month     = {Sep.},
  abstract  = {This article presents the initial issues; research and development of adaptive mobile access points and a software simulator with the goal of studying the processes occurring in the wireless network, and take into account different user behaviors. Basic concepts of the article include adaptive wireless networks with the use of mobile access points, while the article focuses on the mathematical approach and description of the problem. The mathematical approach of this article includes intersecting areas and non-intersecting frequencies in the system and is described by a number of formulas with ranging values. The results of this research are presented and followed by a number of future suggestions, for further research and improvement.},
  doi       = {10.1109/EWDTS.2013.6673171},
  groups    = {ieee},
  keywords  = {mobile communication;wireless LAN;self-adaptive mobile wireless hotspot zones;adaptive mobile access points;software simulator;mathematical approach;Wireless LAN;Mobile communication;Quality of service;Wireless networks;Bandwidth;Green products},
}

@InProceedings{SifengWang2008,
  author    = {{Sifeng Wang} and {Jingxiu Zhao}},
  title     = {A self-adaptive edge detection method based on LoG algorithm},
  booktitle = {2008 International Conference on Audio, Language and Image Processing},
  year      = {2008},
  pages     = {1009-1011},
  month     = {July},
  abstract  = {The capability of edge detection using LoG operator is analyzed in this paper and the paper proposes the deficiency of the LoG operator in the practical application. In order to avoid the defects of the LoG operator, the paper based on the date of experimentation and the Matlab software elicits the relation between the entropy of the gray level co-occurrence matrix and the Gassian space coefficient. Optimum Gassian space coefficient of LoG operator can be self-adaptive acquired based on the entropy of the concrete image. So the methods improved in the paper not only effectively control the most noise of the image, but also locate the edge accurately.},
  doi       = {10.1109/ICALIP.2008.4590163},
  groups    = {ieee},
  keywords  = {edge detection;Gaussian processes;image colour analysis;Laplace equations;mathematics computing;self-adjusting systems;self-adaptive edge detection method;LoG algorithm;Matlab software;gray level cooccurrence matrix;optimum Gassian space coefficient;LoG operator;noise control;Laplacian of Gaussian algorithm;Image edge detection;Noise;Entropy;Symmetric matrices;Feature extraction;Polynomials;Smoothing methods},
}

@InProceedings{HaiyanGu2010,
  author    = {{Haiyan Gu} and {Lei Yu}},
  title     = {Self-adaptive multi-scale weight morphological operator applied to wood products defects testing by using computed tomography},
  booktitle = {2010 IEEE International Conference on Automation and Logistics},
  year      = {2010},
  pages     = {1-6},
  month     = {Aug},
  abstract  = {Mathematical morphology is the emerging theory and method in digital image processing now. Based on the basic theory and algorithm of mathematical morphology, self-adaptive multi-scale weight morphological operator was advanced and used in the defect identification of wood products X-ray computed tomography image. As can be seen in the experimental analysis, compared with the traditional edge detection algorithm, self-adaptive multi-scale weight morphological operator had the characteristics of a high degree of detection and identification accuracy in wood products edge detection. Wood Products non-destructive testing real-time imaging hardware and wood products real-time imaging image processing software system were built in the study. And self-adaptive multi-scale weight morphological operator was used to edge detection of wood products X-ray image. The achievements in the study realized the real-time online detection of wood products X-ray computed tomography image, and improved the detection accuracy of defects in the image. They have a wide range of applications in the quality identification of wood board and defects detection in the logs.},
  doi       = {10.1109/ICAL.2010.5585373},
  groups    = {ieee},
  issn      = {2161-816X},
  keywords  = {computerised tomography;edge detection;image processing;nondestructive testing;production engineering computing;quality control;wood products;selfadaptive multiscale weight morphological operator;wood products defects testing;X-ray computed tomography;defect identification;edge detection;nondestructive testing;image processing software system;Computed tomography;X-ray imaging;Image edge detection;Testing;Radiography;Morphology;Gray-scale;Mathematical morphology;Image processing;Wood products detection;self-adaptive multi-scale weight morphological operator},
}

@InProceedings{Gu2010,
  author    = {Q. {Gu} and Y. {Ding}},
  title     = {Improved LogitBoost Classifier Based Prediction of GPCR-G-Protein Coupling with Self-Adaptive Immune Algorithm},
  booktitle = {2010 4th International Conference on Bioinformatics and Biomedical Engineering},
  year      = {2010},
  pages     = {1-4},
  month     = {June},
  abstract  = {G-Protein coupled receptors (GPCRs) constitute the largest group of membrane receptors with great pharmacological interest. The signal transduction within cells is leaded by a wide range of native ligands interact and activate GPCRs. Most of these responses are mediated through the interaction of GPCRs with coupling GTP-binding proteins (G-proteins). For the reason of the information explosion in biological sequence databases, the development of software algorithms that could predict properties of GPCRs is important. In this paper, we have developed an intensive exploratory approach to predict the coupling preference of GPCRs to heterotrimeric G-proteins. An integrated recognition method combined with Self-Adaptive Immune Algorithm and LogitBoost classifier has been applied in prediction. The result indicates that the proposed method might become a potentially useful tool for GPCR-G-protein coupling prediction, or play a complimentary role to the existing methods in the relevant areas. The method predicts the coupling preferences of GPCRs to three kinds of G-protein subclasses, Gs, Gi/o and Gq/11, but not G12/13 for the limited amount.},
  doi       = {10.1109/ICBBE.2010.5514858},
  groups    = {ieee},
  issn      = {2151-7622},
  keywords  = {bioinformatics;biomembranes;cellular transport;data handling;molecular biophysics;pattern classification;proteins;LogitBoost classifier based prediction;GPCR-G-protein coupling;self adaptive immune algorithm;G-Protein coupled receptors;membrane receptors;pharmacology;cell signal transduction;native ligands;ligand-GPCR interaction;GTP binding proteins;biological sequence databases;software algorithms;heterotrimeric G-proteins;integrated recognition;Gs G-protein subclass;Gi/o G-protein subclass;Gq/11 G-protein subclass;Immune system;Educational technology;Textile technology;Proteins;Educational institutions;Bioinformatics;Drugs;Educational programs;Hidden Markov models;Biomembranes},
}

@InProceedings{Cui2015,
  author    = {B. {Cui} and P. {Shi} and H. {Jin}},
  title     = {A Dynamic Self-Adaptive Algorithm for Uploading Deferrable Big Data to the Cloud Cost-Effectively},
  booktitle = {2015 9th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing},
  year      = {2015},
  pages     = {292-295},
  month     = {July},
  abstract  = {Cloud computing is based between the service provider and service consumer agreements and cloud data center is under a cloud computing environment that consists of hardware and software components. This paper studies how to minimize the bandwidth cost for uploading deferral big data to a cloud computing platform, based on the MapReduce Framework. We first analysis the shortcoming of bandwidth of data centers, and we provide an optimization algorithm -- Dynamic Self-adaption Algorithm, it will reduce the cost of bandwidth of data centers. Dynamic Self-adaption Algorithm optimize the total cost of network bandwidth. Compared to a random selection algorithm, Dynamic Self-adaption Algorithm efficiently in this paper used of network peak to transfer data, and reduces the probability of spare channels appear to improve bandwidth utilization, so it reduces bandwidth costs.},
  doi       = {10.1109/IMIS.2015.46},
  groups    = {ieee},
  keywords  = {cloud computing;data handling;optimisation;dynamic self-adaptive algorithm;deferrable big data;cloud cost;cloud computing;service provider;service consumer;cloud data center;cloud computing environment;software components;hardware components;MapReduce Framework;data centers;optimization algorithm;random selection algorithm;network peak;Heuristic algorithms;Bandwidth;Cloud computing;Algorithm design and analysis;Resource management;Smoothing methods;Big data;Cloud computing;bandwidth;MapReduce;Dynamic Self-adaption Algorithm},
}

@Article{Mahmud1988,
  author   = {S. M. {Mahmud} and S. {Ganesan} and A. {Rusek} and M. L. {Hillis}},
  title    = {A programmable self-adaptive digital frequency multiplier},
  journal  = {IEEE Transactions on Instrumentation and Measurement},
  year     = {1988},
  volume   = {37},
  number   = {2},
  pages    = {227-230},
  month    = {June},
  issn     = {1557-9662},
  abstract = {Existing self-adaptive frequency multipliers work well if the master clock frequency is an integral multiple of the input signal frequency; otherwise they lose an output pulse after a certain interval of time. The frequency of this missing pulse could be as high as half of the input frequency. Since existing self-adaptive frequency multipliers are not programmable, the multiplication factor can not be changed without doing some major changes in the hardware. The reason for missing an output pulse is explained, and design and implementation of a programmable self-adaptive digital frequency multiplier, that does not have this missing pulse problem are presented. The errors associated with the multiplier are discussed.<>},
  doi      = {10.1109/19.6057},
  groups   = {ieee},
  keywords = {error correction;frequency multipliers;signal processing equipment;signal processing equipment;programmable self-adaptive digital frequency multiplier;master clock frequency;output pulse;missing pulse;errors;Clocks;Pulse generation;Counting circuits;Signal generators;Hardware;Frequency conversion;Switches;Signal design;Computer science;Application software},
}

@InProceedings{Liu2010,
  author    = {P. {Liu} and K. {Jia}},
  title     = {A Self-Adaptive and Fast Motion Estimation Search Method for H.264/AVC},
  booktitle = {2010 Sixth International Conference on Intelligent Information Hiding and Multimedia Signal Processing},
  year      = {2010},
  pages     = {651-654},
  month     = {Oct},
  abstract  = {H.264/AVC is the outstanding and significant video compression standard developed by ITU-T/ISO/IEC Joint Video Team. Motion estimation (ME) plays a key role in H.264/AVC, it concerns greatly on computational complexity especially when using the full search (FS) algorithm. Although many fast ME algorithms have been proposed to reduce the huge calculation complexity instead of FS, the ME still can not satisfy the critical real-time application's needs. In this paper, a fast integer pixel variable block ME algorithm based on JVT which accepted UMHexagonS algorithm is presented for H.264/AVC encoder. With special considerations on the motion activity of the current macro-block, several adaptive search strategies have been utilized to significantly improve the video coding performance. The simulation results shows that the proposed algorithm maintains an unnoticeable quality loss in terms of PSNR on average compared with FS and reduces nearly 20% ME time compared with UMHexagonS while maintaining coding efficiency.},
  doi       = {10.1109/IIHMSP.2010.165},
  groups    = {ieee},
  keywords  = {computational complexity;data compression;motion estimation;search problems;video coding;H.264/AVC;fast motion estimation search method;video compression standard;motion estimation algorithm;computational complexity;full search algorithm;JVT;UMHexagonS algorithm;video coding;Algorithm design and analysis;Motion estimation;Automatic voltage control;Classification algorithms;Signal processing algorithms;Prediction algorithms;Software algorithms;H.264/AVC;Motion estimation;UMHexagonS;macro-block},
}

@InProceedings{Thrasher1996,
  author    = {A. {Thrasher} and {Feng Wang} and B. {Andrews}},
  title     = {Self adaptive neuro-fuzzy control of neural prostheses using reinforcement learning},
  booktitle = {Proceedings of 18th Annual International Conference of the IEEE Engineering in Medicine and Biology Society},
  year      = {1996},
  volume    = {1},
  pages     = {451-452 vol.1},
  month     = {Oct},
  abstract  = {Preliminary results are presented of a new functional electrical stimulation (FES) control methodology based on an adaptive fuzzy network using supervised and reinforcement machine learning techniques. The FES application example used to test these controllers used a computer model of swing phase assisted by a powered hybrid FES orthosis. The supervised learning controller was trained to a predetermined control strategy, and converged in approximately 15 trials. Using very simple reinforcement signals sent at the end of every swing phase, the reinforcement learning controller was able to develop a unique control strategy in approximately 150 trials. The reinforcement learning controller had the additional ability to continually re-adapt to changes in the system parameters which caused the other controller to fail.},
  doi       = {10.1109/IEMBS.1996.657038},
  groups    = {ieee},
  keywords  = {adaptive control;fuzzy control;biocontrol;biomechanics;bioelectric phenomena;fuzzy neural nets;learning (artificial intelligence);controllers;orthotics;prosthetics;neurophysiology;self adaptive neuro-fuzzy control;neural prostheses;reinforcement learning;functional electrical stimulation control methodology;supervised learning controller;swing phase;computer model;reinforcement learning controller;powered hybrid system;paraplegic gait;system parameters changes;Programmable control;Adaptive control;Prosthetics;Control systems;Neuromuscular stimulation;Adaptive systems;Fuzzy control;Machine learning;Application software;Testing},
}

@InProceedings{Chollet2015,
  author    = {S. {Chollet}},
  title     = {Self-Adaptation of Service Bindings Based on Formal Concept Analysis},
  booktitle = {2015 IEEE International Conference on Autonomic Computing},
  year      = {2015},
  pages     = {211-214},
  month     = {July},
  abstract  = {Service-oriented computing has been successfully adopted by the industry. This raises however new challenges, especially with respect to service selection and ranking in dynamic environments. Current solutions for service selection and ranking lack flexibility to handle dynamic environments. This paper proposes to integrate algorithms based on the Formal Concept Analysis theory to extend service-oriented component models. This solution improves the self-adaptation of service-oriented component models. The resulting framework externalizes service selection and ranking. Results are integrated in the Apache Felix iPOJO component model.},
  doi       = {10.1109/ICAC.2015.26},
  groups    = {ieee},
  keywords  = {formal concept analysis;object-oriented programming;service-oriented architecture;self-adaptative service bindings;service-oriented computing;service selection;service ranking;dynamic environments;formal concept analysis theory;service-oriented component models;Apache Felix iPOJO component model;Lattices;Context;Formal concept analysis;Computational modeling;Adaptation models;Complexity theory;Software;Service-Oriented Computing;Service Selection;Formal Concept Analysis},
}

@InProceedings{Wu2008a,
  author    = {H. {Wu} and H. {Dong} and J. {Su}},
  title     = {3D Reconstruction from Section Plane Views Based on Self-Adaptive Neural Network},
  booktitle = {2008 Second International Symposium on Intelligent Information Technology Application},
  year      = {2008},
  volume    = {3},
  pages     = {84-88},
  month     = {Dec},
  abstract  = {In order to represent 3D spatial entity effectively in geological engineering, layered model for geological mass is put forward based on drill hole information. Firstly, for the given geological drill hole data, adaptive neural network is adopted to forecast ore grade of information unknown areas within the geological sections and then geological layered data is obtained. Secondly, based on discretization meshwork model, topological relations for control points can be established automatically between adjacent data layers, so as to construct surface model of 3D spatial entity, which can be visualized by OpenGL technique. Finally, to evaluate the performance of the approach proposed, a 3D simulation system was developed. The experimental results demonstrate that the new modeling method provides a solution to the 3D reconstruction problems existing in the fields without spatial data and can generate complex 3D solid model with higher accuracy and better time performance.},
  doi       = {10.1109/IITA.2008.109},
  groups    = {ieee},
  keywords  = {geophysical signal processing;image reconstruction;neural nets;3D reconstruction;section plane views;self-adaptive neural network;geological engineering;geological mass;drill hole information;geological drill hole data;ore grade;OpenGL technique;3D solid model;3D simulation system;Neural networks;Geology;Ores;Solid modeling;Sampling methods;Power engineering and energy;Automatic control;Surface reconstruction;Data visualization;Application software;3D modeling;Neural Network;Visualization;system simulation},
}

@InProceedings{Kursawe1995,
  author    = {F. {Kursawe}},
  title     = {Towards self-adapting evolution strategies},
  booktitle = {Proceedings of 1995 IEEE International Conference on Evolutionary Computation},
  year      = {1995},
  volume    = {1},
  pages     = {283-},
  month     = {Nov},
  doi       = {10.1109/ICEC.1995.489160},
  groups    = {ieee},
  keywords  = {Testing;Robustness;Evolutionary computation;Genetic mutations;Convergence;Algorithm design and analysis;Computer science;Application software;Parameter estimation;Yield estimation},
}

@InProceedings{Boudoudouh2018,
  author    = {S. {Boudoudouh} and M. {Maaroufi}},
  title     = {Agent-based self-adaptive DC-DC converter for hybrid energetic system control},
  booktitle = {2018 6th International Istanbul Smart Grids and Cities Congress and Fair (ICSG)},
  year      = {2018},
  pages     = {44-48},
  month     = {April},
  abstract  = {The renewable energy resources production is entirely correlated to the fluctuant climate conditions and does not depend on the load requirement, therefore they behave as passive generators. The power electronics play a significant role to overcome these constraints. A DC coupled wind/pv/hydrogen/battery hybrid energy system is studied to show the role of power electronics in building actives RES generators. A distributed energy management is proposed to deal with the simultaneous operations of different hybrid system components. Furthermore, this paper proposes a self-adaptive DC-DC converters control by multi agent system. The simulation results are given by Matlab Simulink. The distributed control using multi agent system is performed by developing agent under Jade platform. While the communication middleware between Jade and Simulink is carried out by MacsimJX. Finally, the performance of the proposed control has been justified.},
  doi       = {10.1109/SGCF.2018.8408939},
  groups    = {ieee},
  keywords  = {battery storage plants;DC-DC power convertors;distributed control;energy management systems;hybrid power systems;multi-agent systems;photovoltaic power systems;wind power plants;agent-based self-adaptive DC-DC converter;hybrid energetic system control;renewable energy resources production;fluctuant climate conditions;passive generators;power electronics;distributed energy management;self-adaptive DC-DC converters control;multiagent system;distributed control;hybrid system components;DC coupled wind/pv/hydrogen/battery hybrid energy system;actives RES generators;Batteries;Voltage control;State of charge;Generators;Software packages;DC-DC power converters;Energy management;DC-DC converters;DC bus voltage control;Multi Agent System (MAS);Matlab Simulink;MaximJX;self-adaptive DC-DC converters},
}

@InProceedings{Bowers2003,
  author    = {K. {Bowers} and K. {Mills} and S. {Rose}},
  title     = {Self-adaptive leasing for jini},
  booktitle = {Proceedings of the First IEEE International Conference on Pervasive Computing and Communications, 2003. (PerCom 2003).},
  year      = {2003},
  pages     = {539-542},
  month     = {March},
  abstract  = {Distributed systems require strategies to detect and recover from failures. Many protocols for distributed systems employ a strategy based on leases, which grant a leaseholder access to data or services for a limited time (the lease period). Choosing an appropriate lease period involves tradeoffs among resource utilization, responsiveness, and system size. We investigate these issues for Jini Network Technology. First, we establish quantitative tradeoffs among lease period, bandwidth utilization, responsiveness, and system size. Then, we consider two self-adaptive algorithms that enable a Jini system, given a fixed allocation of resources, to vary lease periods with system size to achieve the best responsiveness. We compare performance of these self-adaptive algorithms against each other, and against fixed lease periods. We find that one of the self-adaptive algorithms proves easy to implement and performs reasonably well. We anticipate that similar procedures could add self-adaptive capability to other distributed systems that rely on leases.},
  doi       = {10.1109/PERCOM.2003.1192786},
  groups    = {ieee},
  keywords  = {system recovery;adaptive systems;client-server systems;Java;distributed systems;failure detection;failure recovery;protocols;self-adaptive leasing;lease period;resource utilization;responsiveness;system size;Jini Network Technology;bandwidth utilization;self-adaptive algorithms;resource allocation;Delay;Resource management;Application software;Milling machines;NIST;Access protocols;Bandwidth;Context-aware services;Assembly},
}

@InProceedings{Hou2009,
  author    = {X. {Hou} and Y. {Dong} and H. {Zhang} and J. {Gu}},
  title     = {Application of a Self-Adaptive Canny Algorithm for Detecting Road Surface Distress Image},
  booktitle = {2009 Second International Conference on Intelligent Networks and Intelligent Systems},
  year      = {2009},
  pages     = {354-357},
  month     = {Nov},
  abstract  = {The arithmetic based on Canny's regulation has been widely used in image edge detection. This paper illustrates the algorithm and proposes an improved method based on the Histogram-based fuzzy C-means clustering algorithm for the lack of the Canny algorithm, so the Canny algorithm can adaptively determine the double thresholds. Its application in detecting road surface distress image produces good effect.},
  doi       = {10.1109/ICINIS.2009.97},
  groups    = {ieee},
  keywords  = {edge detection;fuzzy set theory;pattern clustering;self-adaptive Canny algorithm;road surface distress image detection;image edge detection;Histogram-based fuzzy C-means clustering algorithm;Image edge detection;Clustering algorithms;Intelligent networks;Roads;Image segmentation;Histograms;Adaptive filters;Intelligent systems;Application software;Computer science;edge detection;Canny algorithm;FCM},
}

@InProceedings{QiangCao2001,
  author    = {{Qiang Cao} and {Chang Sheng Xie}},
  title     = {A self-adaptation, high availability cluster file system for network applications},
  booktitle = {2001 International Conferences on Info-Tech and Info-Net. Proceedings (Cat. No.01EX479)},
  year      = {2001},
  volume    = {5},
  pages     = {323-327 vol.5},
  month     = {Oct},
  abstract  = {In this paper, we present a self-adaptive and high availability cluster file system in which we employ lots of commodity machines and their local operation system to build an integrative file system that can provide high availability, performance, and self-adaptation by automatically reduplicating data and efficiently using them, which supports logging and recovery from node failures. At that time, the data in the file is automatically replicated or migrated on demand to a number of requests from customers who use the data through the network, in order to decrease the workload and single node fault. The file system is satisfactory for the requirements of network applications, such as VoD, WWW, etc.},
  doi       = {10.1109/ICII.2001.983539},
  groups    = {ieee},
  keywords  = {Internet;multimedia communication;computer network reliability;replicated databases;self-adaptive file system;high availability file system;cluster file system;network applications;integrative file system;performance;logging;failure recovery;data replication;VoD;WWW;multimedia;Internet;Availability;File systems;Network servers;Scalability;Web server;File servers;World Wide Web;Web and internet services;Switches;Application software},
}

@Article{Poplau2008,
  author   = {G. {Poplau} and U. {van Rienen}},
  title    = {A Self-Adaptive Multigrid Technique for 3-D Space Charge Calculations},
  journal  = {IEEE Transactions on Magnetics},
  year     = {2008},
  volume   = {44},
  number   = {6},
  pages    = {1242-1245},
  month    = {June},
  issn     = {1941-0069},
  abstract = {Most physical problems contain variations in scale; this holds true for the area of electromagnetic field computation. For this reason, research is ongoing to construct adaptive discretization techniques. The focus of this paper lies in the investigation of an adaptive refinement strategy based on the multigrid technique. Such adaptive discretizations are required, for instance, for the efficient calculation of 3-D space charge effects of bunches of charged particles. The refinement strategy under investigation here employs the -criterion.},
  doi      = {10.1109/TMAG.2007.914831},
  groups   = {ieee},
  keywords = {particle beam bunching;Poisson equation;space charge;self-adaptive multigrid technique;3-D space charge calculations;electromagnetic field computation;adaptive discretization;adaptive refinement strategy;multigrid technique;tau-criterion;Space charge;Poisson equations;Laplace equations;Vectors;Electromagnetic fields;Physics computing;Particle beams;Particle accelerators;Application software;Adaptive mesh;particle beam dynamics;space charge},
}
{C��rcoles-Ortega2005,
  author        = {J. {C��rcoles-Ortega} and M. {Salazar-Palma}},
  title         = {Self-adaptive algorithms based on h-refinement applied to finite element method},
  booktitle     = {2005 IEEE Antennas and Propagation Society International Symposium},
  year          = {2005},
  volume        = {4B},
  pages         = {197-200 vol. 4B},
  month         = {July},
  __markedentry = {[guan:6]},
  abstract      = {Two error indicators of the solution of an electromagnetic problem by the finite element method (FEM) and two local refinement algorithms for tetrahedral meshes are developed and combined to build up different self-adaptive (h-refinement) algorithms. 2nd order curl-conforming Nedelec tetrahedral elements are used. The performance of the different methods is checked and compared by means of the electromagnetic analysis of resonant cavities.},
  doi           = {10.1109/APS.2005.1552777},
  issn          = {1947-1491},
  keywords      = {cavity resonators;computational electromagnetics;finite element analysis;resonant cavities;electromagnetic analysis;2nd order curl-conforming Nedelec tetrahedral elements;tetrahedral meshes;electromagnetic problem;error indicators;finite element method;h-refinement;self-adaptive algorithms;Finite element methods;Electromagnetic analysis;Resonance;Convergence;Software performance;Maxwell equations;Eigenvalues and eigenfunctions;Erbium;Performance analysis;Least squares approximation},
}

@InProceedings{ShirongLiu2000,
  author    = {{Shirong Liu} and {Yu Zheng} and {Jinshou Yu}},
  title     = {Optimization for a class of self-adaptation neuro-fuzzy models and its application to CSTR modeling},
  booktitle = {Proceedings of the 3rd World Congress on Intelligent Control and Automation (Cat. No.00EX393)},
  year      = {2000},
  volume    = {5},
  pages     = {3513-3517 vol.5},
  month     = {June},
  abstract  = {We study the model structure and parameter optimization for Takagi-Sugeno type neuro-fuzzy models based on the statistical information criteria, matrix singular value decomposition, rule elimination method and rule merging methods. Some novel parameter self-adaptation algorithms are presented in this paper, which can be used to modify cluster center values, cluster radius values and parameters of consequent functions of the neuro-fuzzy models. The neuro-fuzzy model and methods presented have been successfully applied to modeling a continuous stirred tank reactor (CSTR).},
  doi       = {10.1109/WCICA.2000.863195},
  groups    = {ieee},
  keywords  = {fuzzy neural nets;process control;chemical industry;singular value decomposition;self-adjusting systems;optimisation;parameter optimization;Takagi-Sugeno;statistical information criteria;singular value decomposition;rule elimination;rule merging;continuous stirred tank reactor;fuzzy neural network;Continuous-stirred tank reactor;Optimization methods;Application software;Automation;Takagi-Sugeno model;Matrix decomposition;Singular value decomposition;Merging;Clustering algorithms;Adaptation model},
}

@InProceedings{Baresi2008,
  author    = {L. {Baresi}},
  title     = {Self-adaptive Web Service Compositions},
  booktitle = {2008 12th Enterprise Distributed Object Computing Conference Workshops},
  year      = {2008},
  pages     = {343-343},
  month     = {Sep.},
  abstract  = {Summary form only given. Self-adaptability and autonomic behaviors are becoming more and more important in the landscape of complex distributed systems, and Web service compositions are a prominent example. Mobile applications require services able to adapt their behavior with respect to different context autonomously, but also more conventional systems demand for reliable services able to cope with "unforeseen" anomalies without human intervention (and without maintaining and redeploying the whole system). These requirements are scarcely supported by current composition languages, like BPEL (Business Process Execution Language), but different research initiatives are trying to overcome these limitations. Some proposals work directly on actual compositions, while others tackle the problem by considering the middleware infrastructure in charge of executing them. Proposed solutions are different and offer many interesting options. The talk surveys the different proposals and proposes a first taxonomy. The result is that the middleware infrastructure plays a key role to provide a holistic and flexible solution for self-adaptive compositions. The brief presentation of a prototype infrastructure for the deployment of reliable and self-adaptive BPEL processes further supports this assumption. The talk concludes by discussing some open issues in the field and by sketching a possible research agenda.},
  doi       = {10.1109/EDOCW.2008.53},
  groups    = {ieee},
  issn      = {2325-6605},
  keywords  = {fault tolerant computing;middleware;mobile computing;Web services;self-adaptive Web service composition;autonomic behavior;complex distributed system;mobile application;middleware;BPEL;Web services;Proposals;Middleware;Software engineering;Context-aware services;Humans;Maintenance;Research initiatives;Taxonomy;Prototypes},
}

@InProceedings{Kim2016,
  author    = {J. {Kim} and J. {Lee} and J. {Jeong} and H. {Kim} and J. {Park} and T. {Kim}},
  title     = {SAN: Self-Adaptive Navigation for Drone Battery Charging in Wireless Drone Networks},
  booktitle = {2016 30th International Conference on Advanced Information Networking and Applications Workshops (WAINA)},
  year      = {2016},
  pages     = {248-251},
  month     = {March},
  abstract  = {This paper introduces an optimal path finding problem for drone battery charging where their batteries should be charged for the travel from a source to a destination as needed. We present a practically reasonable heuristic to solve the problem by monitoring drones' battery status and traffic conditions in real time through a cloud-based service called traffic control center. This study will be the cornerstone of path finding problems for drone battery charging in drone networks.},
  doi       = {10.1109/WAINA.2016.103},
  groups    = {ieee},
  keywords  = {autonomous aerial vehicles;radiofrequency power transmission;radionavigation;telecommunication power management;wireless sensor networks;self adaptive navigation;SAN;drone battery charging;wireless drone networks;path finding problem;traffic control center;Batteries;Delays;Wireless communication;Unmanned aerial vehicles;Software},
}

@InProceedings{Huang2009,
  author    = {L. {Huang} and L. {Ding} and W. {Du}},
  title     = {Improved Self-Adaptive Genetic Algorithm with Varying Population Size},
  booktitle = {2009 Fifth International Conference on MEMS NANO, and Smart Systems},
  year      = {2009},
  pages     = {77-79},
  month     = {Dec},
  abstract  = {The size of the population can be critical in many application of genetic algorithm. And the probabilities of crossover and mutation have an effect on the diversity of population and the convergence of algorithm. In this paper we propose an adaptive method for crossover and mutation probabilities, which change with the varying population size. This algorithm could make great progress in searching for the global optimization. The experimental results indicate some merits of the proposed method.},
  doi       = {10.1109/ICMENS.2009.9},
  groups    = {ieee},
  keywords  = {convergence;genetic algorithms;self-adjusting systems;selfadaptive genetic algorithm;varying population size;population diversity;crossover probabilities;mutation probabilities;global optimization;Genetic algorithms;Biological cells;Genetic mutations;Laboratories;Software engineering;Convergence;Size control;Micromechanical devices;Mathematics;Automatic control;self-adaptive;population size;lifetime},
}

@InProceedings{Zhang2008a,
  author    = {H. {Zhang} and H. {Ning}},
  title     = {New Little-Window-Based Self-adaptive Ant Colony-Genetic Hybrid Algorithm},
  booktitle = {2008 International Symposium on Computational Intelligence and Design},
  year      = {2008},
  volume    = {1},
  pages     = {250-254},
  month     = {Oct},
  abstract  = {To improve the convergence time of basic ant colony optimization algorithm and avoid falling in local best, a novel ant colony-genetic hybrid algorithm is proposed. Firstly, the self-adaptive strategy of evaporation coefficient is adopted to enhance global search ability. Secondly, the global pheromone update rule is introduced to restrict ants release pheromone only in the best route and the worst route. And the local pheromone update rule is used to decrease pheromone on the traversed edges to avoid ants produce identical solutions and falling in local best. Thirdly, with the greedy inversion operator, genetic algorithm mutation mechanism deals with falling in local best and degeneration. Finally, variable width little-window limits the mobile range of ants so that inferior solutions could be eliminated in terms of fact. Comparing with traditional methods, the simulation result on TSP shows that new algorithm has higher convergence speed and better escape capability from local best.},
  doi       = {10.1109/ISCID.2008.59},
  groups    = {ieee},
  keywords  = {convergence;genetic algorithms;greedy algorithms;little-window-based self-adaptive ant colony-genetic hybrid algorithm;convergence time;ant colony optimization;evaporation coefficient;global search ability;global pheromone update rule;greedy inversion operator;Software algorithms;Genetic algorithms;Computational intelligence;Ant colony optimization;Feedback;Communication system control;Algorithm design and analysis;Computer science;Laboratories;Competitive intelligence;Ant Colony Optimization Algorithm;Genetic Algorithm;TSP;Little-Window;Greedy Inversion Mutation},
}

@InProceedings{LiangChen2004,
  author    = {{Liang Chen} and G. {Agrawal}},
  title     = {Self-adaptation in a middleware for processing data streams},
  booktitle = {International Conference on Autonomic Computing, 2004. Proceedings.},
  year      = {2004},
  pages     = {292-293},
  month     = {May},
  abstract  = {Many stream-based applications share a common set of characteristics, which makes grid-based and adaptive processing desirable or even a necessity. We view the problem of flexible and adaptive processing of distributed data streams as a grid computing problem. We have been developing a middleware for processing of distributed data streams. Our system is referred to as GATES (grid-based adaptive execution on streams). It is designed to use the existing grid standards and tools to the extent possible. Because of the real-time requirements, there is a need for adapting the processing in such a distributed environment, and achieving the best accuracy of the results within the real-time constraint. For this purpose, our system flexibly achieves the best accuracy that is possible while maintaining the real-time constraint on the analysis. We have developed and implemented a self-adaptation algorithm. This paper focuses on describing and evaluating this algorithm.},
  doi       = {10.1109/ICAC.2004.1301383},
  groups    = {ieee},
  keywords  = {middleware;grid computing;constraint handling;real-time systems;open systems;stream-based applications;adaptive data processing;distributed data streams;grid computing problem;middleware;grid-based adaptive execution;real-time requirements;distributed environment;real-time constraint;system flexibly;self-adaptation algorithm;data stream processing;Middleware;Runtime;Sampling methods;Application software;Computer applications;Data engineering;Information analysis;Computerized monitoring;Medical simulation;Instruments},
}

@InProceedings{Chang2008a,
  author    = {S. -. {Chang} and Y. -. {Su}},
  title     = {A self-adaptive fluidic probe for electrical caries detection},
  booktitle = {2008 IEEE 21st International Conference on Micro Electro Mechanical Systems},
  year      = {2008},
  pages     = {248-251},
  month     = {Jan},
  abstract  = {This paper presents a fiuidic probe that can self-adapt its shape to teeth and detect dental caries by sensing the variation in electrical-impedance. The fiuidic probe, whose liquid tip spontaneously spreads on hydrophilic tooth surface and into underlying caries, is employed to create intimate contact for impedance sensing. A tubular air sleeve shaped by the probe casing is applied around the liquid tip to insulate it from surrounding saliva, and to regulate its spreading. In the prototype demonstration, un-restored, extracted premolar teeth were investigated and the results indicated >20-fold impedance differences between sound and carious teeth, by which caries can be identified in a consistent manner. Furthermore, the fluidic probe has been successfully applied to approximal caries, which is difficult to detect by most existing schemes.},
  doi       = {10.1109/MEMSYS.2008.4443639},
  groups    = {ieee},
  issn      = {1084-6999},
  keywords  = {bioelectric phenomena;biomedical measurement;bioMEMS;dentistry;diseases;electrical contacts;microfluidics;patient diagnosis;probes;self-adaptive fluidic probe;electrical caries detection;dental caries detection;electrical-impedance sensing;tubular air sleeve;premolar teeth;miniature liquid tip;electrical contact;Probes;Teeth;Dentistry;Contacts;Surface impedance;Dielectric liquids;Application software;Insulation;Diseases;Costs},
}

@InProceedings{Jiang2009a,
  author    = {L. {Jiang} and J. {Fang} and Z. {Liu} and L. {Sun}},
  title     = {Research and Development of Self-Adaptive Mobile Terminal Framework},
  booktitle = {2009 First International Conference on Information Science and Engineering},
  year      = {2009},
  pages     = {2695-2698},
  month     = {Dec},
  abstract  = {Nowadays, the two major different categories of Web mobile terminal devices are mobile phone-type mobile devices of limited resource and personal mobile computers of "abundant" resource. In this paper, the self-adaptive terminal framework technology, providing supports for developers to efficiently carry out the development and application of the mobile Web suitable for both the mobile devices of limited resource and the personal mobile computer, are presented. The self-adaptive mobile framework technology, based on the WWW protocol and WAP model, makes use of technologies such as Filter, Dom4J, XSLT and Xpath by utilizing the existing successful open-source framework.},
  doi       = {10.1109/ICISE.2009.891},
  groups    = {ieee},
  issn      = {2160-1291},
  keywords  = {protocols;Web sites;self-adaptive mobile terminal framework;mobile Web;mobile devices;personal mobile computer;WWW protocol;WAP model;open-source framework;XSLT;Dom4J;Filter;Xpath;Research and development;Mobile computing;Wireless application protocol;World Wide Web;Java;Application software;Educational institutions;Filters;Web server;Standards development},
}

@InProceedings{Wang2009,
  author    = {J. {Wang} and R. {Li} and L. {Lv} and S. {Ren}},
  title     = {Application of Dynamic Programming Method in CARD Based on Fuzzy Self-Adaptive Control},
  booktitle = {2009 Sixth International Conference on Fuzzy Systems and Knowledge Discovery},
  year      = {2009},
  volume    = {4},
  pages     = {248-252},
  month     = {Aug},
  abstract  = {Concerning the virtual working situation of a steel mill, an arithmetic theory based on fuzzy self-adaptation is proposed to the computer-aided pass design (CARD) system, which transforms the multi-objective functions under the identical constraints to a single target function, and uses the variable step-size dynamic programming algorithm to carry out the optimization of the pass rolls. The results of the actual application indicated that the quality of various rolling regulations designed by this CARD system is higher than the original site regulations obviously, the total energy consumption of rolling various wire rods production has been reduced from 1% to 5%, and the tensility between rolls reduced by 10%, which implements continuous rolling with micro tensility under the load balance.},
  doi       = {10.1109/FSKD.2009.324},
  groups    = {ieee},
  keywords  = {adaptive control;CAD;dynamic programming;fuzzy control;production engineering computing;rolling;CARD;computer-aided pass design system;fuzzy self-adaptive control;multiobjective functions;variable step-size dynamic programming algorithm;total energy consumption;wire rods production;Dynamic programming;Fuzzy control;Application software;Steel;Milling machines;Digital arithmetic;Fuzzy systems;Algorithm design and analysis;Constraint theory;Heuristic algorithms;CARD;self-adaptive;fuzzy multi-objective;dynamic programming method},
}

@InProceedings{Zhang2017b,
  author    = {B. {Zhang} and F. {Krikava} and R. {Rouvoy} and L. {Seinturier}},
  title     = {Hadoop-Benchmark: Rapid Prototyping and Evaluation of Self-Adaptive Behaviors in Hadoop Clusters},
  booktitle = {2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2017},
  pages     = {175-181},
  month     = {May},
  abstract  = {Optimizing Hadoop executions has attracted a lot of research contributions in particular in the domain of self-adaptive software systems. However, these research efforts are often hindered by the complexity of Hadoop operation and the difficulty to reproduce experimental evaluations that makes it hard to compare different approaches to one another. To address this limitation, we propose a research acceleration platform for rapid prototyping and evaluation of self-adaptive behavior in Hadoop clusters. Essentially, it provides automated approach to provision reproducible Hadoop environments and execute acknowledged benchmarks. It is based on the state-of-the-art container technology that supports both distributed configurations as well as standalone single-host setups. We demonstrate the approach on a complete implementation of a concrete Hadoop self-adaptive case study.},
  doi       = {10.1109/SEAMS.2017.15},
  groups    = {ieee},
  keywords  = {data handling;parallel processing;pattern clustering;software prototyping;Hadoop-benchmark;rapid prototyping;self-adaptive behaviors;Hadoop clusters;self-adaptive software systems;research acceleration platform;reproducible Hadoop environments;container technology;distributed configurations;standalone single-host setups;Containers;Benchmark testing;Virtual machining;Software;Adaptive systems;Rapid prototyping;Feedback control},
}

@InProceedings{Ma2014,
  author    = {H. {Ma} and X. {Yi} and X. {Wu} and D. {Gu} and H. {Pan} and C. {Zheng} and X. {Yi}},
  title     = {A capacity self-adaption information hiding algorithm based on RS code},
  booktitle = {2014 International Conference on Multisensor Fusion and Information Integration for Intelligent Systems (MFI)},
  year      = {2014},
  pages     = {1-8},
  month     = {Sep.},
  abstract  = {Information hiding based on error correcting code is one of the difficulties in information hiding research. Current information hiding algorithms cannot confirm the upper bound of covert channel capacity when channels are interfered. In this paper, a capacity self-adaption information hiding algorithm based on RS code is proposed to solve this problem. Firstly, Channel covert communication model is designed to describe the realization of information hiding algorithms based on the m-sequence. Secondly, the upper bound of embedding capacity of secret information based on block code and RS code is separately analyzed in theory. Thirdly, simulation verification is implemented under the supposed channel environment. Experimental results demonstrated that experimental values are consistent with the theoretical values, and in terms of the embedding rate, the performance of the RS code is better than the performance of recurrent code and block code.},
  doi       = {10.1109/MFI.2014.6997696},
  groups    = {ieee},
  keywords  = {block codes;channel capacity;channel coding;error correction codes;m-sequences;Reed-Solomon codes;telecommunication security;capacity self-adaption information hiding algorithm;RS code;error correcting code;covert channel capacity;upper bound;channel covert communication model;m-sequence;secret information embedding capacity;block code;simulation verification;recurrent code performance;Error correction codes;Bit error rate;Block codes;Noise;Decoding;Upper bound;Information hiding;block code;RS code;channel capacity;self-adaption},
}

@InProceedings{Schall2008,
  author    = {D. {Schall} and C. {Dorn} and S. {Dustdar} and I. {Dadduzio}},
  title     = {VieCAR - Enabling Self-adaptive Collaboration Services},
  booktitle = {2008 34th Euromicro Conference Software Engineering and Advanced Applications},
  year      = {2008},
  pages     = {285-292},
  month     = {Sep.},
  abstract  = {Novel forms of collaboration increasingly distribute control among e-workers, thereby allowing agile and autonomous collaboration. However, this requires a novel blend of infrastructure and algorithms for self-adaptation of collaboration services. We present VieCAR (Vienna Collaborative Activity and Resource Management Framework), a framework that addresses the requirements of new collaborative service-oriented environments. Self-adaptive collaboration services depend on the user?s context. VieCAR combines service-oriented architectures with activity-centric computing enabling people to interact and collaborate regardless of their location and across organizational boundaries. Based on VieCAR?s activity model, we present a ranking algorithm determining the relevant input for service adaptation.},
  doi       = {10.1109/SEAA.2008.25},
  groups    = {ieee},
  issn      = {2376-9505},
  keywords  = {groupware;self-adjusting systems;software architecture;VieCAR-enabling self-adaptive collaboration services;agile collaboration;autonomous collaboration;Vienna collaborative activity;resource management framework;collaborative service-oriented environment;service-oriented architecture;activity centric computing;VieCAR activity model;ranking algorithm;service adaptation;Collaboration;Collaborative work;Resource management;Web services;Collaborative software;Context;Middleware;Context-aware services;Environmental management;Software engineering;service adaptation;ranking;context-aware services;agile collaboration},
}

@InProceedings{Lee2017a,
  author    = {H. {Lee} and S. {Lee}},
  title     = {Provenance Information-Based Trust Evaluation Using Cooperation Pattern for Self-Adaptive Systems},
  booktitle = {2017 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C)},
  year      = {2017},
  pages     = {114-121},
  month     = {July},
  abstract  = {Trust is one of the major factors that a system needs to achieve the secure interaction. Trust can represent the social and reliability perspective of the security. This characteristic makes trust the soft security factor. There are some attempts to evaluate trust, however, they do not consider the characteristics of self-adaptive systems such as self-* properties, openness, and uncertainty. In this paper, we propose provenance information-based trust evaluation using the cooperation pattern for self-adaptive systems. Provenance information contains historical records of the system. By using provenance information, we can evaluate a system's trust value without any help from outside. Even though the system has a good trust value, the value can be manipulated by other systems which have the malicious intention. To identify the malicious intention, we propose a cooperation pattern that represents the singularity of provenance information and gives incentives or penalties to the trust value.},
  doi       = {10.1109/QRS-C.2017.26},
  groups    = {ieee},
  keywords  = {trusted computing;provenance information-based trust evaluation;cooperation pattern;self-adaptive systems;security factor;system historical records;system trust value evaluation;Conferences;Software quality;Software reliability;Security;Manganese;Self-Adaptive System;Trust;Provenance;Cooperation Pattern;Security},
}

@InProceedings{Farahani2016,
  author    = {A. {Farahani} and E. {Nazemi} and G. {Cabri} and A. {Rafizadeh}},
  title     = {An evaluation method for Self-Adaptive systems},
  booktitle = {2016 IEEE International Conference on Systems, Man, and Cybernetics (SMC)},
  year      = {2016},
  pages     = {002814-002820},
  month     = {Oct},
  abstract  = {Nowadays, change is an important aspect of the world. Complexity and change in requirements and environments bring us to Autonomic Systems as a solution. Like any other kind of software system, better implementation of a system needs a proper evaluation method for system implementation. To evaluate a Self-Adaptive system, appropriate quality factors are needed for evaluation. This research tries to use non-adaptive system's evaluation methods to evaluate Self-Adaptive ones. The qualitative factors for self-adaptive systems have been extracted from a literature review (as Self-Adaptive System Qualitative Factors or for abbreviation SAQFs). Hence, there is no explicit or even implicit way for measuring most of the SAQFs, This research has tried to measure them through some measurable Qualitative Criterion. These Qualitative Criteria (we call them QCs) consist of some self-adaptive systems attributes and also some non-adaptive systems' qualitative factors. A map between these SAQFs and software system's QCs (which are more measurable) have been introduced. For each QC, sufficient metrics for measuring could be dug up based on the problem context. For better knowing about the influence of qualitative factors on each other, a prerequisite and post-requisite graph from relations among SAQFs have been introduced. This relational graph shows the importance and impact of each factors measurement on measuring the systems from self-adaptive viewpoint. For evaluating the method, we have proposed a questionnaire to experts about the model the correctness of these impacts and influences have been verified. In addition, a case study on a system in changing environment evaluated with proposed method and the applicability of the method have been reviewed.},
  doi       = {10.1109/SMC.2016.7844665},
  groups    = {ieee},
  keywords  = {graph theory;software architecture;software fault tolerance;evaluation method;self-adaptive system qualitative factor;SAQF;autonomic system;software system;qualitative criteria;QC;prerequisite graph;postrequisite graph;self-adaptive architecture;Adaptation models;Measurement;Computer architecture;Adaptive systems;Mathematical model;Software;Monitoring;self-adaptive system;Autonomic computing;evaluation method;qualitative factors;qualitative criteria},
}

@InProceedings{Edwards2009,
  author    = {G. {Edwards} and J. {Garcia} and H. {Tajalli} and D. {Popescu} and N. {Medvidovic} and G. {Sukhatme} and B. {Petrus}},
  title     = {Architecture-driven self-adaptation and self-management in robotics systems},
  booktitle = {2009 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2009},
  pages     = {142-151},
  month     = {May},
  abstract  = {We describe an architecture-centric design and implementation approach for building self-adapting and self-managing robotics systems. The basis of our approach is the concept of meta-level components, which facilitate adaptation and management of application-level components. Our approach applies two key enhancements to the traditional usage of meta-level components: (1) we utilize three distinct, specialized meta-level components for the three fundamental activities of a robotics system: sensing, computation, and control, and (2) we allow meta-level components to themselves be monitored, managed and adapted by other (higher layer) meta-level components. In this way, our approach flexibly supports adaptive layered architectures of arbitrary depth, the specification of arbitrary system adaptation policies, and the provision of intelligent facilities for constructing adaptation plans on-the-fly. We showcase our approach using a team of autonomous mobile robots that engage in a leader-follower scenario and experience a wide variety of failures, activating distinct recovery mechanisms.},
  doi       = {10.1109/SEAMS.2009.5069083},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {mobile robots;self-adjusting systems;architecture-driven self-adaptation;architecture-driven self-management;robotics systems;architecture-centric design;self-adapting robotics systems;self-managing robotics systems;meta-level components;application-level components;autonomous mobile robots;leader-follower scenario;Computer architecture;Adaptive systems;Monitoring;Control systems;Intelligent robots;Mobile robots;Software architecture;Computer science;Buildings;Robot sensing systems},
}

@InProceedings{Moreno2017b,
  author    = {G. A. {Moreno} and O. {Strichman} and S. {Chaki} and R. {Vaisman}},
  title     = {Decision-Making with Cross-Entropy for Self-Adaptation},
  booktitle = {2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2017},
  pages     = {90-101},
  month     = {May},
  abstract  = {Approaches to decision-making in self-adaptive systems are increasingly becoming more effective at managing the target system by taking into account more elements of the decision problem that were previously ignored. These approaches have to solve complex optimization problems at run time, and even though they have been shown to be suitable for different kinds of systems, their time complexity can make them excessively slow for systems that have a large adaptation-relevant state space, or that require a tight control loop driven by fast decisions. In this paper we present an approach to speed up complex proactive latency-aware self-adaptation decisions, using the cross-entropy (CE) method for combinatorial optimization. The CE method is an any-time algorithm based on random sampling from the solution space, and is not guaranteed to find an optimal solution. Nevertheless, our experiments using two very different systems show that in practice it finds solutions that are close to optimum even when its running time is restricted to a fraction of a second, attaining speedups of up to 40 times over the previous fastest solution approach.},
  doi       = {10.1109/SEAMS.2017.7},
  groups    = {ieee},
  keywords  = {combinatorial mathematics;decision making;entropy;optimisation;self-adjusting systems;solution space;random sampling;any-time algorithm;combinatorial optimization;CE method;proactive latency-aware self-adaptation decisions;adaptation-relevant state space;complex optimization problems;self-adaptive systems;cross-entropy;decision making;Optimization;Programmable logic arrays;Decision making;Uncertainty;Probabilistic logic;Estimation;Aerospace electronics;cross-entropy method;decision-making;optimization;self-adaptive systems},
}

@InProceedings{Tang2016,
  author    = {Z. {Tang} and Y. {Guo} and X. {Chen}},
  title     = {Self-Adaptive Step Counting on Smartphones under Unrestricted Stepping Modes},
  booktitle = {2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC)},
  year      = {2016},
  volume    = {1},
  pages     = {788-797},
  month     = {June},
  abstract  = {Pedometer apps on smartphones and wearable electronics are increasingly popular nowadays, as they are widely used for health monitoring and location-based systems. Most pedometer apps are based on inertial sensors and each step counting algorithm works precisely under restricted stepping modes because steps are detected and validated after comparing their parameters to pre-determined optimal values related to particular conditions. In this paper, we propose self-adaptive step counting in order to improve step counting accuracy under unrestricted stepping modes on smartphones. Based on our human stepping model, we propose self-adaptive method that can detect new steps by monitoring vertical acceleration and validate new steps by comparing to self-adaptive values, which are adjusted dynamically after each step occurs. We show the flexibility of the proposed approach by incorporating it into two existing step counting algorithms WPD and DTW. We also propose a new stepping cycle recognition (SCR) algorithm that is self-adaptive and performs the best under variant stepping modes. With experiments under different stepping modes including fixed and variant modes, we show that self-adaptive methods perform significantly better compared to original methods using fixed optimal values.},
  doi       = {10.1109/COMPSAC.2016.187},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {gait analysis;health care;smart phones;wearable computers;self-adaptive step counting;smartphones;unrestricted stepping modes;pedometer apps;wearable electronics;health monitoring;location-based systems;WPD;DTW;stepping cycle recognition;SCR;Acceleration;Heuristic algorithms;Smart phones;Sensors;Legged locomotion;Gravity;Thyristors;Self-adaptive;Linear accelerometer;Gravity sensor;Step counting;Human stepping model;Dynamic time warping},
}

@InProceedings{Shetty2004,
  author    = {S. {Shetty} and S. {Neema} and T. {Bapty}},
  title     = {Model based self adaptive behavior language for large scale real time embedded systems},
  booktitle = {Proceedings. 11th IEEE International Conference and Workshop on the Engineering of Computer-Based Systems, 2004.},
  year      = {2004},
  pages     = {478-483},
  month     = {May},
  abstract  = {At Fermi lab, high energy physics experiments require very large number of real time computations. With thousands of processors (around /spl sim/1000 FPGA's, /spl sim/2500 embedded processors, /spl sim/2500 PC's and /spl sim/25,000,000 detector channels) involved in performing event filtering on a trigger farm, there is likely to be a large number of failures within the software and hardware systems. Historically, physicists have developed their own software and hardware for experiments such as BTeV [J.N. Buttler (2002)]. However, their time is best spent working on physics and not software development. The target users of this tool are the physicists. The tool should be user-friendly and the physicists should be able to introduce custom self-adaptive behaviors, since they can best define how the system should behave in fault conditions. The BTeV trigger system is being used as a model for researching tools for defining fault behavior and automatically generating the software. This paper presents a language to define the behaviors and an application scenario for the BTeV system and its expected fault scenarios. These self adaptive system tools are implemented using model integrated computing. The domain specific graphical language (DSL) is implemented within the generic modeling environment (GME) tool, which is a meta-programmable modeling environment developed at Vanderbilt University.},
  doi       = {10.1109/ECBS.2004.1316736},
  groups    = {ieee},
  keywords  = {self-adjusting systems;embedded systems;fault diagnosis;visual languages;specification languages;large-scale systems;Fermi lab;high energy physics experiments;embedded processors;event filtering;BTeV trigger system;model integrated computing;domain specific graphical language;generic modeling environment tool;meta-programmable modeling environment;model based self adaptive behavior language;large scale real time embedded systems;Large-scale systems;Real time systems;Embedded system;Hardware;Physics computing;Field programmable gate arrays;Event detection;Detectors;Filtering;Embedded software},
}

@InProceedings{Maggio2017,
  author    = {M. {Maggio} and A. V. {Papadopoulos} and A. {Filieri} and H. {Hoffmann}},
  title     = {Self-Adaptive Video Encoder: Comparison of Multiple Adaptation Strategies Made Simple},
  booktitle = {2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2017},
  pages     = {123-128},
  month     = {May},
  abstract  = {This paper presents an adaptive video encoder that can be used to compare the behavior of different adaptation strategies using multiple actuators to steer the encoder towards a global goal, composed of multiple conflicting objectives. A video camera produces frames that the encoder manipulates with the objective of matching some space requirement to fit a given communication channel. A second objective is to maintain a given similarity index between the manipulated frames and the original ones. To achieve the goal, the software can change three parameters: the quality of the encoding, the noise reduction filter radius and the sharpening filter radius. In most cases, the objectives - small encoded size and high quality - conflict, since a larger frame would have a higher similarity index to its original counterpart. This makes the problem difficult from the control perspective and makes the case study appealing to compare different adaptation strategies.},
  doi       = {10.1109/SEAMS.2017.16},
  groups    = {ieee},
  keywords  = {adaptive codes;video coding;self-adaptive video encoder;multiple adaptation strategies;multiple actuators;encoding quality;noise reduction filter radius;sharpening filter radius;Actuators;Image coding;Cameras;Indexes;Software;Cost function;Predictive models;self-adaptive systems;case studies;control theory},
}

@InProceedings{Robertson2004,
  author    = {P. {Robertson} and R. {Laddaga}},
  title     = {The GRAVA self-adaptive architecture: history; design; applications; and challenges},
  booktitle = {24th International Conference on Distributed Computing Systems Workshops, 2004. Proceedings.},
  year      = {2004},
  pages     = {298-303},
  month     = {March},
  abstract  = {In 1998 DARPA embarked on a program to develop self-adaptive software. One architecture that emerged from that effort was the GRAVA architecture. The GRAVA architecture has by now been applied to a number of challenging domains and continues to be extended and applied to ever more challenging problems. An overview is provided of the history that motivated the program, the design of the GRAVA architecture, and the applications to which it is being applied. Challenges and open problems are discussed.},
  doi       = {10.1109/ICDCSW.2004.1284046},
  groups    = {ieee},
  keywords  = {adaptive systems;software architecture;sensor fusion;history;GRAVA self-adaptive architecture;self-adaptive software;History;Computer architecture;Application software;Context awareness;Robustness;Software performance;Open source software;Computer vision;Layout;Runtime},
}

@InProceedings{Weyns2012b,
  author    = {D. {Weyns} and M. U. {Iftikhar} and S. {Malek} and J. {Andersson}},
  title     = {Claims and supporting evidence for self-adaptive systems: A literature study},
  booktitle = {2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2012},
  pages     = {89-98},
  month     = {June},
  abstract  = {Despite the vast body of work on self-adaption, no systematic study has been performed on the claims associated with self-adaptation and the evidence that exists for these claims. As such an insight is crucial for researchers and engineers, we performed a literature study of the research results from SEAMS since 2006 and the associated Dagstuhl seminar in 2008. The study shows that the primary claims of self-adaptation are improved flexibility, reliability, and performance of the system. On the other hand, the tradeoffs implied by self-adaptation have not received much attention. Evidence is obtained from basic examples, or simply lacking. Few systematic empirical studies have been performed, and no industrial evidence is reported. From the study, we offer the following recommendations to move the field forward: to improve evaluation, researchers should make their assessment methods, tools and data publicly available; to deal with poor discussion of limitations, conferences/workshops should require an explicit section on limitations in engineering papers; to improve poor treatment of tradeoffs, this aspect should be an explicit subject of reviews; and finally, to enhance industrial validation, the best academy-industry efforts could be formally recognized by the community.},
  doi       = {10.1109/SEAMS.2012.6224395},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {distributed processing;industrial relations;software engineering;self-adaptive system;SEAMS;Dagstuhl seminar;assessment method;assessment tools;industrial validation;academy-industry efforts;software engineering for adaptive and self-managing system;Software systems;Context;Communities;Systematics;Documentation;Concrete},
}

@InProceedings{Reichstaller2018,
  author    = {A. {Reichstaller} and A. {Knapp}},
  title     = {Risk-Based Testing of Self-Adaptive Systems Using Run-Time Predictions},
  booktitle = {2018 IEEE 12th International Conference on Self-Adaptive and Self-Organizing Systems (SASO)},
  year      = {2018},
  pages     = {80-89},
  month     = {Sep.},
  abstract  = {Devising test strategies for specific test goals relies on predictions of the run-time behavior of the software system under test (SuT) based on specifications, models, or the code. For a system following a single strategy as run-time behavior, the test strategy can be fixed at design time. For an adaptive system, which may choose from several strategies due to environment changes, a combination of test strategies has to be found, which still can be achieved at design time provided that all system strategies and the switching policy are predictable. Self-adaptive systems, also adapting their system strategies and strategy switches according to the environmental dynamics, render such design-time predictions futile, but there also the test strategies have to be adapted at run time. We characterize the necessary interplay between system strategy adaptation of the SuT and test strategy adaptation of the tester as a Stochastic Game. We argue that the tester's part, formalized by means of a Markov Decision Process, can be automatically solved by the use of Reinforcement Learning methods where we discuss both model-based and model-free variants. Finally, we propose a particular framework inspired by Direct Future Prediction which, given a simulation of the SuT and its environment, autonomously finds good test strategies w.r.t. imposed quanti?able goals. While these goals, in general, can be initialized arbitrarily, our evaluation concentrates on risk-based goals rewarding the detection of hazardous failures.},
  doi       = {10.1109/SASO.2018.00019},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {learning (artificial intelligence);Markov processes;program testing;stochastic games;stochastic game;reinforcement learning methods;Markov decision process;SuT;direct future prediction;software system under test;run-time predictions;test strategy adaptation;system strategy adaptation;design-time predictions;self-adaptive systems;adaptive system;run-time behavior;Testing;Games;Markov processes;Modeling;Adaptation models;Predictive models;Task analysis;Software Testing;Self adaptive Systems;Reinforcement Learning;Quality Assurance;Adversarial Machine Learning},
}

@InProceedings{Gohad2013,
  author    = {A. {Gohad} and K. {Ponnalagu} and N. C. {Narendra} and P. S. {Rao}},
  title     = {Towards Self-Adaptive Cloud Collaborations},
  booktitle = {2013 IEEE International Conference on Cloud Engineering (IC2E)},
  year      = {2013},
  pages     = {54-61},
  month     = {March},
  abstract  = {In multi-tenant collaborative cloud systems, the choice of cloud providers is based on pre-negotiated terms and conditions to help meet Service Level Agreements (SLAs) and streamline resource provisioning. However, these collaborations are not self-adaptive to accommodate changes in tenancy requirements, quality of resources and provider capabilities as provider collaborations remain static over tenancy period. In our paper, we present an approach towards achieving self-adaptive cloud collaborations. Our model selects the best possible cloud collaborations from amongst multiple possible dependent cloud provider collaboration links. The formation of cloud provider collaborations is broadly based on cloud provider capabilities, tenancy requirements, cost modeling of each cloud provider andits functional ability at the Software as a Service (SaaS) layer. We present an algorithm to form dynamic cloud collaborations and thereby determine the most appropriate linkages within the providers. We also illustrate our approach throughout our paper with a realistic running example, and present detailed experimental evaluation via a proof-of-concept prototype implementation.},
  doi       = {10.1109/IC2E.2013.11},
  groups    = {ieee},
  keywords  = {cloud computing;contracts;groupware;self-adaptive cloud collaborations;multitenant collaborative cloud systems;cloud providers;prenegotiated terms;prenegotiated conditions;service level agreements;SLA;tenancy period;cloud provider collaboration links;software as a service layer;SaaS;proof-of-concept prototype implementation;Collaboration;Monitoring;Iterative closest point algorithm;Heuristic algorithms;Cloud computing;Indexes;Transmission line measurements;cloud collaboration;multi-tenant;provisioning;model},
}

@InProceedings{Chen2016,
  author    = {L. {Chen} and B. {Wang} and W. {Liu} and J. {Wang}},
  title     = {Self-adaptive multi-objective differential evolutionary algorithm based on decomposition},
  booktitle = {2016 11th International Conference on Computer Science Education (ICCSE)},
  year      = {2016},
  pages     = {610-616},
  month     = {Aug},
  abstract  = {On the basis of MOEA/D-DE algorithm, the introduction of the concept of a self-adaptive differential evolution algorithm, named self-adaptive multi-objective differential evolutionary algorithm based on decomposition (SAMODEA/D). This algorithm enhances the local search algorithm in the case of maintaining the diversity of the population, while effectively avoids ��premature convergence�� and the occurrence of ��local optimum�� situation, a good solution to keep balance between the global search and local development. The experimental results have illustrated the effectiveness of the proposed algorithm.},
  doi       = {10.1109/ICCSE.2016.7581650},
  groups    = {ieee},
  keywords  = {evolutionary computation;search problems;self-adaptive multiobjective differential evolutionary algorithm;decomposition;MOEA/D-DE algorithm;SAMODEA/D;local search algorithm;population diversity;premature convergence;local optimum situation;global search;Sociology;Statistics;Optimization;Convergence;Evolutionary computation;Software algorithms;Linear programming;Decomposition;Self-adaptive;Multi-objective optimization;Differential evolution;Pareto optimality},
}

@InProceedings{Nakagawa2012,
  author    = {H. {Nakagawa} and A. {Ohsuga} and S. {Honiden}},
  title     = {Towards Dynamic Evolution of Self-Adaptive Systems Based on Dynamic Updating of Control Loops},
  booktitle = {2012 IEEE Sixth International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2012},
  pages     = {59-68},
  month     = {Sep.},
  abstract  = {Self-adaptive systems, which enable runtime adaptation, are promising ways of dealing with environmental changes, including system intrusions or faults. Such software systems must modify themselves to better fit their environment. One of the main approaches to constructing such systems is to introduce multiple control loops. Software evolution is an essential activity for expanding this adaptation capability, and dynamic evolution has been envisaged as a way of systems adapting themselves at runtime. In this paper, we establish a development process to deal with dynamic evolution. We devise a goal model compiler to generate models for designing dynamic evolutions and a programming framework that supports dynamic deployment of control loops. We experimentally applied our approach to a system and discuss how our compiler and framework support dynamic evolution of self-adaptive systems.},
  doi       = {10.1109/SASO.2012.17},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {adaptive systems;formal specification;program compilers;software fault tolerance;software maintenance;dynamic evolution;self-adaptive system;dynamic updating;runtime adaptation;environmental changes;system intrusion;system fault;software system modification;software evolution;adaptation capability;goal model compiler;programming framework;dynamic control loop deployment;goal-oriented requirements modeling;Programming;Batteries;Adaptation models;Cleaning;Robots;Runtime;Program processors;self-adaptation;design;dynamic evolution;control loops;goal-oriented requirements modeling;programming framework},
}

@Article{Yu2019,
  author   = {Y. {Yu} and D. {Barthaud} and B. A. {Price} and A. K. {Bandara} and A. {Zisman} and B. {Nuseibeh}},
  title    = {LiveBox: A Self-Adaptive Forensic-Ready Service for Drones},
  journal  = {IEEE Access},
  year     = {2019},
  volume   = {7},
  pages    = {148401-148412},
  issn     = {2169-3536},
  abstract = {Unmanned Aerial Vehicles (UAVs), or drones, are increasingly expected to operate in spaces populated by humans while avoiding injury to people or damaging property. However, incidents and accidents can, and increasingly do, happen. Traditional investigations of aircraft incidents require on-board flight data recorders (FDRs); however, these physical FDRs only work if the drone can be recovered. A further complication is that physical FDRs are too heavy to mount on light drones, hence not suitable for forensic digital investigations of drone flights. In this paper, we propose a self-adaptive software architecture, LiveBox, to make drones both forensic-ready and regulation compliant. We studied the feasibility of using distributed technologies for implementing the LiveBox reference architecture. In particular, we found that updates and queries of drone flight data and constraints can be treated as transactions using decentralised ledger technology (DLT), rather than a generic time-series database, to satisfy forensic tamper-proof requirements. However, DLTs such as Ethereum, have limits on throughput (i.e. transactions-per-second), making it harder to achieve regulation-compliance at runtime. To overcome this limitation, we present a self-adaptive reporting algorithm to dynamically reduce the precision of flight data without sacrificing the accuracy of runtime verification. Using a real-life scenario of drone delivery, we show that our proposed algorithm achieves a 46% reduction in bandwidth without losing accuracy in satisfying both tamper-proof and regulation-compliant requirements.},
  doi      = {10.1109/ACCESS.2019.2942033},
  groups   = {ieee},
  keywords = {aerospace computing;autonomous aerial vehicles;control engineering computing;software architecture;time series;self-adaptive forensic-ready service;unmanned aerial vehicles;traditional investigations;aircraft incidents;on-board flight data recorders;light drones;forensic digital investigations;drone flights;self-adaptive software architecture;forensic-ready regulation compliant;LiveBox reference architecture;drone flight data;forensic tamper-proof requirements;self-adaptive reporting algorithm;drone delivery;regulation-compliant requirements;physical FDR;decentralised ledger technology;Ethereum;Drones;Forensics;Aircraft;Software;Computer architecture;Safety;Unmanned aerial vehicles (Drones);software engineering;self-adaptive systems;forensic readiness;flight data recorders;simulators;unmanned traffic management},
}

@InProceedings{Lacouture2009,
  author    = {J. {Lacouture} and P. {Aniorte}},
  title     = {Self-Adaptation of Semantic Services Based on a Component/Agent Approach: Application to e-Training},
  booktitle = {2009 International Conference on Adaptive and Intelligent Systems},
  year      = {2009},
  pages     = {21-27},
  month     = {Sep.},
  abstract  = {In the context of distributed and open systems, the dynamic evolution of the distributed entities (or services) and their adaptation is one of the main prevailing challenges. In this paper, our aim is to show that is possible to automate (at least partially) the discovery, the selection and the adaptation of components, on the one hand associating a semantic description based on functional and non-functional properties to components and on the other hand, delegating to software agents the interpretation of components descriptions. We focus on the use of semantic, i.e. the use of ontologies, to provide a common interpretable support to share, to find, and to adapt relevant available services. The CompAA model is the result of our propositions and an experimentation in the area of training gives us a guideline to illustrate and validate our contributions.},
  doi       = {10.1109/ICAIS.2009.14},
  groups    = {ieee},
  keywords  = {computer based training;ontologies (artificial intelligence);open systems;software agents;software architecture;Web services;self-adaptation;e-training;distributed systems;open systems;distributed entities;software agents;ontologies;CompAA model;semantic services;Context-aware services;Software agents;Guidelines;Runtime;Collaborative work;Adaptive systems;Intelligent systems;Intelligent agent;Uninterruptible power systems;Indium phosphide;self-adaptation;discovery;component;agent;semantic service},
}

@InProceedings{DiValerio2016,
  author    = {V. {Di Valerio} and F. L. {Presti} and C. {Petrioli} and L. {Picari} and D. {Spaccini}},
  title     = {A self-adaptive protocol stack for Underwater Wireless Sensor Networks},
  booktitle = {OCEANS 2016 - Shanghai},
  year      = {2016},
  pages     = {1-8},
  month     = {April},
  abstract  = {In this paper we propose the adoption of a self-adaptable cross-layer and modular Software Defined Communication Stack (SDCS) for Underwater Wireless Sensor Networks. The SDCS is a modular stack solution which is capable to run different protocols at each layer of the network stack; a new component, named policy engine, autonomously and adaptively, as the operational conditions vary, selects the protocol of each layer so as to optimize application scenario metrics of interest, e.g., packet delivery ratio, end-to-end packet latency and energy consumption. As a proof of concept, the paper presents the design and performance evaluation of a policy engine to dynamically and autonomously change the MAC protocol adopted in Underwater Wireless Sensor Networks. The best MAC protocol is chosen according to network conditions and application requirements, without any a priori knowledge. We consider three different MAC protocols running in the SDCS: CSMA, T-Lohi and DACAP that represent the class of simple, intermediate and fully negotiated MAC protocols, respectively. The performance of the three protocols are first compared via simulations considering different network conditions, such as traffic load and packet size. Then, we evaluate the ability of our policy engine to dynamically estimate the network changes and then to select accordingly the best MAC protocol without any a priori knowledge. Results show the effectiveness of our solution in that it is always able to quickly find and choose the MAC protocol that optimizes a given metric in a particular scenario by introducing a really limited overhead in the network.},
  doi       = {10.1109/OCEANSAP.2016.7485478},
  groups    = {ieee},
  keywords  = {access protocols;software defined networking;underwater acoustic communication;wireless sensor networks;self-adaptable cross-layer SDCS;modular software defined communication stack;underwater wireless sensor networks;policy engine;application scenario metrics;packet delivery ratio;end-to-end packet latency;energy consumption;MAC protocol;CSMA;T-Lohi;DACAP;traffic load;packet size;Media Access Protocol;Engines;Software;Measurement;Wireless sensor networks;Energy consumption;Underwater Sensor Networks;Adaptive protocols;Policy engine;Software Defined Communication Stack;SUNSET},
}

@InProceedings{Shen2012a,
  author    = {L. {Shen} and X. {Peng} and W. {Zhao}},
  title     = {Quality-Driven Self-Adaptation: Bridging the Gap between Requirements and Runtime Architecture by Design Decision},
  booktitle = {2012 IEEE 36th Annual Computer Software and Applications Conference},
  year      = {2012},
  pages     = {185-194},
  month     = {July},
  abstract  = {Running with static requirements and design decisions, a software system cannot always perform optimally in a highly uncertain and rapidly changing environment. Quality-driven self-adaptation, which enables a software system to continually adapt its structure and behavior to improve the overall quality satisfaction, thus becomes a promising capability of software systems. Existing researches on self-adaptive systems, although having proposed effective methods and techniques on requirements-driven self-adaptation and reflective components, do not well address the gap between requirements and runtime architecture. In this paper, we propose a quality-driven self-adaptation approach, which incorporates both requirements- and architecture-level adaptations. At the requirements level, value-based quality tradeoff decisions are made with the aim of maximizing system-level value propositions. At the architecture level, component-based architecture adaptations are conducted. To bridge the gap between requirements and runtime architecture, design decisions capturing alternative design options and their rationales are introduced to help map requirements adaptations and context changes to adaptation operations on the runtime architecture. To validate the effectiveness, we implement the approach based on a reflective component model and conduct an experimental study on it. The results show that the approach leads to better performance compared with traditional software and the overall quality satisfaction is kept maintained. Furthermore, the development effort is affordable but the approach still has shortage in extensibility.},
  doi       = {10.1109/COMPSAC.2012.29},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {software quality;quality driven self-adaptation;runtime architecture;requirements architecture;design decision;static requirements;software system;architecture level adaptations;component based architecture adaptations;Adaptation models;Runtime;Computer architecture;Decision trees;Context;Algorithm design and analysis;Fractals;self-adaptation;requirements;reflective component reconfiguration;design decision},
}

@InProceedings{Seltzer1997,
  author    = {M. {Seltzer} and C. {Small}},
  title     = {Self-monitoring and self-adapting operating systems},
  booktitle = {Proceedings. The Sixth Workshop on Hot Topics in Operating Systems (Cat. No.97TB100133)},
  year      = {1997},
  pages     = {124-129},
  month     = {May},
  abstract  = {Extensible operating systems allow applications to modify kernel behavior by providing mechanisms for application code to run in the kernel address space. Extensibility enables a system to efficiently support a broader class of applications than is currently supported. This paper discusses the key challenge in making extensible systems practical: determining which parts of the system need to be extended and how. The determination of which parts of the system need to be extended requires self-monitoring, capturing a significant quantity of data about the performance of the system. Determining how to extend the system requires self-adaptation. In this paper, we describe how an extensible operating system (VINO) can use in situ simulation to explore the efficacy of policy changes. This automatic exploration is applicable to other extensible operating systems and can make these systems self-adapting to workload demands.},
  doi       = {10.1109/HOTOS.1997.595194},
  groups    = {ieee},
  keywords  = {system monitoring;program diagnostics;operating system kernels;software performance evaluation;self-monitoring operating systems;self-adapting operating systems;extensible operating systems;kernel behavior;application code;kernel address space;performance;VINO;simulation;policy changes;workload demands;Operating systems;Kernel;Application software;Instruments;Monitoring;Performance analysis;Counting circuits;Protection;Control systems;Resource management},
}

@InProceedings{Psaier2010,
  author    = {H. {Psaier} and L. {Juszczyk} and F. {Skopik} and D. {Schall} and S. {Dustdar}},
  title     = {Runtime Behavior Monitoring and Self-Adaptation in Service-Oriented Systems},
  booktitle = {2010 Fourth IEEE International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2010},
  pages     = {164-173},
  month     = {Sep.},
  abstract  = {Mixed service-oriented systems composed of human actors and software services build up complex interaction networks. Without any coordination, such systems may exhibit undesirable properties due to unexpected behavior. Also, communications and interactions in such networks are not preplanned by top-down composition models. Consequently, the management of service-oriented applications is difficult due to changing interaction and behavior patterns that possibly contradict and result in faults from varying conditions and misbehavior in the network. In this paper we present a self-adaptation approach that regulates local interactions to maintain desired system functionality. To prevent degraded or stalled systems, adaptations operate by link modification or substitution of actors based on similarity and trust metrics. Unlike a security perspective on trust, we focus on the notion of socially inspired trust. We design an architecture based on two separate independent frameworks. One providing a real Web service test bed extensible for dynamic adaptation actions. The other is our self-adaptation framework including all modules required by systems with self-* properties. In our experiments we study a trust and similarity based adaptation approach by simulating dynamic interactions in the real Web services test bed.},
  doi       = {10.1109/SASO.2010.44},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {software architecture;software metrics;Web services;runtime behavior monitoring;mixed service-oriented system;software services;complex interaction networks;top-down composition model;behavior pattern;interaction pattern;trust metrics;similarity metrics;software architecture;self-adaptation framework;real Web services testbed;Collaboration;Monitoring;Communities;Runtime;Web services;Humans;Adaptation model;Service-oriented collaboration;monitoring;self-adaptation;web service testbed;dynamic trust},
}

@InProceedings{Torres2013,
  author    = {R. {Torres} and N. {Bencomo} and H. {Astudillo}},
  title     = {Addressing the QoS drift in specification models of self-adaptive service-based systems},
  booktitle = {2013 2nd International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE)},
  year      = {2013},
  pages     = {28-34},
  month     = {May},
  abstract  = {Analysts elaborate precise and verifiable specification models, using as inputs non-functional requirements and assumptions drawn from the current environment studied at design time. As most real world applications exist in dynamic environments, recently there has been research efforts towards the design of software systems that use their specification models during runtime. The main idea is that software systems should endeavor to keep their requirements satisfied by adapting their architectural configurations when appropriated. Unfortunately, such specifications models use specific numbers (i.e. values) to specify non-functional constraints (NFCs) and may become rapidly obsolete during runtime given the drastic changes that operational environments can go through. The above may create circumstances when software systems are unaware that their requirements have been violated. To mitigate the obsolescence of specification models we have already proposed to use computing with words (CWW) to represent the NFCs with linguistic values instead of numbers. The ��numerical meanings�� of these linguistic values are computed from the measurements of non-functional properties (NFPs) gathered by a monitoring infrastructure. This article introduces the concept of ��QoS-drift�� to represent a significant degree of change in the ��numerical meanings�� of the linguistic values of the NFPs in the service market. We add to our former proposal a QoS-drift's vigilance unit to update linguistic values only when a QoS-drift is detected. Therefore, the new models are proactive and automatically maintained, what results in a more efficient assessment of run-time requirements' compliance under non-stationary environments. We validate the effectiveness of our approach using (1) a service market of 1500 services with two NFPs, (2) a synthetical QoS-drift and, (3) five systems built by different service compositions. We have detected that four of the five systems experienced requirements violations that would not have been detected without the use of our approach.},
  doi       = {10.1109/RAISE.2013.6615201},
  groups    = {ieee},
  keywords  = {computational linguistics;formal specification;quality of service;software quality;QoS drift;specification models;self-adaptive service-based systems;nonfunctional requirements;software systems;linguistic values;service market;nonstationary environments;run-time requirements compliance;NFPs;nonfunctional properties;CWW;computing with words;NFCs;nonfunctional constraints;Pragmatics;Runtime;Analytical models;Adaptation models;Fuzzy sets;Quality of service;Computational modeling;concept drift;specification models;require-ments@run.time;computing with words;fuzzy logic},
}

@InProceedings{Sun2015,
  author    = {W. {Sun} and Z. {Ji} and J. {Sun} and N. {Zhang} and Y. {Hu}},
  title     = {SAACO: A Self Adaptive Ant Colony Optimization in Cloud Computing},
  booktitle = {2015 IEEE Fifth International Conference on Big Data and Cloud Computing},
  year      = {2015},
  pages     = {148-153},
  month     = {Aug},
  abstract  = {The cloud environment is a heterogeneous, dynamic and complex environment. The characteristic of Ant Colony Optimization (ACO), such as robustness and self adaptability, can just match the cloud environment. ACO is an algorithm that imitates the ants foraging, and it has a good application in the problems that want to find the optimal solution. The task scheduling in cloud computing is also the problem that want to find the optimal solution actually. In this paper, a self adaptive ant colony optimization (SAACO) is proposed. For the drawback of PACO we proposed before, such as the parameters' selection and the pheromone's update, in SAACO, we use particle swarm optimization (PSO) to make the parameters of ACO to be self adaptive. And we also improve the calculation and update of the pheromone. The results show that SAACO has a better performance than PACO both in makespan and load balance.},
  doi       = {10.1109/BDCloud.2015.53},
  groups    = {ieee},
  keywords  = {ant colony optimisation;cloud computing;particle swarm optimisation;scheduling;SAACO algorithm;self-adaptive ant colony optimization;cloud computing;task scheduling;parameter selection;particle swarm optimization;PSO;load balancing;Cloud computing;Scheduling;Ant colony optimization;Bandwidth;Load management;Scheduling algorithms;cloud computing;task scheduling;ant colony algorithm;self adaptive},
}

@InProceedings{Calinescu2013,
  author    = {R. {Calinescu} and Y. {Rafiq}},
  title     = {Using Intelligent Proxies to Develop Self-Adaptive Service-Based Systems},
  booktitle = {2013 International Symposium on Theoretical Aspects of Software Engineering},
  year      = {2013},
  pages     = {131-134},
  month     = {July},
  abstract  = {We present the theory underpinning the operation of a new tool-supported approach to engineering self-adaptive service-based systems (SBSs), and preliminary results from its evaluation in a telehealth case study. SBSs developed using our approach select their services dynamically, in order to maintain compliance with reliability requirements in the presence of changes in service behaviour. This adaptation is enabled by a new type of web service proxy called an intelligent proxy.},
  doi       = {10.1109/TASE.2013.41},
  groups    = {ieee},
  keywords  = {bioinformatics;health care;software maintenance;software reliability;telemedicine;Web services;intelligent proxies;self-adaptive service-based systems;SBS;telehealth case study;compliance maintenance;reliability requirements;Web service proxy;Internet;e-commerce;bioinformatics;Scattering;Web services;Standards;Reliability;Probabilistic logic;Unified modeling language;Java},
}

@InProceedings{Zhang2019,
  author    = {S. {Zhang} and M. {Zhang} and L. {Ni} and P. {Liu}},
  title     = {A Multi-Level Self-Adaptation Approach For Microservice Systems},
  booktitle = {2019 IEEE 4th International Conference on Cloud Computing and Big Data Analysis (ICCCBDA)},
  year      = {2019},
  pages     = {498-502},
  month     = {April},
  abstract  = {Microservice technology that emphasizes self-management and lightweight of software systems has received great interests in both academic and industry fields of software engineering. The highly self-contained components and the dynamic running instance of microservice architecture require more flexible and diverse self-adaptation at multiple levels, which poses challenges to existing self-adaptation technologies. This paper proposes a multi-level self-adaptation approach to enrich the self-adaptation capabilities of microservice architecture and technologies. In our approach, the self-adaptation of microservice system can occur at both microservice level and instance level to satisfy various self-adaptation requirements. Based on the abstract model of self-adaptive microservice systems, the operation primitives to accomplish self-adaptation at different levels are proposed. We also present a microservice self-adaptation description language MSDL to specify the self-adaptation logics at multiple levels and implement a supporting platform by extending Kubernetes. A case is developed to illustrate our approach and experiments are conducted to show its effectiveness and availability.},
  doi       = {10.1109/ICCCBDA.2019.8725647},
  groups    = {ieee},
  keywords  = {hardware description languages;software architecture;Web services;multilevel self-adaptation approach;software systems;software engineering;dynamic running instance;microservice architecture;flexible self-adaptation;diverse self-adaptation;microservice level;instance level;self-adaptation requirements;self-adaptive microservice systems;self-adaptation logics;microservice self-adaptation description language;MSDL;Software systems;Adaptation models;Computer architecture;Service-oriented architecture;Containers;Time factors;self-adaptive;microservice;model;primitives;platform},
}

@InProceedings{Makhlouf2011,
  author    = {D. {Makhlouf} and P. {Roose} and M. {Dalmau} and N. {Ghoualmi-zine}},
  title     = {CSC (Component, Service, Connector): A Platform for Self-Adaptation of Multimedia Applications},
  booktitle = {2011 11th Annual International Conference on New Technologies of Distributed Systems},
  year      = {2011},
  pages     = {1-10},
  month     = {May},
  abstract  = {The trend toward ubiquitous services and any multimedia, the proliferation of mobile devices and the widespread use of wireless networks imply changes in the design, the implementation and the execution of software applications. Ubiquitous systems are dynamic systems that change their behavior according to user's needs and hardware capabilities at runtime. As it is not desirable to develop these systems from scratch every time, a specific software architecture providing opportunities for dynamic adaptation of systems is necessary. It must be able to create adaptations at runtime in order to provide a dynamic and adaptive behavior for users according to the evolving context. In this paper we present a supervised adaptation platform for applications based components. The CSC platform (Component, Service and Connector) is based on a component/service model that allows adaptation of component-based applications and use service-oriented architecture for providing adaptation services to be embedded in adaptation connectors.},
  doi       = {10.1109/NOTERE.2011.5957978},
  groups    = {ieee},
  issn      = {2162-190X},
  keywords  = {mobile computing;multimedia computing;software architecture;CSC;component service connector;self adaptation platform;multimedia applications;ubiquitous services;mobile devices proliferation;wireless networks;ubiquitous systems;software applications;software architecture;dynamic adaptation;adaptive behavior;dynamic behavior;supervised adaptation platform;component based applications;service oriented architecture;Gold;Multimedia communication;Computer architecture;Connectors;Software architecture;Codecs;Cost accounting},
}

@InProceedings{Afanasov2014,
  author    = {M. {Afanasov} and L. {Mottola} and C. {Ghezzi}},
  title     = {Towards Context-Oriented Self-Adaptation in Resource-Constrained Cyberphysical Systems},
  booktitle = {2014 IEEE 38th International Computer Software and Applications Conference Workshops},
  year      = {2014},
  pages     = {372-377},
  month     = {July},
  abstract  = {We present a context-oriented approach to design and implement self-adaptive component-based software in resource-constrained Cyber physical Systems (CPSs). Because of unpredictable environment dynamics, developers must design and implement CPS software to dynamically adapt to widely different situations. Our approach provides design concepts and language support to meet this requirement against severe resource constraints. To this end, we bring a notion of context-oriented design and programming down to platforms that-because of extreme resource constraints-currently leverage fairly undisciplined design techniques and rather rudimentary component-based frameworks. Early results demonstrate that our approach improves the quality of the resulting implementations facilitating testing, maintenance, and evolution at the price of a negligible system overhead.},
  doi       = {10.1109/COMPSACW.2014.64},
  groups    = {ieee},
  keywords  = {object-oriented programming;ubiquitous computing;context-oriented self-adaptation;resource-constrained cyberphysical system;self-adaptive component-based software;context-oriented design;context-oriented programming;component-based framework;Context;Software;Global Positioning System;Programming;Wildlife;Monitoring;Batteries;resource-constrained;cyberphysical;self-adaptivity;context;programming;languages},
}

@InProceedings{Jeong2007,
  author    = {G. {Jeong} and G. {Kim}},
  title     = {Design of Knowledge Discovery Agent based on Self Adaptive Components},
  booktitle = {5th ACIS International Conference on Software Engineering Research, Management Applications (SERA 2007)},
  year      = {2007},
  pages     = {305-314},
  month     = {Aug},
  abstract  = {Agents can be autonomous entities, deciding their next step without the interference of a user or they can be controllable ,serving as a me diary between the user and another agent, thereby having some amount of Artificial Intelligence. Knowledge discovering agents are a very interesting approach to software development in computing environments. An agent consists in a thread of execution that can migrate across the network. In this paper, we will employ a multi-agent for the search and extraction of data in a distributed environment. We will use an Integrator Agent in the proposed model on the Knowledge Discovery Agent(KDA). The KDA will address the inadequacy of other data mining tools in processing performance and efficiency when use for knowledge discovery. The Integrator Agent was developed based on CORBA architecture for search and extraction of data from heterogeneous servers in the distributed environment. Our experiment shows that the KDA generated essential association rules which can be practically explained for decision making purposes.},
  doi       = {10.1109/SERA.2007.74},
  groups    = {ieee},
  keywords  = {data mining;distributed object management;software agents;knowledge discovery agent;self adaptive components;artificial intelligence;integrator agent;data mining tools;CORBA architecture;Data mining;Databases;Humans;Application software;Design engineering;Knowledge engineering;Association rules;Pervasive computing;Intelligent agent;Resource management},
}

@InProceedings{Abuseta2015,
  author    = {Y. {Abuseta} and K. {Swesi}},
  title     = {Towards a framework for testing and simulating self adaptive systems},
  booktitle = {2015 6th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
  year      = {2015},
  pages     = {70-76},
  month     = {Sep.},
  abstract  = {Self adaptive systems have been suggested as a promising solution for managing the complex and uncertain nature of today's software intensive systems. Yet, their design is still not conducted in a systematic manner. In particular, there is little work on the issue of developing a framework that accommodates the necessary reusable process elements and system components that augment the system under development with the self adaptation capabilities and enable the system developer to simulate and test these capabilities prior to deployment. In this paper, we attempted to address this issue and propose a testing framework for self adaptive systems. Only the high level requirements and a conceptual architecture of the framework are presented here. The self adaptive capability is designed around the feedback control loop proposed by IBM blueprint.},
  doi       = {10.1109/ICSESS.2015.7339008},
  groups    = {ieee},
  issn      = {2327-0594},
  keywords  = {feedback;software reusability;self-adaptive systems;reusable process elements;system components;self-adaptation capabilities;testing framework;high level requirements;conceptual architecture;feedback control loop;IBM blueprint;Monitoring;Adaptive systems;Temperature sensors;Unified modeling language;Feedback control;Software systems;self adaptive;framework;design patterns},
}

@InProceedings{Monpratarnchai2011,
  author    = {S. {Monpratarnchai} and T. {Tetsuo}},
  title     = {Applying Adaptive Role-Based Model to Self-Adaptive System Constructing Problems: A Case Study},
  booktitle = {2011 Eighth IEEE International Conference and Workshops on Engineering of Autonomic and Autonomous Systems},
  year      = {2011},
  pages     = {69-78},
  month     = {April},
  abstract  = {When computational process occurs in uncertain environments, the environmental changes often cause unpredictable influence on the computation. Self-adaptive software is one of the possible ways to tackle and handle this motivation. It evaluates its own behavior and surrounding environment, and adapts itself when the evaluation indicates that it is not accomplishing what the system is intended to do, or when better functionality is possible. Since one of the objectives of role models is to support object adaptation to the environment through role binding mechanism, it is expected that role modeling can be conveniently used to build self-adaptive systems. This paper provides some essential features or mechanisms of self-adaptive systems which are intended to be captured by adaptive role models. We propose Self-Epsilon model, an extension of our developed role-based model Epsilon, to combine and integrate all those features with role-based mechanisms into a single model. This paper also shows how the model can be applied to practically design and implement self-adaptive systems. We illustrate our approach through a case study of a simplified system of coordinated traffic jam monitoring used in some related work. The evaluation shows the reasonable and acceptable scalability of our model implementation in the framework.},
  doi       = {10.1109/EASe.2011.12},
  groups    = {ieee},
  issn      = {2168-1872},
  keywords  = {self-adjusting systems;software engineering;adaptive role-based model;self-adaptive system;self-adaptive software;role binding mechanism;role modeling;self-Epsilon model;Epsilon role-based model;coordinated traffic jam monitoring;Adaptation models;Cameras;Object oriented modeling;Collaboration;Context;Monitoring;Computational modeling;role;model;dynamic;collaboration;adaptation;self-adaptive;construct;mechanism},
}

@InProceedings{Cardozo2013,
  author    = {N. {Cardozo} and S. {Gonz��lez} and K. {Mens} and R. {Van Der Straeten} and T. {DHondt}},
  title     = {Modeling and Analyzing Self-Adaptive Systems with Context Petri Nets},
  booktitle = {2013 International Symposium on Theoretical Aspects of Software Engineering},
  year      = {2013},
  pages     = {191-198},
  month     = {July},
  abstract  = {The development of self-adaptive systems requires the definition of the parts of the system that will be adapted, when such adaptations will take place, and how these adaptations will interact with each other. However, foreseeing all possible adaptations and their interactions is a difficult task, opening the possibility to inconsistencies or erroneous system behavior. To avoid inconsistencies, self adaptive systems require a sound programming model that allows to reason about the correctness of the system in spite of its dynamic reconfigurations. This paper presents context Petri nets, a Petri net-based programming model for self-adaptive systems. This model provides a formal definition of adaptations and their interaction, as well as a consistent process for their inclusion in the system. Besides serving as an underlying run-time model to ensure that adaptations and their constraints remain consistent, context Petri nets allow to analyze properties such as reachability, and liveness in the configuration of self-adaptive systems. Context Petri nets thus are a convenient tool to model and analyze the dynamics of self-adaptive systems, both formally and computationally.},
  doi       = {10.1109/TASE.2013.33},
  groups    = {ieee},
  keywords  = {adaptive systems;formal specification;Petri nets;reachability analysis;reasoning about programs;self-adaptive system modeling;self-adaptive system analysis;context Petri nets;erroneous system behavior;system inconsistency;system correctness reasoning;dynamic reconfiguration;Petri net-based programming model;formal definition;run-time model;reachability analysis;Context;Adaptation models;Context modeling;Color;Analytical models;Petri nets;Engines;Self-adaptive systems;Petri nets;dynamic behavior adaptation;context awareness},
}

@InProceedings{Vassev2011,
  author    = {E. {Vassev} and M. {Hinchey} and D. {Balasubramaniam} and S. {Dobson}},
  title     = {An ASSL Approach to Handling Uncertainty in Self-adaptive Systems},
  booktitle = {2011 IEEE 34th Software Engineering Workshop},
  year      = {2011},
  pages     = {11-18},
  month     = {June},
  abstract  = {Both modularity and loose-coupling properties inherent to the self-adaptive systems offer the opportunity for ad-hoc service compositions, dynamic change and adaptation. To provide such a dynamic and self-adapting behavior, developers emphasize special self-management policies. ASSL (Autonomic System Specification Language) is a formal tool where such policies might be formally specified, validated and implemented. Intrinsically, the ASSL-developed policies are very strict and may impose quite restrictive behavior, which sometimes is undesirable. To solve the problem, we are currently developing special mechanisms for ASSL that help to specify policies that might evolve in order to satisfy system goals changing in the course of system adaptation. This paper presents our work on a mechanism imposing special loose self-management policies introducing flexibility into the self-adapting behavior.},
  doi       = {10.1109/SEW.2011.8},
  groups    = {ieee},
  issn      = {1550-6215},
  keywords  = {formal specification;ASSL approach;handling uncertainty;self-adaptive systems;ad-hoc service compositions;self-adapting behavior;autonomic system specification language;self-management policies;Uncertainty;Computational modeling;Semantics;Unified modeling language;Context;Protocols;Measurement;self-adaptive systems;formal methods;ASSL},
}

@InProceedings{Yau2006,
  author    = {Y. J. {Yau} and J. {Teo}},
  title     = {An Empirical Comparison of Non-adaptive, Adaptive and Self-Adaptive Co-evolution for Evolving Artificial Neural Network Game Players},
  booktitle = {2006 IEEE Conference on Cybernetics and Intelligent Systems},
  year      = {2006},
  pages     = {1-6},
  month     = {June},
  abstract  = {This paper compares the implementation of the non-adaptive, adaptive, and self-adaptive co-evolution for evolving artificial neural networks (ANNs) that act as game players for the game of Tic-Tac-Toe (TTT). The objective of this study is to investigate and empirically compare these three different approaches for tuning strategy parameters' in co-evolutionary algorithms in evolving the ANN game-playing agents. The results indicate that the non-adaptive and adaptive co-evolution systems performed better than the self-adaptive co-evolution system when suitable strategy parameters were utilized. The adaptive co-evolution system was also found to possess higher evolutionary stability compared to the other systems and was also successful in synthesizing ANNs with high TTT playing strength both as the first as well as second players},
  doi       = {10.1109/ICCIS.2006.252234},
  groups    = {ieee},
  issn      = {2326-8239},
  keywords  = {evolutionary computation;game theory;neural nets;software agents;artificial neural network game player;Tic-Tac-Toe;coevolutionary algorithm;game-playing agent;nonadaptive coevolution system;adaptive coevolution system;self-adaptive coevolution system;evolutionary stability;Artificial neural networks;Evolutionary computation;Adaptive systems;Artificial intelligence;Machine learning;Lifting equipment;Information technology;Stability;Network synthesis;Problem-solving;Adaptation;Self-adaptation;Co-evolution;Game AI;Evolutionary Artificial Neural Networks},
}

@InProceedings{Athreya2013,
  author    = {A. P. {Athreya} and B. {DeBruhl} and P. {Tague}},
  title     = {Designing for self-configuration and self-adaptation in the Internet of Things},
  booktitle = {9th IEEE International Conference on Collaborative Computing: Networking, Applications and Worksharing},
  year      = {2013},
  pages     = {585-592},
  month     = {Oct},
  abstract  = {The Internet of Things (IoT) paradigm comprises a heterogenous mix of connected devices connected to the Internet. This promises a a wealth of opportunity for a large collection of distributed applications and services. However, the IoT introduces significant changes to the Internet model, largely in the form of billions to trillions of embedded devices that most likely will not be able to be managed centrally by cloud services due to lack of scalability. We suggest that the natural direction for IoT devices is to manage themselves, both in terms of their software/hardware configuration and their resource utilization. In this work, we describe the underlying framework for self-managing devices, comprising measurement-based learning and adaptation to changing system context and application demands. In addition, we describe several upcoming research challenges in order to realize this self-management vision.},
  doi       = {10.4108/icst.collaboratecom.2013.254091},
  groups    = {ieee},
  keywords  = {cloud computing;Internet of Things;learning (artificial intelligence);self-configuration design;self-adaptation design;Internet of things;IoT paradigm;connected devices;Internet model;embedded devices;cloud services;software/hardware configuration;resource utilization;self-managing devices;measurement-based learning;self-management vision;Protocols;Software;Internet;Optimization;Context;Monitoring;Computer architecture;Internet of Things;Self-management;Self-adaptation;Agent-based systems},
}

@InProceedings{Li2008,
  author    = {X. {Li} and H. {Fu} and C. {Zhang}},
  title     = {A Self-Adaptive Particle Swarm Optimization Algorithm},
  booktitle = {2008 International Conference on Computer Science and Software Engineering},
  year      = {2008},
  volume    = {5},
  pages     = {186-189},
  month     = {Dec},
  abstract  = {To combat the problem of premature convergence observed in many applications of PSO, a novel self-adaptive particle swarm optimization algorithm-SAPSO is proposed in this paper. There exist two states for each particle in the SAPSO algorithm and a metric to measure a particlepsilas activity is defined which is used to choose which state it would reside. In order to balance a particlepsilas exploration and exploitation capability for different evolving phase, a self-adjusted inertia weight which varies dynamically with each particlepsilas evolution degree and the current swarm evolution degree is introduced into SAPSO algorithm. Simulation and comparisons based on several well-studied non-noisy problems and noisy problems demonstrate the effectiveness, efficiency and robustness of the proposed algorithm.},
  doi       = {10.1109/CSSE.2008.142},
  groups    = {ieee},
  keywords  = {convergence;evolutionary computation;particle swarm optimisation;self-adaptive particle swarm optimization algorithm;premature convergence;self-adjusted inertia weight;evolutionary algorithm;Particle swarm optimization;Computer science;Software algorithms;Educational institutions;Software engineering;Application software;Particle measurements;Computational modeling;Noise robustness;Simulated annealing;PSO;noise optimization;inertia weight;swarm},
}

@InProceedings{Cai2012,
  author    = {H. {Cai} and C. {Peng} and L. {Jiang} and Y. {Zhang}},
  title     = {A Novel Self-Adaptive Fault-Tolerant Mechanism and Its Application for a Dynamic Pervasive Computing Environment},
  booktitle = {2012 IEEE 15th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing Workshops},
  year      = {2012},
  pages     = {48-52},
  month     = {April},
  abstract  = {In pervasive computing system, the increasing dynamic and complexity of software and hardware resources and frequentative interaction among function components make fault-tolerant design very challenging. In this paper, we propose a novel self-adaptive fault-tolerant mechanism for a dynamic pervasive computing environment such as mobile ad hoc network. In our approach, the self-adaptive fault-tolerant mechanism is dynamically built according to various types of detected faults based on continuous monitoring and analysis of the component states. We put forward the architecture of fault-tolerant system and the policy-based fault-tolerant scheme, which adopts three-dimensional array of core features to capture spatial and temporal variability and the Event-Condition-Action rules. The mentioned mechanism has been designed and implemented as self-adaptive fault-tolerant middleware, shortly called SAFTM, on a preliminary prototype for a dynamic pervasive computing environment such as mobile ad hoc network. We have performed the experiments to evaluate the efficiency of the fault-tolerant mechanism. The results of the experiments show that the performance of the self-adaptive fault tolerant mechanism is realistic.},
  doi       = {10.1109/ISORCW.2012.19},
  groups    = {ieee},
  keywords  = {middleware;mobile ad hoc networks;software fault tolerance;ubiquitous computing;self-adaptive fault-tolerant mechanism;dynamic pervasive computing environment;function components;fault-tolerant design;mobile ad hoc network;fault-tolerant system architecture;policy-based fault-tolerant scheme;spatial variability;temporal variability;event-condition-action rules;self-adaptive fault-tolerant middleware;SAFTM;Fault tolerance;Fault tolerant systems;Pervasive computing;Monitoring;Mobile communication;Hardware;Pervasive Computing;Self-Adaptive;Fault-Tolerant;Reliability},
}

@InProceedings{Bencomo2013a,
  author    = {N. {Bencomo} and A. {Belaggoun} and V. {Issarny}},
  title     = {Bayesian artificial intelligence for tackling uncertainty in self-adaptive systems: The case of dynamic decision networks},
  booktitle = {2013 2nd International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE)},
  year      = {2013},
  pages     = {7-13},
  month     = {May},
  abstract  = {In recent years, there has been a growing interest towards the application of artificial intelligence approaches in software engineering (SE) processes. In the specific area of SE for self-adaptive systems (SASs) there is a growing research awareness about the synergy between SE and AI. However, just few significant results have been published. This paper briefly studies uncertainty in SASs and surveys techniques that have been developed to engineer SASs in order to tackle uncertainty. In particular, we highlight techniques that use AI concepts. We also report and discuss our own experience using Dynamic Decision Networks (DDNs) to model and support decision-making in SASs while explicitly taking into account uncertainty. We think that Bayesian inference, and specifically DDNs, provide a useful formalism to engineer systems that dynamically adapt themselves at runtime as more information about the environment and the execution context is discovered during execution. We also discuss partial results, challenges and future research avenues.},
  doi       = {10.1109/RAISE.2013.6615198},
  groups    = {ieee},
  keywords  = {belief networks;decision making;inference mechanisms;software engineering;uncertainty handling;Bayesian inference;decision making;DDN;AI concepts;survey techniques;SAS;software engineering processes;dynamic decision networks;self-adaptive systems;uncertainty tackling;Bayesian artificial intelligence approach;Uncertainty;Bayes methods;Decision making;Runtime;Monitoring;Context;Artificial intelligence;self-adaptive systems;dynamic-decision net-works;Bayesian inference;bayesian networks;uncertainty mod-eling},
}

@InProceedings{Bencomo2013b,
  author    = {N. {Bencomo} and A. {Belaggoun} and V. {Issarny}},
  title     = {Dynamic decision networks for decision-making in self-adaptive systems: A case study},
  booktitle = {2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2013},
  pages     = {113-122},
  month     = {May},
  abstract  = {Bayesian decision theory is increasingly applied to support decision-making processes under environmental variability and uncertainty. Researchers from application areas like psychology and biomedicine have applied these techniques successfully. However, in the area of software engineering and specifically in the area of self-adaptive systems (SASs), little progress has been made in the application of Bayesian decision theory. We believe that techniques based on Bayesian Networks (BNs) are useful for systems that dynamically adapt themselves at runtime to a changing environment, which is usually uncertain. In this paper, we discuss the case for the use of BNs, specifically Dynamic Decision Networks (DDNs), to support the decision-making of self-adaptive systems. We present how such a probabilistic model can be used to support the decision-making in SASs and justify its applicability. We have applied our DDN-based approach to the case of an adaptive remote data mirroring system. We discuss results, implications and potential benefits of the DDN to enhance the development and operation of self-adaptive systems, by providing mechanisms to cope with uncertainty and automatically make the best decision.},
  doi       = {10.1109/SEAMS.2013.6595498},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {belief networks;software engineering;dynamic decision network;decision making;self-adaptive system;SAS;Bayesian decision theory;environmental variability;environmental uncertainty;psychology;biomedicine;software engineering;Bayesian network;BN;adaptive remote data mirroring system;Uncertainty;Decision making;Monitoring;Bayes methods;Topology;Random variables;Runtime;self-adaptive systems;dynamic decision networks;bayesian networks;uncertainty modeling},
}

@InProceedings{Kinneer2018,
  author    = {C. {Kinneer} and Z. {Coker} and J. {Wang} and D. {Garlan} and C. {Le Goues}},
  title     = {Managing Uncertainty in Self-Adaptive Systems with Plan Reuse and Stochastic Search},
  booktitle = {2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2018},
  pages     = {40-50},
  month     = {May},
  abstract  = {Many software systems operate in environments where change and uncertainty are the rule, rather than exceptions. Techniques for self-adaptation allow these systems to automatically respond to environmental changes, yet they do not handle changes to the adaptive system itself, such as the addition or removal of adaptation tactics. Instead, changes in a self-adaptive system often require a human planner to redo an expensive planning process to allow the system to continue satisfying its quality requirements under different conditions; automated techniques typically must replan from scratch. We propose to address this problem by reusing prior planning knowledge to adapt in the face of unexpected situations. We present a planner based on genetic programming that reuses existing plans. While reuse of material in genetic algorithms has recently applied successfully in the area of automated program repair, we find that naively reusing existing plans for self-* planning actually results in a loss of utility. Furthermore, we propose a series of techniques to lower the costs of reuse, allowing genetic techniques to leverage existing information to improve planning utility when replanning for unexpected changes.},
  groups    = {ieee},
  issn      = {2157-2305},
  keywords  = {adaptive systems;genetic algorithms;planning (artificial intelligence);search problems;software maintenance;stochastic processes;self-adaptive system;plan reuse;stochastic search;software systems;adaptation tactics;automated techniques;prior planning knowledge;planning process;human planner;quality requirements;genetic programming algorithms;Planning;Servers;Uncertainty;Genetic programming;Search problems;Computer science;Data centers;plan reuse;self-* systems;planning;uncertainty;genetic programming;cloud services},
}

@InProceedings{Barna2015,
  author    = {C. {Barna} and H. {Ghanbari} and M. {Litoiu} and M. {Shtern}},
  title     = {Hogna: A Platform for Self-Adaptive Applications in Cloud Environments},
  booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2015},
  pages     = {83-87},
  month     = {May},
  abstract  = {We propose Hogna, a platform for deploying self-managing web applications on cloud. The platform enables the deployment of the applications based on the automation of a set of operations (starting instances, installing necessary software and configuring the instances, etc.), and then the continuous monitoring of the health of the applications. The gathered monitoring data is analyzed using a performance model and an action plan is created and executed. Any components involved (for monitoring, analyzing, planning and deployment changes) can be customized to fit the needs of the application and/or researcher.},
  doi       = {10.1109/SEAMS.2015.26},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {cloud computing;software performance evaluation;Hogna platform;self-adaptive applications;cloud environments;self-managing Web application deployment;instance starting operation;software installation operation;instance configuration operation;continuous health monitoring data analysis;performance model;action plan;Monitoring;Measurement;Cloud computing;Topology;Engines;Analytical models;Computer crime},
}

@InProceedings{Vilenica2012,
  author    = {A. {Vilenica} and W. {Lamersdorf}},
  title     = {Benchmarking and Evaluation Support for Self-Adaptive Distributed Systems},
  booktitle = {2012 Sixth International Conference on Complex, Intelligent, and Software Intensive Systems},
  year      = {2012},
  pages     = {20-27},
  month     = {July},
  abstract  = {Increasingly, distributed systems have to deal with highly dynamic and hardly predictable environments. This trend, in conjunction with rising demands for sophisticated non-functional system requirements, challenges both the development and operation (i.e. management) of traditional distributed systems. One promising approach to cope with these challenges are self-adaptive distributed systems that are characterized by the capability to configure and maintain themselves. However, the inherent dynamic of self-adaptive systems requires intensive evaluation and benchmarking efforts in order to ensure the intended system behaviour. In order to support that, this paper presents a framework that aims at supporting the nominal-actual comparison of self-adaptive distributed systems as well as the comparison of different self-adaptive solutions with respect to a specific software implementation task. The underlying approach consists of (i) a declarative definition language and (ii) a software component that is capable of conducting evaluations and benchmarks on different software implementations.},
  doi       = {10.1109/CISIS.2012.115},
  groups    = {ieee},
  keywords  = {benchmark testing;distributed processing;evaluation support;self-adaptive distributed system;nonfunctional system requirement;self-adaptive system;benchmarking efforts;system behaviour;self-adaptive solution;software implementation task;declarative definition language;Benchmark testing;Measurement;Adaptive systems;Computer architecture;Runtime;Software systems;Benchmarking;Evaluation;Self-Adaptive Systems;Autonomous Components},
}

@InProceedings{Wotawa2016,
  author    = {F. {Wotawa}},
  title     = {Testing Self-Adaptive Systems Using Fault Injection and Combinatorial Testing},
  booktitle = {2016 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C)},
  year      = {2016},
  pages     = {305-310},
  month     = {Aug},
  abstract  = {Verifying and validating systems that can adapt their behavior at runtime is still a research challenge that deserves great attention. In order to assure a certain behavior, we might prove that a self-adaptive system always fulfills certain properties, e.g., always behaving as specified in a given range. Such verification and validation techniques, however, assume the good case, i.e., that the system's environment is working as expected, i.e., that no fault occurs. In this paper, we relax this assumption, and consider testing self-adaptive systems in case of faults. In particular, we show how fault injection techniques and combinatorial testing can be used together for generating tests for self-adaptive systems.},
  doi       = {10.1109/QRS-C.2016.47},
  groups    = {ieee},
  keywords  = {combinatorial mathematics;program testing;self-adjusting systems;software fault tolerance;self adaptive system testing;fault injection;combinatorial testing;verification technique;validation technique;test generation;Testing;Wheels;Hardware;Mobile robots;Software;Adaptive systems;testing;test automation;combinatorial testing;fault injection;self-adaptive systems},
}

@Article{Alexandrou2011,
  author   = {D. A. {Alexandrou} and I. E. {Skitsas} and G. N. {Mentzas}},
  title    = {A Holistic Environment for the Design and Execution of Self-Adaptive Clinical Pathways},
  journal  = {IEEE Transactions on Information Technology in Biomedicine},
  year     = {2011},
  volume   = {15},
  number   = {1},
  pages    = {108-118},
  month    = {Jan},
  issn     = {1558-0032},
  abstract = {One of the main challenges to be confronted by modern health care, so as to increase treatment quality, is the personalization of treatment. The treatment personalization requires the continuous reconfiguration and adaptation of the selected treatment schemes according to the ��current�� clinical status of each patient and ��current�� circumstances inside a health care organization that change rapidly, as well as the updated medical knowledge. In this paper, we present an innovative software environment that provides an integrated IT solution concerning the adaptation of health care processes (clinical pathways) during execution time. The software comprises a health care process execution engine assisted by a semantic infrastructure for reconfiguring the clinical pathways. During the execution of clinical pathways, the system reasons over the rules and reconfigures the next steps of the treatment. A graphical designer interface is implemented for the definition of the rule-set for the clinical pathways adaptation in a user-friendly way.},
  doi      = {10.1109/TITB.2010.2074205},
  groups   = {ieee},
  keywords = {computer graphics;health care;medical computing;patient care;self-adaptive clinical pathways;modern health care;treatment quality;treatment personalization;health care organization;updated medical knowledge;innovative software environment;semantic infrastructure;graphical designer interface;Medical services;Ontologies;Software;Guidelines;Medical diagnostic imaging;Semantics;Personnel;Adaptive clinical pathways;clinical pathway ontology (CPO);personalized treatment;Critical Pathways;Medical Informatics Applications;Software;User-Computer Interface},
}

@InProceedings{Zhang2017c,
  author    = {X. {Zhang} and Q. {Yang} and J. {Xing} and D. {Han} and Y. {Chen}},
  title     = {A Similarity-Based Approach to Recognizing Voice-Based Task Goals in Self-Adaptive Systems},
  booktitle = {2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC)},
  year      = {2017},
  volume    = {2},
  pages     = {536-542},
  month     = {July},
  abstract  = {With the development of the natural language processing (NLP) technologies, users tend to directly input their goals via natural language to a task system. Thus, how to input informal voice-based task goals to self-adaptive systems (SASs) has become a challenge issue. Our previously proposed framework V-SFSA (voice-driven software fuzzy self-adaptation) can realize to input voice-based task goals to SAS. However, it still suffers from low efficiency of recognition. In this paper, in order to improve on our previous V-SFSA framework, we propose a similarity-based NLP approach to recognizing the voice-based task goals in SASs. It uses the verb of the raw voice inputs to preselect the semantic relevant commands, and then to compute the similarity between the preselected commands and predefined featured commands in a SAS. The command with the highest similarity score is accepted as the intended goals to drive a SAS. We establish the improved V-SFSA, and implement the algorithm of similarity-based fuzzy adaptation. In addition, we construct a prototype to conduct a case study. The result shows that our approach is effective.},
  doi       = {10.1109/COMPSAC.2017.35},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {feature selection;fuzzy set theory;natural language processing;speech recognition;voice-based task goals recognition;self-adaptive systems;SAS;natural language processing;NLP;voice-driven software fuzzy self-adaptation;V-SFSA;voice inputs verb;semantic relevant commands selection;similarity-based fuzzy adaptation;Semantics;Synthetic aperture sonar;Natural language processing;Speech recognition;Robots;Fuzzy logic;self-adaptive software system;natural language processing;sentence similarity;voice-based task goals},
}

@InProceedings{YongjianYang2005,
  author    = {{Yongjian Yang} and {Xiaodong Cao} and {Jiubin Ju} and {Yajiun Chen}},
  title     = {Research on prediction methods for load balancing based on self-adaptive and confirmation mechanism},
  booktitle = {2005 International Conference on Control and Automation},
  year      = {2005},
  volume    = {1},
  pages     = {533-536 Vol. 1},
  month     = {June},
  abstract  = {Present load balancing prediction in distributed system is based on full trust in prediction. However such trust may risk wrong prediction and degrade the system efficiency. In this paper, we proposed a self-adaptive load prediction model with multiple algorithms and confirmation mechanism. Based on this model, combined with mobile agent technology, we implemented a software packet for dynamic prediction, with which we achieved a dynamic balance of the system.},
  doi       = {10.1109/ICCA.2005.1528176},
  groups    = {ieee},
  issn      = {1948-3457},
  keywords  = {resource allocation;mobile agents;confirmation mechanism;load balancing prediction;distributed system;self-adaptive load prediction model;mobile agent;Prediction methods;Load management;Predictive models;System performance;Educational institutions;Degradation;History;Gaussian distribution;Switches;Load modeling},
}

@InProceedings{GanguiYan2002,
  author    = {{Gangui Yan} and {Xiaorong Xie} and {Qirong Jiang} and {Yuanhua Chen}},
  title     = {State self-adaptive monitor and control system for 6 kV/1600 kVA adjustable-speed drive},
  booktitle = {Proceedings. International Conference on Power System Technology},
  year      = {2002},
  volume    = {1},
  pages     = {448-452 vol.1},
  month     = {Oct},
  abstract  = {Based on proposed state self-adaptive monitor logic and volts per hertz (V/f) control method with current and voltage limitation, a compact operation monitor and control system (OMCS) is developed for real-time monitoring and control of a 6 kV/1600 kVA adjustable-speed drive (ASD) installation. The hardware of OMCS is based on industrial PC and composed of AI and DI data acquisition cards and TMS320C32 DSP based pulse system with specially designed configuration to exempt from strong electromagnetic interference. Implemented under Chinese Window 98 operating system with VC6.0 programming language, the software of OMCS can provide friendly man-machine interface with multi-functions. Experimental results show that the proposed monitor and control system can reliably supervise the operation conditions of ASD and efficiently control acceleration and deceleration of the induction motor without violating limits of current and voltage.},
  doi       = {10.1109/ICPST.2002.1053583},
  groups    = {ieee},
  keywords  = {variable speed drives;induction motor drives;machine control;computerised monitoring;digital signal processing chips;adaptive control;voltage control;frequency control;invertors;state self-adaptive monitor system;state self-adaptive control system;adjustable-speed drive;V/f control method;current limitation;voltage limitation;compact operation monitor;control system;real-time monitoring;data acquisition cards;TMS320C32 DSP based pulse system;electromagnetic interference;Chinese Window 98 operating system;VC6.0 programming language;man-machine interface;induction motor deceleration;induction motor acceleration;neutral-point clamped voltage source inverter;6 kV;1600 kVA;Monitoring;Control systems;Variable speed drives;Voltage control;Logic;Real time systems;Hardware;Electrical equipment industry;Artificial intelligence;Data acquisition},
}

@InProceedings{XiaohuiZhao2010,
  author    = {{Xiaohui Zhao}},
  title     = {Research of self-adaptive Chroma Space Model Skin-color Algorithm Based on Illumination and its application to erotic webpage filtering},
  booktitle = {2010 International Conference on Networking and Digital Society},
  year      = {2010},
  volume    = {2},
  pages     = {13-17},
  month     = {May},
  abstract  = {Network erotic information can do very bad influences on people. Skin-color detection is the key technique to the Face Recognition and Erotic Image Filtering etc. Aiming at skin color Algorithm for now is not adequately considering the illumination information, the paper presents a new approach to detecting skin-color pixels in multicolor images based on the Chroma Space Model-Self-adaptive Chroma Space Model Skin-color Algorithm Based on Illumination. The paper colligates the distributed feature in YUV and YIQ color space, and differentiates skin color according to the I component of YIQ, angle of UV and illumination of images. The experimental results show obvious superiority in the yellow, black (Asian, African) and white skins (occidental). This new algorithm achieves 93.4795%, and error rate and detection time comparatively do not have much changes. The paper applies the algorithm to image filtering, and combines it with URL and keywords filtering to realize erotic webpage filtering. It overcomes the lags and limitations of the filtering software and realizes the possibility of supervising and analyzing webpage online with little affections to the net normal operation.},
  doi       = {10.1109/ICNDS.2010.5479322},
  groups    = {ieee},
  keywords  = {face recognition;image colour analysis;image resolution;image retrieval;information filtering;Web sites;self-adaptive chroma space model;skin-color algorithm;illumination;erotic webpage filtering;skin-color detection;face recognition;erotic image filtering;skin color algorithm;multicolor images;YUV color space;YIQ color space;error rate;URL;keywords filtering;Filtering algorithms;Lighting;Information filtering;Information filters;Skin;Face detection;Face recognition;Pixel;Error analysis;Uniform resource locators;Chroma Space Model;skin-color algorithm;YUV;YIQ},
}

@InProceedings{Guo2018,
  author    = {C. {Guo} and J. {Zhang} and H. {Zhao} and P. {Luo} and S. {Cheng}},
  title     = {Implementation of Self-Adaptive Fuzzy Strategy Applied in STM32-based BLDCM Control System},
  booktitle = {2018 Chinese Automation Congress (CAC)},
  year      = {2018},
  pages     = {1063-1067},
  month     = {Nov},
  abstract  = {This paper describes the application of a kind of self-adaptive fuzzy strategy in the brushless DC motor (BLDCM) control system, which is based on STM32 chip and the corresponding designs of hardware and the software of the whole BLDCM control system are established respectively. From the data tested by the HALL sensor in the motor, several sets of experimental results are obtained. These results show that the proposed fuzzy-based BLDCM control system has lower overshoot, stronger anti-interference ability and better performance in speed response than the conventional BLDCM control system in which the traditional PI controller is used.},
  doi       = {10.1109/CAC.2018.8623423},
  groups    = {ieee},
  keywords  = {adaptive control;brushless DC motors;control engineering computing;fuzzy control;machine control;microcontrollers;PI control;power engineering computing;HALL sensor;self-adaptive fuzzy strategy;traditional PI controller;conventional BLDCM control system;STM32 chip;brushless DC motor control system;STM32-based BLDCM control system;PI control;Fuzzy control;MOSFET;Pulse width modulation;Torque;Stator windings;self-adaptive fuzzy PI controller;STM32;BLDCM control system},
}

@InProceedings{Zaytsev2016,
  author    = {A. {Zaytsev} and M. {Trigub} and N. {Kushik} and N. {Yevtushenko} and T. {Evtushenko}},
  title     = {Self-adaptive models for laser monitor image processing},
  booktitle = {2016 17th International Conference of Young Specialists on Micro/Nanotechnologies and Electron Devices (EDM)},
  year      = {2016},
  pages     = {300-303},
  month     = {June},
  abstract  = {The paper is devoted to processing the images of specific type. In particular, we present a work in progress of how the image quality can be improved when such images are obtained using a laser monitor. This monitor represents a novel technology that allows to see (observe) some objects or processes that cannot be distinguished with human being eyes, for example, human beings cannot see through flames without special equipment. A laser monitor provides these abilities but the corresponding images are captured by high speed cameras and still need to be improved. Such improvement cannot be performed with the use of `classical' methods and software tools. The reason is that by default almost all of them perform the de-noising under the assumption of well studied noises, such as white Gaussian noise. However, this is not the case for the images obtained from the laser monitor as it is demonstrated in this paper by our experimental results. As an alternative solution, we propose to address the self adaptive models for efficient improvement of the images of this proper kind. The paper contains the discussion about the types of self adaptive models that can be taken into consideration for this purpose.},
  doi       = {10.1109/EDM.2016.7538745},
  groups    = {ieee},
  issn      = {2325-419X},
  keywords  = {adaptive signal processing;Gaussian noise;image denoising;image enhancement;white noise;self adaptive models;white Gaussian noise;de-noising method;high speed cameras;image quality improvement;laser monitor image processing;Adaptation models;Monitoring;Laser modes;Image processing;Predictive models;Laser applications;Laser noise;laser monitor;image processing;self adaptive models},
}

@InProceedings{YongyinQu2012,
  author    = {{Yongyin Qu} and {Jianqiu Bu}},
  title     = {Application of fuzzy self-adaptive PID control in electrostatic dust removal power system},
  booktitle = {International Conference on Automatic Control and Artificial Intelligence (ACAI 2012)},
  year      = {2012},
  pages     = {542-544},
  month     = {March},
  abstract  = {The paper introduces fundamental principle of electrostatic dust removal and designs the three-phase high pressure dust removal of power-supply system based on fuzzy self-adaptive PID control algorithm centring on single-chip C8051F060. Based on the designs of hardware structure it gives software design flow chart. The control system increases the stability and control precision of dust removal of power-supply system. The engineering practice shows that the dust removal of power-supply system has advantages of easy operation, steady system and high work efficiency.},
  doi       = {10.1049/cp.2012.1036},
  groups    = {ieee},
  keywords  = {electrostatic precipitator power;fuzzy self-adaptive;PID control},
}

@InProceedings{Singh2016,
  author    = {N. K. {Singh} and Y. {A?t-Ameur} and M. {Pantel} and A. {Dieumegard} and E. {Jenn}},
  title     = {Stepwise Formal Modeling and Verification of Self-Adaptive Systems with Event-B. The Automatic Rover Protection Case Study},
  booktitle = {2016 21st International Conference on Engineering of Complex Computer Systems (ICECCS)},
  year      = {2016},
  pages     = {43-52},
  month     = {Nov},
  abstract  = {For a long time, formal methods have been effectively applied to design and develop safety-critical systems to ensure safety and the correctness of desired functional behaviors through formal reasoning. The development of high confidence self-adaptive autonomous systems, such as Automatic Rover Protection(ARP), is one of the challenging problems in the area of verified software that needs formal reasoning and proof-based development. In this paper, we propose a methodology that reveals the issues involved in the formal modeling and verification of self-adaptive autonomous systems using correct by construction approach. This work also provides a set of guidelines for tacking the different issues to avoid collision by preserving the local and global properties of an autonomous system. We cater for the specification of functional requirements, timing requirements, spatial and temporal behavior, and safety properties. We present a refinement strategy, modeling patterns to capture the essence of a self-adaptive autonomous system, and a substantial example based approach on an industrial case study: TwIRTee. For developing the formal models of autonomous system, we use the Event-B modeling language and associated Rodin tools to check and verify the correctness of required system behavior and internal consistency under the given safety properties.},
  doi       = {10.1109/ICECCS.2016.015},
  groups    = {ieee},
  keywords  = {control engineering computing;formal specification;formal verification;mobile robots;safety-critical software;software tools;vehicles;stepwise formal modeling;stepwise formal verification;self-adaptive systems;automatic rover protection;ARP;safety-critical systems;formal reasoning;proof-based development;functional requirement specification;timing requirements;spatial behavior;temporal behavi;safety properties;self-adaptive autonomous system;event-B modeling language;Rodin tool;Autonomous systems;Safety;Adaptation models;Embedded systems;Context modeling;Software systems;Context;Automatic Rover Protection (ARP);Event-B;refinement;formal methods;verification;validation},
}

@InProceedings{Weiss2011,
  author    = {G. {Weiss} and K. {Becker} and B. {Kamphausen} and A. {Radermacher} and S. {Gerard}},
  title     = {Model-Driven Development of Self-Describing Components for Self-Adaptive Distributed Embedded Systems},
  booktitle = {2011 37th EUROMICRO Conference on Software Engineering and Advanced Applications},
  year      = {2011},
  pages     = {477-484},
  month     = {Aug},
  abstract  = {Today's distributed embedded systems comprise various fields of application. Increasingly they are deployed in complex scenarios and must be able to adapt to changing environments and internal system changes. Such self-adaptive embedded systems pose great advantages in terms of flexibility, resource utilization, energy efficiency and robustness. The realization of these systems require enhanced development methods to incorporate the adaptation in the design. We introduce a novel concept for the model-driven development of self-adaptive embedded systems. The focus of our work is the definition and transfer of the information needed for the adaptation at runtime. This is preserved as so-called self-description of the components. We present our self-x profile, a modeling extension for describing the adaptation, and the respective design flow with built-in transformations. Furthermore, we outline the applicability of our methodology in an automotive use case.},
  doi       = {10.1109/SEAA.2011.78},
  groups    = {ieee},
  issn      = {2376-9505},
  keywords  = {automotive engineering;distributed processing;embedded systems;resource allocation;model driven development;self describing components;self adaptive distributed embedded systems;internal system changes;resource utilization;energy efficiency;self-x profile;modeling extension;automotive use case;Adaptation models;Unified modeling language;Runtime;Embedded systems;Automotive engineering;Containers;self-adaptation;self-adaptive;self-description;model-driven development;automotive},
}

@InProceedings{Zhong2019,
  author    = {Y. {Zhong} and Z. {Zhou} and D. {Li} and M. {Guo} and Q. {Liu} and Y. {Liu} and L. {Guo}},
  title     = {SAED: A Self-Adaptive Encryption and Decryption Architecture},
  booktitle = {2019 IEEE Intl Conf on Parallel Distributed Processing with Applications, Big Data Cloud Computing, Sustainable Computing Communications, Social Computing Networking (ISPA/BDCloud/SocialCom/SustainCom)},
  year      = {2019},
  pages     = {388-397},
  month     = {Dec},
  abstract  = {The Transport Layer Security (TLS) and Secure Socket Layer (SSL) are currently the predominant protocols to provide information security and data integrity between two communication endpoints. However, with dramatically increased network traffic, the cryptography algorithms used in SSL/TLS for encryption and decryption introduce substantial computation overhead due to the expensive CPU execution time. To accelerate the complex encryption computation, researchers have proposed novel architectures based hardware accelerators such as FPGAs, which can handle a massive amount of offloaded traffic with complex processing at very high throughput. In this paper, we study the real-world traffic workload and find that the performance of several crypto algorithms is heavily data-dependent: for small packets, software-based encryption and decryption solutions outperform hardware-based solutions, while hardwarebased solutions show higher processing speed for large packets. So there is no one-size-fits-all solution for packet processing. As a result, we propose a software-hardware co-design with quick assist technology. It combines both advantages of softwareand hardware-based approaches and be able to choose the optimal cryptography solution dynamically based on traffic status and system state. Our evaluation shows that our proposed architecture could achieve high throughput for encrypted traffic on a secured network compared to pure software or hardware solutions.},
  doi       = {10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00063},
  groups    = {ieee},
  keywords  = {cryptography;field programmable gate arrays;telecommunication traffic;pure software;SAED;self-adaptive encryption;decryption architecture;transport layer security;secure socket layer;predominant protocols;information security;data integrity;communication endpoints;dramatically increased network traffic;cryptography algorithms;expensive CPU execution time;complex encryption computation;hardware accelerators;offloaded traffic;complex processing;real-world traffic workload;crypto algorithms;software-based encryption;decryption solutions;hardware-based solutions;hardwarebased solutions;higher processing speed;one-size-fits-all solution;packet processing;software-hardware codesign;softwareand hardware-based approaches;optimal cryptography solution;traffic status;system state;encrypted traffic;secured network;software hardware co-design, self-adaption, parallel acceleration},
}

@InProceedings{Zhou2018,
  author    = {Y. {Zhou} and X. {Gong} and J. {Li} and B. {Li}},
  title     = {Verifying CPS for Self-Adaptability},
  booktitle = {2018 IEEE/ACIS 17th International Conference on Computer and Information Science (ICIS)},
  year      = {2018},
  pages     = {166-172},
  month     = {June},
  abstract  = {CPS (Cyber-Physical Systems) are physical and engineered systems featuring a tight combination of computation and physical processes by communication networks. CPS are mainly applied in some critical domains, so it is very essential to ensure the correctness of CPS. As a very important method for verifying system correctness, formal verification has been successfully applied in the verification of CPS; however, the high theoretical level of formal modeling techniques in formal verification and the lack of generality of formal models make it difficult to integrate formal verification with enterprise standard system development process. In this paper, we model CPS by HybridUML, an extension of UML which is now the de facto standard modeling language in system development practice, and then transform HybridUML model into the input language of theorem prover KeYmaera-QHP(Quantified Hybrid Program), and finally verify the QHP code with KeYmaera. When transforming a HybridUML model, we define the metamodels of HybridUML and QHP, and then find the association between them based on semantic consisteency, and finally define transformation rules using ATL (ATLAS Transformation Language) and template based code generation method to achieve transformation.},
  doi       = {10.1109/ICIS.2018.8466527},
  groups    = {ieee},
  keywords  = {cyber-physical systems;formal specification;formal verification;program compilers;theorem proving;Unified Modeling Language;Cyber-Physical Systems;physical processes;system correctness;formal verification;formal modeling techniques;enterprise standard system development process;model CPS;standard modeling language;system development practice;HybridUML model;prover KeYmaera-QHP;Quantified Hybrid Program;ATL;ATLAS Transformation Language;template based code generation method;Unified modeling language;Semantics;Formal verification;Standards;Transforms;Context modeling;Computational modeling;CPS;Formal Verification;HybridUML;QHP;MetaModel;Model Transformation},
}

@InProceedings{Tang2009,
  author    = {H. {Tang} and Y. {Sun} and B. {Yin} and Y. {Ge}},
  title     = {Self-Adaptive 3D Face Recognition Based on Feature Division},
  booktitle = {2009 Fifth International Conference on Image and Graphics},
  year      = {2009},
  pages     = {885-890},
  month     = {Sep.},
  abstract  = {The 3D face recognition attracts more and more attention recently, because of its insensitivity to the variance of illumination and pose. In this paper, a novel self-adaptive 3D face recognition algorithm based on face feature division is proposed. This algorithm first divides the 3D face into some block regions based on face features, and then, four face surface characters are extracted for all the block regions to represent the 3D face, and a novel self-adaptive 3D face recognition algorithm is proposed to balance the contributions of all the block regions. After that, a linear weighted strategy is adopted to hybrid the four characters and boost the recognition rate further. Finally, we test our algorithm on BJUT-3D face database and concluded that the performance of our algorithm and fusion strategy is satisfying.},
  doi       = {10.1109/ICIG.2009.148},
  groups    = {ieee},
  keywords  = {face recognition;feature extraction;self-adaptive 3D face recognition;face feature division;BJUT-3D face database;Face recognition;Surface treatment;Lighting;Character recognition;Robustness;Testing;Humans;Spatial databases;Principal component analysis;Graphics},
}

@InProceedings{Barron2016,
  author    = {J. {Barron} and M. {Crotty} and E. {Elahi} and R. {Riggio} and D. R. {Lopez} and M. P. {de Leon}},
  title     = {Towards self-adaptive network management for a recursive network architecture},
  booktitle = {NOMS 2016 - 2016 IEEE/IFIP Network Operations and Management Symposium},
  year      = {2016},
  pages     = {1143-1148},
  month     = {April},
  abstract  = {Traditionally, network management tasks manually performed by system administrators include monitoring alarms based on collected statistics across many heterogeneous systems, correlating these alarms to identify potential problems or changes to management policies and responding by performing system re-configurations to ensure optimal performance of network services. System administrators have a narrow focus of factors impacting network service provisioning and performance due to the heterogeneity and scale of generated underlying network events. However, self-adaption principles are conceptual approaches for autonomously managing such complex distributed systems. Network management systems that harness such principles can dynamically and autonomously optimise the operation of network services, responding quickly to changes in user requirements and underlying network conditions. In this paper, we present a novel self-adaptive network management framework that takes advantage of a recursive network architecture for a simpler and more comprehensive application of ontologies, semantic web rules and machine learning to automatically adjust network configuration parameters to provide more optimal QoS management of network services. We demonstrate the applicability of the approach using a content distribution network (CDN) operating over such a recursive network architecture.},
  doi       = {10.1109/NOMS.2016.7502977},
  groups    = {ieee},
  issn      = {2374-9709},
  keywords  = {computer network management;learning (artificial intelligence);ontologies (artificial intelligence);quality of service;semantic Web;self-adaptive network management;recursive network architecture;network service provisioning;self-adaption principle;distributed system;ontology application;semantic Web rule;machine learning;network service optimal QoS management;content distribution network;CDN;Quality of service;Knowledge engineering;Protocols;Conferences;Network architecture;Semantic Web},
}

@InProceedings{Gallagher2017,
  author    = {J. C. {Gallagher} and E. T. {Matson} and J. {Goppert}},
  title     = {A Provisional Approach to Maintaining Verification and Validation Capability in Self-Adapting Robots},
  booktitle = {2017 First IEEE International Conference on Robotic Computing (IRC)},
  year      = {2017},
  pages     = {382-388},
  month     = {April},
  abstract  = {Cyber Physical Systems (CPS) are composed of multiple physical and computing components that are deeply intertwined, operate on differing spatial and temporal scales, and interact with one another in fluid, context dependent, manners. Cyber Physical Systems often include smart components that use local adaptation to improve whole system performance or to provide damage response. Evolvable and Adaptive Hardware (EAH) components, at least conceptually, are often represented as an enabling technology for such smart components. This paper will outline one approach to applying CPS thinking to better address a growing need to address Verification and Validation (V&V) questions related to the use of EAH smart components. It will argue that, perhaps fortuitously, the very adaptations EAH smart components employ for performance improvement may also be employed to maintain V&V capability.},
  doi       = {10.1109/IRC.2017.35},
  groups    = {ieee},
  keywords  = {autonomous aerial vehicles;microrobots;provisional approach;self-adapting robots;cyber physical systems;CPS;physical components;computing components;spatial scales;temporal scales;system performance improvement;damage response;evolvable-and-adaptive hardware;verification-and-validation capability;EAH smart components;V&V capability;Adaptation models;Mathematical model;Oscillators;Drag;Force;Robot sensing systems;Cyber Physical Systems;Evolvable and Adaptive Hardware;Verification and Validation;Flapping-Wing Micro Air Vehicles},
}

@InProceedings{Nakajima2013,
  author    = {S. {Nakajima}},
  title     = {Safe Substitution of Components in Self-Adaptive Web Applications},
  booktitle = {2013 20th Asia-Pacific Software Engineering Conference (APSEC)},
  year      = {2013},
  volume    = {1},
  pages     = {388-395},
  month     = {Dec},
  abstract  = {Open systems such as Web applications are dynamically adaptive to allow desired levels of flexibility. The adaptibity may be achieved by replacing constituent software components at runtime, and a new method is required to ensure that the replacement or substitution is safe. This paper proposes a formal framework of safe substitution for self-adaptive systems and presents a policy-based, system integrity verification method. In an example case, an adaptive Web application demonstrates the effectiveness of the proposed approach.},
  doi       = {10.1109/APSEC.2013.59},
  groups    = {ieee},
  issn      = {1530-1362},
  keywords  = {adaptive systems;data integrity;Internet;open systems;program verification;safe substitution;constituent software components;self-adaptive Web applications;self-adaptive systems;system integrity verification method;open systems;Tin;Runtime;Radio frequency;Monitoring;Computer architecture;Interference;Software;Self-adaptive Systems;Verification;Substitutability;Data Integrity},
}

@InProceedings{Hillenbrand2020,
  author    = {A. {Hillenbrand} and U. {St?rl} and M. {Levchenko} and S. {Nabiyev} and M. {Klettke}},
  title     = {Towards Self-Adapting Data Migration in the Context of Schema Evolution in NoSQL Databases},
  booktitle = {2020 IEEE 36th International Conference on Data Engineering Workshops (ICDEW)},
  year      = {2020},
  pages     = {133-138},
  month     = {April},
  abstract  = {When NoSQL database systems are used in an agile software development setting, data model changes occur frequently and thus, data is routinely stored in different versions. This leads to an overhead affecting the software development and in particular, the management of data accesses. In this context, different data migration strategies exist, which are characterized by certain advantages and disadvantages. Using exactly that strategy whose characteristics match the according migration scenario, depends on the query workload, the changes in the data model caused by schema evolution, and the requirements for the application in terms of migration costs and latency during data accesses. In this paper we present a methodology of selfadapting data migration, which automatically adjusts migration strategies and its parameters accordingly, thereby supporting the agile software development.},
  doi       = {10.1109/ICDEW49219.2020.00013},
  groups    = {ieee},
  issn      = {2473-3490},
  keywords  = {data models;query processing;software prototyping;SQL;storage management;schema evolution;NoSQL database systems;agile software development;data model;data accesses;data migration strategies;self-adapting data migration;query workload;Data models;Middleware;Computer science;Task analysis;NoSQL databases;Agile software development;Databases;NoSQL;data migration;schema evolution;self-adapting.},
}

@InProceedings{Foltyn2006,
  author    = {L. {Foltyn} and J. {Tozicka} and M. {Rollo} and M. {Pechoucek} and P. {Jisl}},
  title     = {Reflective-Cognitive Architecture: From Abstract Concept to Self-Adapting Agent},
  booktitle = {IEEE Workshop on Distributed Intelligent Systems: Collective Intelligence and Its Applications (DIS'06)},
  year      = {2006},
  pages     = {326-334},
  month     = {June},
  abstract  = {This paper presents the general framework of the reflective-cognitive agent architecture. In our architecture we use modular approach to the reflection as we found it to be a promising way how to throw multi-agent systems together with the computing with limited resources, the programme code reusability and the automated code generation. The architecture is lightweight and it enables the agent to alter its own code in runtime using reflection according to the changes in the environment. At the end of the paper we present results of the architecture implementation showing the plausibility of the created prototype},
  doi       = {10.1109/DIS.2006.62},
  groups    = {ieee},
  keywords  = {cognitive systems;multi-agent systems;self-adjusting systems;software architecture;software reusability;self-adapting agent;reflective-cognitive agent architecture;agent reflection;multiagent system;programme code reusability;automated code generation;Optical reflection;Computer architecture;Multiagent systems;Cybernetics;Prototypes;Intelligent systems;Intelligent agent;Laboratories;Runtime environment;Software engineering},
}

@InProceedings{Xia2009,
  author    = {X. {Xia} and B. {Cao} and J. {Yu}},
  title     = {Architecture-Centric Eagent Division and Self-Adaptive Process Design Driven by ��D-Role��},
  booktitle = {2009 Fourth International Conference on Internet Computing for Science and Engineering},
  year      = {2009},
  pages     = {266-271},
  month     = {Dec},
  abstract  = {Architecture-centric system is analyzed by agent internetware, then the self-adaptive agent architecture is achieved. From belief, decision-making, intention point of view, it shows the flexible position of goal, which is the model statement level, and deepens some common description about the correlative environment and abnormity. The self-adaptive topology granularity unit of BDI and Agent is optimized, forms the basic internetware factor: Eagent, advances the dynamic binding technology related to the polymorphism concept, integrates the architecture-centric flow logic, in order to get the self-adaptive process algorithm and the unification of internetware container that "D-Role" is the basic automatic system role.},
  doi       = {10.1109/ICICSE.2009.20},
  groups    = {ieee},
  keywords  = {decision making;Internet;process design;software agents;software architecture;architecture-centric Eagent division;self-adaptive process design;D-role;agent Internetware;decision-making;self-adaptive topology granularity unit;dynamic binding technology;polymorphism;architecture-centric flow logic;Process design;Internet;Decision making;Logic;Topology;Computer architecture;Software systems;Design engineering;Computer science;Search engines;#NAME?},
}

@InProceedings{Tan2006,
  author    = {L. {Tan}},
  title     = {Model-Based Self-Adaptive Embedded Programs with Temporal Logic Specifications},
  booktitle = {2006 Sixth International Conference on Quality Software (QSIC'06)},
  year      = {2006},
  pages     = {151-158},
  month     = {Oct},
  abstract  = {We propose a model-based framework for developing a self-adaptive embedded program, which monitors its own execution and reconfigures itself at runtime to avoid failure and improve performance. Our approach uses formal methods at different design stages to reduce the complexity of developing a self-adaptive embedded program. In our framework system requirement is rigidly encoded in temporal logics, and the original embedded system behavior is captured in a hybrid automaton-based model. We introduce the reconfiguration specification language REDL to specify reconfiguration requirements, and define a formal semantics of reconfiguration in context of hybrid automaton. Using formal methods also helps automate design and implementation: we use model-based runtime verification techniques introduced by Tan et al. (2001) to extend a system model to a self-monitoring model based on its temporal logic requirements; we then extend the self-monitoring model with a reconfiguration mechanism based on its REDL specification. Our approach works with models, and hence it may be incorporated into existing model-based design workflow: the resulting self-adaptive model can be analyzed using an existing model simulator and may be used to generate a self-adaptive embedded program for targeted platform},
  doi       = {10.1109/QSIC.2006.41},
  groups    = {ieee},
  issn      = {2332-662X},
  keywords  = {adaptive systems;automata theory;configuration management;embedded systems;formal specification;program verification;temporal logic;model-based self-adaptive embedded program;temporal logic specifications;self reconfiguration;formal method;system requirement;hybrid automaton-based model;reconfiguration specification;REDL language;reconfiguration requirements;formal semantics;runtime verification;self-monitoring model;Runtime;Embedded system;Embedded software;Reconfigurable logic;Analytical models;Application software;Unmanned aerial vehicles;Design methodology;Specification languages;Automata},
}

@InProceedings{TingtingZeng2015,
  author    = {{Tingting Zeng} and {Meng Shen} and {Mingzhong Wang} and {Liehuang Zhu} and {Fan Li}},
  title     = {Self-adaptive anonymous communication scheme under SDN architecture},
  booktitle = {2015 IEEE 34th International Performance Computing and Communications Conference (IPCCC)},
  year      = {2015},
  pages     = {1-8},
  month     = {Dec},
  abstract  = {Communication privacy and latency perceived by users have become great concerns for delay-sensitive Internet services. Existing anonymous communication systems either provide high anonymity at an expense of prolonged latency (e.g., mix-net), or offer better real-time performance by sacrificing the ability against traffic analysis attacks (e.g., Onion Routing). The emerging Software-Defined Networking (SDN) introduces additional challenges to communication anonymity, due to the existence of a centralized controller that has a global view of the entire network traffic. In this paper, we propose a new anonymous communication scheme for delay-sensitive services under SDN scenarios, which can simultaneously protect communication privacy and reduce the end-to-end latency. A self-adaptive method based on the mix-net framework is designed to dynamically modify the waiting threshold of mix nodes, which helps to reduce the communication latency. In order to preserve the degree of anonymity, the self-adaptive method is incorporated with a random walking strategy for packets forwarding. Both theoretical analysis and experimental results prove that our scheme provides a moderate degree of anonymity and effectively reduces the latency derived from mix-net by up to 50%.},
  doi       = {10.1109/PCCC.2015.7410337},
  groups    = {ieee},
  issn      = {2374-9628},
  keywords  = {computer network security;data privacy;Internet;software defined networking;telecommunication network routing;telecommunication traffic;self-adaptive anonymous communication scheme;SDN architecture;software-defined networking;communication privacy protection;communication latency;delay-sensitive Internet services;traffic analysis attacks;onion routing;mix-net;communication anonymity;centralized controller;end-to-end latency reduction;random walking strategy;packets forwarding;Real-time systems;Relays;Entropy;Lead;Distance measurement;Annealing;Probabilistic logic;Privacy Preservation;Self-Adaptive;Anonymous Communication;Software-Defined Networking (SDN)},
}

@InProceedings{Peng2014,
  author    = {X. {Peng} and Y. {Xie} and Y. {Yu} and J. {Mylopoulos} and W. {Zhao}},
  title     = {Evolving Commitments for Self-Adaptive Socio-technical Systems},
  booktitle = {2014 19th International Conference on Engineering of Complex Computer Systems},
  year      = {2014},
  pages     = {98-107},
  month     = {Aug},
  abstract  = {Socio-technical systems (STSs) consist of human, hardware and software agents that work in tandem to fulfill stakeholder requirements. A specification for an STS consists of a set of (social) commitments among participating agents that serve as a contract among them. However, by their very nature, STSs are open, dynamic and continuously evolving along with their environments. To ensure that such systems continue to satisfy their requirements, the agents that comprise an STS must continuously adapt their behaviors to take into account risks and opportunities that arise at runtime. This paper presents a decision-theoretic self-adaptation framework that proposes candidate adaptation strategies for participating agents. These strategies are implementable by reconfiguration of plans or even changes in contractual commitments among agents. The adaptation procedure involves negotiating commitment changes and possible compensations to/from creditor agents. To evaluate the proposal, the paper also presents the results of an experimental study with a simulated STS, which confirms that success rates for achieving stakeholder goals and overall trade off utility can be improved significantly by incorporating evolving commitments to support STS adaptation.},
  doi       = {10.1109/ICECCS.2014.22},
  groups    = {ieee},
  keywords  = {decision theory;self-adjusting systems;software agents;evolving commitments;self-adaptive socio-technical systems;STS;software agents;stakeholder requirements;social commitments;decision-theoretic self-adaptation framework;candidate adaptation strategy;contractual commitments;adaptation procedure;trade off utility;Adaptation models;Switches;Motorcycles;Estimation;Proposals;Lifting equipment;Protocols;Socio-Technical Systems;Open Systems;Agent Commitments;Software Adaptation},
}

@InProceedings{Murwantara2017,
  author    = {I. M. {Murwantara} and B. {Bordbar} and J. {Bosco Ferreira Filho}},
  title     = {A Self-Adaptive Architecture with Energy Management in Virtualized Environments},
  booktitle = {2017 International Conference on Soft Computing, Intelligent System and Information Technology (ICSIIT)},
  year      = {2017},
  pages     = {124-130},
  month     = {Sep.},
  abstract  = {Energy management has become an important concern in virtualized environments; Cloud providers are developing and using techniques to minimize the energy consumption of their data centres. Providers rely immediately on elastic computing to scale-up or -down infrastructure resources based on incoming workloads and user settings. However, elasticity comes at a price, as adding resources may significantly increase energy usages and costs. We believe that, before scaling-up, it is possible to cope with different workloads and energy expenditure by automatically reconfiguring the software architecture of the Cloud. This paper presents a self-adaptive architecture and a set of techniques that use information about energy consumption to enforce policies to reduce cost and energy. We experiment our approach by reconfiguring different HTTP servers and web applications of the back-end servers based on the workload and energy consumption without interrupting current running services. Our approach proves more efficient when compared to elasticity methods under the same workloads.},
  doi       = {10.1109/ICSIIT.2017.18},
  groups    = {ieee},
  keywords  = {cloud computing;computer centres;energy consumption;power aware computing;software architecture;virtualisation;self-adaptive architecture;energy management;virtualized environments;energy consumption;elastic computing;infrastructure resources;incoming workloads;energy usages;costs;energy expenditure;software architecture;cost;data centres;cloud;cost reduction;HTTP servers;Web application;back-end servers;Servers;Computer architecture;Load modeling;Runtime;Energy consumption;Cloud computing;dynamic software product line;energy aware;virtualized system},
}

@InProceedings{Kl?s2015,
  author    = {V. {Kl?s} and T. {G?thel} and S. {Glesner}},
  title     = {Adaptive Knowledge Bases in Self-Adaptive System Design},
  booktitle = {2015 41st Euromicro Conference on Software Engineering and Advanced Applications},
  year      = {2015},
  pages     = {472-478},
  month     = {Aug},
  abstract  = {Self-adaptive systems allow for flexible solutions in changing environments. Usually, a fixed set of predefined rules is used to define the adaptation possibilities of a system. The main problem of such systems is to cope with environment behaviours that were not anticipated at design-time. In this case, no adaptation rule might be applicable or adaptations might not have the expected effect. In this paper, we propose an extended architecture of IBM's MAPE-K loop to cope with this problem. We impose a structure on the knowledge base consisting of an abstract system and environment model, a global goal model, and a set of (current) adaptation rules. Furthermore, we introduce an evaluation component that deletes failed adaptation rules, as well as a learning component that uses run-time models to autonomously generate new rules if the current ones are not applicable. With our approach, not only functional components can dynamically be adapted but also the adaptation logic itself.},
  doi       = {10.1109/SEAA.2015.48},
  groups    = {ieee},
  issn      = {2376-9505},
  keywords  = {knowledge based systems;learning (artificial intelligence);adaptive knowledge base;self-adaptive system design;IBM MAPE-K loop;abstract system;environment model;global goal model;adaptation rules;evaluation component;learning component;adaptation logic;Adaptation models;Adaptive systems;Knowledge based systems;Analytical models;Topology;Data models;Temperature sensors;self-adaptive systems;modelling;feedback loop;knowledge base;adaptation rules;run-time models},
}

@InProceedings{Fredericks2015a,
  author    = {E. M. {Fredericks} and B. H. C. {Cheng}},
  title     = {Automated Generation of Adaptive Test Plans for Self-Adaptive Systems},
  booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2015},
  pages     = {157-167},
  month     = {May},
  abstract  = {Self-adaptive systems (SAS) can reconfigure at run-time to mitigate uncertainties posed by environments for which they may not have been explicitly designed. High-assurance SAS applications must continually deliver acceptable behavior for critical services, enabling the need for run-time validation techniques. To this end, run-time testing can provide additional assurance that an SAS will continue to behave as expected while executing under unknown conditions. This paper introduces Proteus, a framework for adaptive run-time testing on an SAS. Proteus facilitates both execution and adaptation of run-time testing activities to ensure that the SAS continues to execute according to its requirements and that both test plans and test cases continually remain relevant to changing operating conditions. We demonstrate our approach by applying it to a simulated self-adaptive remote data mirroring network that must efficiently diffuse data while experiencing adverse operating conditions. Experimental results suggest that Proteus can reduce the number of executed irrelevant, false positive, and false negative test cases at run time to ensure that online testing activities remain relevant as the SAS encounters uncertainty.},
  doi       = {10.1109/SEAMS.2015.15},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {fault tolerant computing;program testing;reconfigurable architectures;simulated self-adaptive remote data mirroring network;operating conditions;adaptive run-time testing activities;Proteus;run-time validation techniques;critical services;run-time reconfigurability;high-assurance SAS applications;self-adaptive systems;automated adaptive test plan generation;Testing;Synthetic aperture sonar;Context;Adaptive systems;Mirrors;Monitoring;Uncertainty;self-adaptive systems;run-time testing;online adaptation;evolutionary computation},
}

@InProceedings{Faure2010,
  author    = {E. {Faure} and G. M. {Almeida} and M. {Benabdenbi} and P. {Benoit} and F. {Clermidy} and F. {P��cheux} and G. {Sassatelli} and L. {Torres}},
  title     = {An in-memory monitoring database for self adaptive MP2SoCs},
  booktitle = {2010 Conference on Design and Architectures for Signal and Image Processing (DASIP)},
  year      = {2010},
  pages     = {97-104},
  month     = {Oct},
  abstract  = {The complexity of MP2SoC architectures to come is such that many issues arise simultaneously, such as multicore programming, system performance, reliability, scalability, etc. The key to solve these issues is self-adaptability: the chips to come have to integrate the required software and hardware means to monitor and self-react to the various kinds of events that are likely to occur during chip's lifetime. The paper describes the design principles of a software based approach used to monitor manycore architectures running multi-threaded functional applications. The approach takes advantage of an in-memory database (as well as appropriate means to store, handle, and retrieve accumulated monitoring data) to achieve the monitoring task as simply as possible. After a presentation of the distributed database (called DRET), a case study is presented, along with performance results that clearly show the interest of the approach.},
  doi       = {10.1109/DASIP.2010.5706252},
  groups    = {ieee},
  keywords  = {distributed databases;hardware-software codesign;memory architecture;multiprocessing systems;multi-threading;system-on-chip;in-memory monitoring database;self adaptive MP2SoC architecture;integrated chips;hardware-software design;manycore architectures;multi-threading;distributed database;massively parallel multiprocessor system on chip;Hardware;Tiles;Monitoring;Computer architecture;Temperature sensors;Software},
}

@InProceedings{Hassan2016,
  author    = {S. {Hassan} and R. {Bahsoon}},
  title     = {Microservices and Their Design Trade-Offs: A Self-Adaptive Roadmap},
  booktitle = {2016 IEEE International Conference on Services Computing (SCC)},
  year      = {2016},
  pages     = {813-818},
  month     = {June},
  abstract  = {Migrating to microservices (microservitization) enables optimising the autonomy, replaceability, decentralised governance and traceability of software architectures. Despite the hype for microservitization , the state of the art still lacks consensus on the definition of microservices, their properties and their modelling techniques. This paper summarises views of microservices from informal literature to reflect on the foundational context of this paradigm shift. A strong foundational context can advance our understanding of microservitization and help guide software architects in addressing its design problems. One such design problem is finalising the optimal level of granularity of a microservice architecture. Related design trade-offs include: balancing the size and number of microservices in an architecture and balancing the nonfunctional requirement satisfaction levels of the individual microservices as well as their satisfaction for the overall system. We propose how self-adaptivity can assist in addressing these design trade-offs and discuss some of the challenges such a selfadaptive solution. We use a hypothetical online movie streaming system to motivate these design trade-offs. A solution roadmap is presented in terms of the phases of a feedback control loop.},
  doi       = {10.1109/SCC.2016.113},
  groups    = {ieee},
  keywords  = {formal specification;software architecture;software architectures;microservice architecture granularity;nonfunctional requirement satisfaction levels;self-adaptivity;online movie streaming system;feedback control loop;microservitization;Motion pictures;Computer architecture;Business;Context;Software;Quality of service;Browsers;microservices;trade-offs;non-functional requirements;granularity;self-adaptativity;decision-making},
}

@InProceedings{Perez2011,
  author    = {B. {Perez} and D. {Correal}},
  title     = {MENTA: A model-driven architecture to enable self-adaptive SOA systems},
  booktitle = {2011 6th Colombian Computing Congress (CCC)},
  year      = {2011},
  pages     = {1-6},
  month     = {May},
  abstract  = {Self-adaptive behavior is a feature which architects wants to include in their systems in order to improve its reliability. However, despite several ways to get it, it is still hard to implement a self-adaptive system which take in consideration quality attributes. Difficulties are related with architect's advanced knowledge in modelling, validating and implementing this kind of systems. In this paper we propose a model-driven architectural approach to allow the architect to define adaptation rules based on quality attributes enabling self-adaptive behavior in a SOA system.},
  doi       = {10.1109/COLOMCC.2011.5936328},
  groups    = {ieee},
  keywords  = {service-oriented architecture;MENTA;model-driven architectural approach;selfadaptive SOA systems;selfadaptive behavior;adaptation rules;quality attributes;Adaptation model;Semiconductor optical amplifiers;Monitoring;DSL;Software;Java;Biomedical monitoring;Adaptive systems;Metamodeling;Software architecture;Software quality},
}

@InProceedings{Lee2018,
  author    = {E. {Lee} and Y. {Kim} and Y. {Seo} and D. {Baik}},
  title     = {Self-Adaptive Framework with Game Theoretic Decision Making for Internet of Things},
  booktitle = {TENCON 2018 - 2018 IEEE Region 10 Conference},
  year      = {2018},
  pages     = {2092-2097},
  month     = {Oct},
  abstract  = {The Internet of Things (IoT) connects several objects within environments that dynamically change, and so requirements may be added and changed at runtime. Therefore, requirements may be satisfied at dynamic change. Self-adaptive software can alter their behavior to satisfy requirements in dynamic environments. In this perspective, the concept of self-adaptive software is suitable for IoT environments. In this study, a self-adaptive framework is proposed for decision making in IoT environments at runtime. The framework includes finite-state machine model designs and game theoretic decision-making methods to extract efficient strategies. The framework is implemented as a prototype, and experiments are performed to evaluate runtime performance. The results demonstrate that the proposed framework can be applied to IoT environments at runtime.},
  doi       = {10.1109/TENCON.2018.8650165},
  groups    = {ieee},
  issn      = {2159-3450},
  keywords  = {decision making;finite state machines;game theory;Internet of Things;self-adaptive framework;self-adaptive software;dynamic environments;IoT environments;finite-state machine model designs;game theoretic decision-making;Internet of Things;Software;Adaptation models;Runtime;Nash equilibrium;Mathematical model;Monitoring;Games;Self-adaptive software;Game theory;Finite-state machine;Nash equilibrium;Internet of Things},
}

@InProceedings{Vassev2008a,
  author    = {E. {Vassev} and M. {Hinchey}},
  title     = {ASSL Specification of Emergent Self-Adapting Behavior for NASA Swarm-Based Exploration Missions},
  booktitle = {2008 Second IEEE International Conference on Self-Adaptive and Self-Organizing Systems Workshops},
  year      = {2008},
  pages     = {13-18},
  month     = {Oct},
  abstract  = {We describe a biologically-inspired approach to modeling self-adapting behavior of NASA swarm-based exploration missions, whereby individual entities in the system can sacrifice themselves for the greater good of the entire system. We investigate aspects of possible emergent self-adapting behavior of swarm-based systems, inspired by the self-sacrifice behavior observed in some hive cultures. Moreover, we propose an ASSL specification model for the self-sacrifice behavior of the swarm individuals. ASSL (Autonomic System Specification Language) is a specification language dedicated to autonomic systems, and with which we have been experimenting with some positive results.},
  doi       = {10.1109/SASOW.2008.19},
  groups    = {ieee},
  keywords  = {aerospace computing;fault tolerant computing;formal specification;specification languages;ASSL specification;emergent self-adapting behavior;NASA swarm-based exploration missions;biologically-inspired approach;swarm-based systems;Autonomic System Specification Language;NASA;Space vehicles;Specification languages;Protection;Software engineering;Security;Testing;Conferences;Educational institutions;Biological system modeling},
}

@Article{Ma2020,
  author   = {M. {Ma} and W. {Lin} and D. {Pan} and P. {Wang}},
  title    = {Self-Adaptive Root Cause Diagnosis for Large-Scale Microservice Architecture},
  journal  = {IEEE Transactions on Services Computing},
  year     = {2020},
  pages    = {1-1},
  issn     = {1939-1374},
  abstract = {This paper presents a multi-metric and self-adaptive root cause diagnosis framework, named MS-Rank. MS-Rank decomposes the task into four phases: impact graph construction, random walk diagnosis, result precision evaluation, metrics weight update. Initially, we introduce the concept of implicit metrics and propose a composite impact graph construction algorithm, using multiple types of metrics to discover causal relationships between services. Afterwards, we propose a diagnostic algorithm in which forward, selfward and backward transitions are designed to heuristically identify the root cause services. In addition, we establish a self-adaptive mechanism to update the confidence of different metrics dynamically according to their diagnostic precision. Lastly, we develop a prototype system and integrate MS-Rank into real production system - IBM Cloud. Experimental results show that MS-Rank has a high diagnostic precision and its performance outperforms several selected benchmarks. Through multiple rounds of diagnosis, MS-Rank can optimize itself effectively. MS-Rank can be rapidly deployed in various microservice-based systems and applications, requiring no predefined knowledge. MS-Rank also allows us to introduce expert experiences into its framework to improve the diagnostic efficiency and precision.},
  doi      = {10.1109/TSC.2020.2993251},
  groups   = {ieee},
  keywords = {Measurement;Computer architecture;Reliability;Heuristic algorithms;Cloud computing;Software;Topology;Microservice Architecture;Root Cause;Anomaly Detection;Impact Graph;Cloud Computing},
}

@InProceedings{Chauvel2015,
  author    = {F. {Chauvel} and H. {Song} and F. {Fleurey}},
  title     = {Diversity: A Heuristic to Improve Robustness of Self-Adaptive Cloud Architectures},
  booktitle = {2015 IEEE/ACM 8th International Conference on Utility and Cloud Computing (UCC)},
  year      = {2015},
  pages     = {132-141},
  month     = {Dec},
  abstract  = {In complex biological systems, the hypothesis that bio-diversity contributes to stability or robustness is an active debate. The FP7 DIVERSIFY project tests whether this hypothesis holds for software systems, and explores the use of diversity as a heuristic to increase robustness in self-adaptive architectures. Inspired by Ecology, we present here a technique to evaluate diversity of software architectures and we report preliminary investigations of its correlation with robustness. Given existing cloud-based architectures, we artificially inject predefined levels of diversity and measure the resulting robustness. In four out of our five industrial case studies, a higher diversity appeared correlated with a higher robustness.},
  doi       = {10.1109/UCC.2015.29},
  groups    = {ieee},
  keywords  = {cloud computing;software architecture;self-adaptive cloud architectures;complex biological systems;active debate;FP7 DIVERSIFY project;software systems;ecology;software architectures;Robustness;Cloud computing;Topology;Computer architecture;Sociology;Correlation;cloud-computing;service architecture;diversity;robustness;correlation;models},
}

@Article{Guo2020,
  author   = {Z. {Guo} and Y. {Zhang} and X. {Zhao} and X. {Song}},
  title    = {CPS-Based Self-Adaptive Collaborative Control for Smart Production-Logistics Systems},
  journal  = {IEEE Transactions on Cybernetics},
  year     = {2020},
  pages    = {1-11},
  issn     = {2168-2275},
  abstract = {Discrete manufacturing systems are characterized by dynamics and uncertainty of operations and behavior due to exceptions in production-logistics synchronization. To deal with this problem, a self-adaptive collaborative control (SCC) mode is proposed for smart production-logistics systems to enhance the capability of intelligence, flexibility, and resilience. By leveraging cyber-physical systems (CPSs) and industrial Internet of Things (IIoT), real-time status data are collected and processed to perform decision making and optimization. Hybrid automata is used to model the dynamic behavior of physical manufacturing resources, such as machines and vehicles in shop floors. Three levels of collaborative control granularity, including nodal SCC, local SCC, and global SCC, are introduced to address different degrees of exceptions. Collaborative optimization problems are solved using analytical target cascading (ATC). A proof of concept simulation based on a Chinese aero-engine manufacturer validates the applicability and efficiency of the proposed method, showing reductions in waiting time, makespan, and energy consumption with reasonable computational time. This article potentially enables manufacturers to implement CPS and IIoT in manufacturing environments and build up smart, flexible, and resilient production-logistics systems.},
  doi      = {10.1109/TCYB.2020.2964301},
  groups   = {ieee},
  keywords = {Manufacturing systems;Collaboration;Energy consumption;Real-time systems;Vehicle dynamics;Analytical target cascading (ATC);cyber-physical systems (CPSs);hybrid automata;industrial Internet of Things (IIoT);self-adaptive collaborative control (SCC)},
}
{Andr��2010,
  author        = {F. {Andr��} and E. {Daubert} and G. {Gauvrit}},
  title         = {Towards a Generic Context-Aware Framework for Self-Adaptation of Service-Oriented Architectures},
  booktitle     = {2010 Fifth International Conference on Internet and Web Applications and Services},
  year          = {2010},
  pages         = {309-314},
  month         = {May},
  __markedentry = {[guan:6]},
  abstract      = {Many software applications are now built from services which run on heterogeneous platforms and are accessed by several users. These environments are in constant evolution. So applications and services have to dynamically adapt in order to satisfy the quality of service required by the users. Programming adaptation facilities taking into account the different situations that could happen is a difficult task. Our objective is to provide mechanisms for self-adaptation of services. We propose a generic framework that allows to specify different kinds of adaptation, in various environments. This paper presents the overall framework and details some of its functionalities: the monitoring, the decision to adapt and the planning of adaptation actions. The current state of our implementation for an OSGi platform is described.},
  doi           = {10.1109/ICIW.2010.52},
  keywords      = {software architecture;ubiquitous computing;generic context aware framework;self adaptation;service oriented architectures;software applications;generic framework;OSGi platform;Context-aware services;Service oriented architecture;Web services;Quality of service;Integer linear programming;Web and internet services;Multimedia communication;Business communication;Cost function;Application software;Self-adaptation;SOA;Framework for Dynamic Adaptation;Cloud Computing},
}

@InProceedings{Almeida2012,
  author    = {R. {Almeida} and M. {Vieira}},
  title     = {Changeloads for Resilience Benchmarking of Self-Adaptive Systems: A Risk-Based Approach},
  booktitle = {2012 Ninth European Dependable Computing Conference},
  year      = {2012},
  pages     = {173-184},
  month     = {May},
  abstract  = {Benchmarking self-adaptive software systems calls for a new model that takes into account a distinctive characteristic of such systems: alterations over time (i.e., self-achieved modifications or adjustments triggered by changes in the external or internal contexts of the system). Changes are thus a fundamental component of a resilience benchmark, raising an intrinsic research problem: how to identify and select the most realistic and relevant (sequences of) changes to be included in the benchmarking procedure. The problem is that defining a representative change load would require access to a large amount of field data, which is not available for most systems. In this paper we propose an approach based on risk analysis to tackle this key issue, debating its effectiveness and usability with a simple case study. The procedure, that combines field data with expert knowledge and experimental data, allows moving from the identification of the generic goals of systems in the benchmarking domain to the identification of the most relevant change scenarios (based on probability and impact) that may prevent those systems from achieving their goals.},
  doi       = {10.1109/EDCC.2012.30},
  groups    = {ieee},
  keywords  = {risk analysis;software fault tolerance;changeloads;resilience benchmarking;selfadaptive software systems;risk-based approach;risk analysis;field data;expert knowledge;experimental data;Benchmark testing;Resilience;Measurement;Context;Software;Computers;Monitoring;Self-adaptive;benchmarking;resilience;changeload;risk analysis},
}

@InProceedings{Steiner2007,
  author    = {J. {Steiner} and M. {Hagner}},
  title     = {Runtime Analysis of a Self-Adaptive Hard Real-Time Robotic Control System},
  booktitle = {Fourth IEEE International Workshop on Engineering of Autonomic and Autonomous Systems (EASe'07)},
  year      = {2007},
  pages     = {53-60},
  month     = {March},
  abstract  = {This paper describes a software architecture for parallel kinematic machines and its evolvement to a self-adaptive system striving to optimize, protect and heal itself Self-* properties are provided by self-manager components that observe and manipulate their associated system parts. A development approach for the self-managers is outlined, as is a first realization of a self-manager responsible for the control core. This self-manager distributes control components during runtime and makes feasibility decisions based on a runtime schedulability analysis},
  doi       = {10.1109/EASE.2007.23},
  groups    = {ieee},
  keywords  = {control engineering computing;robot kinematics;self-adjusting systems;software architecture;runtime analysis;self-adaptive hard real-time robotic control system;software architecture;parallel kinematic machines;runtime schedulability analysis;Runtime;Real time systems;Robot control;Control systems;Software architecture;Digital signal processing;TCPIP;Kinematics;Actuators;Parallel robots},
}

@InProceedings{Mayr2007,
  author    = {H. {Mayr}},
  title     = {I-Navigate: Intelligent, Self-adapting Navigation Maps},
  booktitle = {14th Annual IEEE International Conference and Workshops on the Engineering of Computer-Based Systems (ECBS'07)},
  year      = {2007},
  pages     = {397-404},
  month     = {March},
  abstract  = {In the frame of our "I-Navigate" project, we create a software system that allows to extend digital navigation maps automatically and, thus, to improve their quality continuously. In order to achieve this, a track is gathered through tracing the paths of users (on foot, by car or by bicycle, for instance) via GPS. This track is converted into a route, which is merged with the current map graph and supplied to the user as an updated, navigable map. Areas of application comprise the continuous extension of car navigation systems (last mile integration), the addition of off-road features to navigation maps (e.g. for outdoor and leisure activities, like mountain biking or off-track skiing), but also the surveillance of users navigating such a track in order to enable better targeted rescues in emergency cases (e.g. for mountaineers)},
  doi       = {10.1109/ECBS.2007.44},
  groups    = {ieee},
  keywords  = {Global Positioning System;self-adjusting systems;software engineering;traffic engineering computing;I-Navigate;intelligent navigation maps;self-adapting navigation maps;software system;GPS;car navigation systems;Global Positioning System;Mobile computing;Roads;Information technology;Personal digital assistants;Satellite navigation systems;Computer aided manufacturing;Hardware;Sensor systems;Software engineering;GPS;Automobile and Pedestrian Navigation;Model-based Incremental Map Creation;ADAS},
}

@InProceedings{deMenezesColonese2008,
  author    = {E. {de Menezes Colonese}},
  title     = {Using Built-In Interoperability with Self-Adaptive Components for RTS},
  booktitle = {Fifth International Conference on Information Technology: New Generations (itng 2008)},
  year      = {2008},
  pages     = {639-644},
  month     = {April},
  abstract  = {Component-based software engineering offers a way to solve complex systems by dividing it into well-defined modules. Adaptation mechanisms are crucial to enable run-time reconfiguration and to improve system's performance. The practicality of achieving interoperability remains a challenge for rapidly process operational requirements allowing components to work together with others. It must maintain the behavior and data integrity, while improves the answer time. A common set of ";building codes"; is proposed in this paper as a framework adopted for data interoperability among Real-Time System (RTS) components to replace gateways. It implements generic behavioral models for monitoring and controlling system composed of dynamic service servers, service invokers, a common protocol class, a component class, a message class, and a use case class. The target system might be adjusted to the framework, allowing the software components to have high degrees of cost-effective reuse. The framework was validated by building a control station prototype system, which controls UAV missions at run-time, while self-adapting service servers according to external events. The stakeholder requirements are monitored such that the software behavior can be verified at run-time.},
  doi       = {10.1109/ITNG.2008.105},
  groups    = {ieee},
  keywords  = {object-oriented programming;open systems;built-in interoperability;component-based software engineering;real-time system component;Runtime;Monitoring;Control systems;Software engineering;System performance;Real time systems;Control system synthesis;Protocols;Software prototyping;Prototypes;System Architecture;Design Pattern;Framework;Real-Time Systems},
}

@InProceedings{Qureshi2010,
  author    = {N. A. {Qureshi} and A. {Perini}},
  title     = {Continuous adaptive requirements engineering: An architecture for self-adaptive service-based applications},
  booktitle = {2010 First International Workshop on Requirements@Run.Time},
  year      = {2010},
  pages     = {17-24},
  month     = {Sep.},
  abstract  = {Engineering self-adaptive service-based applications significantly challenges the role of requirements engineering (RE). Such systems need to cope with the evolving requirements at runtime by monitoring the changes in users' preferences and in the environment, evaluating the changes and enacting a suitable behavior ensuring an acceptable level of quality for their users. This calls for continuous reappraisal of their requirements specification enabling them to reason for them at run-time. Recently, we proposed a novel framework for Continuous Adaptive RE (CARE) supporting self-adaptive service-based applications and on conceptual tools needed to realize RE at run-time. In this position paper, we focus on a conceptual architecture for the CARE framework, and illustrate how it can work using scenarios from travel domain. Potential impact of our work and useful integration with recent studies are discussed, highlighting open points for future research.},
  doi       = {10.1109/RERUNTIME.2010.5628553},
  groups    = {ieee},
  keywords  = {adaptive systems;software architecture;systems analysis;adaptive requirements engineering;self adaptive system;requirements specification;service based application architecture;Monitoring;Airports;Ontologies;Cognition;Context;Meteorology;Delay;Requirements Engineering;Self-adaptive systems;Service based Applications},
}

@InProceedings{Soon2009,
  author    = {G. K. {Soon} and P. {Anthony} and J. {Teo} and C. K. {On}},
  title     = {Evaluating the Efficiency of Self Adaptive GA and Deterministic Dynamic Adaptation GA in Online Auctions Environment},
  booktitle = {2009 Second International Symposium on Electronic Commerce and Security},
  year      = {2009},
  volume    = {1},
  pages     = {644-649},
  month     = {May},
  abstract  = {The proliferation of online auctions has caused the increasing need to monitor and track multiple bids in multiple auctions. An autonomous agent was developed to work in a flexible and configurable heuristic decision making framework that can tackle the problem of bidding across multiple auctions that apply different protocols (English, Vickrey and Dutch) as a solution to the problem. This agent utilizes genetic algorithm to search for effective solution in view of the dynamics and the unpredictability nature of online auctions. This paper investigates the application of deterministic dynamic adaptation genetic algorithm and self adaptive genetic algorithm to replace the conventional genetic algorithm to search for the most effective strategies (offline). An empirical evaluation on the comparison between the effectiveness of self-adaptive genetic algorithm and deterministic dynamic adaptation genetic algorithm for searching the most effective strategies in the online auction environment are discussed in this paper.},
  doi       = {10.1109/ISECS.2009.241},
  groups    = {ieee},
  keywords  = {electronic commerce;genetic algorithms;Internet;software agents;self adaptive GA;deterministic dynamic adaptation GA;online auction;multiple bids;autonomous agent;heuristic decision making;genetic algorithm;Genetic algorithms;Information technology;Monitoring;Autonomous agents;Protocols;Evolution (biology);Electronic commerce;Information security;Gallium nitride;Decision making;Online Auction;Bidding Strategies;Genetic Algorithm;Deterministic Dynamic Adaptation;Self-Adaptation},
}

@Article{Weyns2010b,
  author   = {D. {Weyns} and M. {Georgeff}},
  title    = {Self-Adaptation Using Multiagent Systems},
  journal  = {IEEE Software},
  year     = {2010},
  volume   = {27},
  number   = {1},
  pages    = {86-91},
  month    = {Jan},
  issn     = {1937-4194},
  abstract = {Each decade has its key software technology to advance artificial intelligence, and each technology is highlighted in a novel that sells much better than the underlying technology. Who hasn't read Michael Crichton's Prey and wondered how far multiagent systems might evolve and how they might affect humankind? Our technology column digs into this topic in this issue. Danny Weyns and Michael Georgeff provide a short introduction and show how multiagent systems help master the complexity of self-adaptive systems. They contrast multiagent systems with other current technologies and provide links and hints for practitioners who want to get started with this emerging field.},
  doi      = {10.1109/MS.2010.18},
  groups   = {ieee},
  keywords = {multi-agent systems;self-adjusting systems;systems analysis;systems self-adaptation;multiagent system;artificial intelligence;Multiagent systems;Artificial intelligence;software engineering;multiagent systems},
}

@InProceedings{Cai2012a,
  author    = {H. {Cai} and C. {Peng} and Y. {Zhang}},
  title     = {A Novel Framework of Self-Adaptive Fault-Tolerant for Pervasive Computing},
  booktitle = {2012 Sixth International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing},
  year      = {2012},
  pages     = {286-291},
  month     = {July},
  abstract  = {The increasing complexity of software and hardware resources and frequentative interaction among function components make fault-tolerant very challenging in pervasive computing system. In our paper, we propose a novel framework of self-adaptive fault-tolerant mechanism for pervasive computing environments. In our approach, the self-adaptive fault-tolerant mechanism is dynamically built according to various types of detected fault based on continuous monitoring, analysis of the component state. We put forward the architecture of fault-tolerant system and the policy-based fault-tolerant scheme, which adopt three-dimensional array of core features to capture spatial and temporal variability and the Event-Condition-Action rules. The mentioned mechanism has been designed and implemented on a prototype of office pervasive computing application systems, called POPCAS System. We have performed the experiments to evaluate the efficiency of the fault-tolerant mechanism. The results of the experiments show that the proposed mechanism can obviously improve reliability of the POPCAS System.},
  doi       = {10.1109/IMIS.2012.18},
  groups    = {ieee},
  keywords  = {computational complexity;fault tolerant computing;ubiquitous computing;software complexity;hardware resources complexity;frequentative interaction;pervasive computing system;self-adaptive fault-tolerant mechanism;continuous monitoring;policy-based fault-tolerant scheme;three-dimensional core features array;event-condition-action rules;office pervasive computing application systems;POPCAS System;Fault tolerance;Fault tolerant systems;Pervasive computing;Monitoring;Hardware;Software;pervasive computing;self-adaptive;fault-tolerant;fault management;reliability},
}

@InProceedings{Oplenskedal2018,
  author    = {M. K. {Oplenskedal} and P. {Herrmann} and J. O. {Blech} and A. {Taherkordi}},
  title     = {Simulation-driven Development of Self-adaptive Transportation Systems},
  booktitle = {2018 4th IEEE Conference on Network Softwarization and Workshops (NetSoft)},
  year      = {2018},
  pages     = {372-377},
  month     = {June},
  abstract  = {Modern Intelligent Transportation Systems (ITS) operate highly automatically. Therefore, they have to be able to handle a large variety of situations each demanding a particular system behavior. That aggravates the development of control software that has to guarantee safe and expedient operation in all possible situations. To support a suitable reconfiguration of the controllers to changing environments, the use of self-adaptation seems to be a highly promising approach. In this paper, we propose to combine model-based engineering of control software with simulation. That allows us to create and test controller software in parallel with the physical systems, it shall operate. Moreover, this approach makes it possible to safely confront a transport system with situations that, otherwise, could only be reproduced taking a significant risk. In particular, we introduce a framework for the creation of control software using simulators together with a development structure. The suggested design process is illustrated with a mobile robot example.},
  doi       = {10.1109/NETSOFT.2018.8460073},
  groups    = {ieee},
  keywords  = {control engineering computing;intelligent transportation systems;mobile robots;self-adjusting systems;traffic engineering computing;control software;safe operation;physical systems;simulation-driven development;intelligent transportation systems;self-adaptive transportation systems;ITS;model-based engineering;controller software testing;Software;Unified modeling language;Robot sensing systems;Actuators;Adaptation models},
}

@InProceedings{Moreno2018b,
  author    = {G. A. {Moreno} and B. {Schmerl} and D. {Garlan}},
  title     = {SWIM: An Exemplar for Evaluation and Comparison of Self-Adaptation Approaches for Web Applications},
  booktitle = {2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2018},
  pages     = {137-143},
  month     = {May},
  abstract  = {Research in self-adaptive systems often uses web applications as target systems, running the actual software on real web servers. This approach has three drawbacks. First, these systems are not easy and/or cheap to deploy. Second, run-time conditions cannot be replicated exactly to compare different adaptation approaches due to uncontrolled factors. Third, running experiments is time-consuming. To address these issues, we present SWIM, an exemplar that simulates a web application. SWIM can be used as a target system with an external adaptation manager interacting with it through its TCP-based interface. Since the servers are simulated, this use case addresses the first two problems. The full benefit of SWIM is attained when the adaptation manager is built as a simulation module. An experiment using a simulated 60-server cluster, processing 18 hours of traffic with 29 million requests takes only 5 minutes to run on a laptop computer. SWIM has been used for evaluating self-adaptation approaches, and for a comparative study of model-based predictive approaches to self-adaptation.},
  groups    = {ieee},
  issn      = {2157-2305},
  keywords  = {file servers;Internet;external adaptation manager;SWIM;model-based predictive approaches;web application;self-adaptive systems;web servers;self-adaptation approaches;Adaptation models;Web servers;Computational modeling;Virtual machining;Process control;simulation;scaling;web application;brownout},
}

@InProceedings{Champrasert2006,
  author    = {P. {Champrasert} and J. {Suzuki}},
  title     = {SymbioticSphere: a biologically-inspired autonomic architecture for self-adaptive and self-healing server farms},
  booktitle = {2006 International Symposium on a World of Wireless, Mobile and Multimedia Networks(WoWMoM'06)},
  year      = {2006},
  pages     = {6 pp.-474},
  month     = {June},
  abstract  = {This paper describes a biologically-inspired architecture, called SymbioticSphere, which allows large-scale server farms to autonomously adapt to dynamic environmental changes and survive partial system failures. SymbioticSphere follows biological principles such as decentralization, autonomy, natural selection, emergence and symbiosis to design server farms (application services and middleware platforms). Each application service and middleware platform is designed as a biological entity, analogous to an individual bee in a bee colony. Simulation results show that, like in biological systems, SymbioticSphere exhibits emergence of desirable system characteristics such as adaptability and survivability},
  doi       = {10.1109/WOWMOM.2006.105},
  groups    = {ieee},
  keywords  = {Internet;middleware;network servers;SymbioticSphere;biologically-inspired autonomic architecture;self-healing server farms;survive partial system failures;middleware platform;Symbiosis;Middleware;Biological system modeling;Application software;Biology;Computer architecture;Biological systems;Web server;Web and internet services;Surges},
}

@InProceedings{KaiqiangWu2010,
  author    = {{Kaiqiang Wu} and {Yi Liu} and {Mingyu Wu} and {Depei Qian}},
  title     = {A self-adaptive DVS scheduling algorithm for multi-core systems},
  booktitle = {2010 International Conference On Computer Design and Applications},
  year      = {2010},
  volume    = {3},
  pages     = {V3-585-V3-589},
  month     = {June},
  abstract  = {Dynamic Voltage Scaling (DVS) is widely supported in modern general purpose systems, like desktops. Interval-based DVS algorithms have been used in some operating systems (OSs), like Linux. But their load prediction models can't fit various needs of users so well, since most of them employ one prediction method only. In this paper, a self-adaptive algorithm called SADVS is presented. It selects the best algorithm according to the prediction accuracy of historical records, and the selector will be used to adjust the CPU speed in the following interval. SADVS behaves well in both simulations and actual implementation. For actual implementation, we find that SADVS reduces energy consumption 0.02%~0.4% without time extension compared to results of ondemand policy in Linux kernel.},
  doi       = {10.1109/ICCDA.2010.5541379},
  groups    = {ieee},
  keywords  = {Linux;multiprocessing systems;power aware computing;scheduling;self-adaptive DVS scheduling algorithm;multicore systems;dynamic voltage scaling;interval-based DVS algorithm;Linux;SADVS;Voltage control;Scheduling algorithm;Linux;Dynamic voltage scaling;Operating systems;Load modeling;Predictive models;Prediction methods;Accuracy;Energy consumption;DVS;energy savings;general purpose systems},
}

@InProceedings{Glein2014,
  author    = {R. {Glein} and B. {Schmidt} and F. {Rittner} and J. {Teich} and D. {Ziener}},
  title     = {A Self-Adaptive SEU Mitigation System for FPGAs with an Internal Block RAM Radiation Particle Sensor},
  booktitle = {2014 IEEE 22nd Annual International Symposium on Field-Programmable Custom Computing Machines},
  year      = {2014},
  pages     = {251-258},
  month     = {May},
  abstract  = {In this paper, we propose a self-adaptive FPGA-based, partially reconfigurable system for space missions in order to mitigate Single Event Upsets in the FPGA configuration and fabric. Dynamic reconfiguration is used here for an on-demand replication of modules in dependence of current and changing radiation levels. More precisely, the idea is to trigger a redundancy scheme such as Dual Modular Redundancy or Triple Modular Redundancy in response to a continuously monitored Single Event Upset rate measured inside the on-chip memories itself, e.g., any subset (even used) internal Block RAMs. Depending on the current radiation level, the minimal number of replicas is determined at runtime under the constraint that a required Safety Integrity Level for a module is ensured and configured accordingly. For signal processing applications it is shown that this autonomous adaption to the different solar conditions realizes a resource efficient mitigation. In our case study, we show that it is possible to triplicate the data throughput at the Solar Maximum condition (no flares) compared to a Triple Modular Redundancy implementation of a single module. We also show the decreasing Probability of Failures Per Hour by 2 �� 104 at flare-enhanced conditions compared with a non-redundant system.},
  doi       = {10.1109/FCCM.2014.79},
  groups    = {ieee},
  keywords  = {aerospace instrumentation;data integrity;digital signal processing chips;field programmable gate arrays;particle detectors;radiation hardening (electronics);random-access storage;reconfigurable architectures;redundancy;self-adaptive SEU mitigation system;FPGA;internal block RAM radiation particle sensor;partially reconfigurable system;space missions;single event upset;dynamic reconfiguration;on-demand replication;redundancy scheme;on-chip memories;safety integrity level;signal processing application;autonomous adaption;resource efficient mitigation;data throughput;Field programmable gate arrays;Redundancy;Error correction codes;Single event upsets;Random access memory;Protons;FPGA;BRAM radiation sensor;Virtex-5QV;dynamic reconfiguration;SEU;mitigation},
}

@InProceedings{Hiba2017,
  author    = {H. {Hiba} and S. {Mahdavi} and S. {Rahnamayan}},
  title     = {Differential evolution with self-adaptive mutation scaling factor},
  booktitle = {2017 IEEE Symposium Series on Computational Intelligence (SSCI)},
  year      = {2017},
  pages     = {1-8},
  month     = {Nov},
  abstract  = {Throughout the past few decades, a variant of differential evolution (DE) algorithms have been introduced with a competitive performance on complex optimization problems. However, the DE superiority is highly dependent on its control parameters and the search operators (i.e., mutation and crossover schemes). Therefore, to obtain the optimal performance, tuning the parameters is essential. In this paper, the DE algorithm is proposed that uses a new designed mutation scaling factor to dynamically adapt the movement of the individuals in the search space toward the optimal value during the evolutionary process. The numerical experiments are conducted on thirty CEC 2014 benchmark functions on four different dimensions; 10, 30, 50, and 100. The obtained results demonstrate that the proposed algorithm is highly competitive and shows better performance than the classical DE algorithm.},
  doi       = {10.1109/SSCI.2017.8285170},
  groups    = {ieee},
  keywords  = {evolutionary computation;optimisation;search problems;CEC 2014 benchmark functions;mutation scaling factor;optimal performance;crossover schemes;search operators;control parameters;complex optimization problems;competitive performance;self-adaptive mutation;differential evolution;optimal value;search space;DE algorithm;Sociology;Statistics;Noise measurement;Linear programming;Optimization;Algorithm design and analysis;Benchmark testing;Differential Evolution;A self adaptive Parameters;Evolutionary Optimization},
}

@InProceedings{Chen2015,
  author    = {X. {Chen} and J. {Jiang} and Q. {Jiang}},
  title     = {A Method of Self-Adaptive Pre-Copy Container Checkpoint},
  booktitle = {2015 IEEE 21st Pacific Rim International Symposium on Dependable Computing (PRDC)},
  year      = {2015},
  pages     = {290-300},
  month     = {Nov},
  abstract  = {Container checkpoint is a kind of backward recovery fault tolerance technology, through which the high availability of container can be achieved. Checkpoint downtime is the key performance indicator of container checkpoint system. A long checkpoint downtime will cause users' perceptual interruption in the deployment of the service of the guest operating system in container, which is difficult to accept for the cloud system offering key services. In order to reduce the downtime of container checkpoint, a method of self-adaptive pre-copy container checkpoint is proposed in this paper. Through several rounds of pre-copy, memory pages of container which will not be frequently modified are copied in advance. Only dirty pages which generate in the previous round of pre-copy are saved in every round of pre-copy by freezing container, which reduces the checkpoint downtime. The number of rounds of pre-copy is adaptively determined by the workload of the guest operating system in container. Prototype of Self-Adaptive Pre-copy Diskless Linux Container Checkpoint (SAPCDLCKPT) is implemented based on Linux container (LXC). The experimental result shows that compared with the existing methods, with the constantly increase of container's memory configuration and different kinds of workloads, SAPCDLCKPT achieves lower checkpoint downtime. The highest decrease ratio of checkpoint downtime reaches to 78.24%.},
  doi       = {10.1109/PRDC.2015.11},
  groups    = {ieee},
  keywords  = {checkpointing;cloud computing;Linux;cloud computing;LXC;SAPCDLCKPT;self-adaptive precopy diskless Linux container checkpoint;container freezing;container memory pages;container checkpoint system;checkpoint downtime;backward recovery fault tolerance technology;Containers;Virtual machining;Kernel;Linux;Checkpointing;Cloud computing;Cloud computing;Container checkpoint;Self-adaptive;Pre-copy;Downtime},
}

@Article{Xue2018,
  author   = {Y. {Xue} and B. {Zhao} and T. {Ma} and W. {Pang}},
  title    = {A Self-Adaptive Fireworks Algorithm for Classification Problems},
  journal  = {IEEE Access},
  year     = {2018},
  volume   = {6},
  pages    = {44406-44416},
  issn     = {2169-3536},
  abstract = {Fireworks algorithm (FWA) is a novel swarm intelligence algorithm recently proposed for solving complex optimization problems. Because of its powerful global optimization ability to solve classification problems, we first present an optimization classification model in this paper. In this model, a linear equation set is constructed according to classification problems. This optimization classification model can be solved by most evolutionary computation techniques. In this paper, a self-adaptive FWA (SaFWA) is developed so that the optimization classification model can be solved efficiently. In SaFWA, four candidate solution generation strategies (CSGSs) are employed to increase the diversity of solutions. In addition, a self-adaptive search mechanism has also been introduced to use the four CSGSs simultaneously. To extensively assess the performance of SaFWA on solving classification problems, eight datasets have been used in the experiments. The experimental results show that it is feasible to solve classification problems through the optimization classification model and SaFWA. Furthermore, SaFWA performs better than FWA, FWA variants with only one CSGS, particle swarm optimization, and differential evolution on most of the training sets and test sets.},
  doi      = {10.1109/ACCESS.2018.2858441},
  groups   = {ieee},
  keywords = {evolutionary computation;particle swarm optimisation;pattern classification;search problems;swarm intelligence;differential evolution;CSGS;self-adaptive search mechanism;candidate solution generation strategies;linear equation set;global optimization ability;swarm intelligence algorithm;self-adaptive fireworks algorithm;particle swarm optimization;SaFWA;optimization classification model;complex optimization problems;FWA;Explosions;Sparks;Mathematical model;Fireworks algorithm;Computational modeling;Machine learning algorithms;Classification;evolutionary classification algorithm;fireworks algorithm (FWA);self-adaptive;optimization},
}

@InProceedings{Zhu2014,
  author    = {L. {Zhu} and H. {Cai} and L. {Jiang}},
  title     = {Minson: A Business Process Self-Adaptive Framework for Smart Office Based on Multi-agent},
  booktitle = {2014 IEEE 11th International Conference on e-Business Engineering},
  year      = {2014},
  pages     = {31-37},
  month     = {Nov},
  abstract  = {We argue that organization, task, business process should possess invaluable intelligence to gear how ecosystem adapt itself to changing context information in the Smart Office. On the purpose to solve this problem, we present a reliable frame called Minson which is a dynamic adaption system based on multi-agent and context-awareness. Firstly, in order to describe the problem, we define the person, task, organization, resource meta-model. Secondly, we introduce the scene state map which guide our system which state to choose when ecosystem context changes. Next, we also provide the event meta model which is a state space describing the interruption of our context in Smart Office. Finally, strategy rules about reasoning are proposed. An algorithm is given for self-adapting in the ecosystem considering the organization and task balance. The result shows the proposed framework is a feasible method to cope with Multi-Agent and Context-aware in business process adapting.},
  doi       = {10.1109/ICEBE.2014.18},
  groups    = {ieee},
  keywords  = {business process re-engineering;inference mechanisms;multi-agent systems;office automation;organisational aspects;ubiquitous computing;Minson;business process self-adaptive framework;multiagent based smart office;information system;dynamic adaption system;context-awareness;scene state map;strategy rules about reasoning;business process adaption;Organizations;Cognition;Engines;Context;Educational institutions;Multi-agent systems;Context aware;Multi-agent;Business Process;Self adaptive;State Space;Reasoning;Smart Office;Internet of Things},
}

@InProceedings{Young2018,
  author    = {R. {Young} and S. {Fallon} and P. {Jacob}},
  title     = {A Governance Architecture for Self-Adaption Control in IoT Applications},
  booktitle = {2018 5th International Conference on Control, Decision and Information Technologies (CoDIT)},
  year      = {2018},
  pages     = {241-246},
  month     = {April},
  abstract  = {The ��Internet of Things�� has become a reality with projections of 28 billion connected devices by 2021. Much R&D is currently focused on creating methods to efficiently handle an influx of data. Flow based programming, where data is moved through a network of processes, is a model well suited to IoT. This paper proposes a dynamic, distributed data processing architecture, utilizing a flow based programming inspired approach. We illustrate a distributed configuration management protocol, which coordinates processing between edge devices and a central controller. Our proposed architecture is evaluated in a vehicle use case that predicts driver alertness. We present a scenario for reducing data on vehicular networks when the connectivity options are limited, while maintaining computational accuracy.},
  doi       = {10.1109/CoDIT.2018.8394824},
  groups    = {ieee},
  issn      = {2576-3555},
  keywords  = {configuration management;Internet of Things;protocols;traffic engineering computing;governance architecture;self-adaption & control;IoT applications;Internet of Things;reality;projections;28 billion connected devices;influx;flow based programming;dynamic distributed data;distributed configuration management protocol;edge devices;central controller;vehicular networks;connectivity options;Program processors;Computer architecture;Containers;Data models;Vehicles;Programming;Internet of Things},
}

@InProceedings{Vogel2012a,
  author    = {T. {Vogel} and H. {Giese}},
  title     = {A language for feedback loops in self-adaptive systems: Executable runtime megamodels},
  booktitle = {2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2012},
  pages     = {129-138},
  month     = {June},
  abstract  = {The development of self-adaptive software requires the engineering of proper feedback loops where an adaptation logic controls the underlying software. The adaptation logic often describes the adaptation by using runtime models representing the underlying software and steps such as analysis and planning that operate on these runtime models. To systematically address this interplay, runtime megamodels, which are specific runtime models that have themselves runtime models as their elements and that also capture the relationships between multiple runtime models, have been proposed. In this paper, we go one step further and present a modeling language for runtime megamodels that considerably eases the development of the adaptation logic by providing a domain-specific modeling approach and a runtime interpreter for this part of a self-adaptive system. This supports development by modeling the feedback loops explicitly and at a higher level of abstraction. Moreover, it permits to build complex solutions where multiple feedback loops interact or operate on top of each other, which is leveraged by keeping the megamodels explicit and alive at runtime and by interpreting them.},
  doi       = {10.1109/SEAMS.2012.6224399},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {program diagnostics;program interpreters;self-adjusting systems;simulation languages;feedback loops;self-adaptive systems;executable runtime megamodel;self-adaptive software;adaptation logic;modeling language;domain-specific modeling approach;runtime interpreter;abstraction;Feedback loop;Adaptation models;Analytical models;Runtime;Planning;Monitoring;Computational modeling;self-adaptation;feedback loop;modeling language;megamodel;runtime models;model interpretation},
}

@InProceedings{Wuttke2012,
  author    = {J. {Wuttke} and Y. {Brun} and A. {Gorla} and J. {Ramaswamy}},
  title     = {Traffic routing for evaluating self-adaptation},
  booktitle = {2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2012},
  pages     = {27-32},
  month     = {June},
  abstract  = {Toward improving the ability to evaluate self-adaptation mechanisms, we present the automated traffic routing problem. This problem involves large numbers of agents, partial knowledge, and uncertainty, making it well-suited to be solved using many, distinct self-adaptation mechanisms. The well-defined nature of the problem allows for comparison and proper evaluation of the underlying mechanisms and the involved algorithms. We (1) define the problem, (2) outline the sources of uncertainty and partial information that can be addressed by self-adaptation, (3) enumerate the dimensions along which self-adaptive systems should be evaluated to provide a benchmark for comparison of self-adaptation and traditional mechanisms, (4) present Adasim, an open-source traffic routing simulator that allows easy implementation and comparison of systems solving the automated traffic routing problem, and (5) demonstrate Adasim by implementing two traffic routing systems.},
  doi       = {10.1109/SEAMS.2012.6224388},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {digital simulation;multi-agent systems;public domain software;road traffic;traffic engineering computing;self-adaptation evaluation;self-adaptation mechanisms;automated traffic routing problem;underlying mechanisms;self-adaptive systems;Vehicles;Routing;Sensors;Uncertainty;Robustness;Benchmark testing;Cities and towns;adaptive routing;benchmark;exemplar},
}

@InProceedings{Gauvrit2010,
  author    = {G. {Gauvrit} and E. {Daubert} and F. {Andre}},
  title     = {SAFDIS: A Framework to Bring Self-Adaptability to Service-Based Distributed Applications},
  booktitle = {2010 36th EUROMICRO Conference on Software Engineering and Advanced Applications},
  year      = {2010},
  pages     = {211-218},
  month     = {Sep.},
  abstract  = {Service Based Applications (SBA) running in distributed and heterogeneous environments are subject to varying constraints that can lead to fluctuations in the quality of the application. We propose a solution in the form of a distributed framework for adaptation to improve in a autonomous way the quality delivered by those applications and to maintain it above a minimum level. This framework, named SAFDIS for Self-Adaptation For DIstributed Services, enables the dynamic evolution of service-based architectures by providing all the functionalities of the MAPE model. Among these functionalities, particular emphasis is put on the analysis phase which permits to use several reasoners able to take decisions with multiple temporal scopes, at short term as well as at long term. Specific attention is also paid to the planning phase, which enables to schedule parallel actions while taking into account different constraints.},
  doi       = {10.1109/SEAA.2010.25},
  groups    = {ieee},
  issn      = {2376-9505},
  keywords  = {distributed processing;software architecture;SAFDIS;service-based distributed applications;MAPE model;self-adaptation for distributed services;service-based architectures;Engines;Servers;Streaming media;Monitoring;Probes;Schedules;Self-adaptation;Distributed Applications;SOA;Distributed Adaptation Framework},
}

@InProceedings{Coker2015,
  author    = {Z. {Coker} and D. {Garlan} and C. L. {Goues}},
  title     = {SASS: Self-Adaptation Using Stochastic Search},
  booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2015},
  pages     = {168-174},
  month     = {May},
  abstract  = {Future-generation self-adaptive systems will need to be able to optimize for multiple interrelated, difficult-to-measure, and evolving quality properties. To navigate this complex search space, current self-adaptive planning techniques need to be improved. In this position paper, we argue that the research community should more directly pursue the application of stochastic search techniques -- search techniques, such as hill climbing or genetic algorithms, that incorporate an element of randomness -- to self-adaptive systems research. These techniques are well-suited to handling multi-dimensional search spaces and complex problems, situations which arise often for self-adaptive systems. We believe that recent advances in both fields make this a particularly promising research trajectory. We demonstrate one way to apply some of these advances in a search-based planning prototype technique to illustrate both the feasibility and the potential of the proposed research. This strategy informs a number of potentially interesting research directions and problems. In the long term, this general technique could enable sophisticated plan generation techniques that improve domain specific knowledge, decrease human effort, and increase the application of self-adaptive systems.},
  doi       = {10.1109/SEAMS.2015.16},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {genetic algorithms;search problems;software engineering;stochastic programming;SASS;self-adaptation-using-stochastic search;complex search space;self-adaptive planning techniques;research community;hill climbing;genetic algorithms;randomness;multidimensional search spaces;search-based planning prototype technique;plan generation techniques;domain specific knowledge improvement;Servers;Time factors;Search problems;Measurement;Databases;Genetic algorithms;Planning;planning;stochastic search;genetic algorithm;position paper},
}

@InProceedings{DeVries2018,
  author    = {B. {DeVries} and B. {H.C. Cheng}},
  title     = {Run-Time Monitoring of Self-Adaptive Systems to Detect N-way Feature Interactions and their Causes},
  booktitle = {2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2018},
  pages     = {94-100},
  month     = {May},
  abstract  = {The validity of systems at run time depends on the features included in those systems operating as specified. However, when feature interactions occur, the specifications no longer reflect the state of the run-time system due to the conflict. While methods exist to detect feature interactions at design time, conflicts that cause features to fail may still arise when new detected feature interactions are considered unreachable, new features are added, or an exhaustive design-time detection approach is impractical due to computational costs. This paper introduces Thoosa, an approach for using models at run time to detect features that can fail due to n-way feature interactions at run time and thereby trigger mitigating adaptations and/or updates to the requirements. We illustrate our approach by applying Thoosa to an industry-based automotive braking system comprising multiple subsystems.},
  groups    = {ieee},
  issn      = {2157-2305},
  keywords  = {automotive engineering;braking;feature extraction;software fault tolerance;run-time monitoring;self-adaptive systems;run-time system;N-way feature interactions detection;industry-based automotive braking system;Thoosa;Force;Brakes;Feature extraction;Standards;Automotive engineering;Adaptation models;Adaptive systems;Requirements;Feature Interactions;Self-Monitoring},
}

@InProceedings{Jiancheng2007,
  author    = {N. {Jiancheng} and L. {Zhishu} and S. {Jirong} and X. {Jianchuan}},
  title     = {Self-adaptive Intrusion Detection System for Computational Grid},
  booktitle = {First Joint IEEE/IFIP Symposium on Theoretical Aspects of Software Engineering (TASE '07)},
  year      = {2007},
  pages     = {97-106},
  month     = {June},
  abstract  = {As conventional intrusion detection systems cannot evolve with ceaselessly changing environment of computational Grid, a model of intrusion detection system named GIDIA based on immunity and multi Agents is developed with hierarchical architecture. Following definitions of immune model, detecting Agent, decision-making Agent, preventing Agent, and controlling Agent, relevant abstract mathematical models, evolving trends and inferential equations of Agents that are used in intrusion detection module, decision-making module, response module, and vaccine formation and distribution module are founded respectively. Theoretical analysis and experimental results show that GIDIA possesses better self-adaptability, higher detection rate, and offers a novel way to secure Grid member sites in the same trust community or different ones cooperatively.},
  doi       = {10.1109/TASE.2007.44},
  groups    = {ieee},
  keywords  = {decision making;grid computing;security of data;software agents;self-adaptive intrusion detection system;computational grid;multi agents;immunity agents;hierarchical architecture;decision-making agent;preventing agent;controlling agent;relevant abstract mathematical models;response module;vaccine formation;distribution module;GIDIA possesses;Intrusion detection;Grid computing;Decision making;Information security;Computer architecture;Mathematical model;Vaccines;Scalability;Computer crime;Sun},
}

@InProceedings{Silva2012,
  author    = {D. C. d. {Silva} and A. B. {Lopes} and F. A. P. {Pinto} and J. C. {Leite}},
  title     = {Selecting Architecture Configurations in Self- Adaptive Systems Using QoS Criteria},
  booktitle = {2012 Sixth Brazilian Symposium on Software Components, Architectures and Reuse},
  year      = {2012},
  pages     = {71-80},
  month     = {Sep.},
  abstract  = {The process for choosing the best architectural elements to build systems has become increasingly complex. It becomes more critical if it is necessary to consider many combinations of components in the context of an architectural configuration. This paper proposes an approach for the dynamic selection of architectural configurations based on quality of system criteria of the system, which can be used during a dynamic adaptation, the MoSAC. This module uses the MAUT theory (Multi-Attribute Utility Theory) for decision making from a finite set of possibilities, which involve multiple criteria to be analyzed. We also present a case study that is an application in the context of Iterative Digital TV to evaluate the time spent on the module to return a valid configuration to be used in a middleware with self-adaptive features, the middleware FRAME.},
  doi       = {10.1109/SBCARS.2012.12},
  groups    = {ieee},
  keywords  = {middleware;quality of service;software architecture;utility programs;selecting architecture configurations;self-adaptive systems;QoS criteria;architectural elements;dynamic selection;quality of system;multiattribute utility theory;MAUT;iterative digital TV;middleware FRAME;Quality of service;Utility theory;Computer architecture;Context;Middleware;Monitoring;component;architectural configuration;selection;model;non-functional requirements},
}

@InProceedings{Arcaini2015a,
  author    = {P. {Arcaini} and E. {Riccobene} and P. {Scandurra}},
  title     = {Modeling and Analyzing MAPE-K Feedback Loops for Self-Adaptation},
  booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2015},
  pages     = {13-23},
  month     = {May},
  abstract  = {The MAPE-K (Monitor-Analyze-Plan-Execute over a shared Knowledge) feedback loop is the most influential reference control model for autonomic and self-adaptive systems. This paper presents a conceptual and methodological framework for formal modeling, validating, and verifying distributed self-adaptive systems. We show how MAPE-K loops for self adaptation can be naturally specified in an abstract stateful language like Abstract State Machines. In particular, we exploit the concept of multi-agent Abstract State Machines to specify decentralized adaptation control by using MAPE computations. We support techniques for validating and verifying adaptation scenarios, and getting feedback of the correctness of the adaptation logic as implemented by the MAPE-K loops. In particular, a verification technique based on meta-properties is proposed to allow discovering unwanted interferences between MAPE-K loops at the early stages of the system design. As a proof-of concepts, we model and analyze a traffic monitoring system.},
  doi       = {10.1109/SEAMS.2015.10},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {decentralised control;finite state machines;formal logic;formal specification;multi-agent systems;program verification;software fault tolerance;MAPE-K feedback loop;Monitor-analyze-plan-execute over a shared knowledge;distributed self-adaptive system verification;autonomic systems;formal modeling;self-adaptation;abstract stateful language;multiagent abstract state machines;decentralized adaptation control specification;adaptation logic;meta properties;traffic monitoring system;Adaptation models;Monitoring;Cameras;Unified modeling language;Computational modeling;Analytical models;Organizations;self-adaptation;MAPE-K;formal modeling;validation & verification;Abstract State Machines},
}

@InProceedings{Camilli2015,
  author    = {M. {Camilli} and A. {Gargantini} and P. {Scandurra}},
  title     = {Specifying and verifying real-time self-adaptive systems},
  booktitle = {2015 IEEE 26th International Symposium on Software Reliability Engineering (ISSRE)},
  year      = {2015},
  pages     = {303-313},
  month     = {Nov},
  abstract  = {Self-adaptive systems autonomously adapt their behavior at run-time to react to internal dynamics and to uncertain and changing environment conditions. Specification and verification of self-adaptive systems are generally very difficult to carry out due to their high complexity, especially when involving time constraints. In the last case, in fact, the correctness of systems depends also on the time associated with events. This paper introduces a formal approach to specify and verify the self-adaptive behavior of real-time systems. Our specification formalism is based on Time-Basic Petri nets, a particular timed extension of Petri nets. We propose adaptation models to realize self-adaptation with temporal constraints and we adopt a zone-based modeling approach to support separation of concerns during the modeling phase. Zones identified during the modeling phase can be then used as modules (TB Petri subnets) either in isolation, to verify intra-zone properties, or all together, to verify inter-zone properties over the entire system model and check that all the temporal deadlines are met. We illustrate our approach by modeling and verifying a time-critical Gas Burner system that exhibits a self-healing behavior.},
  doi       = {10.1109/ISSRE.2015.7381823},
  groups    = {ieee},
  keywords  = {combustion equipment;formal specification;mechanical engineering computing;Petri nets;program verification;real-time systems;software fault tolerance;real-time self-adaptive system verification;real-time self-adaptive system specification;internal dynamics;changing environment conditions;uncertain environment conditions;self-healing behavior;self-healing behavior;time-critical gas burner system;interzone properties;intrazone properties;TB Petri subnets;zone- based modeling approach;temporal constraints;adaptation models;timed Petri nets;time-basic Petri nets;specification formalism;formal approach;Petri nets;Adaptation models;Ignition;Time factors;Furnaces;Real-time systems;Fires},
}
{C��mara2020,
  author        = {J. {C��mara} and H. {Muccini} and K. {Vaidhyanathan}},
  title         = {Quantitative Verification-Aided Machine Learning: A Tandem Approach for Architecting Self-Adaptive IoT Systems},
  booktitle     = {2020 IEEE International Conference on Software Architecture (ICSA)},
  year          = {2020},
  pages         = {11-22},
  month         = {March},
  __markedentry = {[guan:6]},
  abstract      = {Architecting IoT systems able to guarantee Quality of Service (QoS) levels can be a challenging task due to the inherent uncertainties (induced by changes in e.g., energy availability, network traffic) that they are subject to. Existing work has shown that machine learning (ML) techniques can be effectively used at run time for selecting self-adaptation patterns that can help maintain adequate QoS levels. However, this class of approach suffers from learning bias, which induces accuracy problems that might lead to sub-optimal (or even unfeasible) adaptations in some situations. To overcome this limitation, we propose an approach for proactive self-adaptation which combines ML and formal quantitative verification (probabilistic model checking). In our approach, ML is tasked with selecting the best adaptation pattern for a given scenario, and quantitative verification checks the feasibility of the adaptation decision, preventing the execution of unfeasible adaptations and providing feedback to the ML engine which helps to achieve faster convergence towards optimal decisions. The results of our evaluation show that our approach is able to produce better decisions than ML and quantitative verification used in isolation.},
  doi           = {10.1109/ICSA47634.2020.00010},
  keywords      = {formal verification;Internet of Things;learning (artificial intelligence);probability;quality of service;quantitative verification-aided machine learning;tandem approach;self-adaptive IoT systems;quality of service;energy availability;network traffic;machine learning techniques;self-adaptation patterns;QoS levels;proactive self-adaptation;formal quantitative verification;adaptation pattern;adaptation decision;ML engine;Quality of service;Predictive models;Adaptation models;Sensor systems;Machine learning;Data models;Self-Adaptive architectures, proactive adaptation, machine learning, reinforcement learning, Q-learning, quantitative verification, probabilistic model checking, IoT architectures, self-adaptation patterns, software architecture},
}

@InProceedings{Cui2014,
  author    = {Y. {Cui} and R. M. {Voyles} and J. T. {Lane} and M. H. {Mahoor}},
  title     = {ReFrESH: A self-adaptation framework to support fault tolerance in field mobile robots},
  booktitle = {2014 IEEE/RSJ International Conference on Intelligent Robots and Systems},
  year      = {2014},
  pages     = {1576-1582},
  month     = {Sep.},
  abstract  = {Mobile robots are being employed far more often in extreme environments, such as urban search and rescue, with greater levels of autonomy; yet recent studies on field robotics show that numerous failure modes affect the reliability of the robot in meeting mission objectives. Therefore, fault tolerance is increasingly important for field robots operating in unpredictable environments to ensure safety and effectiveness of the system. This paper demonstrates a self-adaptation framework, ReFrESH, that contains mechanisms for fault detection and fault mitigation. The goal of ReFrESH is to provide diagnosable and maintainable infrastructure support, built into a real-time operating system, to manage task performance in the presence of unexpected uncertainties. ReFrESH augments the port-based object framework by attaching evaluation and estimation mechanisms to each functional component so that the robot can easily detect and locate faults. In conjunction, a task level decision mechanism interacts with the fault detection elements in order to generate and choose an optimal approach to mitigating faults. Moreover, to increase flexibility of the fault tolerance, ReFrESH provides self-adaptation support for both software and hardware functionality. To our knowledge, this is the first framework to support both software and hardware self-adaptation. A demonstrative application of ReFrESH illustrates its applicability through a target tracking task deployed on a mobile robot system.},
  doi       = {10.1109/IROS.2014.6942765},
  groups    = {ieee},
  issn      = {2153-0866},
  keywords  = {control engineering computing;fault tolerant computing;mobile robots;operating systems (computers);real-time systems;self-adjusting systems;self-adaptation framework;field mobile robot system;urban search and rescue;failure modes;robot reliability;mission objectives;fault tolerance;unpredictable environments;system safety;system effectiveness;ReFrESH;fault detection;fault mitigation;diagnosable infrastructure support;maintainable infrastructure support;real-time operating system;task performance;port-based object framework;estimation mechanisms;functional component;faults location;task level decision mechanism;faults mitigation;software functionality;hardware functionality;software self-adaptation;hardware self-adaptation;target tracking task;Robots;Fault tolerance;Fault tolerant systems;Software;Runtime;Hardware;Computer architecture},
}

@InProceedings{Borda2018a,
  author    = {A. {Borda} and V. {Koutavas}},
  title     = {Self-Adaptive Automata},
  booktitle = {2018 IEEE/ACM 6th International FME Workshop on Formal Methods in Software Engineering (FormaliSE)},
  year      = {2018},
  pages     = {64-73},
  month     = {May},
  abstract  = {Self-adaptive systems aim to efficiently respond to a wide range of changes in their operational environment by dynamically altering their behaviour. Such systems are typically comprised of a base system, implementing core functionality, and an adaptation decision process, which determines how the base system must change at different points in its execution. These two components coordinate through a set of adaptation events: a set of execution points of the former where the latter is invoked. The pattern of these events is crucial for the overall system to achieve (a) correctness against specific requirements, and (b) efficiency of system resources. Existing techniques for modelling self-adaptive systems usually hardcode adaptation events within the base system or the adaptation decision process. This limits system designers in discovering correct and optimal patterns of adaptation events, as changing those involves significant changes in the model. In this work we present Self-Adaptive Automata, an abstract modelling framework which decouples adaptation event patterns from the descriptions of base systems and adaptation decision processes. In our framework, base systems expose execution points where adaptation may happen - in the most general case this can include all system states - and adaptation decision processes are parametric to these points. A distinct automaton then pinpoints when in the system adaptation must happen. Using this framework system designers can experiment with different adaptation event patterns, without modifications to the base system or the adaptation decision process, and discover correct and efficient patterns. We show that our framework is compatible with traditional verification tools by providing an adequate translation from Self-Adaptive Automata into FDR, in which correctness against requirements can be verified. We also prove that, although our automata framework includes dynamic self-modifying features, it corresponds to standard models of computation. We illustrate the use of our framework through a use case of a self-adaptive system of autonomous search-and-rescue rovers.},
  groups    = {ieee},
  issn      = {2575-5099},
  keywords  = {adaptive systems;automata theory;formal verification;mobile robots;base system;adaptation decision process;system states;system adaptation;system designers;adaptation event patterns;self-adaptive automata;operational environment;optimal patterns;verification tools;dynamic self-modifying features;autonomous search-and-rescue rovers;Adaptation models;Automata;Computational modeling;Standards;Autonomous vehicles;Encoding;Monitoring;Software system models;Automata;Verification;Self Adaptive System;Refinement},
}

@InProceedings{Maia2019,
  author    = {P. H. {Maia} and L. {Vieira} and M. {Chagas} and Y. {Yu} and A. {Zisman} and B. {Nuseibeh}},
  title     = {Dragonfly: a Tool for Simulating Self-Adaptive Drone Behaviours},
  booktitle = {2019 IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2019},
  pages     = {107-113},
  month     = {May},
  abstract  = {Drone simulators can provide an abstraction of different applications of drones and facilitate reasoning about distinct situations, in order to evaluate the effectiveness of these applications. In this paper we describe Dragonfly, a simulator of the behaviours of individual and collection of drones in various environments, involving random contextual variables and different environmental settings. Dragonfly supports the use of several drones in applications and evaluates the satisfaction of requirements under normal and exceptional situations. It simulates adaptive behaviours of drones due to exceptional situations. The adaption of drones is based on the use of wrappers implemented using aspect-oriented programming.},
  doi       = {10.1109/SEAMS.2019.00022},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {aspect-oriented programming;control engineering computing;remotely operated vehicles;Dragonfly;self-adaptive drone behaviours;drone simulators;aspect-oriented programming;random contextual variables;Drones;Tools;Programming;Runtime;Batteries;Antennas;Atmospheric modeling;Drone, Adaptation, Aspects},
}

@InProceedings{Bertolotti2010,
  author    = {G. M. {Bertolotti} and A. {Cristiani} and R. {Lombardi} and M. {Ribari?} and N. {Toma?evi?} and M. {Stanojevi?}},
  title     = {Self-Adaptive Prototype for Seat Adaption},
  booktitle = {2010 Fourth IEEE International Conference on Self-Adaptive and Self-Organizing Systems Workshop},
  year      = {2010},
  pages     = {136-141},
  month     = {Sep.},
  abstract  = {Self-adaptive prototype for seat adaptation aims at enhancing the physical comfort of a driver by taking into account not only the state of the environment (state of the road, car settings), but also the driver's emotional, cognitive and physical state. To implement this prototype we used a REFLECTive middleware, which provides a programming framework for the development of pervasive-adaptive applications. The REFLECTive middleware supports self-adaptive behavior and is generally composed of three tiers: Tangible tier contains services that read sensors data and send commands to actuators, REFLECTive tier is responsible for analyzing the data collected from sensors and for defining the actions that will be performed by actuators, Application tier facilitates high-level decision making. The seat adaptation prototype uses the information about Center of Pressure (COP) speed and number of bumps to determine the driver's physical state, and then it combines this information with the driver's cognitive and emotional state to figure out if the driver feels uncomfortable, and to change the state of seat cushions in an attempt to make driver feel more comfortable. The components of the seat adaptation prototype in the REFLECTive and Application tier are implemented using reaction rules.},
  doi       = {10.1109/SASOW.2010.29},
  groups    = {ieee},
  keywords  = {data analysis;decision making;middleware;personal computing;prototypes;seats;traffic engineering computing;ubiquitous computing;selfadaptive prototype;seat adaption;physical state;Reflective middleware;pervasive adaptive application;Tangible tier;Reflective tier;data analysis;decision making;center of pressure speed;driver physical state;reaction rule;Driver circuits;Sensors;Prototypes;Middleware;Actuators;Roads;Software;pervasive adaptation;middleware;driving experience;physical comfort;reaction rules},
}

@InProceedings{Ibrahim2006,
  author    = {M. T. {Ibrahim} and R. J. {Anthony} and T. {Eymann} and A. {Taleb-Bendiab} and L. {Gruenwald}},
  title     = {Exploring Adaptation Self-Adaptation in Autonomic Computing Systems},
  booktitle = {17th International Workshop on Database and Expert Systems Applications (DEXA'06)},
  year      = {2006},
  pages     = {129-138},
  month     = {Sep.},
  abstract  = {This panel paper sets out to discuss what self-adaptation means, and to explore the extent to which current autonomic systems exhibit truly self-adaptive behaviour. Many of the currently cited examples are clearly adaptive, but debate remains as to what extent they are simply following prescribed adaptation rules within preset bounds, and to what extent they have the ability to truly learn new behaviour. Is there a standard test that can be applied to differentiate? Is adaptive behaviour sufficient anyway? Other autonomic computing issues are also discussed.},
  doi       = {10.1109/DEXA.2006.57},
  groups    = {ieee},
  issn      = {2378-3915},
  keywords  = {Application software;Ontologies;Testing;Terminology;Computer science;Communication standards;Adaptive systems;Databases;Expert systems},
}

@InProceedings{Cui2013,
  author    = {Y. {Cui} and R. M. {Voyles} and M. H. {Mahoor}},
  title     = {ReFrESH: A self-adaptive architecture for autonomous embedded systems},
  booktitle = {2013 IEEE International Conference on Automation Science and Engineering (CASE)},
  year      = {2013},
  pages     = {850-855},
  month     = {Aug},
  abstract  = {This paper presents an architecture for automating the reconfiguration of system deal with unforeseen situations, named ReFrESH, for distributed autonomous embedded systems which 1) supports both hardware and software reconfiguration based on task-related functional requirements without disturbing system at runtime; 2) provides a type of Embedded Virtual Machine to facilitate components distribution across node boundaries; 3) generates optimal configurations dynamically based on non-functional requirements. The feasibility of ReFrESH and its management algorithms are evaluated for ��visual servoing�� of three miniature robot scenario. Moreover, one self-adaptive application is implemented to show the realistic performance of ReFrESH. The results demonstrate that ReFrESH can enable the system to handle various situations dynamically and decrease the complexity of self-adaptation.},
  doi       = {10.1109/CoASE.2013.6654042},
  groups    = {ieee},
  issn      = {2161-8089},
  keywords  = {distributed processing;embedded systems;robot vision;virtual machines;visual servoing;self-adaptive architecture;ReFrESH;distributed autonomous embedded systems;software reconfiguration;hardware reconfiguration;task-related functional requirements;embedded virtual machine;components distribution;node boundaries;nonfunctional requirements;visual servoing;miniature robot scenario;self-adaptation complexity;reconfiguration framework for distributed embedded systems for software and hardware;Hardware;Software;Ports (Computers);Computer architecture;Visual servoing;Cameras},
}

@InProceedings{Mirandola2010,
  author    = {R. {Mirandola} and P. {Potena}},
  title     = {Self-Adaptation of Service Based Systems Based on Cost/Quality Attributes Tradeoffs},
  booktitle = {2010 12th International Symposium on Symbolic and Numeric Algorithms for Scientific Computing},
  year      = {2010},
  pages     = {493-501},
  month     = {Sep.},
  abstract  = {An application should be self-adaptive in order to automatically and autonomously adapt its behavior for several reasons, such as service evolution (e.g. a new version may be available), hardware volatility (e.g. network quality changes) and varying users demands with new requirements (e.g. a new functionality or a different level of quality of service). In this paper we introduce a framework, based on an optimization model, that dynamically adapts a service based system (i.e. both the structural and behavioral software and hardware architecture) while minimizing the adaptation costs and guaranteeing a required level of the system qualities. Adaptation actions can be triggered both by an user request and/or automatically after the runtime violation of system quality constraints, or the appearing/disappearing of services into the environment. In particular, in this paper we give a general overview of the main components of the framework by providing a deeper discussion of the optimization model that is the core of the framework.},
  doi       = {10.1109/SYNASC.2010.16},
  groups    = {ieee},
  keywords  = {computer architecture;optimisation;self adaptation;service based systems;cost/quality attributes;service evolution;hardware volatility;network quality;optimization model;structural software;behavioral software;hardware architecture;user request;runtime violation;system quality constraints;Hardware;Software;Adaptation model;Monitoring;Optimization;Computer architecture;Unified modeling language;service-based adaptation;quality of services and non-functional aspects;optimization model},
}

@InProceedings{HelaliMoghadam2018,
  author    = {M. {Helali Moghadam} and M. {Saadatmand} and M. {Borg} and M. {Bohlin} and B. {Lisper}},
  title     = {Learning-Based Self-Adaptive Assurance of Timing Properties in a Real-Time Embedded System},
  booktitle = {2018 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
  year      = {2018},
  pages     = {77-80},
  month     = {April},
  abstract  = {Providing an adaptive runtime assurance technique to meet the performance requirements of a real-time system without the need for a precise model could be a challenge. Adaptive performance assurance based on monitoring the status of timing properties can bring more robustness to the underlying platform. At the same time, the results or the achieved policy of this adaptive procedure could be used as feedback to update the initial model, and consequently for producing proper test cases. Reinforcement-learning has been considered as a promising adaptive technique for assuring the satisfaction of the performance properties of software-intensive systems in recent years. In this work-in-progress paper, we propose an adaptive runtime timing assurance procedure based on reinforcement learning to satisfy the performance requirements in terms of response time. The timing control problem is formulated as a Markov Decision Process and the details of applying the proposed learning-based timing assurance technique are described.},
  doi       = {10.1109/ICSTW.2018.00031},
  groups    = {ieee},
  keywords  = {decision theory;embedded systems;learning (artificial intelligence);Markov processes;program testing;timing properties;real-time embedded system;adaptive runtime assurance technique;adaptive performance assurance;reinforcement-learning;software-intensive systems;adaptive runtime timing assurance procedure;reinforcement learning;timing control problem;learning-based self-adaptive assurance;Markov Decision Process;Real-time systems;Time factors;Embedded systems;Delays;Runtime;Markov processes;Timing properties;self-adaptive performance assurance;real-time embedded systems;reinforcement learning},
}

@InProceedings{Oliveira2014,
  author    = {N. {Oliveira} and L. S. {Barbosa}},
  title     = {A Self-Adaptation Strategy for Service-Based Architectures},
  booktitle = {2014 Eighth Brazilian Symposium on Software Components, Architectures and Reuse},
  year      = {2014},
  pages     = {1-10},
  month     = {Sep.},
  abstract  = {Self-adaptive software systems are known to respond at run time to changes detected internally or in their environment, in an attempt to keep meeting their own functional requirements and agreed levels of service. Such response usually targets their architectures and involve, in particular, the possibility of their dynamic reconfiguration. In contexts where change is the rule rather than the exception, it is difficult to predict when exactly such reconfigurations are needed, and if they will lead the system into a suitable configuration. However, knowing the main attributes of the context, it is possible to plan configurations that will be more likely to perform well in some conjugation of values for such attributes. In this paper we discuss both a model that lays down reconfiguration strategies, planned at design time, and a strategy which actively uses such a model to trigger architectural adaptations at run time. This strategy builds on a framework intended to the formal verification of architectural requirements, either from a qualitative or quantitative (probabilistic) perspective.},
  doi       = {10.1109/SBCARS.2014.12},
  groups    = {ieee},
  keywords  = {contracts;formal verification;probability;service-oriented architecture;self-adaptation strategy;service-based architectures;self-adaptive software systems;functional requirements;dynamic reconfiguration strategy;configuration planing;architectural adaptations;run time analysis;formal verification;architectural requirements;qualitative analysis;quantitative analysis;probabilistic method;service level agreements;Adaptation models;Quality of service;Servers;Monitoring;Context;Analytical models;Connectors},
}

@InProceedings{Pilgerstorfer2017,
  author    = {P. {Pilgerstorfer} and E. {Pournaras}},
  title     = {Self-Adaptive Learning in Decentralized Combinatorial Optimization - A Design Paradigm for Sharing Economies},
  booktitle = {2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2017},
  pages     = {54-64},
  month     = {May},
  abstract  = {The democratization of Internet of Things and ubiquitous computing equips citizens with phenomenal new ways for online participation and decision-making in application domains of smart grids and smart cities. When agents autonomously self-determine the options from which they make choices, while these choices collectively have an overall system-wide impact, an optimal decision-making turns into a combinatorial optimization problem known to be NP-hard. This paper contributes a new generic self-adaptive learning algorithm for a fully decentralized combinatorial optimization: I-EPOS, the Iterative Economic Planning and Optimized Selections. In contrast to related algorithms that simply parallelize computations or big data and deep learning systems that often require personal data and overtake of control with implication on privacy-preservation and autonomy, I-EPOS relies on coordinated local decision-making via structured interactions over tree topologies that involve the exchange of entirely local and aggregated information. Strikingly, the cost-effectiveness of I-EPOS in regards to performance vs. computational and communication cost highly outperforms other related algorithms that involve non-local brute-force operations or exchange of full information. The algorithm is also evaluated using real-world data from two state-of-the-art pilot projects of participatory sharing economies: (i) energy management and (ii) bicycle sharing. The contribution of an I-EPOS open source software suite implemented as a paradigmatic artifact for community aspires to settle a knowledge exchange for the design of new algorithms and application scenarios of sharing economies towards highly participatory and sustainable digital societies.},
  doi       = {10.1109/SEAMS.2017.8},
  groups    = {ieee},
  keywords  = {Big Data;combinatorial mathematics;computational complexity;Internet of Things;iterative methods;learning (artificial intelligence);optimisation;power engineering computing;power system economics;power system planning;smart power grids;fully decentralized combinatorial optimization;economy sharing;Internet of Things democratization;smart grid;smart cities;optimal decision-making;NP-hard problem;generic self-adaptive learning algorithm;iterative economic planning and optimized selections;Big Data;deep learning system;energy management;bicycle sharing;I-EPOS open source software suite;paradigmatic artifact;knowledge exchange;Decision making;Bicycles;Topology;Algorithm design and analysis;Cost function;Smart grids;learning;adaptation;optimization;decentralized system;network;sharing economy;smart grid;smart city},
}

@InProceedings{Maurer2012,
  author    = {M. {Maurer} and I. {Brandic} and R. {Sakellariou}},
  title     = {Self-Adaptive and Resource-Efficient SLA Enactment for Cloud Computing Infrastructures},
  booktitle = {2012 IEEE Fifth International Conference on Cloud Computing},
  year      = {2012},
  pages     = {368-375},
  month     = {June},
  abstract  = {Cloud providers aim at guaranteeing Service Level Agreements (SLAs) in a resource-efficient way. This, amongst others, means that resources of virtual (VMs) and physical machines (PMs) have to be autonomically allocated responding to external influences as workload or environmental changes. Thereby, workload volatility (WV) is one of the crucial factors that influence the quality of suggested allocations. In this paper we devise a novel approach for self-adaptive and resource-efficient decision-making considering the three conflicting goals of minimizing the number of SLA violations, maximizing resource utilization, and minimizing the number of necessary time- and energy-consuming reconfiguration actions. We propose self-adaptive rule-based knowledge management for autonomic VM reconfiguration considering the rapidness of changes in the workload, i.e., WV. We introduce a novel WV categorization and present cost and volatility based methods for self-tuning. We evaluate these methods by a large variety of synthetically generated workloads, and by real-world measurements gathered from an image rendering application and a scientific workflow for RNA sequencing. Evaluation shows that in most cases the self-adaptive approach outperforms the static approach.},
  doi       = {10.1109/CLOUD.2012.55},
  groups    = {ieee},
  issn      = {2159-6190},
  keywords  = {biology computing;cloud computing;decision making;knowledge management;resource allocation;RNA;software fault tolerance;software metrics;virtual machines;self-adaptive SLA enactment;resource-efficient SLA enactment;service level agreements;cloud computing infrastructures;virtual machines;physical machines;resource allocation;workload volatility;self-adaptive decision-making;resource-efficient decision-making;SLA violation minimization;resource utilization maximization;necessary time-consuming reconfiguration action minimization;necessary energy-consuming reconfiguration action minimization;WV categorization;image rendering application;scientific workflow;RNA sequencing;self-adaptive rule-based knowledge management;autonomic VM reconfiguration;Resource management;Argon;Cloud computing;Monitoring;Cost function;Knowledge management;Rendering (computer graphics);Cloud Computing;Autonomic Computing;Self-Adaptation;Service Level Agreement;Rule-based System;Knowledge Management;Resource Management},
}

@InProceedings{Charfi2009,
  author    = {A. {Charfi} and T. {Dinkelaker} and M. {Mezini}},
  title     = {A Plug-in Architecture for Self-Adaptive Web Service Compositions},
  booktitle = {2009 IEEE International Conference on Web Services},
  year      = {2009},
  pages     = {35-42},
  month     = {July},
  abstract  = {Several approaches have been proposed to introduce self-management capabilities for Web service compositions.However, most of these works are limited as they are not extensible, i.e., new self-adaptation features cannot be supported, and even if that is possible then still this cannot be done dynamically while the composite services are running.In addition, many of these works are not based on the service composition standard WS-BPEL. In this paper, we propose a plug-in architecture for self-adaptive Web service composition, in which self-adaptation features are well-modularized in aspect based plug-ins. Our approach supports application-specific adaptation scenarios, is easily extensible, and allows self-adaptation logic to be hot-deployed on running process instances. We have implemented this architecture and several plug-ins using the dynamic aspect-oriented workflow language AO4BPEL.},
  doi       = {10.1109/ICWS.2009.125},
  groups    = {ieee},
  keywords  = {object-oriented programming;software architecture;software fault tolerance;Web services;plug-in architecture;selfadaptive Web service composition;selfmanagement capability;application-specific adaptation scenario;autonomic computing;aspect-oriented programming;fault detection;Service oriented architecture;Web services;Engines;Logic programming;Runtime;Computer architecture;Context-aware services;Monitoring;Dynamic programming;Fault detection;Aspect-Oriented Programming;Autonomic Computing;Self-Healing;Service Composition;BPEL},
}

@InProceedings{Belhaj2018,
  author    = {N. {Belhaj} and D. {Bela?d} and H. {Mukhtar}},
  title     = {Framework for Building Self-Adaptive Component Applications Based on Reinforcement Learning},
  booktitle = {2018 IEEE International Conference on Services Computing (SCC)},
  year      = {2018},
  pages     = {17-24},
  month     = {July},
  abstract  = {Component-based applications entail a composition of heterogeneous components often running in different contexts. The complexity and dynamic nature of their contexts result in an increasing maintenance efforts. Autonomic computing came to provide systems with an autonomic behavior based on predefined policies. However, in addition to being knowledge-intensive, the constructed policies may easily become obsolete due to context changes. Decision policies should be dynamically learned to self-adapt to context dynamics. However, currently built autonomic systems are tailored to specific management needs, neither reusable for other management concerns nor endowed with learning abilities. In this paper, we introduce a generic framework that facilitates building self-adaptive component-based applications. Unlike the existing initiatives, our framework provides means to transform an existing application by equipping it with a self-adaptive behavior to dynamically learn an optimal policy at runtime. To validate our approach, we have developed a realistic application and used the framework to render it self-adaptive. The experimental results have shown a negligible overhead and a dynamic adjustment of the transformed application to its changing context. They have also shown less frequent time spent in SLA (Service Level Agreement) violations during the learning phase and a better performing application after convergence.},
  doi       = {10.1109/SCC.2018.00010},
  groups    = {ieee},
  issn      = {2474-2473},
  keywords  = {learning (artificial intelligence);object-oriented programming;self-adjusting systems;software fault tolerance;software maintenance;reinforcement learning;heterogeneous components;autonomic computing;knowledge-intensive;self-adaptive behavior;maintenance efforts;autonomic systems;self-adaptive component applications;SLA;service level agreement;Containers;Monitoring;Planning;Learning (artificial intelligence);Task analysis;Measurement;Autonomic Computing;Self-Adaptive Decision Making;Component-based Applications;Reinforcement Learning},
}

@InProceedings{Badr2004,
  author    = {N. {Badr} and A. {Taleb-Bendiab} and M. {Randles} and D. {Reilly}},
  title     = {A deliberative model for self-adaptation middleware using architectural dependency},
  booktitle = {Proceedings. 15th International Workshop on Database and Expert Systems Applications, 2004.},
  year      = {2004},
  pages     = {752-756},
  month     = {Sep.},
  abstract  = {A crucial prerequisite to externalized adaptation is an understanding of how components are interconnected, or more particularly how and why they depend on one another. Such dependencies can be used to provide an architectural model, which provides a reference point for externalized adaptation. In this paper, it is described how dependencies are used as a basis to systems' self-understanding and subsequent architectural reconfigurations. The approach is based on the combination of: instrumentation services, a dependency meta-model and a system controller. In particular, the latter uses self-healing repair rules (or conflict resolution strategies), based on extensible beliefs, desires and intention (EBDI) model, to reflect reconfiguration changes back to a target application under examination.},
  doi       = {10.1109/DEXA.2004.1333565},
  groups    = {ieee},
  issn      = {1529-4188},
  keywords  = {middleware;software architecture;software maintenance;self-adjusting systems;self-adaptation middleware;architectural dependency;component interconnection;architectural reconfiguration;instrumentation services;dependency meta-model;system controller;self-healing repair rules;conflict resolution strategy;Middleware;Instruments;Runtime;Condition monitoring;Control systems;Autonomic nervous system;Probes;Acoustical engineering;Mathematical model;Biology computing},
}

@InProceedings{Gey2016,
  author    = {F. {Gey} and D. {Van Landuyt} and W. {Joosen}},
  title     = {Evolving Multi-tenant SaaS Applications through Self-Adaptive Upgrade Enactment and Tenant Mediation},
  booktitle = {2016 IEEE/ACM 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2016},
  pages     = {151-157},
  month     = {May},
  abstract  = {When successful, multi-tenant SaaS applications service many customer organizations (tenants) at once, and SaaS providers face the challenge of complying to the different SLAs of each of these tenants. As a consequence, evolving a SaaS application is in practice done at run time to limit service disruptions, and preferably on a gradual, tenant-per-tenant basis, while taking into account the nature of the upgrade at hand but also these different tenant SLAs. The economic viability and cost-effectiveness of a SaaS offering depends strongly on two principles: (i) maximal automation of its operation, and (ii) self-service: allowing tenant organizations themselves to customize and configure different aspects of the service to their specific needs. In this position paper, we highlight the value of adopting the principles of self-adaptive systems in the design of middleware solutions that support continuous evolution of multi-tenant SaaS applications as a means to implement the first principle. Furthermore, we discuss the additional challenges imposed by the second principle, more specifically for supporting tenant mediation, i.e. introducing human stakeholders such as tenant administrators into the inner control-loop of a self-adaptive system. We present the design of our middleware that addresses these challenges for the specific purpose of evolving multi-tenant SaaS applications, but also discuss the relevance for self-adaptive systems that support stakeholder mediation in general.},
  doi       = {10.1109/SEAMS.2016.025},
  groups    = {ieee},
  keywords  = {cloud computing;middleware;self-adaptive system;tenant administrators;human stakeholders;middleware solution design;tenant organizations;self-service;operation maximal automation;SaaS cost-effectiveness;economic viability;tenant-per-tenant basis;SLA;customer organizations;tenant mediation;self-adaptive upgrade enactment;evolving multitenant SaaS application;Software as a service;Context;Mediation;Organizations;Stakeholders;Cryptography},
}

@InProceedings{Gil2015,
  author    = {R. {Gil}},
  title     = {Automated Planning for Self-Adaptive Systems},
  booktitle = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  year      = {2015},
  volume    = {2},
  pages     = {839-842},
  month     = {May},
  abstract  = {Self-adaptation has been proposed as a viable solution to alleviate the management burden that is induced by the dynamic nature and increasing complexity of computer systems. In this context, architectural-based self-adaptation has emerged as one of the most promising approaches to automatically manage such systems, resorting to a control loop that includes monitoring, analyzing, planning, and executing adequate actions. This work addresses the challenges of adaptation planning -the decision-making process for selecting an appropriate course of action- with a focus on the problem of provisioning automated mechanisms for assembling adaptation plans, as a means to enhance adaptive capabilities under uncertainty. To this purpose, adaptations are modeled in a hierarchical manner, defining primitive actions, guarded actions, and deliberate plans, which may guide the system towards a desired state.},
  doi       = {10.1109/ICSE.2015.273},
  groups    = {ieee},
  issn      = {1558-1225},
  keywords  = {decision making;fault tolerant computing;planning;automated planning;self-adaptive systems;computer systems;architectural-based self-adaptation;system management;control loop;adaptation planning;decision-making process;Planning;Adaptation models;Measurement;Uncertainty;Software;Adaptive systems;Medical services;automated planning;PDDL;self-adaptive;self-management;planning},
}
{G��lvez2018,
  author        = {A. {G��lvez} and A. {Iglesias}},
  title         = {Modified Memetic Self-Adaptive Firefly Algorithm for 2D Fractal Image Reconstruction},
  booktitle     = {2018 IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC)},
  year          = {2018},
  volume        = {02},
  pages         = {165-170},
  month         = {July},
  __markedentry = {[guan:6]},
  abstract      = {This work concerns the problem of 2D fractal image reconstruction with IFS: given a 2D fractal image, the goal is to obtain an IFS whose attractor approximates the input image accurately. This problem is known to be a difficult multivariate nonlinear continuous optimization problem. It is addressed in this paper through a modification of a popular nature-inspired metaheuristics: the firefly algorithm. Our approach, called memetic modified self-adaptive firefly algorithm (MMSA-FFA), enhances the original firefly algorithm with three additional features for better performance: the use of self-adaptation strategies on the control parameters, a new population model based on elitism, and the hybridization with the Luus-Jaakola local search heuristics. The method is applied to two illustrative examples of challenging fractal images comprised of four and forty-four contractive functions, respectively. Our experimental results show that the method performs very well, being able to capture the underlying structure of the fractal images with good visual quality and reasonable CPU times from totally random initial parameters.},
  doi           = {10.1109/COMPSAC.2018.10222},
  issn          = {0730-3157},
  keywords      = {fractals;image reconstruction;optimisation;2D fractal image reconstruction;original firefly algorithm;self-adaptation strategies;modified memetic self-adaptive firefly algorithm;nature-inspired metaheuristics;multivariate nonlinear continuous optimization problem;Luus-Jaakola local search heuristics;Conferences;Software;Two dimensional displays;swarm intelligence, firefly algorithm, fractal geometry, fractal image reconstruction, iterated function systems},
}

@InProceedings{BaowenXu2001,
  author    = {{Baowen Xu} and {Weifeng Zhang} and {Hongji Yang} and W. C. {Chu}},
  title     = {A rough set based self-adaptive Web search engine},
  booktitle = {25th Annual International Computer Software and Applications Conference. COMPSAC 2001},
  year      = {2001},
  pages     = {377-382},
  month     = {Oct},
  abstract  = {Web search engines are very useful information service tools in the Internet. The current Web search engines produce search results relating to the search terms and the actual information collected by them. Since the selections of the search results cannot affect the future ones, they may not cover most people's interests. In the paper, feedback information produced by the users' accessing lists is represented by a rough set and can influence the search results. Thus the search engines can provide self-adaptability.},
  doi       = {10.1109/CMPSAC.2001.960642},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {search engines;Internet;self-adjusting systems;relevance feedback;rough set theory;rough set based self-adaptive Web search engine;WWW;search terms;feedback information;user accessing lists;World Wide Web;Web search;Search engines;Computer science;Output feedback;Web and internet services;Privacy;Laboratories;Software engineering;World Wide Web;IP networks},
}

@InProceedings{Chen2013,
  author    = {T. {Chen} and R. {Bahsoon}},
  title     = {Self-adaptive and sensitivity-aware QoS modeling for the cloud},
  booktitle = {2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2013},
  pages     = {43-52},
  month     = {May},
  abstract  = {Given the elasticity, dynamicity and on-demand nature of the cloud, cloud-based applications require dynamic models for Quality of Service (QoS), especially when the sensitivity of QoS tends to fluctuate at runtime. These models can be autonomically used by the cloud-based application to correctly self-adapt its QoS provision. We present a novel dynamic and self-adaptive sensitivity-aware QoS modeling approach, which is fine-grained and grounded on sound machine learning techniques. In particular, we combine symmetric uncertainty with two training techniques: Auto-Regressive Moving Average with eXogenous inputs model (ARMAX) and Artificial Neural Network (ANN) to reach two formulations of the model. We describe a middleware for implementing the approach. We experimentally evaluate the effectiveness of our models using the RUBiS benchmark and the FIFA 1998 workload trends. The results show that our modeling approach is effective and the resulting models produce better accuracy when compared with conventional models.},
  doi       = {10.1109/SEAMS.2013.6595491},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {autoregressive moving average processes;cloud computing;learning (artificial intelligence);neural nets;quality of service;sensitivity-aware QoS modeling;self-adaptive QoS modeling;cloud computing;cloud-based application;quality of service;QoS provision;machine learning technique;autoregressive moving average with exogenous inputs model;ARMAX model;artificial neural network;ANN;RUBiS benchmark;FIFA 1998 workload trend;Quality of service;Adaptation models;Sensitivity;Accuracy;Uncertainty;Software;Data models;QoS modeling;machine learning;sensitivity;interference;prediction;cloud computing},
}

@InProceedings{Jiuxin2008,
  author    = {C. {Jiuxin} and M. {Bo} and L. {Junzhou}},
  title     = {The Self-Adaptive Framework of Learning Object Based on Context},
  booktitle = {2008 International Conference on Computer Science and Software Engineering},
  year      = {2008},
  volume    = {5},
  pages     = {941-944},
  month     = {Dec},
  abstract  = {U-learning is coming to us. However, it is impossible for the learning object designed for traditional e-learning to be viewed appropriately without modification. In this paper, based on the existing research, a self-adaptive learning object framework is proposed for u-learning. This framework supplies different version of learning object to users according to their learning context which related to access device, network condition, and personal information. We design five versions for the learning object, original, HTML, Simple-HTML, WML, Simple-WML, which are corresponding to different learning context. Meanwhile, a self-adaptive learning object generation method is given based on the metadata K-node, and the conversion between versions of learning object is discussed.},
  doi       = {10.1109/CSSE.2008.153},
  groups    = {ieee},
  keywords  = {computer aided instruction;ubiquitous computing;self-adaptive learning object framework;u-learning context;simple-HTML;metadata K-node;access device;network condition;personal information;simple wireless markup language;Electronic learning;Computer science;Laboratories;Computer networks;Courseware;Cellular phones;Software engineering;Information security;Computer science education;HTML;U-learning;Self-adaptive learning object;Learning context},
}

@InProceedings{Huang2013a,
  author    = {W. {Huang} and W. J. {Knottenbelt}},
  title     = {Self-adaptive containers: Building resource-efficient applications with low programmer overhead},
  booktitle = {2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2013},
  pages     = {123-132},
  month     = {May},
  abstract  = {Despite advances in operating system resource management and the availability of standardised container libraries, developing scalable high-capacity applications remains a nontrivial endeavour. Na?ve implementations of fundamental algorithms often rapidly exhaust system resources under heavy load. Resolving this via manual refactoring is usually possible but requires significant programmer effort, an effort which often has to be repeated in order to meet the resource constraints encountered in each different execution environment. This paper proposes a library of self-adaptive containers which provide a ready route to developing scalable applications with low programmer overhead. Given an execution environment, the library flexibly adapts its use of data structures in an effort to meet programmer-specified service level objectives. The library features a mechanism for tighter functionality specification than that provided by standard container libraries. This enables greater scope for efficiency optimisations, including the exploitation of probabilistic data structures and out-of-core storage. We have demonstrated the capabilities of the proposed library through a prototype implementation in C++. We show that when a Breadth First Search explicit state space exploration algorithm is executed, using the proposed library reduces insertion time by 68.5%, search time by 86.1%, and primary memory usage by 90.1% compared with the Standard Template Library.},
  doi       = {10.1109/SEAMS.2013.6595499},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {data structures;formal specification;operating systems (computers);resource allocation;tree searching;resource-efficient application;programmer overhead;operating system resource management;standardised container libraries;self-adaptive containers library;programmer-specified service level objective;functionality specification;probabilistic data structure;out-of-core storage;C++ language;breadth first search explicit state space exploration algorithm;standard template library;Containers;Libraries;Data structures;Probabilistic logic;Software;Reliability;Time factors;Self-Adaptive Systems;Containers;Standard Template Library;Probabilistic Data Structures},
}

@InProceedings{S.daSilva2018,
  author    = {J. P. {S. da Silva} and M. {Ecar} and M. {S. Pimenta} and G. {T. A. Guedes} and L. P. {Franz} and L. {Marchezan}},
  title     = {A Systematic Literature Review of UML-based Domain-Specific Modeling Languages for Self-Adaptive Systems},
  booktitle = {2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2018},
  pages     = {87-93},
  month     = {May},
  abstract  = {Self-adaptive Systems (SaSs) operate under uncertainty conditions and have intrinsic properties that make their modeling a non-trivial activity. This complexity can be minimized by using Domain-Specific Modeling Languages (DSMLs), which may be created by extending Unified Modeling Language (UML). In face of this, we propose investigating how the UML has been customized to create DSMLs that provide proper support for SaSs modeling. To achieve this, we performed a Systematic Literature Review (SRL) by retrieving studies with snowballing technique, selecting studies according to inclusion and exclusion criteria, and extracting and analyzing data to answer our research questions. As the outcome, we retrieved 786 studies and selected 16 primary studies published between 2005 and 2017. The results reveal that the class diagram has been customized through the profile-based mechanism to provide proper support to analysis and design of context-awareness and self-adaptiveness properties.},
  doi       = {10.1145/3194133.3194136},
  groups    = {ieee},
  issn      = {2157-2305},
  keywords  = {adaptive systems;data analysis;high level languages;Unified Modeling Language;data analysis;self-adaptive systems;UML-based domain-specific modeling languages;unified modeling language;systematic literature review;Unified modeling language;Bibliographies;Adaptation models;Systematics;Data mining;Software engineering;Adaptive systems;Systematic Literature Review (SLR);Snowballing Technique;Self-adaptive Systems (SaS);Domain-Specific Modeling Language (DSML);Unified Modeling Language (UML)},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3194133.3194136},
}

@InProceedings{Dong2008,
  author    = {C. {Dong} and G. {Wang} and Z. {Chen} and Z. {Yu}},
  title     = {A Method of Self-Adaptive Inertia Weight for PSO},
  booktitle = {2008 International Conference on Computer Science and Software Engineering},
  year      = {2008},
  volume    = {1},
  pages     = {1195-1198},
  month     = {Dec},
  abstract  = {The particle swarm optimization algorithm (PSO) has successfully been applied to many engineering optimization problems. However, the most of existing improved PSO algorithms work well only for small-scale problems on low-dimensional space. In this new self-adaptive PSO, a special function, which is defined in terms of the particle fitness, swarm size and the dimension size of solution space, is introduced to adjust the inertia weight adaptively. In a given generation, the inertia weight for particles with good fitness is decreased to accelerate the convergence rate, whereas the inertia weight for particles with inferior fitness is increased to enhance the global exploration abilities. When the swarm size is large, a smaller inertia weight is utilized to enhance the local search capability for fast convergence rate. If the swarm size is small, a larger inertia weight is employed to improve the global search capability for finding the global optimum. For an optimization problem on multi-dimension complex solution space, a larger inertia weight is employed to strengthen the ability to escape from local optima. In case of small dimension size of solution space, a smaller inertia weight is used for reinforcing the local search capability. This novel self-adaptive PSO can greatly accelerate the convergence rate and improve the capability to reach the global minimum for large-scale problems. Moreover, this new self-adaptive PSO exhibits a consistent methodology: a larger swarm size leads to a better performance.},
  doi       = {10.1109/CSSE.2008.295},
  groups    = {ieee},
  keywords  = {convergence;particle swarm optimisation;search problems;self-adaptive inertia weight;PSO;particle swarm optimization algorithm;engineering optimization problem;convergence;local search capability;global search capability;multidimension complex solution space;particle fitness;swarm size;dimension size;Acceleration;Computer science;Particle swarm optimization;Large-scale systems;Equations;Software engineering;Power engineering computing;Microelectronics;Information technology;Educational institutions;PSO;Self-adaptive;Fitness value;Swarm size;Dimension size;Inertia weight},
}

@InProceedings{Lee2017b,
  author    = {H. {Lee} and S. {Lee}},
  title     = {Trust as Soft Security for Self-Adaptive Systems: A Literature Survey},
  booktitle = {2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC)},
  year      = {2017},
  volume    = {2},
  pages     = {523-528},
  month     = {July},
  abstract  = {As the system is deployed in the dynamic environments, the need of self-adaptive system is increasing. In addition, by advancing the network technology, self-adaptive system interacts with other systems to achieve the complex goals, which are difficult to be achieved by single self-adaptive system. During the interaction, they may share security-critical information. As a result, security becomes an important quality attribute of such systems. Especially, comparing with the traditional security approaches, trust is considered as the soft security, which is more light and casual approach. Trust identifies and prevents the security issues with the intuitive and social mechanism. However, there is no major research on the importance of trust evaluation for the self-adaptive systems. In this paper, we systematically survey the trust evaluation studies focusing on the relevance of the self-adaptive systems. Based on the analyzed results, we suggest the future research directions.},
  doi       = {10.1109/COMPSAC.2017.255},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {adaptive systems;security of data;trusted computing;soft security;self-adaptive systems;security-critical information;trust evaluation;Software;Conferences;Trust;Self-Adaptive System;Security},
}

@InProceedings{Wang2016a,
  author    = {H. {Wang} and H. {Zhao} and J. {Li} and S. {Wang} and J. {Wei}},
  title     = {Network architecture self-adaption technology in cognitive radio networks},
  booktitle = {2016 IEEE 27th Annual International Symposium on Personal, Indoor, and Mobile Radio Communications (PIMRC)},
  year      = {2016},
  pages     = {1-6},
  month     = {Sep.},
  abstract  = {In order to improve the connectivity and survivability of Cognitive Radio Networks (CRNs) under complex and vicious communication environment, we propose a network architecture self-adaption technology. The technology enables CRN to switch between three kinds of architectures, i.e., centralized, single-hop ad hoc and cooperative relay in an autonomous and flexible way. This self-adaptive switching can deal with physical breakdown and invalid communication link due to great distance or spectrum heterogeneity, and enhance the network robustness thereby. The work patterns of each architecture and the switching scheme between them were demonstrated, and theoretical switching time was also calculated. Moreover, a testbed based on GNU Radio and USRPs was set up to test its performance including switching time and throughput. Testing results prove the effectiveness of the technology.},
  doi       = {10.1109/PIMRC.2016.7794595},
  groups    = {ieee},
  issn      = {2166-9589},
  keywords  = {cognitive radio;cooperative communication;relay networks (telecommunication);software radio;telecommunication switching;USRP;GNU Radio;network robustness;spectrum heterogeneity;invalid communication link;self-adaptive switching;network architecture self-adaption technology;CRN;cognitive radio networks;Switches;Relays;Computer architecture;Cognitive radio;Network architecture;Land mobile radio;Conferences;Cognitive radio network;network architecture self-adaption;survivability;Universal Software Radio Peripheral (USRP);GNU Radio},
}

@InProceedings{Arboleda2015,
  author    = {H. {Arboleda} and A. {Paz} and M. {Jim��nez} and G. {Tamura}},
  title     = {A framework for the generation and management of self-adaptive enterprise applications},
  booktitle = {2015 10th Computing Colombian Conference (10CCC)},
  year      = {2015},
  pages     = {55-62},
  month     = {Sep.},
  abstract  = {Demand for self-adaptive enterprise applications has been on the rise over the last years. Such applications are expected to satisfy context-dependent quality requirements in varying execution conditions. Their dynamic nature constitutes challenges with respect to their architectural design and development, and the guarantee of the agreed quality scenarios at runtime. In this paper we present the constituting elements of Shift, a framework that integrates (i) facilities and mechanisms for managing self-adaptive enterprise applications, (ii) automated derivation of self-adaptive enterprise applications and their respective monitoring infrastructure, and (iii) decision support for the assisted recomposition of self-adaptive applications.},
  doi       = {10.1109/ColumbianCC.2015.7333412},
  groups    = {ieee},
  keywords  = {business data processing;decision support systems;software architecture;self-adaptive enterprise applications generation;self-adaptive enterprise applications management;context-dependent quality requirements;architectural design;architectural development;quality scenarios;Shift framework;automated derivation;monitoring infrastructure;decision support;Monitoring;Adaptation models;Runtime;Unified modeling language;Context modeling;Concrete;Analytical models;Self-adaptive enterprise applications;software product lines;component configurations},
}

@Article{Wang2018,
  author   = {X. {Wang} and Z. {Feng} and K. {Huang}},
  title    = {D3L-Based Service Runtime Self-Adaptation Using Replanning},
  journal  = {IEEE Access},
  year     = {2018},
  volume   = {6},
  pages    = {14974-14995},
  issn     = {2169-3536},
  abstract = {For business processes based on micro service architecture in an enterprise, failures often occur because of modified business rules or goals, change of service availability, and dynamical running environment. Based on dynamical replanning technologies, these failures can be repaired at runtime. However, semantic conflicts among services from different providers can greatly decrease response efficiency and response success rate of a business goal. In this paper, we propose a novel service runtime self-adaptation framework to decrease response time and raise success rate. Distributed dynamic description logic is utilized to eliminate semantic conflicts among services and provide basic models for carrying out planning among services. Considering inputs, outputs, preconditions, and effects properties of services, local and global planning algorithms based on artificial intelligence graph planning are designed. Local planning can rapidly search a service-based path only including services from a provider, and global planning can try to explore a path including services from multiple providers. Based on these two algorithms, local and global replanning strategies are designed to handle runtime exceptions at service level and path level. We implement a prototype system by means of workflow engine Activiti and business process language BPMN2.0. Experiments show that compared with previous works, our framework can guarantee higher efficiency and success rate.},
  doi      = {10.1109/ACCESS.2018.2810848},
  groups   = {ieee},
  keywords = {business data processing;cloud computing;graph theory;planning (artificial intelligence);service-oriented architecture;Web services;workflow management software;business goal;self-adaptation framework;response time;distributed dynamic description logic;global planning;artificial intelligence graph planning;local planning;multiple providers;local replanning strategies;global replanning strategies;service runtime;business process language BPMN2.0;workflow engine Activiti;response success rate;response efficiency;semantic conflicts;dynamical replanning technologies;dynamical running environment;service availability;modified business rules;microservice architecture;D3L;service level;runtime exceptions;Runtime;Planning;Business;Ontologies;Monitoring;Engines;Semantics;Running self-adaptation;software service;graph planning;D3L;workflow},
}

@InProceedings{Krupitzer2016,
  author    = {C. {Krupitzer} and F. M. {Roth} and M. {Pfannem��ller} and C. {Becker}},
  title     = {Comparison of Approaches for Self-Improvement in Self-Adaptive Systems},
  booktitle = {2016 IEEE International Conference on Autonomic Computing (ICAC)},
  year      = {2016},
  pages     = {308-314},
  month     = {July},
  abstract  = {Various trends such as mobility of devices, Cloud Computing, or Cyber-Physical Systems lead to a higher degree of distribution. These systems-of-systems need to be integrated. The integration of various subsystems still remains a challenge. Self-improvement within self-adaptive systems can help to shift integration tasks from the static design time to the runtime, which fits the dynamic needs of these systems. Thus, it can enable the integration of system parts at runtime. In this paper, we define self-improvement as an adaptation of an Autonomic Computing system's adaptation logic. We present an overview of approaches for self-improvement in the domains of Autonomic Computing and self-adaptive systems. Based on a taxonomy for self-adaptation, we compare the approaches and categorize them. The categorization shows that the approaches focus either on structural or parameter adaptation but seldomly combine both. Based on the categorization, we elaborate challenges, that need to be addressed by future approaches for offering self-improving system integration at runtime.},
  doi       = {10.1109/ICAC.2016.18},
  groups    = {ieee},
  keywords  = {fault tolerant computing;self-adjusting systems;self-improvement;self-adaptive systems;systems-of-systems;autonomic computing;system adaptation logic;self-adaptation;structural adaptation;parameter adaptation;self-improving system integration;Adaptation models;Runtime;Taxonomy;Synthetic aperture sonar;Computer architecture;Context;Robots;Self-Adaptive Systems;Autonomic Computing;Self-Improvement;Comparison},
}

@InProceedings{Zhang2016a,
  author    = {L. {Zhang} and N. {Alharbe} and A. S. {Atkins}},
  title     = {An IoT Application for Inventory Management with a Self-Adaptive Decision Model},
  booktitle = {2016 IEEE International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)},
  year      = {2016},
  pages     = {317-322},
  month     = {Dec},
  abstract  = {Safety storage in large warehouse is an urgent issue to be addressed by both the local authorities and businesses, especially after the Tianjin explosions. This paper proposes an inventory management system for a warehousing company. The system integrates RFID technology and a self-Adaptive distributed decision support model for inbound and outbound actives, inventory location suggestions and incident handling. The model consists of three major components: environment recognition, knowledge merging and the decision making. In addition, a 'self-adaptive' feature is adopted for adjusting the knowledge used in decision making procedure. An experiment is also outlined to validate the utilisations of our model and the proposed system.},
  doi       = {10.1109/iThings-GreenCom-CPSCom-SmartData.2016.77},
  groups    = {ieee},
  keywords  = {decision making;Internet of Things;inventory management;radiofrequency identification;warehousing;IoT application;safety storage;Tianjin explosions;inventory management system;warehousing company;RFID technology;self-adaptive distributed decision support model;outbound actives;inbound actives;inventory location suggestions;incident handling;decision making;Knowledge based systems;Inventory management;Decision making;Radiofrequency identification;Companies;Merging;Distributed Decision Support;Self-adaptive System;RFID;Inventory Management},
}

@InProceedings{Tian2013,
  author    = {D. {Tian} and H. {Luo} and J. {Zhou} and Y. {Wang} and G. {Yu} and {HaiyingXia}},
  title     = {A Self-Adaptive V2V Communication System with DSRC},
  booktitle = {2013 IEEE International Conference on Green Computing and Communications and IEEE Internet of Things and IEEE Cyber, Physical and Social Computing},
  year      = {2013},
  pages     = {1528-1532},
  month     = {Aug},
  abstract  = {Dedicated Short Range Communication (DSRC) standards have been defined as the physical and MAC layers in the context of vehicular communications. In this work, the implementations of IEEE 802.11p and IEEE 1609-family standards developed for DSRC are reviewed firstly, then a novel self-adaptive vehicle to vehicle(V2V) Communication System based on 802.11p is designed in details, which relates the required rebroadcasting frequency to both the underlying vehicular traffic and packet loss characteristics and is able to dynamically adapt its broadcasting frequency to variations in vehicular traffic and network topology in order to reduce the probability of vehicle collision. The real communication experiments are set up and the performances of this proposed system are examined and analyzed in the context of V2V communication for some real different environmental conditions. Results show the notable efficiency and self-adaptability of the system in real world.},
  doi       = {10.1109/GreenCom-iThings-CPSCom.2013.271},
  groups    = {ieee},
  keywords  = {access protocols;road traffic;telecommunication network topology;vehicular ad hoc networks;wireless LAN;self-adaptive V2V communication system;DSRC;dedicated short range communication standard;physical layer;MAC layer;vehicular communication;IEEE 1609-family standard;IEEE 802.11p standard;rebroadcasting frequency;vehicular traffic;packet loss characteristics;network topology;vehicle collision probability reduction;Vehicles;Wireless communication;Delays;Packet loss;Standards;vehicular ad-hoc network;wireless access vehicular environment;802.11p;vehicle to vehicle communication;rear-end collision probability model Introduction},
}

@InProceedings{Zhang2010b,
  author    = {W. {Zhang} and K. M. {Hansen} and J. {Fernandes} and J. {Sch��tte} and F. M. {Lardies}},
  title     = {QoS-Aware Self-adaptation of Communication Protocols in a Pervasive Service Middleware},
  booktitle = {2010 IEEE/ACM Int'l Conference on Green Computing and Communications Int'l Conference on Cyber, Physical and Social Computing},
  year      = {2010},
  pages     = {17-26},
  month     = {Dec},
  abstract  = {Pervasive computing is characterized by heterogeneous devices that usually have scarce resources requiring optimized usage. These devices may use different communication protocols which can be switched at runtime. As different communication protocols have different quality of service (QoS) properties, this motivates optimized self-adaption of protocols for devices, e.g., considering power consumption and other QoS requirements, e.g. round trip time (RTT) for service invocations, throughput, and reliability. In this paper, we present an extensible approach for self-adaptation of communication protocols for pervasive web services, where protocols are designed as reusable connectors and our middleware infrastructure can hide the complexity of using different communication protocols to upper layers. We also propose to use Genetic Algorithms (GAs) to find optimized configurations at runtime to achieve self-adaption of web service transport protocols (TCP, UDP and Blue tooth), taking into consideration QoS requirements. Our tests show that protocol switching involves little performance overhead and runs efficiently. Our evaluations also show that the proposed approach for achieving self-adaptation for communication protocols is effective where optimized configurations of protocols can be obtained with acceptable performance and quality by GAs.},
  doi       = {10.1109/GreenCom-CPSCom.2010.132},
  groups    = {ieee},
  keywords  = {genetic algorithms;middleware;quality of service;transport protocols;ubiquitous computing;Web services;QoS-aware selfadaptation;communication protocols;pervasive service middleware;pervasive Web service transport protocol;genetic algorithms;Protocols;Quality of service;Power demand;Web services;Servers;Switches;Bluetooth;pervasive computing;quality-of-service;self-management},
}

@InProceedings{Qing2017,
  author    = {C. {Qing} and Y. {Hu} and X. {Xu} and W. {Huang}},
  title     = {Image Haze Removal Using Depth-Based Cluster and Self-Adaptive Parameters},
  booktitle = {2017 IEEE International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)},
  year      = {2017},
  pages     = {1070-1075},
  month     = {June},
  abstract  = {Removing haze from a single image is a very challenging problem. In this paper, we propose a new method for dehazing from a single image utilizing cluster segmentation. By using K-means to cluster the depth map and segment into several parts, we obtain several regions with different ranges of depth. Then we present to estimate the flexible attenuation coefficient based on intensity for each regions in order to improve the transmission accuracy. Finally, we modify the transmission by setting several boundaries for different regions to avoid oversaturation. Experimental results on various haze images demonstrate that the proposed algorithm is capable of recovering clear and natural haze-free images.},
  doi       = {10.1109/iThings-GreenCom-CPSCom-SmartData.2017.163},
  groups    = {ieee},
  keywords  = {image segmentation;pattern clustering;image haze removal;self-adaptive parameters;flexible attenuation coefficient;transmission accuracy;depth-based cluster segmentation;K-means algorithm;oversaturation avoidance;natural haze-free image recovery;clear haze-free image recovery;Attenuation;Image segmentation;Mathematical model;Image color analysis;Estimation;Histograms;Atmospheric modeling;single image dehazing;K-means;attenuation coefficient estimation;transmission modification},
}

@InProceedings{Khan2009,
  author    = {O. {Khan} and S. {Kundu}},
  title     = {A self-adaptive system architecture to address transistor aging},
  booktitle = {2009 Design, Automation Test in Europe Conference Exhibition},
  year      = {2009},
  pages     = {81-86},
  month     = {April},
  abstract  = {As semiconductor manufacturing enters advanced nanometer design paradigm, aging and device wear-out related degradation is becoming a major concern. Negative Bias Temperature Instability (NBTI) is one of the main sources of device lifetime degradation. The severity of such degradation depends on the operation history of a chip in the field, including such characteristics as temperature and workloads. In this paper, we propose a system level reliability management scheme where a chip dynamically adjusts its own operating frequency and supply voltage over time as the device ages. Major benefits of the proposed approach are (i) increased performance due to reduced frequency guard banding in the factory and (ii) continuous field adjustments that take environmental operating conditions such as actual room temperature and the power supply tolerance into account. The greatest challenge in implementing such a scheme is to perform calibration without a tester. Much of this work is performed by a hypervisor like software with very little hardware assistance. This keeps both the hardware overhead and the system complexity low. This paper describes the entire system architecture including hardware and software components. Our simulation data indicates that under aggressive wear-out conditions, scheduling interval of days or weeks is sufficient to reconfigure and keep the system operational, thus the run time overhead for such adjustments is of no consequence at all.},
  doi       = {10.1109/DATE.2009.5090637},
  groups    = {ieee},
  issn      = {1558-1101},
  keywords  = {calibration;MOSFET;semiconductor device models;semiconductor device reliability;semiconductor device testing;software architecture;virtual machines;self-adaptive system architecture;transistor aging;system level reliability management scheme;operating frequency;voltage supply;calibration;aggressive wear-out conditions;negative bias temperature instability;device lifetime degradation;semiconductor manufacturing;co-designed virtual machine;hardware components;software components;Aging;Degradation;Hardware;Frequency;Transistors;Semiconductor device manufacture;Nanoscale devices;Negative bias temperature instability;Niobium compounds;Titanium compounds},
}

@InProceedings{Zhou2018a,
  author    = {Z. {Zhou} and X. {Zhang} and Q. {Liu} and Y. {Zhu} and D. {Li} and L. {Guo}},
  title     = {SASD: A Self-Adaptive Stateful Decompression Architecture},
  booktitle = {2018 IEEE Global Communications Conference (GLOBECOM)},
  year      = {2018},
  pages     = {206-212},
  month     = {Dec},
  abstract  = {Due to the increasing threats in the current network environment, many researchers have shifted their interests to network content audit, which combines deep packet inspection and natural language processing. However, the performance of network content audit systems is becoming the bottle-neck because of the demand on processing fast growing compressed traffic. While compressed traffic is often split into multiple out-of-order packets for transmission, stateful decompression ensures that the compressed data are processed in a timely manner without waiting for all the compressed traffic to arrive before decompressing. In the meanwhile, hardware innovations lead to new type of devices being invented, which shows promise to fully handle the offloaded traffic for complex calculations at higher throughput than software-based solutions. We consider both software-based and hardware-based solutions for decompressing traffic from network content audit systems and study the workload. We notice that the performance is data-dependant: hardware-based decompression solutions perform better for longer compressed data than software method. On the contrary, software-based decompressing methods are more preferred for the short content in terms of the processing speed. So there is no one-size-fits-all solution. In this paper, we combine the advantages of hardware and software and propose a novel self-adaptive stateful decompression architecture to support fast decompression in accordance with the traffic status and system state. Experiments on real-world traffic show that our proposed architecture can achieve about three times of the data decompression efficiency, compared to the best pure software and hardware algorithm, which can significantly improve the detection efficiency of many network content audit systems.},
  doi       = {10.1109/GLOCOM.2018.8647636},
  groups    = {ieee},
  issn      = {2576-6813},
  keywords  = {data compression;Internet;telecommunication traffic;self-adaptive stateful decompression architecture;SASD;software-based decompressing methods;offloaded traffic;compressed traffic;network content audit systems;data decompression efficiency;traffic status;Hardware;Software;Computer architecture;Monitoring;Industries;Security;Protocols},
}

@InProceedings{Dustdar2009,
  author    = {S. {Dustdar} and K. M. {Goeschka} and H. {Truong} and U. {Zdun}},
  title     = {Self-Adaptation Techniques for Complex Service-oriented Systems},
  booktitle = {2009 Fifth International Conference on Next Generation Web Services Practices},
  year      = {2009},
  pages     = {37-43},
  month     = {Sep.},
  abstract  = {Complex service-oriented systems comprise humans and software services spanning multiple organizations. These systems are highly dynamic, because services, processes, and teams are not only diverse but they also constantly evolve. Therefore, these systems introduce a variety of challenges on how to adapt services, processes, and teams to changing situations. We contribute with our approach to address these challenges, comprising model-driven compliance support, run-time interaction mining, run-time management of requirements, and an explicit control-loop architecture. We conclude with remaining issues the software and service engineering research community should address.},
  doi       = {10.1109/NWeSP.2009.12},
  groups    = {ieee},
  keywords  = {software architecture;self-adaptation techniques;complex service-oriented systems;control-loop architecture;software services;model-driven compliance support;run-time interaction mining;Runtime;Humans;Web services;Monitoring;Computer architecture;Collaboration;Unified modeling language;Service oriented architecture;Adaptive systems;Plasma welding;self-adaptation;service-oriented architectures;interaction-mining;model-driven compliance},
}

@InProceedings{Hachicha2018,
  author    = {M. {Hachicha} and R. B. {Halima} and A. H. {Kacem}},
  title     = {Formalizing compound MAPE patterns for decentralized control in self-adaptive systems},
  booktitle = {2018 12th International Conference on Research Challenges in Information Science (RCIS)},
  year      = {2018},
  pages     = {1-10},
  month     = {May},
  abstract  = {Self-adaptive systems are able to adjust au-tonomously their behavior when the software or hardware is not accomplishing what it is intended to do. The MAPE control loop, based on the following components: Monitor, Analyze, Plan and Execute, is a prominent approach for realizing adaptation. Engineering complex self-adaptive systems needs the use of several architectural patterns in a composed form in their designs. In this paper, we focus on modeling compound MAPE patterns for decentralized control in self-adaptive systems and defining formally the composition process using the Event-B method. The composition of design patterns is illustrated by the composition of the master/slave and the coordinated control patterns.},
  doi       = {10.1109/RCIS.2018.8406680},
  groups    = {ieee},
  issn      = {2151-1357},
  keywords  = {adaptive systems;decentralised control;large-scale systems;multi-agent systems;object-oriented methods;self-adjusting systems;software architecture;compound MAPE patterns;decentralized control;MAPE control loop;engineering complex self-adaptive systems;architectural patterns;design patterns;coordinated control patterns;composition process;Event-B method;Compounds;Merging;Monitoring;Unified modeling language;Decentralized control;Software;Process control},
}

@InProceedings{Ramakrishnan2009,
  author    = {S. {Ramakrishnan}},
  title     = {On Self-Adaptive Process-Based Dependable Web Service Composition},
  booktitle = {2009 Computation World: Future Computing, Service Computation, Cognitive, Adaptive, Content, Patterns},
  year      = {2009},
  pages     = {173-179},
  month     = {Nov},
  abstract  = {Service-oriented architecture is an architectural style that allows functionalities to be grouped around business processes as interoperable services. Web service compositions, as part of service-oriented architecture, have to be managed to create software services with guaranteed service levels. Situations arise where an appropriate partner service is not available or reliable. These dependability issues need to be taken into account when integrating a number of external services into a business process. With the growing awareness of environmental agenda, manufacturing enterprises are starting to internalize environmental aspects of their businesses. Reducing the environmental impact of manufacturing processes to meet local environmental regulations and to conform to evolving international standards and best practices contributes to the practice of an adaptive green manufacturing method. In such enterprise systems, the bindings among services must be defined dynamically for providing adaptive business processes for service quality. Managing the automation of web service composition is best handled using autonomic concepts. In this paper, we focus on self-adaptive process and dependability aspects of web service composition, discuss some of the research happening in this challenging field, and present our ongoing work on a dynamically evolvable (self-adaptive) and dependable green manufacturing process for Life Cycle Assessment (LCA) in a service-oriented context for an automotive component.},
  doi       = {10.1109/ComputationWorld.2009.12},
  groups    = {ieee},
  keywords  = {automobile industry;automotive components;business process re-engineering;environmental factors;open systems;software architecture;Web services;self-adaptive process;Web service composition;service-oriented architecture;interoperable services;business process;manufacturing enterprises;environmental aspects;enterprise systems;life cycle assessment;automotive component;Web services;Service oriented architecture;Runtime;Control systems;Manufacturing processes;Programmable control;Adaptive control;Quality of service;Application software;Adaptive systems;self-adaptive;service dependability;QOS},
}

@Article{Wu2008b,
  author   = {Q. {Wu} and J. {Gao} and M. {Zhu} and N. S. V. {Rao} and J. {Huang} and S. {Iyengar}},
  title    = {Self-Adaptive Configuration of Visualization Pipeline Over Wide-Area Networks},
  journal  = {IEEE Transactions on Computers},
  year     = {2008},
  volume   = {57},
  number   = {1},
  pages    = {55-68},
  month    = {Jan},
  issn     = {1557-9956},
  abstract = {Next-generation scientific applications require the capability to visualize large archival data sets or on-going computer simulations of physical and other phenomena over wide-area network connections. To minimize the latency in interactive visualizations across wide-area networks, we propose an approach that adaptively decomposes and maps the visualization pipeline onto a set of strategically selected network nodes. This scheme is realized by grouping the modules that implement visualization and networking subtasks and mapping them onto computing nodes with possibly disparate computing capabilities and network connections. Using estimates for communication and processing times of subtasks, we present a polynomial-time algorithm to compute a decomposition and mapping to achieve minimum end-to-end delay of the visualization pipeline. We present experimental results using geographically distributed deployments to demonstrate the effectiveness of this method in visualizing data sets from three application domains.},
  doi      = {10.1109/TC.2007.70777},
  groups   = {ieee},
  keywords = {computer networks;data visualisation;pipeline processing;polynomials;self-adaptive configuration;visualization pipeline;wide-area networks;interactive visualizations;network connections;polynomial-time algorithm;end-to-end delay;geographically distributed deployments;Data visualization;Pipelines;Electronic mail;Middleware;Computational modeling;Computer science;Dynamic programming;Adaptation model;Data communication;Distributed databases;Visualization systems and software;Distributed systems;Remote systems;Visualization systems and software;Distributed systems;Remote systems},
}

@Article{Dutta2018,
  author   = {U. K. {Dutta} and M. A. {Razzaque} and M. {Abdullah Al-Wadud} and M. S. {Islam} and M. S. {Hossain} and B. B. {Gupta}},
  title    = {Self-Adaptive Scheduling of Base Transceiver Stations in Green 5G Networks},
  journal  = {IEEE Access},
  year     = {2018},
  volume   = {6},
  pages    = {7958-7969},
  issn     = {2169-3536},
  abstract = {In this paper, we design self-adaptive scheduling (SAS) algorithms for base transceiver stations (BTSs) of 5G networks to improve energy efficiency, reduce carbon footprint, and develop a self-sustainable green cellular network. In the SAS algorithm, a BTS switches among its operating states (active, turned-off, and sleep), thereby exploiting the traffic loads of the BTS and the single-hop neighbor BTSs thereof. The dynamic settings of traffic thresholds help the SAS system in achieving a high degree of cooperation among the neighborhood BTSs, which in turn increases the energy savings of the network. Each active SAS BTS independently and dynamically decides in determining its operation state, thus make our proposed SAS algorithms fully distributed. Results from a simulation conducted in network simulator version 3 show that BTS scheduling significantly influences cellular networks, and the proposed SAS algorithm can significantly increase the energy savings compared with state-of-the-art protocols.},
  doi      = {10.1109/ACCESS.2018.2799603},
  groups   = {ieee},
  keywords = {5G mobile communication;cellular radio;energy conservation;radio transceivers;telecommunication power management;telecommunication scheduling;telecommunication traffic;base transceiver stations;green 5G networks;energy efficiency;carbon footprint;self-sustainable green cellular network;SAS algorithm;traffic loads;dynamic settings;traffic thresholds;energy savings;operation state;BTS scheduling;network simulator version 3;self-adaptive scheduling algorithms;single-hop neighbor BTS;Telecommunication traffic;Synthetic aperture sonar;Heuristic algorithms;5G mobile communication;Cellular networks;Energy consumption;Algorithm design and analysis;5G mobile communication;green design;adaptive scheduling},
}

@InProceedings{Nichols2004,
  author    = {J. {Nichols} and T. {Bapty}},
  title     = {A model-based self-adaptive approach to image processing},
  booktitle = {Proceedings. 11th IEEE International Conference and Workshop on the Engineering of Computer-Based Systems, 2004.},
  year      = {2004},
  pages     = {456-461},
  month     = {May},
  abstract  = {Implementing image-processing systems can require significant effort and resources due to information volume and algorithm complexity. Model integrated computing (MIC) based image processing systems show promise in supporting solutions of these complex problems. While MIC has contributed to the advancement of performing complex image processing tasks on parallel-embedded systems, it has not addressed a challenging class of algorithms that adapt the image-processing algorithm based on the information or state of the image processing system. This proposed effort addresses creating an adaptive image-processing environment based on MIC that allows solutions of complex image processing problems to be built and executed rapidly. This effort involves creating a new modeling representation for image processing adaptation mechanisms. The proposed MIC-based adaptive image-processing environment generates a solution given the modeling constraints and executes it on a number of hardware architectures.},
  doi       = {10.1109/ECBS.2004.1316732},
  groups    = {ieee},
  keywords  = {computational complexity;image sequences;embedded systems;self-adjusting systems;feedback;image representation;computer architecture;parallel processing;model integrated computing;image processing systems;parallel-embedded systems;adaptive image-processing environment;hardware architectures;model-based self-adaptive approach;Image processing;Conferences;Systems engineering and theory},
}

@Article{Ye2018,
  author   = {D. {Ye} and M. {Zhang}},
  title    = {A Self-Adaptive Sleep/Wake-Up Scheduling Approach for Wireless Sensor Networks},
  journal  = {IEEE Transactions on Cybernetics},
  year     = {2018},
  volume   = {48},
  number   = {3},
  pages    = {979-992},
  month    = {March},
  issn     = {2168-2275},
  abstract = {Sleep/wake-up scheduling is one of the fundamental problems in wireless sensor networks, since the energy of sensor nodes is limited and they are usually unrechargeable. The purpose of sleep/wake-up scheduling is to save the energy of each node by keeping nodes in sleep mode as long as possible (without sacrificing packet delivery efficiency) and thereby maximizing their lifetime. In this paper, a self-adaptive sleep/wake-up scheduling approach is proposed. Unlike most existing studies that use the duty cycling technique, which incurs a tradeoff between packet delivery delay and energy saving, the proposed approach, which does not us duty cycling, avoids such a tradeoff. The proposed approach, based on the reinforcement learning technique, enables each node to autonomously decide its own operation mode (sleep, listen, or transmission) in each time slot in a decentralized manner. Simulation results demonstrate the good performance of the proposed approach in various circumstances.},
  doi      = {10.1109/TCYB.2017.2669996},
  groups   = {ieee},
  keywords = {telecommunication power management;telecommunication scheduling;wireless sensor networks;sleep mode;self-adaptive sleep/wake-up scheduling approach;wireless sensor networks;Wireless sensor networks;Delays;Receivers;Job shop scheduling;Routing protocols;Radio transmitters;Self-adaptation;sleep/wake-up scheduling;wireless sensor networks (WSNs);Algorithms;Computer Simulation;Conservation of Energy Resources;Models, Theoretical;Signal Processing, Computer-Assisted;Wireless Technology},
}

@InProceedings{Vassev2014,
  author    = {E. {Vassev} and M. {Hinchey}},
  title     = {Autonomy Requirements Engineering for Self-Adaptive Science Clouds},
  booktitle = {2014 IEEE International Parallel Distributed Processing Symposium Workshops},
  year      = {2014},
  pages     = {1344-1353},
  month     = {May},
  abstract  = {Self-adaptive clouds extend upstream the regular cloud platforms with special autonomy features dedicated to handling increasing workload and service failures. The identification of such features is not necessarily an easy task. Sometimes those can be explicitly stated by QoS requirements or in preliminary material available to requirements engineers. Often though, they are implicit so that autonomy features capturing has to be undertaken. This paper elaborates on a methodology of capturing autonomy requirements for self-adaptive clouds with ARE, the Autonomy Requirements Engineering approach. In this approach, autonomy features are detected as special self-* objectives backed up by different capabilities and quality characteristics.},
  doi       = {10.1109/IPDPSW.2014.151},
  groups    = {ieee},
  keywords  = {cloud computing;formal specification;natural sciences computing;quality of service;self-adaptive science clouds;workload handling;service failures;feature identification;QoS requirements;ARE;autonomy feature detection;self-* objectives;autonomy requirements engineering;Cloud computing;Adaptation models;Unified modeling language;Memory;Virtual machining;Computational modeling;Natural languages;self-adaptive clouds;autonomy requirements;autonomic systems},
}

@Article{Xue2019,
  author   = {Y. {Xue} and T. {Tang} and A. X. {Liu}},
  title    = {Large-Scale Feedforward Neural Network Optimization by a Self-Adaptive Strategy and Parameter Based Particle Swarm Optimization},
  journal  = {IEEE Access},
  year     = {2019},
  volume   = {7},
  pages    = {52473-52483},
  issn     = {2169-3536},
  abstract = {Feedforward neural network (FNN) is one of the most widely used and fastest-developed artificial neural networks. Much evolutionary computation (EC) methods have been used to optimize the weights of FNN. However, as the dimension of datasets increases, the number of weights also increases dramatically. On high-dimensional datasets, if EC methods are used directly to optimize the weights of FNN, it is impossible to obtain the optimal weights of the FNN by EC methods in an acceptable time. Feature selection is a method that can effectively reduce the computational complexity of FNN by reducing irrelevant and redundant features. It may be practical to optimize the FNN by EC methods if we first employ the feature selection for the large-scale datasets. In this paper, we present a self-adaptive parameter and strategy-based particle swarm optimization (SPS-PSO) algorithm to optimize FNN with feature selection. First, we propose an optimization model for FNN by transforming the designing of FNN into a weights optimization problem. Simultaneously, we present a feature selection optimization model. Second, we present an SPS-PSO algorithm. In this algorithm, we use the parameter and strategy self-adaptive mechanism. In addition, five candidate solution generating strategies (CSGS) are used. The experiments are divided into two groups. In the first group, SPS-PSO and three other EC methods are used to directly optimize the weights of FNN on eight datasets without any modification. In the second group, we first employ SPS-PSO-based feature selection on the original datasets and obtain eight relatively smaller datasets with the k-nearest neighbor (KNN) which is used as the evaluation function for saving time. Then, we use the new datasets as the inputs for FNN. We optimize the weights of FNN again by SPS-PSO and three other EC methods to investigate whether we can get similar or even better classification accuracy by comparing the results with that of the first group. The experimental results show that SPS-PSO has the advantage in optimizing the weights of FNN compared with the other EC methods. Meanwhile, the SPS-PSO-based feature selection can reduce the solution size and computational complexity while ensuring the classification accuracy when it is used to preprocess the datasets for FNN. In this method, a solution with an originally higher than 700 000 dimensions can be even reduced to hundreds of dimensions.},
  doi      = {10.1109/ACCESS.2019.2911530},
  groups   = {ieee},
  keywords = {computational complexity;evolutionary computation;feature selection;feedforward neural nets;particle swarm optimisation;FNN;EC methods;SPS-PSO-based feature selection;scale feedforward neural network optimization;optimal weights;strategy-based particle swarm optimization algorithm;weights optimization problem;feature selection optimization model;high-dimensional datasets;k-nearest neighbor;classification accuracy;Optimization;Feature extraction;Particle swarm optimization;Genetic algorithms;Feedforward neural networks;Computational complexity;Classification;evolutionary computation;feature selection;feedforward neural networks;self-adaptive;parameter adaptation;particle swarm optimization},
}

@InProceedings{BoxueWang2014,
  author    = {{Boxue Wang} and {Xinhuai Tang}},
  title     = {Designing a self-adaptive and context-aware service composition system},
  booktitle = {2014 IEEE Computers, Communications and IT Applications Conference},
  year      = {2014},
  pages     = {155-160},
  month     = {Oct},
  abstract  = {Web service compositions run in changing environment where different context events can arise to affect the execution of services. In order not to make service execution affected by context events, context-aware service composition becomes one of the major research trends. Service providers can develop context-aware services which can adapt their behaviors dynamically to execution contexts. However, it burdens service providers because they have to keep in mind different execution contexts where their services could be used. In this paper, we design and implement a self-adaptive and context-aware service composition system which can adapt to changing execution contexts and make adjustments according to context events and user-defined personalized policies. It frees service providers from context handling which in turn becomes a task of our system. We use OWL to model context ontologies and extend the OWL-S service model to support context information. Policy is a user-defined adjustment strategy to guide the dynamic adaptation. Service consumers can submit their requests and get context-aware services. Our system can composite services according to service consumers' requests, execute services, monitor execution contexts and adjust its action when contexts change.},
  doi       = {10.1109/ComComAp.2014.7017188},
  groups    = {ieee},
  keywords  = {ontologies (artificial intelligence);Web services;self-adaptive context-aware service composition system;Web service composition;service execution;execution context;service providers;user-defined personalized policy;Web ontology language;context ontologies;OWL-S service model;context information;service consumers;Context;Motion pictures;Ontologies;Context-aware services;Engines;Databases;Middleware;self-adaptive;context-aware;service composition;policy},
}

@Article{Ye2015,
  author   = {D. {Ye} and M. {Zhang}},
  title    = {A Self-Adaptive Strategy for Evolution of Cooperation in Distributed Networks},
  journal  = {IEEE Transactions on Computers},
  year     = {2015},
  volume   = {64},
  number   = {4},
  pages    = {899-911},
  month    = {April},
  issn     = {1557-9956},
  abstract = {This paper studies the phenomenon of the evolution of cooperation in distributed networks by using an iterated game. An iterated game in a distributed network is a multiple round game, where in each round, a player gains a payoff by playing a game with its neighbours and updates its action based on the actions and/or payoffs of its neighbours. The interaction model between players is usually represented as a two-player, two-action (namely cooperation and defection) Prisoner's Dilemma game (which is a prototypical model for interaction between selfish individuals). Many researchers have developed strategies (also called update rules) for the evolution of cooperation in distributed networks in order to enhance cooperation, i.e., to increase the proportion of cooperators. Experimental results reported in the current literature, however, have demonstrated that each of these strategies has both advantages and disadvantages. In this paper, a self-adaptive strategy is proposed for the evolution of cooperation in distributed networks, which can utilise the strengths and avoid the limitations of existing strategies. Moreover, we have a theoretical finding about the final proportion of cooperators, evolved by any pure (or deterministic) strategies, in four types of a game. This finding is independent of the initial proportion of cooperators, the topology of the network (e.g., a small-world network or a scale-free network), and the specific game (e.g., the Prisoner's Dilemma game or the Snow Drift game).},
  doi      = {10.1109/TC.2014.2308188},
  groups   = {ieee},
  keywords = {distributed algorithms;game theory;self-adaptive strategy;cooperation evolution;distributed networks;iterated game;multiple round game;defection;Prisoner dilemma game;update rules;Games;Evolution (biology);Knowledge based systems;Probability distribution;Network topology;Topology;Snow;Evolution of cooperation;self-adaptation;distributed networks},
}

@InProceedings{Li2017a,
  author    = {G. {Li} and I. {?vogor} and G. {Beltrame}},
  title     = {Self-adaptive pattern formation with battery-powered robot swarms},
  booktitle = {2017 NASA/ESA Conference on Adaptive Hardware and Systems (AHS)},
  year      = {2017},
  pages     = {253-260},
  month     = {July},
  abstract  = {This paper presents a distributed, energy-aware algorithm for an autonomous deployment of battery-powered robots in a specified pattern. While each robot gradually discharges and leaves the formation to recharge, the algorithm presented in this paper assures that the formation pattern is preserved. This is achieved by defining the desired pattern as a point cloud where each point is occupied by a robot. The point cloud is transformed into a tree model that is shared among all robots. This model is used by each robot independently to govern its behavior, resulting in a self-adaptive network of robots which automatically generate paths for joining the formation and leaving it to recharge. Robots which leave the formation are replaced by neighbors to preserve the formation pattern. To demonstrate our algorithm we use a physics-based simulator and evaluate the persistence of the pattern formation formed by a robot swarm in an environment without global positioning, using only range and bearing.},
  doi       = {10.1109/AHS.2017.8046386},
  groups    = {ieee},
  issn      = {2471-769X},
  keywords  = {mobile robots;multi-robot systems;position control;self-adjusting systems;self-adaptive pattern formation;battery-powered robot swarms;energy-aware algorithm;autonomous deployment;battery-powered robots;formation pattern;point cloud;tree model;self-adaptive network;physics-based simulator;global positioning;Robot kinematics;Pattern formation;Three-dimensional displays;Robot sensing systems;Charging stations;Convergence},
}

@Article{Qiu2020,
  author   = {T. {Qiu} and S. {Zhang} and W. {Si} and Q. {Cao} and M. {Atiquzzaman}},
  title    = {A 3D Topology Evolution Scheme with Self-Adaption for Industrial Internet of Things},
  journal  = {IEEE Internet of Things Journal},
  year     = {2020},
  pages    = {1-1},
  issn     = {2327-4662},
  abstract = {The complex factory environment of the Industrial Internet of Things (IIoT) greatly increases the energy consumption of sensor nodes and reduces production profits. Especially in mines, the terrain will change continuously as the mining progresses. Additionally, heavy traffic load on a single sink node and unbalanced load on multiple sink nodes also reduce battery life. Therefore, how to build an energy-efficient topology based on the unique mine terrain characteristics is a critical issue. To address this problem, this paper proposes a three-dimensional Topology Evolution Scheme with Self-Adaption for mining areas (3D-TES) to reduce energy consumption. We build the multi-peak terrain model according to the characteristics of the mining environment. Blocked by the undulating peaks on the mine, the strength of the node signal is quantified by the slope and aspect. The 3D-TES is then applied to determine the optimal number of sink nodes and find the best data transmission path between sensor nodes and multiple sink nodes. The experiment results show that 3D-TES outperforms the Directed Angulation toward the Sink Node Model (DASM) in terms of reliability, average path length, and data load on sink nodes.},
  doi      = {10.1109/JIOT.2020.2986277},
  groups   = {ieee},
  keywords = {Network topology;Topology;Energy consumption;Data communication;Mathematical model;Internet of Things;Electronic mail;Industrial Internet of Things;multi-sink network;self-adaptive terrain;three-dimensional topology evolution.},
}

@InProceedings{Gomes2014,
  author    = {T. {Gomes} and G. {Valadas} and A. {Z��quete} and S. {Sargento}},
  title     = {Self-adapted protocol for intra and inter-echelons communications},
  booktitle = {2014 16th International Telecommunications Network Strategy and Planning Symposium (Networks)},
  year      = {2014},
  pages     = {1-7},
  month     = {Sep.},
  abstract  = {Nowadays, both military and civil emergency scenarios demand shared-situation awareness between the front-line elements, in order to maximize the effectiveness of the operations. This requires a communication system based on mechanisms that self-adapt to dynamic conditions and that are able to work under heterogeneous networks. The proposed Cognitive Routable Ad-hoc Network (CRAN) protocol allows efficient and distributed information sharing within the same hierarchy and between distinct hierarchical levels. The CRAN mechanisms contain the control plane, which includes the discovery mechanism and the autonomous adaptation when topology changes, and the data plane, which is responsible to forward tactical messages within the platoon. The evaluation results show that CRAN provides a fast knowledge forwarding with high message delivery and requires small bandwidth. This ensures real-time situation updates, improving operational reality awareness and more accurate decisions, improving the overall operation results.},
  doi       = {10.1109/NETWKS.2014.6958536},
  groups    = {ieee},
  keywords  = {ad hoc networks;cognitive radio;military communication;routing protocols;self-adapted protocol;intraechelons communications;interechelons communications;shared-situation awareness;heterogeneous networks;cognitive routable ad-hoc network;CRAN protocol;data plane;tactical messages;operational reality awareness;Topology;Network topology;Routing protocols;Ad hoc networks;Bandwidth;Command and control systems},
}

@InProceedings{Xue2017,
  author    = {Y. {Xue} and J. {Jiang} and B. {Xue} and M. {Zhang}},
  title     = {A classification method based on self-adaptive artificial bee colony},
  booktitle = {2017 IEEE Symposium Series on Computational Intelligence (SSCI)},
  year      = {2017},
  pages     = {1-8},
  month     = {Nov},
  abstract  = {Evolutionary computation (EC) techniques have become popular for solving different problems because they have powerful global search ability. Artificial bee colony (ABC) is a kind of EC techniques proposed for optimization problems. In this paper, in order to take the advantage of the global search ability of ABC to solve classification problems, a basic classification model is described, and three extended classification models are proposed based on the basic model so that classification problems can be conveniently solved by ABC. In the basic classification model, a nonhomogeneous linear equation set is firstly constructed based on the training set. Then, an objective function, which can be solved by ABC, is proposed based on the equation set. This basic classification model is extensible and three extended classification models are proposed in this paper. In order to solve the classification models efficiently, a new self-adaptive artificial bee colony with symmetry initialization (SABC-SI) algorithm, which employs a symmetry initialization method and a new selection operator, is proposed. Besides, a self-adaptive search mechanism and several new candidate solution generation strategies (CSGSs) have also been developed. We conducted experiments on eight datasets chosen from the UCI Machine Learning Repository. The experimental results show that SABC-SI can be directly used for classification by solving the classification models, and achieve good classification accuracy.},
  doi       = {10.1109/SSCI.2017.8285232},
  groups    = {ieee},
  keywords  = {ant colony optimisation;evolutionary computation;learning (artificial intelligence);pattern classification;search problems;evolutionary computation techniques;ABC;optimization problems;basic classification model;extended classification models;nonhomogeneous linear equation set;self-adaptive search mechanism;global search ability;self-adaptive artificial bee colony with symmetry initialization algorithm;SABC-SI algorithm;UCI machine learning repository;candidate solution generation strategies;selection operator;Mathematical model;Optimization;Training;Sociology;Statistics;Search problems;Adaptation models;Artificial bee colony;self-adaptive;optimization;classification},
}

@InProceedings{Lyu2014,
  author    = {Z. {Lyu} and S. {Zhao} and C. {Yue} and X. {Pei} and H. {Liang}},
  title     = {Self adaptive skipping levels based on the l1-tracker},
  booktitle = {2014 12th International Conference on Signal Processing (ICSP)},
  year      = {2014},
  pages     = {1139-1144},
  month     = {Oct},
  abstract  = {Object tracking is a critical task which could be used in many applications. The minimum error based l1-tracker is one of the classical tracking algorithms. However, the l1-tracker tracks the target frame-by-frame without considering the continuity of the video. In this paper, a novel improved l1-tracker, Self Adaptive Skipping Levels (SASL), has been proposed. The proposed method takes into consideration the situations in which the matching rate is on tracking by the l1-tracker. If the matching rate is high, it shows that the scene of the video is changing slowly, and then some adjacent frames are skipped for reducing the time consuming. On the other hand, if the matching rate is low, we think the scene of the video changes sharply. In this situation, we have to reduce the skipping level to ensure the matching rate. The experimental results show the excellent performance in comparison with the traditional frame to frame algorithm.},
  doi       = {10.1109/ICOSP.2014.7015180},
  groups    = {ieee},
  issn      = {2164-523X},
  keywords  = {object tracking;video surveillance;self adaptive skipping levels;SASL;minimum error based l1-tracker;matching rate;visual surveillance;object tracking;Target tracking;Algorithm design and analysis;Lighting;Visualization;Accuracy;Video sequences;Prediction algorithms;Visual tracking;self adaptive skipping level;smooth of the video},
}
{Fern��ndezMaim��2018,
  author        = {L. {Fern��ndez Maim��} and ��. L. {Perales G��mez} and F. J. {Garc��a Clemente} and M. {Gil P��rez} and G. {Mart��nez P��rez}},
  title         = {A Self-Adaptive Deep Learning-Based System for Anomaly Detection in 5G Networks},
  journal       = {IEEE Access},
  year          = {2018},
  volume        = {6},
  pages         = {7700-7712},
  issn          = {2169-3536},
  __markedentry = {[guan:6]},
  abstract      = {The upcoming fifth-generation (5G) mobile technology, which includes advanced communication features, is posing new challenges on cybersecurity defense systems. Although innovative approaches have evolved in the last few years, 5G will make existing intrusion detection and defense procedures become obsolete, in case they are not adapted accordingly. In this sense, this paper proposes a novel 5G-oriented cyberdefense architecture to identify cyberthreats in 5G mobile networks efficient and quickly enough. For this, our architecture uses deep learning techniques to analyze network traffic by extracting features from network flows. Moreover, our proposal allows adapting, automatically, the configuration of the cyberdefense architecture in order to manage traffic fluctuation, aiming both to optimize the computing resources needed in each particular moment and to fine tune the behavior and the performance of analysis and detection processes. Experiments using a well-known botnet data set depict how a neural network model reaches a sufficient classification accuracy in our anomaly detection system. Extended experiments using diverse deep learning solutions analyze and determine their suitability and performance for different network traffic loads. The experimental results show how our architecture can self-adapt the anomaly detection system based on the volume of network flows gathered from 5G subscribers' user equipments in real-time and optimizing the resource consumption.},
  doi           = {10.1109/ACCESS.2018.2803446},
  keywords      = {5G mobile communication;computer network security;invasive software;learning (artificial intelligence);neural nets;security of data;telecommunication traffic;cybersecurity defense systems;intrusion detection;cyberdefense architecture;deep learning techniques;neural network model;self-adaptive deep learning-based system;anomaly detection;5G mobile networks;network traffic analysis;botnet data;Anomaly detection;5G mobile communication;Machine learning;Botnet;Computer architecture;Feature extraction;5G;anomaly detection;botnets;deep learning;performance evaluation},
}

@InProceedings{Cui2012,
  author    = {Y. {Cui} and R. M. {Voyles} and M. {He} and G. {Jiang} and M. H. {Mahoor}},
  title     = {A self-adaptation framework for resource constrained miniature search and rescue robots},
  booktitle = {2012 IEEE International Symposium on Safety, Security, and Rescue Robotics (SSRR)},
  year      = {2012},
  pages     = {1-6},
  month     = {Nov},
  abstract  = {The size of miniature urban search and rescue robots forces constraints on critical resources such as power, space, and computational ability. To alleviate the effect of resource constraints, it is prudent to let robots adapt themselves autonomously in reaction to unforeseen conditions in disaster area. Software adaptation has been the goal of many researchers, but hardware adaptation is an important aspect, too. In this paper, we present a self-adaptation framework for heterogeneous multi-robot collectives, which consists of partial dynamic reconfiguration for hardware adaptation, module migration for software adaptation, and task performance evaluation to enable autonomous adaptation. These things taken together represent an Embedded Virtual Machine for hardware/software task migration. Our Morphing Crossbar structure, which interconnects reusable hardware modules, is presented to increase the partial dynamic reconfiguration performance. Combined with the runtime downloading and installation of reusable software modules based on the port-based object framework in our PBO/RT realtime operating system, high-performance, heterogeneous, runtime adaptation of hardware/software real-time computational systems is achieved. The adaptation evaluators provide the ability of robotic systems to self-diagnose and self-adapt with an appropriate, distributed configuration monitor. We have implemented this self-adaptation framework in our RecoNode CPU node. By using RecoNode-based CRAWLER and HexRotor robots, an application scenario is presented in order to show the feasibility of this framework.},
  doi       = {10.1109/SSRR.2012.6523874},
  groups    = {ieee},
  keywords  = {disasters;embedded systems;emergency management;mobile robots;multi-robot systems;performance evaluation;real-time systems;service robots;virtual machines;resource constrained miniature search and rescue robots;resource constraints;disaster area;hardware adaptation;self-adaptation framework;heterogeneous multirobot collectives;software adaptation;task performance evaluation;embedded virtual machine;morphing crossbar structure;reusable hardware modules;partial dynamic reconfiguration performance evaluation;runtime downloading;reusable software module installation;port-based object framework;PBO/RT real-time operating system;real-time computational systems;RecoNode CPU node;RecoNode-based CRAWLER robots;RecoNode-based HexRotor robots;RTOS;adaptation;EVM;partial dynamic reconfiguration;task migration},
}

@InProceedings{Magableh2011a,
  author    = {B. {Magableh} and S. {Barrett}},
  title     = {Self-adaptive application for indoor wayfinding for individuals with cognitive impairments},
  booktitle = {2011 24th International Symposium on Computer-Based Medical Systems (CBMS)},
  year      = {2011},
  pages     = {1-6},
  month     = {June},
  abstract  = {This article focuses on describing a Model Driven Architecture (COCA-MDA) approach that facilitates the development of self-adaptive application for indoor wayfinding for individuals with cognitive impairments. COCA-MDA provides the following benefits: 1) It enables the architecture to anticipate several behavioural variations based on the context and the specific needs of the individuals with cognitive impairments. 2) It enables the application to proactively anticipate or reactively address unforeseen changes through support by a dynamic-decision making and policy framework. The policy framework is based on a stable description of software models and proprieties. 3) It can decompose the application into several architectural units to allow developers to decide which part of the architecture should be notified when a specific context condition occurs.},
  doi       = {10.1109/CBMS.2011.5999159},
  groups    = {ieee},
  issn      = {1063-7125},
  keywords  = {cognition;decision making;handicapped aids;indoor radio;mobile computing;object-oriented programming;software architecture;self-adaptive application;indoor wayfinding;cognitive impairments;model driven architecture;COCA-MDA approach;dynamic-decision making;policy framework;software models;Context;Context modeling;Middleware;Computer architecture;Monitoring;Analytical models;Adaptation models},
}

@InProceedings{Luckey2012,
  author    = {M. {Luckey} and C. {Thanos} and C. {Gerth} and G. {Engels}},
  title     = {Multi-Staged Quality Assurance for Self-Adaptive Systems},
  booktitle = {2012 IEEE Sixth International Conference on Self-Adaptive and Self-Organizing Systems Workshops},
  year      = {2012},
  pages     = {111-118},
  month     = {Sep.},
  abstract  = {The emerging approach to tackle the increasing complexity of today's software systems is the use of self-adaptation techniques. Most often, self-adaptation is introduced in terms of externalized adaptation rules (e.g. event-condition-action rules). Modeling and implementing adaptation rules introduces an additional amount of complexity that potentially results in erroneous system specification models. As a consequence, quality analysis and assurance must be considered early in the development cycle of self-adaptive systems. In this paper, we propose an efficient quality assurance approach for self-adaptive systems in terms of an integrated modeling and analysis approach, which is capable to identify errors (e.g. conflicting adaptation rules) in the set of adaptation rules early in the design process. Based on Adapt Cases, a high-level design modeling language for self-adaptive systems, we describe a multi-staged model-checking approach and address the problem of state space explosion by considering properties that are specific for adaptation modeling.},
  doi       = {10.1109/SASOW.2012.28},
  groups    = {ieee},
  keywords  = {formal specification;formal verification;high level languages;simulation languages;software quality;multistaged quality assurance;self-adaptive system;software system complexity;self-adaptation technique;externalized adaptation rule;system specification model;quality analysis;conflicting adaptation rule;adapt case;high-level design modeling language;multistaged model-checking approach;adaptation modeling;Self-adaptive systems;quality assurance;Adapt Cases;Adaptation Rules;ECA},
}

@InProceedings{Weyns2018a,
  author    = {D. {Weyns} and M. {Ericsson} and W. {L?we} and F. {Frejdestedt} and J. {Thornadtsson} and A. {Hulth}},
  title     = {Applying Self-Adaptation to Automate the Management of Online Documentation of Telecom Systems},
  booktitle = {2018 IEEE 14th International Conference on Automation Science and Engineering (CASE)},
  year      = {2018},
  pages     = {1375-1380},
  month     = {Aug},
  abstract  = {Engineering software-intensive systems, such as production systems, is complex as these systems are subject to various types of changes that are often difficult to anticipate before deployment. Tackling this complexity requires joint expertise from different backgrounds. In this paper we focus on the problem of maintaining online technical documentation of telecom systems. In the context of continuous deployment and ever-changing user needs, high quality of the documentation of such products is in a key concern of users. To tackle this problem, different experts worked together equipping the online documentation system with a feedback loop. This feedback loop tracks changes in the system and its context and automatically adapts the documentation accordingly. The results demonstrate that this self-adaptation approach offers a viable solution to tackle the maintainability problem of online documentation of telecom systems.},
  doi       = {10.1109/COASE.2018.8560502},
  groups    = {ieee},
  issn      = {2161-8089},
  keywords  = {feedback;Internet;software engineering;system documentation;systems engineering;telecom systems;engineering software-intensive systems;production systems;online documentation system;feedback loop;self-adaptation},
}

@InProceedings{Sawyer2010,
  author    = {P. {Sawyer} and N. {Bencomo} and J. {Whittle} and E. {Letier} and A. {Finkelstein}},
  title     = {Requirements-Aware Systems: A Research Agenda for RE for Self-adaptive Systems},
  booktitle = {2010 18th IEEE International Requirements Engineering Conference},
  year      = {2010},
  pages     = {95-103},
  month     = {Sep.},
  abstract  = {Requirements are sensitive to the context in which the system-to-be must operate. Where such context is well understood and is static or evolves slowly, existing RE techniques can be made to work well. Increasingly, however, development projects are being challenged to build systems to operate in contexts that are volatile over short periods in ways that are imperfectly understood. Such systems need to be able to adapt to new environmental contexts dynamically, but the contextual uncertainty that demands this self-adaptive ability makes it hard to formulate, validate and manage their requirements. Different contexts may demand different requirements trade-offs. Unanticipated contexts may even lead to entirely new requirements. To help counter this uncertainty, we argue that requirements for self-adaptive systems should be run-time entities that can be reasoned over in order to understand the extent to which they are being satisfied and to support adaptation decisions that can take advantage of the systems' self-adaptive machinery. We take our inspiration from the fact that explicit, abstract representations of software architectures used to be considered design-time-only entities but computational reflection showed that architectural concerns could be represented at run-time too, helping systems to dynamically reconfigure themselves according to changing context. We propose to use analogous mechanisms to achieve requirements reflection. In this paper we discuss the ideas that support requirements reflection as a means to articulate some of the outstanding research challenges.},
  doi       = {10.1109/RE.2010.21},
  groups    = {ieee},
  issn      = {2332-6441},
  keywords  = {formal specification;formal verification;self-adjusting systems;software architecture;systems analysis;uncertainty handling;requirement aware system;self adaptive system;RE technique;unanticipated context;uncertainty handling;software architecture;Uncertainty;Computer architecture;Monitoring;Context;Adaptation model;Reflection;Cognition;Requirements;reflection;run-time;self-adaptive systems},
}

@InProceedings{Bedhief2019a,
  author    = {I. {Bedhief} and M. {Kassar} and T. {Aguili} and L. {Foschini} and P. {Bellavista}},
  title     = {Self-Adaptive Management of SDN Distributed Controllers for Highly Dynamic IoT Networks},
  booktitle = {2019 15th International Wireless Communications Mobile Computing Conference (IWCMC)},
  year      = {2019},
  pages     = {2098-2104},
  month     = {June},
  abstract  = {The Internet of Things (IoT) is about connecting dynamically billion of devices to the Internet. This large-scale and dynamic topology is very challenging for IoT deployment and management. Software-Defined Networking (SDN) has been applied more and more in recent years as a solution for IoT challenges. The SDN concept of decoupling the control plane from the data plane promotes logically centralized visibility of the entire network and enables the applications to innovate through network programmability. At the same time, there are still some open issues, such as scalability in large IoT environments that include several devices. To face scalability challenges, SDN proposes distributed controllers as a solution to decentralize the control plane while maintaining the logically centralized network view. However, SDN-based architecture, that provides the flexibility and scalability, still lacks the smart or intelligent management to self-adapt to possible dynamic network topology changes. To over-come such issues, we propose a framework that answers automatically the business demands and makes the network self-adaptive. The topology deployment decision is made based on information that the controller gives. So for making sure that our proposed framework gives the best results, we have to study first the topology discovery mechanism in a distributed controller. In this paper, we introduce a self-adaptive management framework of SDN controllers for highly dynamic IoT networks. We evaluate performances of the two most popular distributed SDN controllers (i.e. ONOS and ODL) in a realistic scenario where the network topology changes dynamically. Results show the outperforming of ONOS compared to ODL in discovering the highly dynamic IoT network.},
  doi       = {10.1109/IWCMC.2019.8766349},
  groups    = {ieee},
  issn      = {2376-6506},
  keywords  = {distributed control;Internet of Things;software defined networking;telecommunication control;telecommunication network management;telecommunication network topology;highly dynamic IoT network;SDN distributed controllers;Software-Defined Networking;network programmability;IoT environments;SDN-based architecture;distributed controller;dynamic network topology;self-adaptive management;Internet of Things;topology deployment decision;ODL;ONOS;Topology;Network topology;Control systems;Protocols;Scalability;Connectors;Internet of Things;SDN Controller;IoT;Topology;discovery;ONOS;ODL;Large-scale},
}

@InProceedings{Poggi2016,
  author    = {F. {Poggi} and D. {Rossi} and P. {Ciancarini} and L. {Bompani}},
  title     = {An application of semantic technologies to self adaptations},
  booktitle = {2016 IEEE 2nd International Forum on Research and Technologies for Society and Industry Leveraging a better tomorrow (RTSI)},
  year      = {2016},
  pages     = {1-6},
  month     = {Sep.},
  abstract  = {In this paper we present an approach to add self-adaptive features to software systems not initially designed to be self-adaptive. Rapid changes in users needs, available resources, and types of system faults are everyday concerns in operating complex systems. The ability to face these issues in a (semi-)automatic fashion is a welcome feature. MAPE-K (Monitor, Analyze, Plan, Execute - Knowledge), or one of its variations, is the basic architectural pattern around which most adaptation engines are built. The knowledge (K) element in that pattern is usually a collection of dynamic and static models representing relevant aspects of the system and its environment. Knowledge-based features can be encoded using various techniques and serve a number of disparate roles: providing dynamic views of the system (Reflection Models), representing reconfiguration policies (Evaluation Models), mapping reconfigurations into system-level adaptations (Execution Models), and so forth. In our approach all these models are unified by using ontologies and Semantic Web technologies; the resulting knowledge base is then used to drive adaptation activities. We discuss how the various MAPE-K components can be designed in order to take advantage of this knowledge base by applying our approach to a real-word case study: a deployed system that was not designed to perform automatic adaptation. We then discuss merits and limits of our proposal both in the context of this specific case study and in a broader scope.},
  doi       = {10.1109/RTSI.2016.7740548},
  groups    = {ieee},
  keywords  = {knowledge based systems;large-scale systems;ontologies (artificial intelligence);semantic Web;software architecture;semantic technology;self adaptations;software system self-adaptive features;complex system operation;MAPE-K;Monitor, Analyze, Plan, Execute - Knowledge;architectural pattern;adaptation engines;knowledge element;dynamic models;static models;knowledge-based features;reflection models;reconfiguration policies;evaluation models;system-level adaptations;execution models;ontologies;semantic Web;automatic adaptation;Adaptation models;Ontologies;Semantics;Monitoring;Context;Engines;Semantic Web},
}

@InProceedings{Selvarasu2013,
  author    = {R. {Selvarasu} and C. {Christober Asir Rajan}},
  title     = {Self Adaptive Firefly Algorithm based transmission loss minimization using TCSC},
  booktitle = {International Conference on Advanced Nanomaterials Emerging Engineering Technologies},
  year      = {2013},
  pages     = {683-688},
  month     = {July},
  abstract  = {This paper presents the use of Thyristor Controlled Series Compensator (TCSC) to minimize the transmission loss in power system network. Self-Adaptive Firefly Algorithm is proposed to identify the optimal location and parameter of TCSC. To validate the proposed algorithm, simulations are performed on IEEE 14-bus and IEEE 30-bus system using MATLAB software package. Analyzing the simulation results the identified location and parameter of TCSC is able to minimize the transmission loss in the power system network.},
  doi       = {10.1109/ICANMEET.2013.6609390},
  groups    = {ieee},
  keywords  = {minimisation;software packages;thyristors;transmission loss minimization;thyristor controlled series compensator;power system network;self-adaptive firefly algorithm;TCSC;MATLAB software package;IEEE 30-bus system;IEEE 14-bus system;Cryptography;Load flow;Automatic voltage control;Static VAr compensators;Computational modeling;Adaptation models;Firefly Algorithm;Loss Minimization;Optimal Location;TCSC},
}

@InProceedings{Athanasopoulos2017,
  author    = {D. {Athanasopoulos}},
  title     = {Self-Adaptive Service Organization for Pragmatics-Aware Service Discovery},
  booktitle = {2017 IEEE International Conference on Services Computing (SCC)},
  year      = {2017},
  pages     = {164-171},
  month     = {June},
  abstract  = {Existing registries organize functionally similar services into groups without considering past service-usage from the consumers' perspective, a.k.a. pragmatics. Pragmatics can help registries to calculate service similarity more effectively and improve organization schemes. However, pragmatics are not available beforehand and their highly accumulated number over time creates time and space efficiency challenges. To be responsive to dynamically arrived pragmatics, we propose a self-adaptive service-organization approach that follows an iterative life-cycle for autonomously evolving organization schemes. To face the emerging efficiency challenges, our approach adopts a greedy online algorithm for the evolution of organization schemes that considers and stores only the top-k pragmatics of each service. We evaluate our approach on benchmark services and the results show that the effectiveness and efficiency of our approach are higher than those of a state-of-the-art service-organization approach, while a low total number of pragmatics is greedily stored by our approach.},
  doi       = {10.1109/SCC.2017.28},
  groups    = {ieee},
  issn      = {2474-2473},
  keywords  = {greedy algorithms;software engineering;Web services;pragmatics-aware service discovery;service-usage;service similarity;organization schemes;space efficiency challenges;self-adaptive service-organization approach;top-k pragmatics;benchmark services;state-of-the-art service-organization;self-adaptive service organization;Pragmatics;Organizations;Measurement;Semantics;Peer-to-peer computing;Arrays;Software;service interface;online evolution;message instance;efficiency},
}

@InProceedings{Ouareth2018,
  author    = {S. {Ouareth} and S. {Boulehouache} and S. {Mazouzi}},
  title     = {A Component-Based MAPE-K Control Loop Model for Self-adaptation},
  booktitle = {2018 3rd International Conference on Pattern Analysis and Intelligent Systems (PAIS)},
  year      = {2018},
  pages     = {1-7},
  month     = {Oct},
  abstract  = {A Distinct external Control Loop is a promising approach to design autonomic computing systems. However, the existing designs, such as the MAPE-K Control Loop, are too general (i.e. they lack sufficient details about the structure and the dynamic of its sub-parts) and are not using well established design models. So, using the Fractal Component Model, we propose a Component-Based MAPE-K Control Loop model. The resulted MAPE-K Composite Component is sufficiently precise and explicit as it highlights the detailed architecture and hierarchy of the MAPE-K and its sub-components respectively. In addition, the proposed model promotes the reuse and the sharing of components as needed. In addition, it simplifies the maintenance of the MAPE-K Composite Component by the add, the remove, and the replacement of its sub-components.},
  doi       = {10.1109/PAIS.2018.8598529},
  groups    = {ieee},
  keywords  = {formal specification;fractals;object-oriented programming;software architecture;design models;MAPE-K composite component;component-based MAPE-K control loop model;fractal component model;distinct external control loop;Fractals;Monitoring;Computational modeling;Adaptation models;Software;Sensors;Computer science;MAPE-K Control Loop;Fractal Component Model (FCM);Self-adaptation},
}

@InProceedings{Zhang2013a,
  author    = {L. {Zhang} and M. {Ma} and G. {Zhang} and A. S. {Lim}},
  title     = {Distributed composition services for self-adaptation wireless sensor networks},
  booktitle = {2013 Computing, Communications and IT Applications Conference (ComComAp)},
  year      = {2013},
  pages     = {47-52},
  month     = {April},
  abstract  = {The heterogeneity and mobility inherent in a large-scale wireless sensor network makes it difficult to develop different applications. The difficulty primarily arises from weak and intermittent connections, dynamic reconfiguration, and limited power availability. The challenge in building a distributed service adaptive to environmental changes lies in the degree of data transmission and the adaptation to the dynamics can be automated or transparent to applications. Most applications in wireless sensor networks involve a group of nodes coordinating to perform one task. Distributed composition service enables data centric nodes to form a dynamic task group and maintain the group. In this paper, we demonstrate the composition service and its implementation and show that the re-organization process can be automated in collaboration with the composition service by an adaptation server. Our testing validates the framework of the composition service and the performance improvement.},
  doi       = {10.1109/ComComAp.2013.6533607},
  groups    = {ieee},
  keywords  = {distributed processing;mobility management (mobile radio);software performance evaluation;telecommunication computing;telecommunication services;wireless sensor networks;distributed composition services;self-adaptation wireless sensor networks;large-scale wireless sensor network makes;adaptation server;performance improvement;reorganization process;dynamic task group;data centric nodes;data transmission;environmental changes;limited power availability;dynamic reconfiguration;intermittent connections;weak connections;Servers;Wireless sensor networks;Connectors;Distributed databases;Software;Educational institutions;Adaptive systems;distributed services;composition service;wireless sensor networks;self-adaptation},
}

@InProceedings{Suwardi2015,
  author    = {I. S. {Suwardi} and {Aradea}},
  title     = {Automatically relation modeling on spatial relationship as self-adaptation ability},
  booktitle = {2015 2nd International Conference on Advanced Informatics: Concepts, Theory and Applications (ICAICTA)},
  year      = {2015},
  pages     = {1-6},
  month     = {Aug},
  abstract  = {Self-adaptive system is a system that can take proper action automatically to reach its goal, based on the situation which occur at this system environment to meet satisfactory of its users. This paper would illustrate a case about self-adaptation function requirement in application tools that correspond to the requirement of graphic element adjustment function. One of the problems that can arise are related to connectivity function graphic elements, wherein when graphic elements associated with other graphic elements, elements of the relationship between the graphic elements can occupy the working area irregularly, even if there are other graphic elements that block the path relations, the relation element can penetrate into that graphic element. This condition has to rearrange by a user manually, so it is quite difficult and time consuming. Strategy that needed to overcome that problems, which must guarantee the availability of areas as working environment, as well as the appropriate decision-making mechanisms when determining an alternative option to connect between elements graphic automatically as self-adaptation ability. The solution for this problem, we propose strategy to automate relation space management of graphic element, as a result of an adaptation mechanism which more flexible and simplify users to do the job. Core concept that developed consist of two approaches namely free space management and neighbourhood modeling. These both concepts realised to polish up adaptation ability from tools limitation that exists at the current time.},
  doi       = {10.1109/ICAICTA.2015.7335356},
  groups    = {ieee},
  keywords  = {computer graphics;decision making;software engineering;neighbourhood modeling;free space management;decision-making mechanism;connectivity function graphic elements;graphic element adjustment function;self-adaptation function requirement;self-adaptive system;relation modeling;spatial relationship;self-adaptation ability;Adaptation models;Graphics;Synthetic aperture sonar;Automation;Connectors;Planning;Software;automatic link modeling;spatial relationship;self-adaptation;free space management;neighbourhood modeling},
}

@InProceedings{Wang2007a,
  author    = {H. {Wang} and J. {Ying}},
  title     = {An Approach for Harmonizing Conflicting Policies in Multiple Self-Adaptive Modules},
  booktitle = {2007 International Conference on Machine Learning and Cybernetics},
  year      = {2007},
  volume    = {4},
  pages     = {2379-2384},
  month     = {Aug},
  abstract  = {A recent approach to monitor and adapt system behavior at runtime is to decouple one or more external modules and self-adaptive mechanism from the target system. An important challenge arises when more than one such self-adaptive module is employed: how can we ensure that they cooperate without conflicts in a coherent fashion? This paper describes our initial approach for harmonizing conflicting policies in the presence of multiple self-adaptive modules. The main distribution of the paper is to resolve conflicts using an extended ECA rule paradigm to coordinate self-adaptive actions among multiple external modules. The approach shares advantages with other policy languages, i.e., the declarative and domain-independent semantics of policy rules. However, a key benefit of our approach is that both conflicting actions and influence of actions are considered. We focus on the problem of harmonizing self-adaptation capability by detecting and further resolving policy conflicts using action-level meta rule and value-level meta rule. Finally, this paper illustrates the efficiency of the approach in a VOD system as a case study, and discusses our future plans.},
  doi       = {10.1109/ICMLC.2007.4370543},
  groups    = {ieee},
  issn      = {2160-1348},
  keywords  = {programming language semantics;self-adjusting systems;software architecture;multiple self-adaptive modules;conflicting policy harmonizing architecture;adapt system behavior;extended ECA rule paradigm;action-level meta rule;domain-independent semantics;Machine learning;Cybernetics;Logic;Educational institutions;Computer science;Computerized monitoring;Condition monitoring;Software systems;Control systems;Programming profession;Self-adaptation;ECA rule;Policy;Policy conflict},
}

@Article{Sawyer2012,
  author   = {P. {Sawyer} and R. {Mazo} and D. {Diaz} and C. {Salinesi} and D. {Hughes}},
  title    = {Using Constraint Programming to Manage Configurations in Self-Adaptive Systems},
  journal  = {Computer},
  year     = {2012},
  volume   = {45},
  number   = {10},
  pages    = {56-63},
  month    = {Oct},
  issn     = {1558-0814},
  abstract = {Combining goal-modeling techniques with constraint programming provides the means to identify the variants best suited to the environmental contexts that a self-adaptive software system might encounter at runtime.},
  doi      = {10.1109/MC.2012.286},
  groups   = {ieee},
  keywords = {configuration management;constraint handling;constraint programming;configuration management;goal-modeling technique;environmental context;self-adaptive software system;Context awareness;Quality of service;Wireless sensor networks;Dynamic programming;Runtime;Constraint optimization;Adaptation models;dynamic software product lines;self-adaptive systems;goal modeling;constraint programming},
}

@InProceedings{Zouari2010,
  author    = {M. {Zouari} and M. {Segarra} and F. {Andr��}},
  title     = {A Framework for Distributed Management of Dynamic Self-adaptation in Heterogeneous Environments},
  booktitle = {2010 10th IEEE International Conference on Computer and Information Technology},
  year      = {2010},
  pages     = {265-272},
  month     = {June},
  abstract  = {Ubiquitous computing environments are becoming more heterogeneous and highly dynamic. Systems need to dynamically self-adapt in order to accommodate dynamically changing resources, needs of different users and failure events. This paper focuses on the runtime adaptation mechanisms that need to be dealt with the distributed nature of systems and the heterogeneity of the environment. We tackle the problem of distributed management of dynamic adaptation where separate adaptation processes are performed concurrently. We elaborate mechanisms to coordinate adaptation processes in order to improve the correctness of the system during and after the adaptation. We implement a framework that offers the required support for distributed management of adaptability. The framework is customizable to meet application-specific requirements and the operating environment characteristics. Our focus will be on the architectural principles and the coordination mechanisms of the framework. We developed a self-adaptive replication system based on our framework for the specification and the enforcement of the adaptation mechanisms.},
  doi       = {10.1109/CIT.2010.78},
  groups    = {ieee},
  keywords  = {adaptive systems;distributed object management;ubiquitous computing;distributed management;dynamic selfadaptation;heterogeneous environments;ubiquitous computing environments;runtime adaptation mechanisms;coordinate adaptation processes;application-specific requirements;operating environment characteristics;selfadaptive replication system;Context;Adaptation model;Protocols;Computer architecture;Software;Quality of service;Engines;software architecture;self-adaptability;distributed system;data management},
}

@InProceedings{Yan2007,
  author    = {K. {Yan}},
  title     = {Research into Bank Loan Risk Based on UDM and Self-adaptive RBF Neural Network},
  booktitle = {2007 Second International Conference on Bio-Inspired Computing: Theories and Applications},
  year      = {2007},
  pages     = {154-158},
  month     = {Sep.},
  abstract  = {At present, the application of neural network technology in our country's bank loan risk evaluation is very limited. The reason lies in the difficulty to find high quality training samples for neural network self-learning. Therefore, we adopt uniform design method (UDM) to design representative, uniformity and large-scale samples. And then we use those samples to train the self-adaptive radial basis function neural network (RBFNN) which is applied to carry out the bank loan risk evaluation. The result of the experiment shows that the generalization ability of self-adaptive RBFNN combined with UDM is far better than that of traditional RBFNN based on Monte-Carlo method. The self-adaptive RBFNN combined with UDM not only realizes the self-adaptive ability and non-linear approaching ability, but also conquers the performance limitations of traditional RBFNN. And also it avoids the subjectivity and uncertainty of traditional evaluation.},
  doi       = {10.1109/BICTA.2007.4806440},
  groups    = {ieee},
  keywords  = {banking;Monte Carlo methods;radial basis function networks;risk management;self-adjusting systems;bank loan risk;UDM;self-adaptive RBF neural network;risk evaluation;self-learning;uniform design method;radial basis function;generalization ability;Monte-Carlo method;nonlinear approaching ability;Neural networks;Design methodology;Uncertainty;Large-scale systems;Information technology;Application software;Radial basis function networks;Concrete;Intelligent networks;Decision support systems},
}

@InProceedings{Shafiuzzaman2015,
  author    = {M. {Shafiuzzaman} and N. {Nahar} and M. R. {Rahman}},
  title     = {A proactive approach for context-aware self-adaptive mobile applications to ensure Quality of Service},
  booktitle = {2015 18th International Conference on Computer and Information Technology (ICCIT)},
  year      = {2015},
  pages     = {544-549},
  month     = {Dec},
  abstract  = {Mobile Applications are rapidly emerging as a convenient medium for using a variety of services. With the high penetration of smart phones in society, self-adaptation has become an essential capability required by mobile application users. In an ideal scenario, an application is required to adjust its behavior according to the current context of its use. This raises the challenge in mobile computing towards the design and development of applications that sense and react to contextual changes to provide a value-added user experience. In its general sense, context information can relate to the environment, the user, or the device status. In this paper, a framework is proposed for building context aware and adaptive mobile applications. Based on the concepts of software requirement specification and probabilistic modeling, this framework guides the modeling of adaptability at design time and supports context awareness and adaptability at runtime to tackle potential issues that can hamper Quality of Service (QoS). In the core of the approach, a probabilistic model has been derived from the software requirement model using the quantitative terms of context dependability and then, it is continuously verified against the runtime operations of a mobile application. Finally, the proposed approach has been used in a mobile application development use case to observe how proactive adaptability can be built into mobile application development to ensure QoS.},
  doi       = {10.1109/ICCITechn.2015.7488131},
  groups    = {ieee},
  keywords  = {formal specification;formal verification;Markov processes;mobile computing;probability;quality of service;smart phones;systems analysis;proactive adaptability;context-aware self-adaptive mobile application;quality of service;QoS;smart phone;mobile computing;value-added user experience;software requirement specification;probabilistic modelling;mobile application development;Markov model;Context;Mobile applications;Adaptation models;Quality of service;Batteries;Software;Runtime},
}

@InProceedings{Satoh2012,
  author    = {I. {Satoh}},
  title     = {Self-adaptive mechanism for distributed computing},
  booktitle = {2012 IEEE Conference on Evolving and Adaptive Intelligent Systems},
  year      = {2012},
  pages     = {11-16},
  month     = {May},
  abstract  = {This paper proposes a framework for adapting software components for a disaggregated system, which dynamically composes devices, e.g., displays, keyboard, and mice, which do not attached to the same computer into a virtual computer over a distributed system, including ubiquitous/pervasive computing systems. It introduces the notions of differentiation and dedifferentiation in cellular slime molds into real distributed systems, including disaggregated systems. When software components delegates a function to another component coordinating with it, if the former has the function, this function becomes less-developed and the latter's function becomes well-developed. The framework was constructed as a middleware system and allowed us to define agents as Java objects written in JavaBean. We present several evaluations of the framework in a distributed system instead of any simulation-based systems and describes a practical application.},
  doi       = {10.1109/EAIS.2012.6232797},
  groups    = {ieee},
  keywords  = {digital simulation;Java;middleware;self-adaptive mechanism;distributed computing;software components adaptation;disaggated system;displays;keyboard;mice;virtual computer;ubiquitous computing systems;pervasive computing systems;cellular slime molds;Java objects;JavaBean;middleware system;simulation-based systems;Hardware;Logic gates;Software;Java;Genomics;Bioinformatics},
}

@InProceedings{Dezfuli2017,
  author    = {Z. T. {Dezfuli} and E. {Nazemi} and M. {Ziari}},
  title     = {An algorithm for online planning to improve availability and performance of self-adaptive websites},
  booktitle = {2017 5th Iranian Joint Congress on Fuzzy and Intelligent Systems (CFIS)},
  year      = {2017},
  pages     = {213-218},
  month     = {March},
  abstract  = {Many modern systems cannot adapt themselves to changing requirements. Maintenance of these systems require a lot of expertise and cost. In recent years focusing on systems with the ability to dynamic adapt with runtime environment. One kind of these systems, are self-adaptive websites. One of the main objectives in achieving to self-adaptive is planning for choose the structure or appropriate behavior. Exist uncertainty in decision making that reduce the accuracy of decisions and thus reducing the quality features of software such as performance and availability there is as challenge. In this research, an algorithm by Rete-OO and learning algorithms present to implement online planning in self-adaptive website. This algorithm implemented and evaluated on a news web site. Results indicate improvement of performance and accuracy planning and reduce response time metric and increase website availability.},
  doi       = {10.1109/CFIS.2017.8003685},
  groups    = {ieee},
  keywords  = {planning (artificial intelligence);self-adjusting systems;Web sites;online planning;self-adaptive Websites;Rete-OO;learning algorithms;Planning;Software;Software algorithms;Algorithm design and analysis;Time factors;Monitoring;Videos;Online planning;Rete-OO algorithm;performance;availability;self-adaptive websites},
}

@InProceedings{Guo2006,
  author    = {J. {Guo} and L. {Chen} and L. {Qin} and C. {Wang}},
  title     = {A Self-adaptive Ant Colony Algorithm for Phylogenetic Tree Construction},
  booktitle = {2006 International Conference on Hybrid Information Technology},
  year      = {2006},
  volume    = {1},
  pages     = {78-78},
  month     = {Nov},
  abstract  = {To solve the phylogenetic tree construction problem, a new method using adaptive ant colony algorithm based on the equilibrium of the ant distribution is presented. Before the problem is solved by the developed ant colony optimization, the input species were represented using a fully-connected graph built according to the evolutionary distance between each pair of species. The process of constructing a phylogenetic tree uses a pheromone graph. The information weight of the pheromone graph is adaptively updated according to the pheromone left by ants in their seeking process. The algorithm dynamically adjusts the influence of each ant to the trail information updating and the selected probability of the path according to the equilibrium of the ant distribution. The phylogenetic tree constructing method proposed here is tested using some test cases to compare its results with that of the neighbor-joining (NJ) programs in the PHYLIP software package and the TSP-Approach. Experimental results show that our algorithm is easier to implement and more efficient},
  doi       = {10.1109/ICHIT.2006.253468},
  groups    = {ieee},
  keywords  = {biology computing;genetics;optimisation;self-adjusting systems;trees (mathematics);self-adaptive ant colony algorithm;phylogenetic tree construction;pheromone graph;neighbor-joining programs;ant distribution;Phylogeny;Software testing;Topology;Chaos;Computer science;Ant colony optimization;Heuristic algorithms;Software packages;Proteins;Equations},
}

@InProceedings{Qureshi2011,
  author    = {N. A. {Qureshi} and S. {Liaskos} and A. {Perini}},
  title     = {Reasoning about adaptive requirements for self-adaptive systems at runtime},
  booktitle = {2011 2nd International Workshop on Requirements@Run.Time},
  year      = {2011},
  pages     = {16-22},
  month     = {Aug},
  abstract  = {Increasing proliferation of mobile applications challenge the role of requirements engineering (RE) in developing customizable and adaptive software applications for the end-users. Such adaptive applications need to alter their behavior while monitoring and evaluating the changes in the environment at runtime by being aware of their end-user's needs, context and resources. More specifically, these applications should be able to: (i) reason about their own requirements and refine and validate them at run-time by involving end-users, if necessary; (ii) provide solutions for the refined or changed requirements at runtime, for instance by exploiting available services. In this position paper we focus on the first issue. We propose to extend our previous work on adaptive requirements with preference-based reasoning and automated planning to enable a continuous adaptive reasoning of requirements at runtime. We describe this vision using a navigation system example and highlight challenges.},
  doi       = {10.1109/ReRunTime.2011.6046243},
  groups    = {ieee},
  keywords  = {formal verification;mobile computing;adaptive requirements;self adaptive systems;mobile applications;requirements engineering;RE;automated planning;adaptive reasoning;Cognition;Runtime;Planning;Monitoring;Context;Adaptation models;Humans;Requirements Engineering;Planning;Feedback;Self-Adaptive Systems},
}
{Garc��a-Valls2014,
  author        = {M. {Garc��a-Valls} and D. {Perez-Palacin} and R. {Mirandola}},
  title         = {Extending the verification capabilities of middleware for reliable distributed self-adaptive systems},
  booktitle     = {2014 12th IEEE International Conference on Industrial Informatics (INDIN)},
  year          = {2014},
  pages         = {164-169},
  month         = {July},
  __markedentry = {[guan:6]},
  abstract      = {The design of the embedded software for industrial systems progressively integrates more intelligent functions to ease the integration between the factory floor hardware and operator-friendly control front ends. New software development paradigms such as service oriented architecture (SOA) make it possible by embedding small footprint web servers inside small embedded devices that are connected to the actuators which they control. In general, the timing requirements of such distributed systems are not in the front plane and temporal guarantees provided by most solutions are typically best effort. iLAND is an example of a middleware that supports communication and reconfiguration of distributed services, ensuring temporal correctness. It includes the logic for adapting the architectural structure of a service-based application (i.e., number and connections of the software pieces/functions) to respond to operator requests in a time-deterministic way, focusing only on the temporal correctness. In this paper, we apply the principles of autonomic computing to the middleware design, and we provide a high-level description on how its verification process could be extended beyond the purely temporal properties using more comprehensive formal techniques. We exemplify these ideas with a modified on-line verification manager that suits the needs of a kind of systems with specific timing and functional constraints.},
  doi           = {10.1109/INDIN.2014.6945502},
  issn          = {2378-363X},
  keywords      = {formal verification;middleware;service-oriented architecture;middleware verification capability;distributed self-adaptive systems;embedded software;service oriented architecture;SOA;software development paradigm;embedded devices;timing requirements;iLAND middleware;service-based application;temporal correctness;timing constraint;functional constraint;online verification manager;Adaptation models;Middleware;Real-time systems;Timing;Computational modeling;Monitoring;Adaptive systems;middleware;reliable systems;verification;reconfiguration;distributed systems;SOA;MAPE-K},
}

@InProceedings{Abeywickrama2012a,
  author    = {D. B. {Abeywickrama} and N. {Bicocchi} and F. {Zambonelli}},
  title     = {SOTA: Towards a General Model for Self-Adaptive Systems},
  booktitle = {2012 IEEE 21st International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises},
  year      = {2012},
  pages     = {48-53},
  month     = {June},
  abstract  = {The increasing complexity and dynamics in which software systems are deployed call for solutions to make such systems autonomic, i.e., capable of dynamically self-adapting their behavior in response to changing situations. To this end, proper models and software engineering tools are required to be available to support the design and development of autonomic systems. In this paper, we introduce a new general model, SOTA, for modeling the adaptation requirements. SOTA, by bringing together the lessons of goal-oriented modeling and of context-aware system modeling, has the potentials for tackling some key issues in the design and development of complex self-adaptive software systems. In particular, SOTA enables: early verification of requirements, identification of knowledge requirements for self-adaptation, and identification of the most suitable self-adaptive patterns.},
  doi       = {10.1109/WETICE.2012.48},
  groups    = {ieee},
  issn      = {1524-4547},
  keywords  = {formal verification;mathematical programming;self-adjusting systems;SOTA;general model;complexity;dynamics;software engineering tools;autonomic systems;goal oriented modeling;context aware system modeling;complex self-adaptive software system;self-adaptation;self-adaptive pattern;Adaptation models;Sensors;Trajectory;Silicon;Adaptive systems;System recovery;Measurement;self-adaptive systems;goal-oriented requirements engineering;architectural patterns;model checking},
}

@InProceedings{Huang2015c,
  author    = {C. {Huang} and H. {Chen} and T. {Huang} and Y. {Tzeng} and P. {Li} and P. {Wu}},
  title     = {A Self-Adaptive System for Vehicle Information Security Applications},
  booktitle = {2015 IEEE 13th International Conference on Embedded and Ubiquitous Computing},
  year      = {2015},
  pages     = {188-192},
  month     = {Oct},
  abstract  = {To provide complete vehicle information protection mechanism, this work proposes a self-adaptive system for vehicle information security applications (SAV). Different from the conventional software-based information access method, in the SAV, the access control policies are designed by the protection matrices and implemented as reconfigurable hardware modules. The information access method becomes specific and not generic, so the risks of illegal access of vehicle information can be reduced. To not only meet real-time requirements but also enhance hardware resource utilization, the cryptographic functions in the SAV are also implemented as reconfigurable hardware modules. Thus, the SAV can adapt its access control policies and cryptographic functions at runtime to different system requirements. Our experiments have also demonstrated the SAV can accelerate by up to 3.78x the processing time required by using the software-based design. Compared to the conventional embedded system design, the SAV can also reduce 27.1% of slice registers and 26.5% of slice LUTs in the Xilinx Virtex-5 XC5VLX110T FPGA.},
  doi       = {10.1109/EUC.2015.9},
  groups    = {ieee},
  keywords  = {authorisation;cryptography;matrix algebra;road vehicles;self-adjusting systems;traffic information systems;hardware resource utilization;cryptographic functions;system requirements;software-based design;embedded system design;slice LUT;Xilinx Virtex-5 XC5VLX110T FPGA;real-time requirements;illegal access;reconfigurable hardware modules;protection matrices;access control policies;software-based information access method;SAV;vehicle information protection mechanism;vehicle information security applications;self-adaptive system;Hardware;Vehicles;Cryptography;Access control;Field programmable gate arrays;Computer architecture},
}

@InProceedings{Satoh2012a,
  author    = {I. {Satoh}},
  title     = {Self-adaptive mechanism for disaggregated computing},
  booktitle = {2012 IEEE International Conference on Pervasive Computing and Communications Workshops},
  year      = {2012},
  pages     = {185-190},
  month     = {March},
  abstract  = {This paper proposes an approach to adapting software in a pervasive computing environment whose computational resources are heterogenous, limited, and dynamic. It is unique to other existing adaptive approaches in introducing the notions of differentiation and dedifferentiation in cellular slime molds. When a software component delegates a function to another component coordinating with it, if the former has the function, this function becomes less-developed and the latter's function becomes well-developed like that in cellular differentiation. When some differentiated components are not available due to system errors or network partitioning, this enables remaining components to automatically activate their degenerated functions corresponding to functions provided by the unavailable components like those in cellular-dedifferentiation. The approach enables applications to be naturally adapted to changes in their computational environments, e.g., other applications, their available resources, and network connectivity, without any special adaptation mechanisms inside the applications themselves in a self-organizing manner. It is constructed as a middleware system to execute general purpose applications on real pervasive computing systems, instead of any simulation-based systems. We present several evaluations of the framework in a distributed system and describe two applications.},
  doi       = {10.1109/PerComW.2012.6197475},
  groups    = {ieee},
  keywords  = {middleware;object-oriented programming;ubiquitous computing;pervasive computing;dedifferentiation;cellular slime molds;software component;cellular differentiation;differentiated components;network partitioning;system errors;computational resources;middleware system;distributed system;self-adaptive mechanism;software adaptation;disaggregated computing;Computers;Runtime;Heart beat;Databases;Pervasive computing;Middleware},
}

@InProceedings{Abeywickrama2012b,
  author    = {D. B. {Abeywickrama} and F. {Zambonelli}},
  title     = {Model Checking Goal-Oriented Requirements for Self-Adaptive Systems},
  booktitle = {2012 IEEE 19th International Conference and Workshops on Engineering of Computer-Based Systems},
  year      = {2012},
  pages     = {33-42},
  month     = {April},
  abstract  = {To deal with the increasing complexity and uncertainty of software systems, novel software engineering models and tools are required to make such systems self-adaptive. As part of ongoing research, we investigate various models, schemes and mechanisms to model and engineer self-adaptation in complex software systems. To this end, we have defined SOTA (State of the Affairs) as a general goal-oriented modeling framework for the analysis and design of self-adaptive systems. In this paper, by transforming the conceptual SOTA model into an operational one, we show how SOTA can be an effective tool to perform an early, goal-level, model checking analysis for adaptive systems. This allows the developers of complex self-adaptive systems to validate the actual correctness of the self-adaptive requirements at an early stage in the software life-cycle. The approach is explored and validated using a case study in the area of e-mobility.},
  doi       = {10.1109/ECBS.2012.30},
  groups    = {ieee},
  keywords  = {Vehicles;Adaptation models;Analytical models;Trajectory;Context;Availability;self-adaptive systems;model checking;goal-oriented requirements engineering;software architecture},
}

@InProceedings{Segarra2009,
  author    = {M. T. {Segarra} and F. {Andr��}},
  title     = {Building a Context-Aware Ambient Assisted Living Application Using a Self-Adaptive Distributed Model},
  booktitle = {2009 Fifth International Conference on Autonomic and Autonomous Systems},
  year      = {2009},
  pages     = {40-44},
  month     = {April},
  abstract  = {Ambient assisted living (AAL) applications are intended to allow elderly people to stay at home while connected to their family and medical staff. These applications involve several services as health-care services or infotainment, which are executed on different environments such as hospital, proximity doctor, family homes. These environments constitute a distributed, heterogeneous, highly dynamic infrastructure that makes it necessary to build AAL applications as adaptive software including the necessary mechanisms to dynamically modify their behavior. In this paper we propose a multi-level model to build context-aware self-adaptive entities: the basic level defines the mandatory functionalities for adaptive entities, while upper-levels define how to coordinate adaptation of primitive or composite entities. The generic nature of the model is illustrated by its use when building a self-adaptive distributed data management service for an AAL application.},
  doi       = {10.1109/ICAS.2009.13},
  groups    = {ieee},
  issn      = {2168-1872},
  keywords  = {distributed processing;fault tolerant computing;geriatrics;handicapped aids;health care;home computing;medical computing;ubiquitous computing;context-aware ambient assisted living application;self-adaptive heterogeneous distributed model;elderly people;health-care service;infotainment service;adaptive software;self-adaptive distributed data management service;medical staff;AAL application;Context modeling;Application software;Senior citizens;Wireless sensor networks;Adaptation model;Aging;Europe;Computer science;Telecommunications;Hospitals},
}

@InProceedings{Lin2007,
  author    = {X. {Lin} and H. {Wu} and D. {Jiang} and F. {Ren}},
  title     = {A self-adaptive architecture to control the performance of multi-host web servers},
  booktitle = {2007 Australasian Telecommunication Networks and Applications Conference},
  year      = {2007},
  pages     = {75-80},
  month     = {Dec},
  abstract  = {In modern web applications, several web sites often inhabit one single web server, asking for some software mechanisms to allocate server resources among those virtual hosts. This paper tries to study this issue from the perspective of control theory. First, solid proofs are shown to demonstrate that web servers could hardly be modeled with fixed parameters, which cast doubt on foundations of existing parametric web QoS schemes. Furthermore, we present the self-adaptive architecture for web servers, whose objective is to perform finer control over the performance while suiting varying run-time conditions of web servers. A series of tests validate the efficiency of our strategy, showing that comparing with QoS schemes based on fixed parameters, self-adaptive architecture tracks demanding request latency more closely, even when run-time environments change dramatically. In addition, our architecture requires no superfluous off-line identification of system parameters. We also point out that the self-adaptive architecture for web servers could be implemented with other various QoS facilities.},
  doi       = {10.1109/ATNAC.2007.4665265},
  groups    = {ieee},
  keywords  = {adaptive control;file servers;Internet;quality of service;telecommunication congestion control;self-adaptive architecture;multihost web servers;modern web applications;software mechanisms;server resource allocation;virtual hosts;control theory;parametric web QoS schemes;off-line no identification;Service oriented architecture;Web server;Runtime;Computer architecture;Application software;Resource management;Control theory;Solid modeling;Automatic testing;Delay},
}

@InProceedings{Ballagny2009,
  author    = {C. {Ballagny} and N. {Hameurlain} and F. {Barbier}},
  title     = {MOCAS: A State-Based Component Model for Self-Adaptation},
  booktitle = {2009 Third IEEE International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2009},
  pages     = {206-215},
  month     = {Sep.},
  abstract  = {This paper introduces MOCAS (model of components for adaptive systems), a generic state-based component model which enables the self-adaptation of software components together with their coordination. MOCAS relies on behavioral adaptation instead of structural adaptation and uses the United Modeling Language (UML). Each component embeds a UML state machine to realize its behavior at runtime. It is installed in a container managing the adaptation process and ensuring its consistency. Adaptation is triggered when invariants related to the components business properties are violated. The component supports updates of its specification while it is running. This component model is illustrated through the GridStix case study.},
  doi       = {10.1109/SASO.2009.11},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {formal specification;object-oriented programming;Unified Modeling Language;state-based component model;model of components for adaptive systems;software component;behavioral adaptation;United Modeling Language state machine;component specification;GridStix;Unified modeling language;Power system modeling;Runtime;Containers;Predictive models;Adaptive systems;Software systems;Humans;Model driven engineering;Buildings;Self-Adaptation;Component Model;UML State Machine},
}

@InProceedings{Hiel2006,
  author    = {M. {Hiel} and H. {Weigand}},
  title     = {Requirements on the Use of Goal-Directed Imitation for Self-Adaptation},
  booktitle = {17th International Workshop on Database and Expert Systems Applications (DEXA'06)},
  year      = {2006},
  pages     = {98-102},
  month     = {Sep.},
  abstract  = {Imitation is a powerful mechanism in human society, and has proven its usefulness in machine learning. This paper describes the notion of goal-directed imitation and its possible role in realizing self-adaptive systems. The conditions for its application are analyzed. We illustrate the working of imitation in self-adaptation by means of a small example},
  doi       = {10.1109/DEXA.2006.123},
  groups    = {ieee},
  issn      = {2378-3915},
  keywords  = {learning (artificial intelligence);self-adjusting systems;goal-directed imitation;machine learning;self-adaptive systems;Humans;Pervasive computing;Application software;Computer networks;Software systems;Machine learning;Robustness;Resource management;Hardware;Protection},
}

@InProceedings{Chen2007,
  author    = {Z. {Chen} and M. {Yang} and G. {Francia} and J. {Dongarra}},
  title     = {Self Adaptive Application Level Fault Tolerance for Parallel and Distributed Computing},
  booktitle = {2007 IEEE International Parallel and Distributed Processing Symposium},
  year      = {2007},
  pages     = {1-8},
  month     = {March},
  abstract  = {Most application level fault tolerance schemes in literature are non-adaptive in the sense that the fault tolerance schemes incorporated in applications are usually designed without incorporating information from system environments such as the amount of available memory and the local or network I/O bandwidth. However, from an application point of view, it is often desirable for fault tolerant high performance applications to be able to achieve high performance under whatever system environment it executes with as low fault tolerance overhead as possible In this paper, we demonstrate that, in order to achieve high reliability with as low performance penalty as possible, fault tolerant schemes in applications need to be able to adapt themselves to different system environments. We propose a framework under which different fault tolerant schemes can be incorporated in applications using an adaptive method. Under this framework, applications are able to choose near optimal fault tolerance schemes at run time according to the specific characteristics of the platform on which the application is executing.},
  doi       = {10.1109/IPDPS.2007.370604},
  groups    = {ieee},
  issn      = {1530-2075},
  keywords  = {fault tolerant computing;multiprocessing systems;parallel processing;self adaptive application level fault tolerance;parallel computing;distributed computing;network I/O bandwidth;Fault tolerance;Distributed computing;Fault tolerant systems;Application software;High performance computing;Bandwidth;Grid computing;Contracts;Software libraries;Lifting equipment},
}

@InProceedings{Zhao2009,
  author    = {H. {Zhao} and X. {Li}},
  title     = {Efficient Grid Task-Bundle Allocation Using Bargaining Based Self-Adaptive Auction},
  booktitle = {2009 9th IEEE/ACM International Symposium on Cluster Computing and the Grid},
  year      = {2009},
  pages     = {4-11},
  month     = {May},
  abstract  = {To address coordination and complexity issues, we formulate a grid task allocation problem as a bargaining based self-adaptive auction and propose the BarSAA grid task-bundle allocation algorithm. During the auction, prices are iteratively negotiated and dynamically adjusted until market equilibrium is reached. The BarSAA algorithm features decentralized bidding decision making in a heterogeneous distributed environment so that scheduler can offload its duty onto participating computing nodes and significantly reduces scheduling overheads. When a BarSAA auction converges, the equilibrium point is Pareto Optimal and achieves social efficient outcome and double-sided revenue maximization. In addition, BarSAA promotes truthful behavior among selfish nodes. Through game theoretical analysis, we demonstrate that truthful revelation is beneficial to bidders in making bidding strategies. Extensive simulation results are presented to demonstrate the efficiency of the BarSAA strategy and validate several important analytical properties.},
  doi       = {10.1109/CCGRID.2009.86},
  groups    = {ieee},
  keywords  = {decision making;electronic commerce;grid computing;Pareto optimisation;grid task-bundle allocation;bargaining based self-adaptive auction;grid task allocation;market equilibrium;decentralized bidding decision making;Pareto optimal;double-sided revenue maximization;Peer to peer computing;Grid computing;Processor scheduling;Iterative algorithms;Cost accounting;Software systems;Laboratories;Computer science;USA Councils;Software algorithms;Grid Computing;Game Theory;Combinatorial Auction;Peer-to-Peer Computing},
}

@InProceedings{Cambier2002,
  author    = {C. {Cambier} and M. {Piron} and A. {Cardon}},
  title     = {Self-adaptive systems using a massive multi-agent system},
  booktitle = {Proceedings of the 2002 Congress on Evolutionary Computation. CEC'02 (Cat. No.02TH8600)},
  year      = {2002},
  volume    = {1},
  pages     = {345-350 vol.1},
  month     = {May},
  abstract  = {We deal with systems using massive multi-agent organizations and expressing complex problems like the representation of the world sub-system managing the behavior of a robot. We propose an analysis and an operating representation of multi-agent organization in a geometric way, using specific multi-agent organization in a morphologic agent space. We propose also an architecture expressing the behavior of the massive multi-agent organization. So we open the way to the implementation of self-adaptive systems. We present an application for the behavior of an autonomous robot.},
  doi       = {10.1109/CEC.2002.1006258},
  groups    = {ieee},
  keywords  = {multi-agent systems;self-adjusting systems;robots;multi-agent organizations;massive multi-agents systems;behavior;morphology;self-adaptive systems;autonomous robot;morphologic agent space;Multiagent systems;Control systems;Orbital robotics;Real time systems;Legged locomotion;Communication system control;Bonding;Application software;Morphology;Software architecture},
}

@Article{Mendon?a2019,
  author   = {N. C. {Mendon?a} and P. {Jamshidi} and D. {Garlan} and C. {Pahl}},
  title    = {Developing Self-Adaptive Microservice Systems: Challenges and Directions},
  journal  = {IEEE Software},
  year     = {2019},
  pages    = {0-0},
  issn     = {1937-4194},
  abstract = {A self-adaptive system can dynamically monitor and adapt its behavior to preserve or enhance its quality attributes under uncertain operating conditions. This article identifies key challenges for the development of microservice applications as self-adaptive systems, using a cloud-based intelligent video surveillance application as a motivating example. It also suggests potential new directions for addressing most of the identified challenges by leveraging existing microservice practices and technologies.},
  doi      = {10.1109/MS.2019.2955937},
  groups   = {ieee},
  keywords = {Streaming media;Video surveillance;Face recognition;Pipelines;Computer architecture;Containers;Self-adaptive systems;microservices;DevOps;continuous delivery},
}

@Article{Gatouillat2019,
  author   = {A. {Gatouillat} and Y. {Badr} and B. {Massot}},
  title    = {Smart and safe self-adaption of connected devices based on discrete controllers},
  journal  = {IET Software},
  year     = {2019},
  volume   = {13},
  number   = {1},
  pages    = {49-59},
  issn     = {1751-8814},
  abstract = {The Internet-of-things, which designates the interconnection of physical objects, is a growing research area with many challenges. One of these challenges is the management of failures and unforeseen situations when using connected devices in real world applications. To this end, the authors propose a self-adaptation framework to deal with changes and take into account storage, computational and communication constraints. Their self-adaptation framework relies on constraints expressed in terms of quality of service (QoS) and event-driven rules to specify control objectives. Internally, the framework generates labelled transitions systems and builds on the fly synchronous controllers to guarantee QoS properties. Moreover, their framework has capabilities to concurrently deal with dynamic control objectives, monitoring and self-adaptation. To prove the practicality of their framework, they present a healthcare case-study to remotely monitor a patient at risk of myocardial infarction recurrence. The objective control rules easily specify how wearable devices should coordinate their behaviours to ensure safety, resilience and health-awareness factors. The implementation of their framework is fully distributed and scalable and include their development of a wearable, remotely configurable, QoS aware cardiac activity sensor.},
  doi      = {10.1049/iet-sen.2018.5029},
  groups   = {ieee},
  keywords = {diseases;health care;Internet of Things;patient monitoring;quality of service;synchronous controllers;remotely configurable QoS aware cardiac activity sensor;wearable QoS aware cardiac activity sensor;wearable devices;objective control rules;dynamic control objectives;QoS properties;event-driven rules;computational communication constraints;account storage;self-adaptation framework;physical objects;Internet-of-things;discrete controllers;connected devices},
}

@InProceedings{Bailey2012,
  author    = {C. {Bailey}},
  title     = {Application of Self-Adaptive techniques to federated authorization models},
  booktitle = {2012 34th International Conference on Software Engineering (ICSE)},
  year      = {2012},
  pages     = {1495-1498},
  month     = {June},
  abstract  = {Authorization infrastructures are an integral part of any network where resources need to be protected. As organisations start to federate access to their resources, authorization infrastructures become increasingly difficult to manage, to a point where relying only on human resources becomes unfeasible. In our work, we propose a Self-Adaptive Authorization Framework (SAAF) that is capable of monitoring the usage of resources, and controlling access to resources through the manipulation of authorization assets (e.g., authorization policies, access rights and sessions), due to the identification of abnormal usage. As part of this work, we explore the use of models for facilitating the autonomic management of federated authorization infrastructures by 1) classifying access behaviour exhibited by users, 2) modelling authorization assets, including usage, for identifying abnormal behaviour, and 3) managing authorization through the adaptation and reflection of modelled authorization assets. SAAF will be evaluated by integrating it into an existing authorization infrastructure that would allow the simulation of abnormal usage scenarios.},
  doi       = {10.1109/ICSE.2012.6227053},
  groups    = {ieee},
  issn      = {1558-1225},
  keywords  = {authorisation;self-adaptive technique application;authorization infrastructures;self-adaptive authorization framework;SAAF;resource usage monitoring;resource access control;authorization asset manipulation;abnormal usage identification;federated authorization infrastructure autonomic management;access behaviour classification;authorization asset modelling;authorization asset adaptation;authorization asset reflection;Authorization;Adaptation models;Unified modeling language;Permission;Computational modeling;Monitoring;self-adaptation;model driven engineering;model transformation;authorization;computing security},
}

@InProceedings{Hrabia2019,
  author    = {C. {Hrabia} and P. M. {Lehmann} and S. {Albayrak}},
  title     = {Increasing Self-Adaptation in a Hybrid Decision-Making and Planning System with Reinforcement Learning},
  booktitle = {2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC)},
  year      = {2019},
  volume    = {1},
  pages     = {469-478},
  month     = {Jul},
  abstract  = {Task-level decision-making and AI planning are used to control autonomous robots from a high-level, mission-oriented perspective. The dynamic selection of most suitable actions allows the system to adapt to changes in the environment as well as its own state. Nevertheless, decision-making and AI planning often require a priori definitions of capabilities, rules, decision models, or world knowledge. Due to the challenge of handling the uncertainty of robot applications in dynamic and uncontrolled environments such definitions or descriptions are always incomplete, hence the possible adaptation capabilities are limited. In this paper, we present how the self-adaptation of a robot planning and decision-making system can be improved by incorporating reinforcement learning. Particularly, we show our approach of integrating deep reinforcement learning into the ROS Hybrid Behaviour Planner (RHBP).},
  doi       = {10.1109/COMPSAC.2019.00073},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {control engineering computing;decision making;learning (artificial intelligence);mobile robots;operating systems (computers);planning (artificial intelligence);robot programming;planning system;task-level decision-making;AI planning;autonomous robots;mission-oriented perspective;dynamic selection;decision models;robot applications;robot planning;deep reinforcement learning;hybrid decision-making;adaptation capabilities;reinforcement learning;self-adaptation;ROS hybrid behaviour planner;Robots;Planning;Decision making;Sensors;Reinforcement learning;Gradient methods;decision-making, planning, reinforcement learning, self-adaptation, autonomous robots},
}

@InProceedings{Gerostathopoulos2019a,
  author    = {I. {Gerostathopoulos} and E. {Pournaras}},
  title     = {TRAPPed in Traffic? A Self-Adaptive Framework for Decentralized Traffic Optimization},
  booktitle = {2019 IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2019},
  pages     = {32-38},
  month     = {May},
  abstract  = {Optimizing the traffic flow in a city is a challenging problem, especially in a future traffic system of self-driving cars and sharing vehicles. This is due to the interactions between the individual traffic agents (vehicles) that compete for the use of the common infrastructure (streets) given traffic dynamics such as stop-and-go effects, changing lanes, and other. The goal of this paper is to provide a solution to the above problem that works in a fully decentralized and participatory way, i.e. autonomous agents collaborate without a centralized data collector and arbitrator. Such a solution should be scalable, privacy-preserving, and flexible with respect to the degree of autonomy of agents. A self-adaptive framework to support this research is introduced: TRAPP - Traffic Reconfigurations via Adaptive Participatory Planning. The framework relies on a microscopic traffic simulator, SUMO, for simulating urban mobility scenarios, and on a decentralized multi-agent planning system, EPOS, for decentralized combinatorial optimization, applied here in traffic flows. A data-driven interoperation of the two tools in the proposed framework allows high modularity and customization for experimenting with different scenarios, optimization objectives and agents' behavior and as such providing new perspectives for resilient future traffic infrastructures.},
  doi       = {10.1109/SEAMS.2019.00014},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {data privacy;multi-agent systems;open systems;optimisation;road traffic;traffic engineering computing;ubiquitous computing;resilient future traffic infrastructures;self-adaptive framework;decentralized traffic optimization;traffic flow;future traffic system;self-driving cars;sharing vehicles;individual traffic agents;common infrastructure given traffic dynamics;autonomous agents;centralized data collector;microscopic traffic simulator;multiagent planning system;decentralized combinatorial optimization;optimization objectives;TRAPP;traffic reconfigurations adaptive participatory planning;Planning;Optimization;Automobiles;Adaptation models;Graphical user interfaces;Monitoring;self-adaptation;optimization;multi-agent system;traffic;planning;framework},
}

@InProceedings{Silva2012a,
  author    = {J. M. C. {Silva} and S. R. {Lima}},
  title     = {Optimizing Network Measurements through Self-adaptive Sampling},
  booktitle = {2012 IEEE 14th International Conference on High Performance Computing and Communication 2012 IEEE 9th International Conference on Embedded Software and Systems},
  year      = {2012},
  pages     = {794-801},
  month     = {June},
  abstract  = {Traffic sampling techniques are crucial and extensively used to assist network management tasks. Nevertheless, combining accurate network parameters' estimation and flexible lightweight measurements is an open challenge. In this context, this paper proposes a self-adaptive sampling technique, based on linear prediction, which allows to reduce significantly the measurement overhead, while assuring that sampled traffic reflects the statistical characteristics of the global traffic under analysis. The technique is multiadaptive as several parameters are considered in the dynamic configuration of the traffic selection process. The devised test scenarios aim at exploring the proposed sampling technique ability to join accurate network estimates to reduced overhead, using throughput as reference parameter. The evaluation results, obtained resorting to real traffic traces representing wired and wireless aggregated traffic scenarios and actual network services, prove that the simplicity, flexibility and self-adaptability of this technique can be successfully explored to improve network measurements efficiency over distinct traffic conditions. For optimization purposes, this paper also includes a study of the impact of varying the order of prediction, i.e., of considering different degrees of past memory in the self-adaptive estimation mechanism. The significance of the obtained results is demonstrated through statistical benchmarking.},
  doi       = {10.1109/HPCC.2012.112},
  groups    = {ieee},
  keywords  = {computer network management;optimisation;parameter estimation;sampling methods;statistical analysis;telecommunication traffic;network measurement optimization;traffic sampling techniques;network management tasks;network parameter estimation;self-adaptive sampling technique;linear prediction;measurement overhead reduction;dynamic configuration;traffic selection process;network throughput;reference parameter;global traffic trace resorting;wired aggregated traffic scenarios;wireless aggregated traffic scenarios;network services;self-adaptive estimation mechanism;statistical benchmarking;Throughput;Estimation;Time measurement;Correlation;Accuracy;Prediction algorithms},
}

@InProceedings{Liu2012a,
  author    = {L. {Liu} and X. {Dai} and L. {Sun} and Z. {Wang}},
  title     = {An Approach to Model 3D Stratum Surface with High Quality Self-adaptive Mesh},
  booktitle = {2012 IEEE 14th International Conference on High Performance Computing and Communication 2012 IEEE 9th International Conference on Embedded Software and Systems},
  year      = {2012},
  pages     = {1708-1711},
  month     = {June},
  abstract  = {Modelling 3D stratum surface is difficult because the number of exploratory holes is usually too small. As an attempt to solve this problem, many interpolation methods were proposed to estimate the surface between the holes. In this paper, we propose an approach to interpolate 3D spatial points and model stratum surface. The curvature of the original surface mesh is embedded into kriging interpolation method and applied to determine interpolation density and generate self-adaptive mesh. In experiments, we offer the comparison between our method and other interpolation methods and give the analysis and efficiency of our method.},
  doi       = {10.1109/HPCC.2012.255},
  groups    = {ieee},
  keywords  = {embedded systems;interpolation;mesh generation;solid modelling;3D stratum surface model;high quality self-adaptive mesh;exploratory holes;3D spatial points interpolation;surface mesh curvature;kriging interpolation method;interpolation density;self-adaptive mesh generation;Interpolation;Computational modeling;Computer integrated manufacturing;Solid modeling;Image color analysis;Object oriented modeling;Conferences;interpolation;kriging;curvature;self-adaptive mesh;delaunay},
}

@InProceedings{Malik2016,
  author    = {A. A. {Malik} and H. {Anwar} and M. A. {Shibli}},
  title     = {Self-adaptive access control delegation in cloud computing},
  booktitle = {2016 17th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)},
  year      = {2016},
  pages     = {169-176},
  month     = {May},
  abstract  = {Cloud computing has seen significant progress in the last decade, and is still on the rise. A big number of companies are shifting their infrastructure to the cloud because of the numerous advantages it offers, such as rapid elasticity and scalability. However, moving to the cloud also presents a number of challenges. In this paper we focus on one of the major challenges, i.e., access control and delegation in a cloud environment. There exist many frameworks and models that solve issues pertinent to this area and allow dynamic delegation of access rights. However, none of them are robust enough to handle unprecedented changes, i.e., situations not handled at the time of requirements engineering. We've presented a risk-based, self-adaptive access control and delegation framework that caters to such situations by continuously monitoring and evaluating the user risk score and environmental factors, and automatically adapting to the changes incurred by reconfiguring the system. The proposed framework is able to adapt to unprecedented change as it can delegate access rights to previously unauthorized users in an emergency situation and revoke users' access rights based on environmental factors, while running in a continuous feedback loop.},
  doi       = {10.1109/SNPD.2016.7515896},
  groups    = {ieee},
  keywords  = {authorisation;cloud computing;environmental factors;cloud computing;cloud environment;dynamic delegation;access rights;requirements engineering;user risk score;environmental factors;self-adaptive access control-and-delegation;Permission;Access control;Cloud computing;Monitoring;Adaptation models;Requirements engineering;Environmental factors;Self-Adaptive Systems;Access Control & Delegation;Continuous Monitoring;Adaptation to Unanticipated Events},
}

@InProceedings{Zolfpour-Arokhlo2011,
  author    = {M. {Zolfpour-Arokhlo} and A. {Selamat} and S. Z. M. {Hashim}},
  title     = {Self-adaptive and multi-agent reinforcement learning in route guidance system},
  booktitle = {2011 Malaysian Conference in Software Engineering},
  year      = {2011},
  pages     = {383-387},
  month     = {Dec},
  abstract  = {Several challenges in traffic control in route guidance system causes increasing number of vehicles to transport goods and people in our society. The concept of autonomous agents fits most actors in transportation systems: the traffic, the expert, the driver. More so, traffic signals and intersection can also be regarded as an autonomous agent. Though, there are increased number of agents, typical agents make response to changes in their environment and are highly self-adaptive, but create an unpredictable collective pattern, and response in a highly coupled environment, most challenges for standard techniques are created by this domain in route guidance system from multi-agent systems such as reinforcement learning and self-adaptive. This research has two main goals in route guidance system: first, to present problems, methods, new approaches; and second, open problems and challenges are highlighted so that future research in route guidance system using multi-agent systems will be able to address them.},
  doi       = {10.1109/MySEC.2011.6140702},
  groups    = {ieee},
  keywords  = {learning (artificial intelligence);multi-agent systems;traffic control;multiagent reinforcement learning;route guidance system;traffic control;transportation systems;multiagent systems;autonomous agent;unpredictable collective pattern;Vehicles;Multiagent systems;Learning;Roads;Mathematical model;Adaptation models;self-adaptive multi-agent system (SAMAS);route guidance system (RGS);multi-agent reinforcement learning (MARL);shortest path problem (SPP)},
}

@InProceedings{Wu2019a,
  author    = {J. {Wu} and X. {Wang}},
  title     = {A Self-Adaptive Trend Extraction Algorithm: Based on Slope and Relative Displacement},
  booktitle = {2019 IEEE 10th International Conference on Software Engineering and Service Science (ICSESS)},
  year      = {2019},
  pages     = {1-7},
  month     = {Oct},
  abstract  = {The Self-Adaptive Time Series Trend Extraction Algorithm (PLR-SATEA) based on slope and relative displacement extracts trends of time series based on the slope variation amplitude and relative displacement shape of time series data itself. Without setting threshold, PLR-SATEA algorithm can accurately identify portion extreme points, horizontal inflection points and main trends. After one traversal, the portion one-way trend can be removed. Therefore, the algorithm is highly self-adapted, supporting dynamic growth. Its time complexity is O(n). Experimental results show that the PLR-SATEA algorithm has strong universality. In the fitting experiments of 85 UCR data sets collected by Keogh et al., the fitting error, unit time fitting error and compression ratio all performed well.},
  doi       = {10.1109/ICSESS47205.2019.9040754},
  groups    = {ieee},
  issn      = {2327-0594},
  keywords  = {computational complexity;time series;slope variation amplitude;relative displacement;time series data;PLR-SATEA algorithm;portion extreme points;horizontal inflection points;time complexity;unit time fitting error;self-adaptive trend extraction algorithm;self-adaptive time series trend extraction algorithm;Time Series;Piecewise Linear Representation;Relative Displacement;Trend Extraction;Pattern Recognition},
}

@InProceedings{Liu2015,
  author    = {W. {Liu} and M. {Li}},
  title     = {Requirements Planning with Event Calculus for Runtime Self-Adaptive System},
  booktitle = {2015 IEEE 39th Annual Computer Software and Applications Conference},
  year      = {2015},
  volume    = {2},
  pages     = {77-82},
  month     = {July},
  abstract  = {Self-adaptation of Multi-agent systems requires dynamic decision making and planning at runtime. Modeling the contextual and executable requirements of such systems as planning actions and states, this paper proposes a requirements-driven planning approach to self-adaptation. The planning model includes the states of the system context and the actions describing the behaviors of its multiple agents, the interactions between these agents and their environment are computed through an expansion of the requirements-driven planning graph, which is then used to verify whether the agents can collaborate in order to reach the desired goal states from their current states. In addition, the requirements are represented for Event Calculus to facilitate monitoring and reasoning about the actions of agents, achieving requirements-driven planning at runtime.},
  doi       = {10.1109/COMPSAC.2015.18},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {formal specification;graph theory;multi-agent systems;temporal logic;runtime self-adaptive system;self-adaptation;multiagent systems;dynamic decision making;contextual requirements modeling;executable requirements modeling;planning actions;planning states;requirements-driven planning approach;planning model;system context states;multiple agents behaviors;requirements-driven planning graph;goal states;event calculus;Planning;Runtime;Adaptation models;Calculus;Robots;Semantics;Monitoring;requirement planning graph;event calculus;runtime self-adaptation;robot},
}

@InProceedings{DAngelo2018a,
  author    = {M. {D'Angelo}},
  title     = {Decentralized Self-Adaptive Computing at the Edge},
  booktitle = {2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2018},
  pages     = {144-148},
  month     = {May},
  abstract  = {Nowadays, computing infrastructures are usually deployed in fully controlled environments and managed in a centralized fashion. Leveraging on centralized infrastructures prevent the system to deal with scalability and performance issues, which are inherent to modern large-scale data-intensive applications. On the other hand, we envision fully decentralized computing infrastructures deployed at the edge of the network providing the required support for operating data-intensive systems. However, engineering such systems raises many challenges, as decentralization introduces uncertainty, which in turn may harm the dependability of the system. To this end, self-adaptation is a key approach to manage uncertainties at runtime and satisfy the requirements of decentralized data-intensive systems. This paper shows the research directions and current contributions towards this vision by (i) evaluating the impact of the distribution of computational entities, (ii) engineering decentralized computing through self-adaptation and, (iii) evaluating decentralized and self-adaptive applications.},
  groups    = {ieee},
  issn      = {2157-2305},
  keywords  = {distributed processing;computing infrastructures;centralized infrastructures;large-scale data-intensive applications;decentralized data-intensive systems;self-adaptive applications;decentralized self-adaptive computing at the edge;Uncertainty;Scalability;Cloud computing;Servers;Runtime;Edge computing;Performance evaluation;self adaptive systems;data intensive systems;decentralized computing;edge computing},
}

@InProceedings{Yu2012,
  author    = {L. {Yu} and H. {Jin} and W. {Jiang} and G. {Liao} and X. {Liao}},
  title     = {Self-adaptive Schedule Mechanism for Peer-to-peer Multi-rate Live Streaming System},
  booktitle = {2012 IEEE 14th International Conference on High Performance Computing and Communication 2012 IEEE 9th International Conference on Embedded Software and Systems},
  year      = {2012},
  pages     = {666-672},
  month     = {June},
  abstract  = {Traditional peer-to-peer live streaming systems usually have one specific streaming rate for one single channel. However, with the terminals diversifying, especially smart mobile phones bursting, the desire for multi-rates from one single channel topology of P2P live streaming becomes urgent, while considering that the network environments and topologies always change momentarily. High rate stream would make some terminals lost media data due to limited bandwidth and CPU etc., while low rate one would bring low quality data for terminals even if they have enough resources. To solve above problems, a new method called self-adaptive scheduling mechanism is proposed. A stream is divided into several sub-streams with different bit rates. These sub-streams are delivered by only one channel topology. Terminals with different capacities and bandwidths play different roles and try their best to deliver sub-streams while cooperating with other peers in the channel. Users can change the bit rates of channels they are watching. Moreover the bit rates also can change according to the bandwidths of the network adaptively. This mechanism is implemented for live streaming in real system, called MoSee. The experimental results prove that the efficiency of the mechanism is good.},
  doi       = {10.1109/HPCC.2012.95},
  groups    = {ieee},
  keywords  = {media streaming;peer-to-peer computing;resource allocation;scheduling;smart phones;telecommunication channels;telecommunication network topology;self-adaptive schedule mechanism;peer-to-peer multirate live streaming system;smart mobile phone bursting;media data loss;channel topology;terminal capacities;terminal bandwidths;channel bit rates;MoSee;P2P computing;Peer to peer computing;Bit rate;Bandwidth;Media;Topology;Servers;Network topology;peer-to-peer;live streaming;self-adaptive schedule},
}

@InProceedings{Leal2019,
  author    = {L. {Leal} and A. {Ceccarelli} and E. {Martins}},
  title     = {The SAMBA Approach for Self-Adaptive Model-Based Online Testing of Services Orchestrations},
  booktitle = {2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC)},
  year      = {2019},
  volume    = {1},
  pages     = {495-500},
  month     = {Jul},
  abstract  = {Service Oriented Architecture (SOA) is a popular design pattern that allows building applications composed of loosely-coupled and autonomous services. Such services may evolve and change at runtime, often outside the control of the owner of the application. Consequently, typical validation approaches, like offline testing performed before services deployment, are necessary but not sufficient: offline testing cannot assure the correct behavior of the SOA during its execution. To cope with the evolution of services and their orchestrations, in this paper we present a Self-Adaptive Model-BAsed online testing framework called SAMBA. SAMBA aims to assess the proper behavior of a SOA during its lifecycle executing model-based online testing at runtime, under the coordination of a MAPE-K control loop. SAMBA is assessed in a case study, where its detection capability are proved through functional, mutation and fault injection tests.},
  doi       = {10.1109/COMPSAC.2019.00076},
  groups    = {ieee},
  issn      = {0730-3157},
  keywords  = {object-oriented methods;object-oriented programming;program testing;service-oriented architecture;SAMBA approach;services orchestrations;SOA;Self-Adaptive Model-BAsed online testing framework;design pattern;service oriented architecture;MAPE-K control loop;Testing;Service-oriented architecture;Monitoring;Runtime;Business;Servers;Generators;self-adaptive;Service Oriented Architecture;model-based testing;online testing},
}
{C��mara2012,
  author        = {J. {C��mara} and R. {de Lemos}},
  title         = {Evaluation of resilience in self-adaptive systems using probabilistic model-checking},
  booktitle     = {2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year          = {2012},
  pages         = {53-62},
  month         = {June},
  __markedentry = {[guan:6]},
  abstract      = {The provision of assurances for self-adaptive systems presents its challenges since uncertainties associated with its operating environment often hamper the provision of absolute guarantees that system properties can be satisfied. In this paper, we define an approach for the verification of self-adaptive systems that relies on stimulation and probabilistic model-checking to provide levels of confidence regarding service delivery. In particular, we focus on resilience properties that enable us to assess whether the system is able to maintain trustworthy service delivery in spite of changes in its environment. The feasibility of our proposed approach for the provision of assurances is evaluated in the context of the Znn.com case study.},
  doi           = {10.1109/SEAMS.2012.6224391},
  issn          = {2157-2321},
  keywords      = {fault tolerant computing;formal verification;trusted computing;self-adaptive systems;resilience evaluation;probabilistic model-checking;operating environment;service delivery;trustworthy service delivery;Probabilistic logic;Adaptation models;Time factors;Servers;Resilience;Data models;Monitoring;resilience;assurances;evaluation;probabilistic model checking;stimulation;self-adaptation},
}

@InProceedings{Herbst2015,
  author    = {N. R. {Herbst} and S. {Kounev} and A. {Weber} and H. {Groenda}},
  title     = {BUNGEE: An Elasticity Benchmark for Self-Adaptive IaaS Cloud Environments},
  booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2015},
  pages     = {46-56},
  month     = {May},
  abstract  = {Today's infrastructure clouds provide resource elasticity (i.e. Auto-scaling) mechanisms enabling self-adaptive resource provisioning to reflect variations in the load intensity over time. These mechanisms impact on the application performance, however, their effect in specific situations is hard to quantify and compare. To evaluate the quality of elasticity mechanisms provided by different platforms and configurations, respective metrics and benchmarks are required. Existing metrics for elasticity only consider the time required to provision and deprovision resources or the costs impact of adaptations. Existing benchmarks lack the capability to handle open workloads with realistic load intensity profiles and do not explicitly distinguish between the performance exhibited by the provisioned underlying resources, on the one hand, and the quality of the elasticity mechanisms themselves, on the other hand. In this paper, we propose reliable metrics for quantifying the timing aspects and accuracy of elasticity. Based on these metrics, we propose a novel approach for benchmarking the elasticity of Infrastructure-as-a-Service (IaaS) cloud platforms independent of the performance exhibited by the provisioned underlying resources. We show that the proposed metrics provide consistent ranking of elastic platforms on an ordinal scale. Finally, we present an extensive case study of real-world complexity demonstrating that the proposed approach is applicable in realistic scenarios and can cope with different levels of resource efficiency.},
  doi       = {10.1109/SEAMS.2015.23},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {cloud computing;BUNGEE;self-adaptive IaaS cloud environments;resource elasticity benchmark;self-adaptive resource provisioning;realistic load intensity profiles;infrastructure-as-a-service cloud platforms;ordinal scale;Elasticity;Benchmark testing;Accuracy;Jitter;Load modeling;Timing;IaaS;cloud;metrics;benchmarking;elasticity;workload;measurement;provisioning;adaptation},
}
{F��lixSolano2019,
  author        = {G. {F��lix Solano} and R. {Diniz Caldas} and G. {Nunes Rodrigues} and T. {Vogel} and P. {Pelliccione}},
  title         = {Taming Uncertainty in the Assurance Process of Self-Adaptive Systems: a Goal-Oriented Approach},
  booktitle     = {2019 IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year          = {2019},
  pages         = {89-99},
  month         = {May},
  __markedentry = {[guan:6]},
  abstract      = {Goals are first-class entities in a self-adaptive system (SAS) as they guide the self-adaptation. A SAS often operates in dynamic and partially unknown environments, which cause uncertainty that the SAS has to address to achieve its goals. Moreover, besides the environment, other classes of uncertainty have been identified. However, these various classes and their sources are not systematically addressed by current approaches throughout the life cycle of the SAS. In general, uncertainty typically makes the assurance provision of SAS goals exclusively at design time not viable. This calls for an assurance process that spans the whole life cycle of the SAS. In this work, we propose a goal-oriented assurance process that supports taming different sources (within different classes) of uncertainty from defining the goals at design time to performing self-adaptation at runtime. Based on a goal model augmented with uncertainty annotations, we automatically generate parametric symbolic formulae with parameterized uncertainties at design time using symbolic model checking. These formulae and the goal model guide the synthesis of adaptation policies by engineers. At runtime, the generated formulae are evaluated to resolve the uncertainty and to steer the self-adaptation using the policies. In this paper, we focus on reliability and cost properties, for which we evaluate our approach on the Body Sensor Network (BSN) implemented in OpenDaVINCI. The results of the validation are promising and show that our approach is able to systematically tame multiple classes of uncertainty, and that it is effective and efficient in providing assurances for the goals of self-adaptive systems.},
  doi           = {10.1109/SEAMS.2019.00020},
  issn          = {2157-2321},
  keywords      = {body sensor networks;formal specification;formal verification;telecommunication computing;telecommunication network reliability;body sensor network;BSN;OpenDaVINCI;adaptation policies;goal model guide;symbolic model checking;parameterized uncertainties;parametric symbolic formulae;uncertainty annotations;goal-oriented assurance process;design time;SAS goals;assurance provision;life cycle;goal-oriented approach;self-adaptive system;Uncertainty;Synthetic aperture sonar;Adaptation models;Runtime;Task analysis;Reliability;Temperature sensors;Self-adaptive systems;uncertainty;goal modelling;symbolic model checking;adaptation policy;markov decision process},
}

@InProceedings{Zhang2012a,
  author    = {Y. {Zhang} and Z. {Fang} and H. {Sun} and L. {Chen}},
  title     = {SARA: A Self-Adaptive Routing Algorithm in Wireless Sensor Network},
  booktitle = {2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing},
  year      = {2012},
  pages     = {621-626},
  month     = {Aug},
  abstract  = {With the development of WSN applications, there is increasing concern for the research of WSN. The routing algorithm is one of the important supporting technologies of WSN. However, the current studies of routing algorithms focus on the single performance. For instance, the aim of Energy Multipath Routing Algorithm is to maximize the network life cycle. And the aim of the Minimal-hop routing algorithm is to minimize the network transmission delay. This paper synthesizes the three performance indicators, namely network life cycle, network latency and network reliability to propose a Self-adaptive Routing Algorithm (SARA). SARA could satisfy different network requirements by adjusting the parameters. The experimental result shows that SARA can reduce the network latency, extend the network lifecycle and enhance the network reliability compared with the Multi-path energy efficient algorithm.},
  doi       = {10.1109/SNPD.2012.132},
  groups    = {ieee},
  keywords  = {telecommunication network reliability;telecommunication network routing;wireless sensor networks;SARA;self-adaptive routing algorithm;wireless sensor network;WSN application;energy multipath routing algorithm;network life cycle maximization;minimal-hop routing algorithm;network transmission delay minimization;network latency;network reliability;multipath energy-efficient algorithm;Routing;Routing protocols;Reliability;Algorithm design and analysis;Wireless sensor networks;Energy consumption;Quality of service;WSN;Self-adaptive;Network Life Cycle;Network Latency;Reliability},
}

@InProceedings{daSilva2017,
  author    = {C. E. {da Silva} and J. D. {Saraiva da Silva} and C. {Paterson} and R. {Calinescu}},
  title     = {Self-Adaptive Role-Based Access Control for Business Processes},
  booktitle = {2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2017},
  pages     = {193-203},
  month     = {May},
  abstract  = {We present an approach for dynamically reconfiguring the role-based access control (RBAC) of information systems running business processes, to protect them against insider threats. The new approach uses business process execution traces and stochastic model checking to establish confidence intervals for key measurable attributes of user behaviour, and thus to identify and adaptively demote users who misuse their access permissions maliciously or accidentally. We implemented and evaluated the approach and its policy specification formalism for a real IT support business process, showing their ability to express and apply a broad range of self-adaptive RBAC policies.},
  doi       = {10.1109/SEAMS.2017.13},
  groups    = {ieee},
  keywords  = {authorisation;business data processing;data protection;information systems;self-adaptive role-based access control;dynamically reconfigured RBAC;information systems;business process execution traces;stochastic model checking;confidence intervals;user behaviour;access permissions;self-adaptive RBAC policies;Business;Probabilistic logic;Access control;Model checking;Information systems;Markov processes;Probability;adaptive role-based access control;business processes;probabilistic model checking;Markov models;insider threats},
}

@InProceedings{Hassan2015,
  author    = {S. {Hassan} and N. {Bencomo} and R. {Bahsoon}},
  title     = {Minimizing Nasty Surprises with Better Informed Decision-Making in Self-Adaptive Systems},
  booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2015},
  pages     = {134-145},
  month     = {May},
  abstract  = {Designers of self-adaptive systems often formulate adaptive design decisions, making unrealistic or myopic assumptions about the system's requirements and environment. The decisions taken during this formulation are crucial for satisfying requirements. In environments which are characterized by uncertainty and dynamism, deviation from these assumptions is the norm and may trigger "surprises". Our method allows designers to make explicit links between the possible emergence of surprises, risks and design trade-offs. The method can be used to explore the design decisions for self-adaptive systems and choose among decisions that better fulfil (or rather partially fulfil) non-functional requirements and address their trade-offs. The analysis can also provide designers with valuable input for refining the adaptation decisions to balance, for example, resilience (i.e. Satisfiability of non-functional requirements and their trade-offs) and stability (i.e. Minimizing the frequency of adaptation). The objective is to provide designers of self adaptive systems with a basis for multi-dimensional what-if analysis to revise and improve the understanding of the environment and its effect on non-functional requirements and thereafter decision-making. We have applied the method to a wireless sensor network for flood prediction. The application shows that the method gives rise to questions that were not explicitly asked before at design-time and assists designers in the process of risk-aware, what-if and trade-off analysis.},
  doi       = {10.1109/SEAMS.2015.13},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {decision making;fault tolerant computing;nasty surprise minimization;informed decision making;self-adaptive systems;adaptive design decision formulation;system requirements;system environment;uncertainty;dynamism;design trade-offs;design decisions;nonfunctional requirements;multidimensional what-if analysis;decision-making;wireless sensor network;flood prediction;Monitoring;Decision making;Stakeholders;Indexes;Adaptive systems;Uncertainty;Runtime},
}

@InProceedings{DiMarco2013a,
  author    = {A. {Di Marco} and P. {Inverardi} and R. {Spalazzese}},
  title     = {Synthesizing self-adaptive connectors meeting functional and performance concerns},
  booktitle = {2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2013},
  pages     = {133-142},
  month     = {May},
  abstract  = {Today's networked environment is characterized by a wide variety of heterogeneous systems that dynamically decide to interoperate to achieve some goal. In this context, systems meet and know each other at runtime when they want to start to interoperate. Given the huge heterogeneity and dynamism characterizing the described environment, automated solutions appear to be the only way to achieve interoperability timely and with the needed level of flexibility. We already proposed an approach to the automated synthesis of connectors (or mediators) to reconcile protocols diversities and to allow systems interoperability. In this paper, building upon our previous work, we describe a solution to the automated synthesis of connectors: (a) that takes into account performance concerns during the synthesis process and (b) whose synthesized connectors are (self-) adaptive with respect to runtime performance requirements changes. By reasoning on systems' specification, the approach first produces a mediator that satisfies the functional requirements. Then it acts on the produced mediator to let it satisfy performance issues and to make it (self-)adaptive.},
  doi       = {10.1109/SEAMS.2013.6595500},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {formal specification;open systems;self-adaptive connector synthesis;heterogeneous system;interoperability;protocols diversity;system specification;functional requirement;Connectors;Protocols;Runtime;Cognition;Ontologies;Moon;Throughput;Connector Synthesis;Self-Adaptive;Interoper-ability;Performance},
}

@InProceedings{Tamura2013,
  author    = {G. {Tamura} and N. M. {Villegas} and H. A. {Muller} and L. {Duchien} and L. {Seinturier}},
  title     = {Improving context-awareness in self-adaptation using the DYNAMICO reference model},
  booktitle = {2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2013},
  pages     = {153-162},
  month     = {May},
  abstract  = {Self-adaptation mechanisms modify target systems dynamically to address adaptation goals, which may evolve continuously due to changes in system requirements. These changes affect values and thresholds of observed context variables and monitoring logic, or imply the addition and/or deletion of context variables, thus compromising self-adaptivity effectiveness under static monitoring infrastructures. Nevertheless, self-adaptation approaches often focus on adapting target systems only rather than monitoring infrastructures. Previously, we proposed DYNAMICO, a reference model for self-adaptive systems where adaptation goals and monitoring requirements change dynamically. This paper presents an implementation of DYNAMICO comprising our SMARTERCONTEXT monitoring infrastructure and QoS-CARE adaptation framework in a self-adaptation solution that maintains its context-awareness relevance. To evaluate our reference model we use self-adaptive system properties and the Znn.com exemplar to compare the Rainbow system with our DYNAMICO implementation. The results of the evaluation demonstrate the applicability, feasibility, and effectiveness of DYNAMICO, especially for self-adaptive systems with context-awareness requirements.},
  doi       = {10.1109/SEAMS.2013.6595502},
  groups    = {ieee},
  issn      = {2157-2321},
  keywords  = {service-oriented architecture;ubiquitous computing;DYNAMICO reference model;self-adaptation mechanism;adaptation goal;SMARTERCONTEXT monitoring infrastructure;QoS-CARE adaptation framework;context-awareness relevance;self-adaptive system property;Rainbow system;dynamic adaptation monitoring and control objectives model;dynamic SOA governance;service-oriented architecture;QoS contract-aware reconfiguration system;quality of service;Znn.com exemplar;Monitoring;Context;Quality of service;Feedback loop;Adaptation models;Runtime;Synthetic aperture sonar},
}

@InProceedings{Baresi2019,
  author    = {L. {Baresi} and G. {Denaro} and G. {Quattrocchi}},
  title     = {Big-Data Applications as Self-Adaptive Systems of Systems},
  booktitle = {2019 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)},
  year      = {2019},
  pages     = {155-162},
  month     = {Oct},
  abstract  = {Virtualization technologies have enabled a new way of thinking of computing resources and cloud computing frameworks offer many pay-per-use solutions for renting these resources. Conventional physical servers had to be acquired, provisioned, and configured beforehand; virtual resources can be allocated on demand, and changes can be managed quickly. Deploying systems on virtualized resources allows one to allocate resources given the actual workload and KPIs of interest, but it requires that resource management be part of the system itself. Traditional application components must be augmented with probes and actuators to sense the application behavior and provision resources accordingly. Big data applications are a prominent example of these modern systems, and the paper discusses dynaSpark, that is, the work done by the authors to extend Spark standalone -a well-known framework widely used for parallel processing and big data applications- and augment it with resource management capabilities. It also introduces the key problems the integration and the particular batch applications bring in, and identifies additional aspects that are still to be taken into account and that would lead to a better solution.},
  doi       = {10.1109/ISSREW.2019.00066},
  groups    = {ieee},
  keywords  = {Big Data;cloud computing;parallel processing;resource allocation;virtual machines;virtualisation;self-adaptive systems;virtualization technologies;cloud computing frameworks;physical servers;virtualized resources;resource provisioning;resource management capabilities;batch applications;Big Data applications;Big-data applications;Spark;Dynamic resource management},
}

@InProceedings{Vahabi2013,
  author    = {M. {Vahabi} and E. {Tovar} and M. {Albano}},
  title     = {A self-adaptive approximate interpolation scheme for dense sensing},
  booktitle = {2013 8th IEEE International Symposium on Industrial Embedded Systems (SIES)},
  year      = {2013},
  pages     = {105-109},
  month     = {June},
  abstract  = {Very dense networks offer a better resolution of the physical world and therefore a better capability of detecting the occurrence of an event; this is of paramount importance for a number of industrial applications. However, the scale of such systems poses huge challenges in terms of interconnectivity and timely data processing. In this paper we will look at efficient scalable data acquisition methods for such densely instrumented cyber-physical systems. Previous research works have proposed approaches for obtaining an interpolation of sensor readings from different sensor nodes. Those approaches are based on dominance protocols, presenting therefore excellent scalability properties for dense instrumented systems. In this paper we propose an important advance to the state-of-the-art. Our novel approach not only incorporates a physical model to enable more accurate approximate interpolations but it also detects and self-adapts to changes in the physical model.},
  doi       = {10.1109/SIES.2013.6601481},
  groups    = {ieee},
  issn      = {2150-3117},
  keywords  = {access protocols;computerised instrumentation;data acquisition;interpolation;self-adjusting systems;sensors;self-adaptive approximate interpolation scheme;dense sensing;physical world resolution;event occurrence detection capability;interconnectivity;timely data processing;scalable data acquisition methods;densely instrumented cyber-physical systems;sensor reading interpolation;dominance protocols;scalability properties;Interpolation;Aggregates;Sensor Networks;Data Acquisition;Aggregate Quantities;Dominance-based MAC Protocols},
}

@InProceedings{Ali2015,
  author    = {N. {Ali} and C. {Solis}},
  title     = {Self-Adaptation to Mobile Resources in Service Oriented Architecture},
  booktitle = {2015 IEEE International Conference on Mobile Services},
  year      = {2015},
  pages     = {407-414},
  month     = {June},
  abstract  = {Mobile or pervasive systems continuously change their environments and resources (e.g. Battery or bandwidth). Mobile applications require different services when they enter or exit environments and as their resources change. In this paper, we propose a service oriented architectural approach that supports self-adaptation to changes in resources and location topology when mobility occurs, by reconfiguring the software architecture at runtime. The location topology and mobility primitives are inspired from ambient calculus. Our approach considers ambients to be autonomic elements that can manage elements located in them to their environment and provide them with new services suited to the available resources, when mobility occurs. Ambients implement a hierarchical and decentralized MAPE-K loop to adapt the distributed and mobile service oriented architecture to the resource requirements. We have designed an algorithm based on swarm optimization technique in order to allow ambients to optimally plan the reconfiguration process according to available services and resources. Throughout the paper, we use a scenario to illustrate our approach and perform initial evaluations on the swarm algorithm.},
  doi       = {10.1109/MobServ.2015.62},
  groups    = {ieee},
  issn      = {2329-6453},
  keywords  = {mobile computing;optimisation;service-oriented architecture;software fault tolerance;self-adaptation;mobile resources;mobile systems;pervasive systems;location topology;mobility primitives;ambient calculus;element management;hierarchical MAPE-K loop;decentralized MAPE-K loop;distributed service oriented architecture;mobile service oriented architecture;swarm optimization technique;reconfiguration process;Motion pictures;Mobile handsets;Mobile communication;Runtime;Contracts;Computer architecture;autonomic computing;mobile ambients;self-adaptation;service oriented architectural model;mobile resources;discrete swarm particle optimization},
}

@Article{Cabrera2019,
  author   = {C. {Cabrera} and S. {Clarke}},
  title    = {A Self-Adaptive Service Discovery Model for Smart Cities},
  journal  = {IEEE Transactions on Services Computing},
  year     = {2019},
  pages    = {1-1},
  issn     = {1939-1374},
  abstract = {City services are frequently supported by software services that are managed by service-oriented architectures. However, a large number of software services is likely to cause performance issues when discovering software services. The distributed organisation of services information improves discovery performance. Existing research proposes to organise services information according to service location, domains, or city context, keeping that organisation constant under an assumption that cities do not change. However, cities are dynamic environments where entities interact, causing events that in turn, effect changes in the city. The organisation of services information must evolve or it will become outdated, negatively impacting discovery performance. We propose a self-adaptive service model for smart cities to support service discovery. This model adapts the organisation of services information according to city events. We introduce a self-adaptive architecture that keeps track of the discovery metrics and moves information about services between registries to maintain the discovery efficiency. We evaluate the proposed model in simulated environments and a real IoT testbed. Results show that our model outperforms competitors when reactive adaptation is triggered by a specific event. However, proactive adaptation needs further research. Results from the real IoT testbed present the costs of the proposed model.},
  doi      = {10.1109/TSC.2019.2944356},
  groups   = {ieee},
  keywords = {Logic gates;Smart cities;Adaptation models;Sensors;Software;Computer architecture;Internet of Things;Smart Cities;Self-Adaptive Systems;Pervasive Computing;Service Discovery},
}

@InProceedings{Zhang2001,
  author    = {W. {Zhang} and B. {Xu} and H. {Yang}},
  title     = {Development of a self-adaptive Web search engine},
  booktitle = {Proceedings 3rd International Workshop on Web Site Evolution. WSE 2001},
  year      = {2001},
  pages     = {86-93},
  month     = {Nov},
  abstract  = {As the Web evolves towards the direction of providing more and more information, locating the desired information efficiently becomes a very important issue. Web search engines are very useful information search tools in the Internet. Current Web search engines produce search results relating to the search terms and the actual information collected by them. Since the selections of the search results cannot affect the future ones, they may not cover most people's interests. Feedback information produced by users' accessing lists can influence the search results. Thus the search engines can provide self-adaptability.},
  doi       = {10.1109/WSE.2001.988790},
  groups    = {ieee},
  keywords  = {search engines;information resources;information retrieval;adaptive systems;feedback;human factors;self-adaptive Web search engine development;information search tools;Internet;search results;search terms;feedback information;user list access;self-adaptability;Web search;Search engines;Output feedback;Computer science;World Wide Web;Web and internet services;Privacy;IP networks;Robots;Indexes},
}

@InProceedings{Baud2009,
  author    = {L. {Baud}},
  title     = {Robust Overlay Network with Self-Adaptive Topology: The Reliable File Storage Layer},
  booktitle = {2009 IEEE-RIVF International Conference on Computing and Communication Technologies},
  year      = {2009},
  pages     = {1-8},
  month     = {July},
  abstract  = {A reliable storage system is a system that ensures the protection of data from loss. Such systems are needed in many critical fields. We cannot imagine that a financial institution looses data about one its clients. Moreover the exponential growing volumes of the data and its availability are crucial issues. A centralized storage system would be overloaded and be a single point of failure. That is why overlay network may provide the solution as they can be used to implement a distributed storage system over an information system. ROSA is an overlay network that was designed to combine a high scalability while maintaining a strong connectivity. The reliability of its topology, designs ROSA as a good platform for deploying such a reliable storage system. Nevertheless ROSA is an unstructured overlay network, this will decrease the efficiency of the storage system. In this article we first propose a structure, called chain of lumps, built upon ROSA. This structure will provide the advantage of a structured network to ROSA. Once ROSA endowed with the structure, we propose a reliable storage system deployed over ROSA. Consequently this system will benefit of the reliability of ROSA.},
  doi       = {10.1109/RIVF.2009.5174658},
  groups    = {ieee},
  keywords  = {information retrieval systems;software reliability;storage management;robust overlay network;self-adaptive topology;file storage layer;reliable storage system;centralized storage system;distributed storage system;information system;ROSA;scalability;connectivity;unstructured overlay network;Robustness;Network topology;Telecommunication network topology;Telecommunication network reliability;Protection;Availability;Scalability;Information systems;Maintenance;Management information systems},
}

@InProceedings{Demrozi2016,
  author    = {F. {Demrozi} and G. {Pravadelli} and F. {Stefanni}},
  title     = {Automatic generation of self-adaptive transactors from PSL assertions},
  booktitle = {2016 Forum on Specification and Design Languages (FDL)},
  year      = {2016},
  pages     = {1-7},
  month     = {Sep.},
  abstract  = {This paper presents an approach to automatically generate transactors that implement TLM protocols for RTL IPs, such that the RTL IPs can be abstracted towards corresponding TLM models and easily integrated inside a TLM virtual prototype. The obtained transactor is self-adaptive, since it allows plugging the target IP in the virtual prototype independently from the protocol implemented by the corresponding TLM initiator. The transactor is automatically created from the set of PSL assertions that describe the temporal behaviour of the communication protocol of the original RTL IP.},
  doi       = {10.1109/FDL.2016.7880370},
  groups    = {ieee},
  keywords  = {circuit CAD;hardware-software codesign;industrial property;protocols;automatic self-adaptive transactors generation;PSL assertions;TLM protocols;RTL IP;TLM virtual prototype;TLM initiator;communication protocol;Time-varying systems;Time-domain analysis;Protocols;Prototypes;IP networks;Encoding;Semantics},
}

@InProceedings{Stein2016,
  author    = {A. {Stein} and S. {Tomforde} and D. {Rauh} and J. {H?hner}},
  title     = {Dealing with Unforeseen Situations in the Context of Self-Adaptive Urban Traffic Control: How to Bridge the Gap},
  booktitle = {2016 IEEE International Conference on Autonomic Computing (ICAC)},
  year      = {2016},
  pages     = {167-172},
  month     = {July},
  abstract  = {Autonomously adapting signalling strategies to changing traffic demands in urban areas have been frequently used as application scenario for self-organising systems in general as well as for Autonomic or Organic Computing systems in particular. The Organic Traffic Control (OTC) system is one of the most prominent representatives in this domain. OTC implements a multi-layered Observer/Controller (O/C) architecture and utilises a strongly modified eXtended Classifier System (XCSO/C) for the task of self-adaptation. In this paper, we extend the algorithmic structure of XCS-O/C by a novel interpolation-based approach that incorporates existing knowledge beyond the traditional means. We demonstrate the benefit of the developed approach in terms of reduced delay times for near-to-reality simulations of realistic traffic conditions from Hamburg, Germany.},
  doi       = {10.1109/ICAC.2016.20},
  groups    = {ieee},
  keywords  = {adaptive control;control engineering computing;interpolation;learning (artificial intelligence);observers;pattern classification;road traffic control;self-adjusting systems;software fault tolerance;traffic engineering computing;self-adaptive urban traffic control;self-organizing system;autonomic computing;organic computing;organic traffic control system;OTC system;observer/controller architecture;O/C architecture;extended classifier system;XCSO/C;on-line learning system;interpolation-based approach;Interpolation;Delays;Context;Urban areas;Control systems;Complexity theory;Aerospace electronics;Organic Computing;Self-Adaptation;Learning Classifier Systems;Inverse Distance Weighting;Urban Traffic Control},
}

@InProceedings{Golpayegani2015,
  author    = {F. {Golpayegani}},
  title     = {Multi-agent Collaboration in Distributed Self-Adaptive Systems},
  booktitle = {2015 IEEE International Conference on Self-Adaptive and Self-Organizing Systems Workshops},
  year      = {2015},
  pages     = {146-151},
  month     = {Sep.},
  abstract  = {Multi-Agent Collaboration (MAC) is a means by which agents solve complex real-world problems. It encompasses agents' coordination, negotiation and cooperation towards their shared goal. A distributed collaboration community consisting of heterogeneous agents in ever-changing environments faces varying degrees of collaborators' goals and/or polices conflicts. Therefore, the focus of my research is on collaborators' conflict management, particularly during community formation in distributed Self-Adaptive Systems. In this paper, the MAC literature is reviewed and a Multi-Agent Collaboration Community Formation (MAC-CF) taxonomy is proposed. The taxonomy adds the essential Establishment phase to the MAC process. The Establishment phase covers all the essential structural and behavioural aspects of a collaboration community formation in order to minimize agents' conflicts in the early stage of collaboration. Additionally, an architecture selection guideline will be designed to facilitate the conflict management of collaborators' goals and policies during the collaboration. The evaluation of this approach will be based on Smart-Grid (SG) scenario implementing a Multi-Agent Self-Adaptive System composed of heterogeneous agents with multiple goals and policies.},
  doi       = {10.1109/SASOW.2015.29},
  groups    = {ieee},
  keywords  = {distributed processing;multi-agent systems;software architecture;distributed self-adaptive systems;distributed collaboration community;heterogeneous agents;multiagent collaboration community formation taxonomy;MAC-CF taxonomy;MAC process;architecture selection guideline;smart-grid scenario;establishment phase;Teamwork;Taxonomy;Conferences;Knowledge based systems;Guidelines;Decision making},
}

@InProceedings{Krupitzer2018,
  author    = {C. {Krupitzer} and G. {Drechsel} and D. {Mateja} and A. {Pollkl?sener} and F. {Schrage} and T. {Sturm} and A. {Tomasovic} and C. {Becker}},
  title     = {Using Spreadsheet-defined Rules for Reasoning in Self-Adaptive Systems},
  booktitle = {2018 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops)},
  year      = {2018},
  pages     = {289-294},
  month     = {March},
  abstract  = {Using rules to capture adaptation knowledge is a common approach for self-adaptive systems. Rule-based reasoning, i.e., using rules to analyze and plan adaptations, has several advantages: (i) it is easy to implement, (ii) it offers fast reasoning, and (iii) it works on resource-spare systems as historical knowledge is not required. Hence, the needed computational power is low and it perfectly suits systems in the pervasive IoT domain. However, the codification of rules poses a challenge to the system design. Existing approaches often require a specific syntax or programming language. Additionally, some approaches force the developer to customize the reasoning mechanism, hence, to reimplement parts of the reasoning. To address these shortcomings, we propose a reusable approach for rule-based reasoning in this paper. Rules can be defined in a spreadsheet without the need to neither learn a syntax nor implement a single line of code. We evaluate the benefits of our approach in two case studies conducted by Master students as well as a quantitative evaluation.},
  doi       = {10.1109/PERCOMW.2018.8480283},
  groups    = {ieee},
  keywords  = {case-based reasoning;computer science education;inference mechanisms;Internet of Things;reverse engineering;software engineering;spreadsheet programs;spreadsheet-defined rules;self-adaptive systems;adaptation knowledge;rule-based reasoning;fast reasoning;resource-spare systems;historical knowledge;system design;reasoning mechanism;reusable approach;master students;programming language;Cognition;Engines;Adaptation models;Monitoring;Syntactics;Context modeling;Business},
}

@InProceedings{Jung2014,
  author    = {J. {Jung} and S. {Kiertscher} and S. {Menski} and B. {Schnor}},
  title     = {Self-adapting load balancing for DNS},
  booktitle = {International Symposium on Performance Evaluation of Computer and Telecommunication Systems (SPECTS 2014)},
  year      = {2014},
  pages     = {564-571},
  month     = {July},
  abstract  = {The Domain Name System belongs to the core services of the Internet infrastructure. Hence, DNS availability and performance is essential for the operation of the Internet and replication and load balancing is used for the root and top level name servers. This paper proposes an architecture for credit based server load balancing (SLB) for DNS. Compared to traditional load balancing algorithms like round robin or least connection, the benefit of credit based SLB is that the load balancer can adapt more easily to heterogeneous load requests and heterogeneous back end server capacities. The challenge of this approach is the definition of a suited credit metric. While this was done before for TCP based services like HTTP, the problem was not solved for UDP based services like DNS. This paper presents an approach to define credits also for UDP based services. This UDP/DNS approach is implemented within the credit based SLB implementation salbnet. The presented measurements confirm the benefit of the self-adapting credit based SLB approach.},
  doi       = {10.1109/SPECTS.2014.6879994},
  groups    = {ieee},
  keywords  = {hypermedia;Internet;resource allocation;software architecture;self-adapting load balancing;domain name system;core services;Internet infrastructure;DNS availability;architecture;credit based server load balancing;HTTP;salbnet;Servers;Measurement;Kernel;Benchmark testing;Load management;Linux;Protocols;Load Balancing;Cluster Computing;Performance Evaluation},
}

@InProceedings{Samperi2014,
  author    = {K. {Samperi} and N. {Bencomo} and P. R. {Lewis}},
  title     = {Self-Adaptive Probabilistic Roadmap Generation for Intelligent Virtual Agents},
  booktitle = {2014 IEEE Eighth International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2014},
  pages     = {129-138},
  month     = {Sep.},
  abstract  = {Agents inhabiting large scale environments are faced with the problem of generating maps by which they can navigate. One solution to this problem is to use probabilistic roadmaps which rely on selecting and connecting a set of points that describe the interconnectivity of free space. However, the time required to generate these maps can be prohibitive, and agents do not typically know the environment in advance. In this paper we show that the optimal combination of different point selection methods used to create the map is dependent on the environment, no point selection method dominates. This motivates a novel self-adaptive approach for an agent to combine several point selection methods. The success rate of our approach is comparable to the state of the art and the generation cost is substantially reduced. Self-adaptation therefore enables a more efficient use of the agent's resources. Results are presented for both a set of archetypal scenarios and large scale virtual environments based in Second Life, representing real locations in London.},
  doi       = {10.1109/SASO.2014.25},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {cartography;probability;software agents;virtual reality;self-adaptive probabilistic roadmap generation;intelligent virtual agents;large scale environments;free space interconnectivity;point selection methods;generation cost;self-adaptation;agent resources;large scale virtual environments;Second Life;Virtual environments;Navigation;Face;Probabilistic logic;Avatars;Second Life;Measurement;Self-adaptive agents;Probabilistic Roadmaps;Map generation;Route planning;Trails;Virtual Environments},
}

@InProceedings{Nguyen2017,
  author    = {P. {Nguyen} and K. {Nahrstedt}},
  title     = {MONAD: Self-Adaptive Micro-Service Infrastructure for Heterogeneous Scientific Workflows},
  booktitle = {2017 IEEE International Conference on Autonomic Computing (ICAC)},
  year      = {2017},
  pages     = {187-196},
  month     = {July},
  abstract  = {Scientific workflows have become a popular computational model in a variety of application domains, such as astronomy, material science, physics, and biology. As scientific applications are moving to the cloud to take advantage of the elasticity and service level agreement of resources, there has been a number of recent research efforts on cloud-based workflow systems that support various types of performance guarantees under resource cost constraints. However, most of the related work often requires advanced knowledge about workflow structures to perform scheduling and resource optimization. In addition, existing workflow systems usually employ a monolithic approach in workflow implementation and execution, which makes them inefficient in dealing with heterogeneous types of workflows. In this paper, we present MONAD, a self-adaptive micro-service infrastructure for heterogeneous scientific workflows. Specifically, our micro-service architecture helps improve the flexibility of workflow composition and execution, and enables fine-grained scheduling at task level, considering task sharing across different workflows. In addition, we employ a feedback control approach with artificial neural network-based system identification to provide resource adaptation without any advanced knowledge of workflow structures. Our evaluation on multiple realistic heterogeneous workflows demonstrates that our system is robust and efficient in dealing with dynamic scientific workloads.},
  doi       = {10.1109/ICAC.2017.38},
  groups    = {ieee},
  issn      = {2474-0756},
  keywords  = {cloud computing;fault tolerant computing;natural sciences computing;neural nets;optimisation;resource allocation;scheduling;workflow management software;MONAD;self-adaptive micro-service infrastructure;heterogeneous scientific workflows;cloud-based workflow systems;resource optimization;fine-grained scheduling;artificial neural network-based system identification;Delays;Resource management;Adaptation models;Monitoring;Computational modeling;Computer architecture;Systems architecture;scientific workflow system;micro-service;infrastructure;self-adaptive system},
}

@InProceedings{Almeida2010,
  author    = {R. {Almeida} and H. {Madeira} and M. {Vieira}},
  title     = {Benchmarking the Resilience of Self-Adaptive Systems: A New Research Challenge},
  booktitle = {2010 29th IEEE Symposium on Reliable Distributed Systems},
  year      = {2010},
  pages     = {348-352},
  month     = {Oct},
  abstract  = {Self-adaptive systems are widely recognized as the future of computer systems. Due to their dynamic and evolving nature, the characterization of self-adaptation and resilience attributes is of upmost importance. The problem is that nowadays there is no practical way to characterize self-adaptation capabilities or to compare alternative solutions concerning resilience. In this paper we discuss the problem of resilience benchmarking of self-adaptive systems. We start by identifying a set of key challenges and then propose a research roadmap to tackle those challenges.},
  doi       = {10.1109/SRDS.2010.50},
  groups    = {ieee},
  issn      = {1060-9857},
  keywords  = {adaptive systems;benchmark testing;program testing;software performance evaluation;self-adaptive systems;computer systems;resilience attribute;Benchmark testing;Resilience;Security;Measurement;Computers;Autonomic systems;self-adaptive;benchmarking;resilience;metrics},
}

@InProceedings{Toma?ev2013,
  author    = {N. {Toma?ev} and G. {Leban} and D. {Mladeni?}},
  title     = {Exploiting hubs for self-adaptive secondary re-ranking in bug report duplicate detection},
  booktitle = {Proceedings of the ITI 2013 35th International Conference on Information Technology Interfaces},
  year      = {2013},
  pages     = {131-136},
  month     = {June},
  abstract  = {Bug duplicate detection is an integral part of many bug tracking systems. Most bugs are reported multiple times and detecting the duplicates saves time and valuable resources. We propose a novel approach to potential duplicate report query ranking. Our secondary re-ranking procedure is self-adaptive, as it learns from previous report occurrences. It is based on the analysis of temporal evolution of the underlying distribution of influence. The experiments show definite improvements in system performance.},
  doi       = {10.2498/iti.2013.0488},
  groups    = {ieee},
  issn      = {1334-2762},
  keywords  = {program debugging;query processing;software maintenance;self-adaptive secondary re-ranking;bug report duplicate detection;bug tracking system;potential duplicate report query ranking;temporal evolution analysis;system performance;hub exploitation;Vectors;Computer bugs;Feature extraction;Context;IEEE Potentials;Internet;Adaptive systems;Bug duplicates;issue tracking;ranking;hubs},
}

@InProceedings{Aizawa2019,
  author    = {K. {Aizawa} and K. {Tei} and S. {Honiden}},
  title     = {Analysis Space Reduction with State Merging for Ensuring Safety Properties of Self-Adaptive Systems},
  booktitle = {2019 IEEE SmartWorld, Ubiquitous Intelligence Computing, Advanced Trusted Computing, Scalable Computing Communications, Cloud Big Data Computing, Internet of People and Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI)},
  year      = {2019},
  pages     = {1363-1370},
  month     = {Aug},
  abstract  = {Analyzing guaranteeable safety properties in a running environment aids the decision making of self-adaptive systems. Our previous work generates and updates an analysis space with respect to environmental changes for identifying guaranteeable safety properties efficiently. However, our work cannot use the existing technique for reducing the analysis space, which means that its analysis space has a state explosion problem. In this paper, we propose a new reduction method that merges states while preserving information required for the safety properties analysis. We prove that our technique satisfies the condition for identifying guaranteeable safety properties. In addition, we evaluate the reduction in gives by using a production cell example and confirm that, in the best case, our proposal reduces the analysis space as much as that of a reachability analysis technique that cannot be applied to safety properties analysis.},
  doi       = {10.1109/SmartWorld-UIC-ATC-SCALCOM-IOP-SCI.2019.00249},
  groups    = {ieee},
  keywords  = {decision making;formal specification;formal verification;reachability analysis;safety-critical software;self-adjusting systems;analysis space reduction;state merging;self-adaptive systems;guaranteeable safety properties;state explosion problem;safety properties analysis;reachability analysis;environment aids;decision making;environmental changes;Safety;Runtime;Aerospace electronics;Model checking;Manipulators;Analytical models;Self-adaptive system, Discrete controller synthesis, Safety property, Space reduction},
}

@InProceedings{Cicirelli2019a,
  author    = {F. {Cicirelli} and L. {Nigro} and F. {Pupo}},
  title     = {Formal Modelling and Verification of Real-Time Self-Adaptive Systems},
  booktitle = {2019 IEEE/ACM 23rd International Symposium on Distributed Simulation and Real Time Applications (DS-RT)},
  year      = {2019},
  pages     = {1-8},
  month     = {Oct},
  abstract  = {This paper describes a formal approach to modelling and verification of self-adaptive real-time systems. Such systems can dynamically be affected by exception events either originated in the operational environment or in the internal status, which require to be dealt with through adaptation actions which have to fulfil timing constraints. The approach is based on Time Basic (TB) Petri nets, a formalism well-suited to the specification of time-critical systems. Although some specialcase tools have been developed to support the analysis of TB net models, the original contribution of this paper is an embedding of TB nets into the popular Uppaal toolbox based on timed automata, which makes it possible both non-deterministic exhaustive analysis by model checking and/or a quantitative analysis of model properties through statistical model checking. The paper demonstrates the application of TB net modelling and analysis through a self-healing time-critical system.},
  doi       = {10.1109/DS-RT47707.2019.8958707},
  groups    = {ieee},
  issn      = {1550-6525},
  keywords  = {automata theory;formal verification;Petri nets;real-time systems;software fault tolerance;formal approach;formal modelling;self-adaptive real-time systems;exception events;adaptation actions;timing constraints;time-critical systems;timed automata;nondeterministic exhaustive analysis;statistical model checking;TB net modelling;self-healing time-critical system;formal verification;time basic Petri nets;Uppaal toolbox;Modelling and verification;self-adaptive systems;real time;timing constraints;Time Basic Petri nets;model checking;statistical model checking;Uppaal},
}

@InProceedings{Reynolds1996,
  author    = {R. G. {Reynolds} and {ChanJin Chung}},
  title     = {A self-adaptive approach to representation shifts in cultural algorithms},
  booktitle = {Proceedings of IEEE International Conference on Evolutionary Computation},
  year      = {1996},
  pages     = {94-99},
  month     = {May},
  abstract  = {Describes how a formal model of self-adaptation (Angeline, 1995) can be expressed in terms of "cultural algorithms". A particular form of self-adaptation concerns the shifting of the representational bias used to described the set of learned beliefs within the cultural algorithms. A version of a cultural algorithm with the ability to shift its representational bias was used to solve the "royal road" problem suggested by Mitchell, Forrest and Holland (1991). The results of the presented experiments indicate that representational self-adaptations such as this can produce significant performance improvements over systems without such capabilities for problems whose performance function is inherently hierarchical, as is the case for the royal road function.},
  doi       = {10.1109/ICEC.1996.542340},
  groups    = {ieee},
  keywords  = {genetic algorithms;self-adjusting systems;adaptive systems;social sciences;problem solving;knowledge representation;belief maintenance;software performance evaluation;formal model;representational self-adaptation;representation shifts;cultural algorithms;representational bias;learned beliefs;royal road function;performance improvements;hierarchical performance function;Cultural differences;Vehicles;Problem-solving;Production;Computer science;Humans;Adaptation model;Evolutionary computation;Protocols;Global communication},
}

@InProceedings{Polese2010,
  author    = {M. {Polese} and G. {Tretola} and E. {Zimeo}},
  title     = {Self-adaptive management of Web processes},
  booktitle = {2010 12th IEEE International Symposium on Web Systems Evolution (WSE)},
  year      = {2010},
  pages     = {33-42},
  month     = {Sep.},
  abstract  = {Nowadays, we are assisting to a paradigmatic shift for the development of web applications due to the pervasive distribution of their components among a lot of servers, which are dynamically interconnected by web links. As a consequence, the application logic is often defined by exploiting workflow languages since they are more suitable to address the complexity of these new running environments. Moreover, in many business environments, the behaviour of a large-scale distributed web application is significantly influenced by context events, whose handling could require run-time adaptations of the application logic to properly react to the changing conditions of the execution context. This paper addresses the need for adaptation in large-scale web applications by proposing a programming paradigm based on ��autonomic workflows��, i.e. workflows that are able to self-change their structure in order to allow for the continuation of the execution towards the termination, even if unexpected anomalies occur during the execution. The proposed approach exploits semantic languages for service description, autonomic managers driven by policies specified using a dedicated language, and a knowledge base containing information collected during processes execution. Autonomic actions are performed using Event Condition Action (ECA) rules for assessing system and process conditions, and a set of operations that allow for dynamic adaptation of the running processes. Furthermore, the correctness of workflow adaptation is checked before the modifications are performed, by using both syntactical and semantic constraints.},
  doi       = {10.1109/WSE.2010.5623573},
  groups    = {ieee},
  issn      = {1550-4441},
  keywords  = {fault tolerant computing;semantic Web;ubiquitous computing;Web services;workflow management software;self-adaptive management;Web processes;pervasive distribution;servers;web links;application logic;workflow languages;business environments;large-scale distributed web application;run-time adaptations;autonomic workflows;semantic languages;service description;knowledge base information;event condition action;Concrete;Monitoring;Semantics;Humans;Business;Context;Planning;Self-management;Autonomic Workflow;Adaptation;Web Processes},
}

@InProceedings{Jiang2011,
  author    = {Y. {Jiang} and C. {Perng} and T. {Li} and R. {Chang}},
  title     = {ASAP: A Self-Adaptive Prediction System for Instant Cloud Resource Demand Provisioning},
  booktitle = {2011 IEEE 11th International Conference on Data Mining},
  year      = {2011},
  pages     = {1104-1109},
  month     = {Dec},
  abstract  = {The promise of cloud computing is to provide computing resources instantly whenever they are needed. The state-of-art virtual machine (VM) provisioning technology can provision a VM in tens of minutes. This latency is unacceptable for jobs that need to scale out during computation. To truly enable on-the-fly scaling, new VM needs to be ready in seconds upon request. In this paper, We present an online temporal data mining system called ASAP, to model and predict the cloud VM demands. ASAP aims to extract high level characteristics from VM provisioning request stream and notify the provisioning system to prepare VMs in advance. For quantification issue, we propose Cloud Prediction Cost to encodes the cost and constraints of the cloud and guide the training of prediction algorithms. Moreover, we utilize a two-level ensemble method to capture the characteristics of the high transient demands time series. Experimental results using historical data from an IBM cloud in operation demonstrate that ASAP significantly improves the cloud service quality and provides possibility for on-the-fly provisioning.},
  doi       = {10.1109/ICDM.2011.25},
  groups    = {ieee},
  issn      = {2374-8486},
  keywords  = {cloud computing;data mining;software quality;virtual machines;ASAP;self-adaptive prediction system;instant cloud resource demand provisioning;cloud computing;virtual machine provisioning technology;online temporal data mining system;cloud prediction cost;two-level ensemble method;cloud service quality;Time series analysis;Predictive models;Prediction algorithms;Data models;Artificial neural networks;Training;Heuristic algorithms;cloud service;time series prediction;service quality improvement},
}

@InProceedings{Burstein2010,
  author    = {M. {Burstein} and R. {Bobrow} and W. {Ferguson} and R. {Laddaga} and P. {Robertson}},
  title     = {Learning from Observing: Vision and POIROT - Using Metareasoning for Self Adaptation},
  booktitle = {2010 Fourth IEEE International Conference on Self-Adaptive and Self-Organizing Systems Workshop},
  year      = {2010},
  pages     = {300-307},
  month     = {Sep.},
  abstract  = {We present a cognitive architecture that heavily utilizes metareasoning for self adaptation. The architecture is derived in part from neuroscience data and theories about the operation of the human vision system. We also discuss how this architecture is applied in the POIROT system, which learns web services workflow from ��observing�� a small number of expert examples.},
  doi       = {10.1109/SASOW.2010.61},
  groups    = {ieee},
  keywords  = {inference mechanisms;learning by example;Web services;workflow management software;POIROT;metareasoning;self adaptation;cognitive architecture;neuroscience data;human vision system;POIROT system;Web services workflow;plan order induction by reasoning from one trial;learning from observing;Computer architecture;Web services;Humans;Semantics;Planning;Feature extraction;Cognition;metreasoning;self adaptive;learning;vision;cogntive architecture;neuroscience;active vision},
}

@InProceedings{vanKokswijk2010,
  author    = {J. {van Kokswijk} and M. {Van Hulle}},
  title     = {Self adaptive BCI as service-oriented information system for patients with communication disabilities},
  booktitle = {4th International Conference on New Trends in Information Science and Service Science},
  year      = {2010},
  pages     = {264-269},
  month     = {May},
  abstract  = {A new service-oriented information architecture is presented that can help the communication-disabled to socialize in their private and public environment. The service is designed for physically handicapped people who cannot communicate without expensive custom-made tools. Statistics show that, e.g., in Belgium 1:500 persons suffer from some form of motor or speech disability, mostly due to stroke (aphasia patients). Patients with severe motor or speech disabilities need expensive tailor-made made devices and individualized protocols to communicate. About 1:6000 do have problems with information exchange in their daily practice, such as patients with severe autistic disorders, and Amyotrophic Lateral Sclerosis (ALS), Locked-in Syndrome (LIS) and Speech and Language Impaired (SLI) patients, and their communication is often limited to care takers and family, because the interaction with other people through electronic systems often fails. In fact, all these disabled yearn to basically participate in our society. Enhancing the amount of adapted devices and personal care takers has huge consequences and is mostly unfeasible by firm limits in specialists, infrastructure and budget. The quality of life can be graded up by a service-oriented information architecture that supports an on-line Mind Speller?, i.e., a Brain-Computer Interface (BCI) that enables subjects to spell text on a computer screen, and potentially have it voiced, without muscular activity, to assist or enable patients to communicate, but also to provide speech revalidation, as in autism spectrum disorder patients. The Mind Speller? operates non-invasively by detecting P300 signals in their EEG. With the support of predictive text algorithms, the mind spelled characters will be words and sentences, and even stories (story telling), enabling the communication-disabled to participate in either the physical environment as - by the Internet - the global digital world.},
  groups    = {ieee},
  keywords  = {brain-computer interfaces;medical signal processing;software architecture;service-oriented information system;communication disability patient;brain computer interface;amyotrophic lateral sclerosis;locked-in syndrome;speech and language impairment;service-oriented information architecture;Mind Speller;P300 signal detection;Internet;Information systems;Speech;Autism;Brain computer interfaces;Statistics;Protocols;Natural languages;Computer architecture;Computer interfaces;Signal detection},
}

@InProceedings{Ma2019,
  author    = {M. {Ma} and W. {Lin} and D. {Pan} and P. {Wang}},
  title     = {MS-Rank: Multi-Metric and Self-Adaptive Root Cause Diagnosis for Microservice Applications},
  booktitle = {2019 IEEE International Conference on Web Services (ICWS)},
  year      = {2019},
  pages     = {60-67},
  month     = {July},
  abstract  = {This paper presents a self-adaptive root cause diagnosis framework, named MS-Rank, to analyze multiple metrics collected from micro-service architecture. MS-Rank decomposes the task into four phases: impact graph construction, random walk diagnosis, result precision calculation and metrics weight update. First, we introduce a series of basic and implied metrics into MS-Rank, and design an impact graph construction algorithm to discover causal relationship between services during anomalies. Second, we propose a random walk algorithm with forward, selfward and backward transitions to heuristically identify the root cause service. Third, we establish a self-optimizing mechanism to dynamically update the confidence weight of different metrics according to their diagnosis precision. We develop a prototype system and integrate MS-Rank into IBM Cloud, to validate and compare it with selected benchmarks. Experimental results show that MS-Rank offers fast identification and precise diagnosis result. In multiple rounds of diagnosis, MS-Rank optimizes itself effectively.},
  doi       = {10.1109/ICWS.2019.00022},
  groups    = {ieee},
  keywords  = {fault diagnosis;graph theory;random processes;service-oriented architecture;software metrics;Web services;random walk diagnosis;result precision calculation;metrics weight update;impact graph construction algorithm;root cause service;MS-Rank;self-adaptive root cause diagnosis;multimetric root cause diagnosis;IBM cloud;microservice architecture;root cause;anomaly diagnosis;impact graph;cloud computing},
}

@InProceedings{Bosloper2005,
  author    = {I. {Bosloper} and J. {Siljee} and J. {Nijhuis} and D. {Hammer}},
  title     = {Creating self-adaptive service systems with Dysoa},
  booktitle = {Third European Conference on Web Services (ECOWS'05)},
  year      = {2005},
  pages     = {10 pp.-},
  month     = {Nov},
  abstract  = {Service-centric systems exist in a very dynamic environment, which requires these systems to adapt at runtime in order to keep fulfilling its QoS requirements to its users. In order to create self-adaptive service-centric systems, developers not only design the service architecture, but need to design the self-adaptability aspects in a structured way. Current service standards and technologies do not provide a general architecture in which all aspects for self-adaptability can be designed. In this paper we propose DySOA (dynamic service-oriented architecture), an architecture that extends service-centric applications to make them self-adaptive. DySOA allows developers to explicitly model the process and components that deal with determining the QoS of the running system, with evaluating the QoS, and with reconfiguring the system when necessary. Having the DySOA elements explicit enables separation of concerns, making the DySOA elements adaptable at runtime and reusable in next versions. We demonstrate how to use DySOA with an example.},
  doi       = {10.1109/ECOWS.2005.10},
  groups    = {ieee},
  keywords  = {formal specification;adaptive systems;quality of service;object-oriented programming;software architecture;self-adaptive service systems;Dysoa;service-centric systems;QoS requirements;service architecture;dynamic service-oriented architecture;process modeling;component modeling;Quality of service;Runtime;Control systems;Delay;Security;Simple object access protocol;Web services;Context-aware services},
}

@InProceedings{Grande2012,
  author    = {R. E. D. {Grande} and A. {Boukerche}},
  title     = {Migration Delay Awareness in a Self-Adaptive Balancing Scheme for HLA-Based Simulations},
  booktitle = {2012 IEEE/ACM 16th International Symposium on Distributed Simulation and Real Time Applications},
  year      = {2012},
  pages     = {169-176},
  month     = {Oct},
  abstract  = {Load balancing is a vital mechanism for improving the performance of distributed simulations or even for enabling their execution. A balancing technique has been designed in order to provide a balancing scheme for HLA-based simulations on non-dedicated resources. However, this technique lacks efficiency by producing large amounts of unnecessary federate migrations, so a self-adaptive mechanism has been introduced in the technique in order to correct its balancing responsiveness. As a drawback, the self-adaptation technique assumes that only the frequency of federate migrations represents the balancing efficiency. This leads the scheme to present static parameters regardless of the conditions of the environment, which in turn can restrict the balancing response to imbalances. Thus, awareness to migration delays is inserted into the self-adaptive balancing scheme in order that more precise and more realistic analysis of balancing efficiency can be enabled. Experiments have been conducted to show the performance gain of the proposed scheme when compared to the distributed and self-adaptive load balancing systems.},
  doi       = {10.1109/DS-RT.2012.33},
  groups    = {ieee},
  issn      = {1550-6525},
  keywords  = {digital simulation;distributed processing;resource allocation;software performance evaluation;migration delay awareness;self-adaptive balancing scheme;HLA-based simulations;load balancing;performance improvement;distributed simulations;nondedicated resources;self-adaptation technique;balancing responsiveness;static parameters;distributed load balancing systems;self-adaptive load balancing systems;Delay;Load modeling;Clustering algorithms;Algorithm design and analysis;Load management;Computational modeling;Analytical models;Parallel and Distributed Simulations;High Level Architecture;Load Balancing;Performance},
}

@InProceedings{Lawson2002,
  author    = {B. G. {Lawson} and E. {Smirni} and D. {Puiu}},
  title     = {Self-adapting backfilling scheduling for parallel systems},
  booktitle = {Proceedings International Conference on Parallel Processing},
  year      = {2002},
  pages     = {583-592},
  month     = {Aug},
  abstract  = {We focus on non-FCFS job scheduling policies for parallel systems that allow jobs to backfill, i.e., to move ahead in the queue, given that they do not delay certain previously submitted jobs. Consistent with commercial schedulers that maintain multiple queues where jobs are assigned according to the user-estimated duration, we propose a self-adapting backfilling policy that maintains multiple job queues to separate short from long jobs. The proposed policy adjusts its configuration parameters by continuously monitoring the system and quickly reacting to sudden fluctuations in the workload arrival pattern and/or severe changes in resource demands. Detailed performance comparisons via simulation using actual supercomputing, traces from the parallel workload archive indicate that the proposed policy consistently outperforms traditional backfilling.},
  doi       = {10.1109/ICPP.2002.1040916},
  groups    = {ieee},
  issn      = {0190-3918},
  keywords  = {parallel processing;processor scheduling;parallel machines;resource allocation;software performance evaluation;queueing theory;batch schedulers;parallel systems;backfilling;job scheduling;workload arrival;resource demands;performance evaluation;Processor scheduling;Resource management;Computer science;Parallel processing;Mathematics;Educational institutions;Delay;Condition monitoring;Fluctuations;Performance analysis},
}

@InProceedings{Freitas2010a,
  author    = {A. L. {Freitas} and J. {Pazat}},
  title     = {A Self-Adaptable Approach for Easing the Development of Grid-Oriented Services},
  booktitle = {2010 10th IEEE International Conference on Computer and Information Technology},
  year      = {2010},
  pages     = {76-82},
  month     = {June},
  abstract  = {The Service-Oriented Architecture (SOA) leverages the service abstraction to enable the development of modular, loose-coupled and distributed applications. In order to use such an architecture, service-based applications directly rely on services or compose them for conceiving new functionalities. In spite of these capabilities, they do not support the development of services which need high-performance computing. Grid computing offers an infrastructure for high-performance computing which is based on the sharing of distributed, low-cost and heterogeneous resources in large-scale. Thus, grids can be used to satisfy these high-performance service requirements. This work aims at easing the development of grid-oriented services. The iPOJO service-component model is used to propose an architecture that automatically manages job submission for services. This architecture is based on Dynaco (Adaptation for Components) and the XtreemOS grid operating system.},
  doi       = {10.1109/CIT.2010.56},
  groups    = {ieee},
  keywords  = {distributed processing;grid computing;operating systems (computers);software architecture;self-adaptable approach;grid oriented services;service-oriented architecture;service abstraction;loose coupled application;distributed application;service-based application;high performance computing;grid computing;heterogeneous resources;iPOJO service component model;Dynaco grid operating system;XtreemOS grid operating system;Service oriented architecture;Adaptation model;Monitoring;Computer architecture;Operating systems;Quality of service;Java;service-oriented architecture;grid computing;dynamic adaptation},
}

@InProceedings{Nguyen-Duc2016,
  author    = {T. {Nguyen-Duc} and E. {Kamioka}},
  title     = {A self-adaptive and energy-efficient wireless multi-hop network},
  booktitle = {2016 22nd Asia-Pacific Conference on Communications (APCC)},
  year      = {2016},
  pages     = {296-301},
  month     = {Aug},
  abstract  = {In wireless multi-hop networks, mobiles devices communicate with the others without relying on any infrastructure networks or centralized control. When two end devices are communicating, they commonly require intermediate devices to cooperate for maintaining the network connectivity. Although the communication is for only two devices, the other devices have to consume their battery power on relaying messages. As a result, the network-wide energy consumption is much higher than the energy consumed by only two end devices. To reduce the network-wide energy consumption, one potential way is to tradeoff between throughput and energy consumption on the intermediate devices. For example, when the throughput is not too high, i.e., less than 1Mbps, the intermediate devices can turn off the high-speed wireless network interface and switch to a low energy consumption one, called an energy-efficient vertical handover. Since there is no centralized control or infrastructure networks, the devices must perform a vertical handover based only on its own recorded information, i.e., local measurements executed by itself. To this end, an extended SDN controller, which has been proposed in a previous work, is considered. In addition, a new energy efficient vertical handover algorithm has been proposed. By utilizing the extended SDN controllers to exchange information among devices, the intermediate devices can perform the vertical handover by themselves and save energy. The effectiveness of the proposal has been confirmed by directly measured results.},
  doi       = {10.1109/APCC.2016.7581510},
  groups    = {ieee},
  keywords  = {mobility management (mobile radio);power consumption;radio networks;software defined networking;telecommunication control;telecommunication power management;self-adaptive wireless multihop network;energy-efficient wireless multihop network;mobiles devices;network connectivity;battery power;relaying messages;network-wide energy consumption;intermediate devices;high-speed wireless network interface;energy-efficient vertical handover;extended SDN controller;IEEE 802.11 Standard;Bluetooth;Wireless communication;Bandwidth;Spread spectrum communication;Energy consumption;Energy efficiency;self-adaptive;energy-efficient;extended sdn controller;vertical handover;wireless multi-hop network},
}

@InProceedings{Abie2009,
  author    = {H. {Abie} and R. M. {Savola} and I. {Dattani}},
  title     = {Robust, Secure, Self-Adaptive and Resilient Messaging Middleware for Business Critical Systems},
  booktitle = {2009 Computation World: Future Computing, Service Computation, Cognitive, Adaptive, Content, Patterns},
  year      = {2009},
  pages     = {153-160},
  month     = {Nov},
  abstract  = {Current business critical systems have stringent requirements for the significant and measurable increase in the end-to-end intelligence, security, scalability, self-adaptation and resilience. Existing state of the art messaging systems achieve arbitrary resilience by a brute-force approach. Self-healing is either rudimentary or non-existent. In this study we present a robust, secure, self-adaptive and resilient messaging middleware that provides solutions to overcome limitations in robustness, resilience, evolvability, self-adaptability, scalability, and assurance against security threats and erroneous input during run-time in the face of changing threats. This developed system supports a messaging infrastructure which enables adaptive functions and assurance against security vulnerabilities and erroneous input vulnerabilities to improve the reliability, robustness and dependability of business critical infrastructures. The methodology used in this research is partly analytical and partly experimental. We develop the core novel functionalities theoretically and validate them practically by prototyping.},
  doi       = {10.1109/ComputationWorld.2009.26},
  groups    = {ieee},
  keywords  = {business data processing;message passing;middleware;safety-critical software;security of data;messaging middleware;business critical systems;end-to-end intelligence;self-adaptation;messaging systems;self-healing;security threats;messaging infrastructure;security vulnerability;business critical infrastructures;Robustness;Resilience;Message-oriented middleware;Scalability;Data security;Quality management;Quality of service;Adaptive systems;Monitoring;Prototypes;Self-Adaptation;Resilience;Evolution;Messaging Middleware;Self-healing;Self-protection;Security Assurance},
}

@Article{Tang2018,
  author   = {Z. {Tang} and X. {Ding} and Y. {Zhong} and L. {Yang} and K. {Li}},
  title    = {A Self-Adaptive Bell�CLaPadula Model Based on Model Training With Historical Access Logs},
  journal  = {IEEE Transactions on Information Forensics and Security},
  year     = {2018},
  volume   = {13},
  number   = {8},
  pages    = {2047-2061},
  month    = {Aug},
  issn     = {1556-6021},
  abstract = {In currently popular access control models, the security policies and regulations never change in the running system process once they are identified, which makes it possible for attackers to find the vulnerabilities in a system, resulting in the lack of ability to perceive the system security status and risks in a dynamic manner and exposing the system to such risks. By introducing the maximum entropy (MaxENT) models into the rule optimization for the Bell-LaPadula (BLP) model, this paper proposes an improved BLP model with the self-learning function: MaxENT-BLP. This model first formalizes the security properties, system states, transformational rules, and a constraint model based on the states transition of the MaxENT. After handling the historical system access logs as the original data sets, this model extracts the user requests, current states, and decisions to act as the feature vectors. Second, we use k -fold cross validation to divide all vectors into a training set and a testing set. In this paper, the model training process is based on the Broyden-Fletcher-Goldfarb-Shanno algorithm. And this model contains a strategy update algorithm to adjust the access control rules dynamically according to the access and decision records in a system. Third, we prove that MaxENT-BLP is secure through theoretical analysis. By estimating the precision, recall, and F1-score, the experiments show the availability and accuracy of this model. Finally, this paper provides the process of model training based on deep learning and discussions regarding adversarial samples from the malware classifiers. We demonstrate that MaxENT-BLP is an appropriate choice and has the ability to help running information systems to avoid more risks and losses.},
  doi      = {10.1109/TIFS.2018.2807793},
  groups   = {ieee},
  keywords = {authorisation;entropy;invasive software;learning (artificial intelligence);optimisation;historical access;security policies;regulations;running system process;system security status;maximum entropy models;rule optimization;improved BLP model;MaxENT-BLP;security properties;system states;transformational rules;constraint model;states transition;historical system access;training set;Broyden-Fletcher-Goldfarb-Shanno algorithm;access control rules;decision records;running information systems;training process;self-adaptive Bell-LaPadula model;access control models;precision;recall;F1-score;Hidden Markov models;Training;Access control;Data models;Feature extraction;Machine learning;Adversarial sample;BLP;machine learning;mandatory access control;maximum entropy model;rule optimization},
}

@InProceedings{Klarl2015,
  author    = {A. {Klarl}},
  title     = {Engineering Self-Adaptive Systems with the Role-Based Architecture of Helena},
  booktitle = {2015 IEEE 24th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises},
  year      = {2015},
  pages     = {3-8},
  month     = {June},
  abstract  = {When engineering self-adaptive systems, separating adaptation and application logic was proven beneficial to avoid interdependencies between adaptation strategy and standard behaviour. Several engineering methods support this separation in different phases of the classical development process, but none addresses it consistently in all of them. We propose a holistic model-driven engineering process with systematic transitions between all phases to develop self-adaptive systems. Adaptation is achieved by changing the behavioral mode of a component in response to perceptions. We realize behavioral modes by roles which a component can dynamically adopt. For specification, we propose adaptation automata which allow to specify complex adaptation behaviour by hierarchical structure and history of states. Furthermore, we propose the HELENA Adaptation Manager pattern to derive a role-based model from a specification. Due to its formal foundation, the model can be analyzed with Spin and executed with the Java framework jHelena.},
  doi       = {10.1109/WETICE.2015.32},
  groups    = {ieee},
  issn      = {1524-4547},
  keywords  = {formal specification;software architecture;Spin;Java framework;HELENA Adaptation Manager;adaptation behaviour specification;hierarchical structure;adaptation automata;holistic model-driven engineering process;adaptation strategy;application logic;adaptation logic;HELENA architecture;role-based architecture;self-adaptive systems engineering;Automata;Adaptation models;Robot sensing systems;Switches;History;Batteries;self-adaptation;engineering;ensemble-based systems;roles;autonomic manager},
}

@InProceedings{Zang2018,
  author    = {X. {Zang} and W. {Chen} and J. {Zou} and S. {Zhou} and H. {Lisong} and L. {Ruigang}},
  title     = {A Fault Diagnosis Method for Microservices Based on Multi-Factor Self-Adaptive Heartbeat Detection Algorithm},
  booktitle = {2018 2nd IEEE Conference on Energy Internet and Energy System Integration (EI2)},
  year      = {2018},
  pages     = {1-6},
  month     = {Oct},
  abstract  = {Microservice architecture is widely adopted by the current Internet application systems. How to detect faults in microservices effectively and locate them accurately is one of the key problems to guarantee the reliability and performance of microservice systems. This paper combined the use of heartbeat detection mechanism in distributed systems and the characteristics of microservice, put forward a fault diagnosis method for microservices based on multi-factor self-adaptive heartbeat detection algorithm (M-MFSA-HDA). The algorithm uses pull mode heartbeat detection mechanism, combines three factors and can adjust the transmission frequency of heartbeat messages adaptively by giving the optimal solution of it when detecting the failure of microservices. Finally, this paper simulated the algorithm, verified the effect of multiple factors on self-adaptive adjustment of the frequency of sending heartbeat messages and the performance of the algorithm is better than heartbeat detection algorithm based on push mode or which based on pull mode but only considers network factor.},
  doi       = {10.1109/EI2.2018.8582217},
  groups    = {ieee},
  keywords  = {fault diagnosis;Internet;optimisation;software fault tolerance;multifactor self-adaptive heartbeat detection algorithm;heartbeat messages;fault diagnosis method;microservice architecture;Internet application systems;faults detection;distributed systems;M-MFSA-HDA;pull mode heartbeat detection mechanism;optimal solution;microservice architecture;heartbeat detection;fault diagnosis;multi-factor;self-adaptive},
}

@InProceedings{Itmi2010,
  author    = {M. {Itmi} and A. {Cardon}},
  title     = {Model for self-adaptive SoS and the control problem},
  booktitle = {2010 5th International Conference on System of Systems Engineering},
  year      = {2010},
  pages     = {1-6},
  month     = {June},
  abstract  = {In this paper, we propose methods to deal with self-adaptive information systems where one has to control in real time a complex substratum organized with numerous proactive elements continuously producing active links and generating multiple informational exchanges. Such exchanges arise when linking concurrent distributed complex systems. More generally, the growing complexity of today's grand challenges suits such situations and needs solutions that are of a system of systems (SoS) nature. The paper concentrates on the representation of the controlled state of the substratum for a complex adaptive SoS and highlights the control aspect.},
  doi       = {10.1109/SYSOSE.2010.5544101},
  groups    = {ieee},
  keywords  = {distributed control;large-scale systems;self-adjusting systems;software architecture;telecommunication control;self-adaptive information system;information system;distributed complex system;SoS;system of system;informational exchange;Control systems;Real time systems;Information systems;Adaptive control;Design engineering;Centralized control;Intelligent robots;Humans;Systems engineering and theory;Control design;Adaptive control;self-adaptive systems;cooperative systems;real time systems},
}

@InProceedings{Qureshi2010a,
  author    = {N. A. {Qureshi} and A. {Perini} and N. A. {Ernst} and J. {Mylopoulos}},
  title     = {Towards a continuous requirements engineering framework for self-adaptive systems},
  booktitle = {2010 First International Workshop on Requirements@Run.Time},
  year      = {2010},
  pages     = {9-16},
  month     = {Sep.},
  abstract  = {Requirements engineering (RE) for self-adaptive systems (SAS) is an emerging research area. The key features of such systems are to be aware of the changes in both their operating and external environments, while simultaneously remaining aware of their users' goals and preferences. This is accomplished by evaluating such changes and adapting to a suitable alternative that can satisfy those changes in the context of the user goals. Most current RE languages do not consider this `reflective' and online component of requirements models. In this paper, we propose a new framework for building SAS that is goal- and user-oriented. We sketch a framework to enable continuous adaptive requirements engineering (CARE) for SAS that leverage requirements-aware systems and exploits the Techne modeling language and reasoning system. We illustrate our framework by showing how it can handle an adaptive scenario in the travel domain.},
  doi       = {10.1109/RERUNTIME.2010.5628552},
  groups    = {ieee},
  keywords  = {software engineering;systems analysis;continuous requirements engineering framework;self adaptive systems;RE;SAS;external environments;operating environments;online component;continuous adaptive requirements engineering;CARE;techne modeling language;Synthetic aperture sonar;Adaptation model;Monitoring;Business;Context;Ontologies;Cognition},
}

@InProceedings{Zhao2016a,
  author    = {Y. {Zhao} and C. {Lei} and Y. {Yang} and H. {Zhang} and T. {Yang} and Z. {Zhao} and X. {Sun}},
  title     = {Self-Adaptive End-Point Mutation Technique Based on Adversary Strategy Awareness},
  booktitle = {2016 IEEE 41st Conference on Local Computer Networks (LCN)},
  year      = {2016},
  pages     = {587-590},
  month     = {Nov},
  abstract  = {Moving target defense is a revolutionary technology to change the pattern of attack and defense, and end-point information mutation is one of the hotspots belonging to this field. In order to counterpoise the defense benefit of end-point information mutation and service quality of network system, the self-adaptive end-point mutation technique based on adversary strategy awareness is proposed. Directed at the blindness problem of mutation mechanism in the course of defense, adversary strategy awareness based on Sibson entropy algorithm is proposed for guiding the choice of mutation mode by discriminating the scanning attack strategy. Aimed at the low availability problem caused by limited network resource and high mutation overhead, satisfiability modulo theories are used to formally describe the constraints of mutation. Finally, theoretical and experimental analysis shows the ability to resist scanning attack and mutation overhead.},
  doi       = {10.1109/LCN.2016.99},
  groups    = {ieee},
  keywords  = {computability;computer network security;entropy;self-adaptive end-point mutation;adversary strategy awareness;moving target defense;revolutionary technology;end-point information mutation;service quality;network system;Sibson entropy;scanning attack strategy;mutation overhead;satisfiability modulo theories;Entropy;Information systems;IP networks;Network topology;Resists;Security;Engines;End-point Information Mutation;Self-Adaptive Adjustment Mechanism;Adversary Strategy Awareness;Software Defined Network;Satisfiability Modulo Theories},
}

@InProceedings{Andrade2013a,
  author    = {S. S. {Andrade} and R. J. d. A. {Mac��do}},
  title     = {A Search-Based Approach for Architectural Design of Feedback Control Concerns in Self-Adaptive Systems},
  booktitle = {2013 IEEE 7th International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2013},
  pages     = {61-70},
  month     = {Sep.},
  abstract  = {A number of approaches for endowing systems with self-adaptive behavior have been proposed over the past years. Among such efforts, architecture-centric solutions with explicit representation of feedback loops have currently been advocated as a promising research landscape. Although noteworthy results have been achieved on some fronts, the lack of systematic representations of architectural knowledge and effective support for well-informed trade-off decisions still poses significant challenges when designing modern self-adaptive systems. In this paper, we present a systematic and flexible representation of design dimensions related to feedback control concerns, a set of metrics which estimate quality attributes of resulting automated designs, and a search-based approach to find out a set of Pareto-optimal candidate architectures. The proposed approach has been fully implemented in a supporting tool and a case study with a self-adaptive cloud computing environment has been undertaken. The results indicate that our approach effectively captures the most prominent degrees of freedom when designing self-adaptive systems, helps to elicit effective subtle designs, and provides useful support for early analysis of trade-off decisions.},
  doi       = {10.1109/SASO.2013.42},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {control system synthesis;feedback;Pareto optimisation;search problems;self-adjusting systems;search-based approach;architectural design;feedback control concerns;self-adaptive systems;self-adaptive behavior;architecture-centric solutions;architectural knowledge;design dimensions;quality attributes;Pareto-optimal candidate architectures;self-adaptive cloud computing environment;Computer architecture;Aerospace electronics;Feedback control;Measurement;Unified modeling language;Tuning;Encoding;self-adaptive systems;feedback control;automated software architecture design;design knowledge management},
}

@InProceedings{Coelho2019,
  author    = {N. B. {Coelho} and F. A. {Monteiro} and R. J. {Lopes}},
  title     = {Self-adapting Linear Network Coding Emulation},
  booktitle = {2019 International Symposium on Networks, Computers and Communications (ISNCC)},
  year      = {2019},
  pages     = {1-7},
  month     = {June},
  abstract  = {Linear network coding (LNC) introduced a new paradigm for routing data across networks where the transported packets are not the original information packets but rather linear combinations of the original packets. This is known to allow a more efficient use of the network resources. With LNC based on systematic network codes, the network's capacity is chiefly defined by the rank of the end-to-end equivalent transfer matrix. This paper presents a network-layer emulator based on the obj ect-oriented programming paradigm, which allows, for any network topology, to have the network's capacity self-optimized by adapting the coding operations performed at each node, depending on the impact the changes have on the global rank of the global transfer matrix, and on a metric related to the use of network's resources.},
  doi       = {10.1109/ISNCC.2019.8909124},
  groups    = {ieee},
  keywords  = {adaptive codes;linear codes;matrix algebra;network coding;object-oriented programming;telecommunication network routing;telecommunication network topology;systematic network codes;end-to-end equivalent transfer matrix;network-layer emulator;object-oriented programming paradigm;self-adapting linear network coding emulation;LNC;transported packets;original information packets;network resource topology;Network coding;Network topology;Encoding;Emulation;Routing;Protocols;Instruction sets;Linear network coding;Software defined networks;Network resilience;Rank metric;Java emulation},
}

@InProceedings{Abeywickrama2014,
  author    = {D. B. {Abeywickrama} and N. {Hoch} and F. {Zambonelli}},
  title     = {An Integrated Eclipse Plug-In for Engineering and Implementing Self-Adaptive Systems},
  booktitle = {2014 IEEE 23rd International WETICE Conference},
  year      = {2014},
  pages     = {3-8},
  month     = {June},
  abstract  = {A highly decentralized system of autonomous service components consists of multiple and possibly interacting feedback loops. These loops can be organized into a variety of architectural patterns. Although several authors have addressed the need to make feedback loops first-class entities, little attention has been given to providing solid tool support for their engineering and implementation. In this paper, we present SimSOTA - an integrated Eclipse plug-in tool to architect, engineer and implement self-adaptive systems based on our feedback loop-based approach. SimSOTA adopts model-driven development to model and simulate complex self-adaptive architectural patterns, and to automate the generation of Java-based implementation code for the patterns. The approach is validated using a case study in cooperative electric vehicles.},
  doi       = {10.1109/WETICE.2014.63},
  groups    = {ieee},
  issn      = {1524-4547},
  keywords  = {Java;object-oriented methods;service-oriented architecture;Java;self-adaptive architectural patterns;model-driven development;feedback loop-based approach;SimSOTA tool;autonomous service components;decentralized system;self-adaptive systems;Eclipse plug-in;Unified modeling language;Feedback loop;Adaptation models;Java;Sensors;Availability;Monitoring;self-adaptive systems;architectural patterns;Eclipse plug-ins;software engineering;simulation},
}

@InProceedings{Wang2008,
  author    = {W. {Wang} and Z. {Xiang} and X. {Xu}},
  title     = {Self-adaptive Differential Evolution and its application to job-shop scheduling},
  booktitle = {2008 Asia Simulation Conference - 7th International Conference on System Simulation and Scientific Computing},
  year      = {2008},
  pages     = {820-826},
  month     = {Oct},
  abstract  = {To improve the global convergence property and the avoidance premature convergence ability of differential evolution (DE), a self-adaptive differential evolution (SDE) was proposed. First, in order to simplify the difficulty of choosing suitable parameter values and improve the ability of breaking away form the local optimum, chaos theory was used to optimize the parameters of individuals in population. Second, for the sake of balancing the global search ability and local search ability of DE, a self-adaptive parameter setting strategy according to the fitness of individual was presented. At last, the SDE was applied to solving the job-shop scheduling problem. Experiment results show that the proposed method SDE is effective to avoid premature convergence and improves the global search ability remarkably.},
  doi       = {10.1109/ASC-ICSC.2008.4675475},
  groups    = {ieee},
  keywords  = {evolutionary computation;job shop scheduling;search problems;job-shop scheduling;self-adaptive differential evolution;global search ability;local search ability;Convergence;Chromium;Chaos;Job shop scheduling;Stochastic processes;Robustness;Signal processing algorithms;Gaussian distribution;Genetic mutations;Optimal control},
}

@InProceedings{Moreno2016,
  author    = {G. A. {Moreno} and J. {C��mara} and D. {Garlan} and B. {Schmerl}},
  title     = {Efficient Decision-Making under Uncertainty for Proactive Self-Adaptation},
  booktitle = {2016 IEEE International Conference on Autonomic Computing (ICAC)},
  year      = {2016},
  pages     = {147-156},
  month     = {July},
  abstract  = {Proactive latency-aware adaptation is an approach for self-adaptive systems that improves over reactive adaptation by considering both the current and anticipated adaptation needs of the system, and taking into account the latency of adaptation tactics so that they can be started with the necessary lead time. Making an adaptation decision with these characteristics requires solving an optimization problem to select the adaptation path that maximizes an objective function over a finite look-ahead horizon. Since this is a problem of selecting adaptation actions in the context of the probabilistic behavior of the environment, Markov decision processes (MDP) are a suitable approach. However, given all the possible interactions between the different and possibly concurrent adaptation tactics, the system, and the environment, constructing the MDP is a complex task. Probabilistic model checking can be used to deal with this problem since it takes as input a formal specification of the stochastic system, which is internally translated into an MDP, and solved. One drawback of this solution is that the MDP has to be constructed every time an adaptation decision has to be made to incorporate the latest predictions of the environment behavior. In this paper we present an approach that eliminates that run-time overhead by constructing most of the MDP offline, also using formal specification. At run time, the adaptation decision is made by solving the MDP through stochastic dynamic programming, weaving in the stochastic environment model as the solution is computed. Our experimental results show that this approach reduces the adaptation decision time by an order of magnitude compared to the probabilistic model checking approach, while producing the same results.},
  doi       = {10.1109/ICAC.2016.59},
  groups    = {ieee},
  keywords  = {decision making;decision theory;dynamic programming;formal specification;formal verification;Markov processes;probability;self-adjusting systems;stochastic programming;uncertainty handling;decision-making;uncertainty;proactive self-adaptation;proactive latency-aware adaptation;self-adaptive systems;reactive adaptation;adaptation tactics latency;adaptation decision;optimization problem;adaptation path;finite look-ahead horizon;probabilistic behavior;Markov decision processes;probabilistic model checking;formal specification;stochastic system;run-time overhead;MDP offline;stochastic dynamic programming;stochastic environment model;Servers;Probabilistic logic;Adaptation models;Stochastic processes;Uncertainty;Quality of service;Computational modeling;latency-aware;proactive;self-adaptation},
}

@InProceedings{Fu2010,
  author    = {H. {Fu} and D. {Ouyang} and J. {Xu}},
  title     = {A self-adaptive differential evolution algorithm for binary CSPs},
  booktitle = {2010 Sixth International Conference on Natural Computation},
  year      = {2010},
  volume    = {5},
  pages     = {2254-2258},
  month     = {Aug},
  abstract  = {A novel self-adaptive differential evolution (SADE) algorithm is proposed in this paper. SADE adjusts the mutation rate F and the crossover rate CR adaptively, taking account of the different distribution of population. In order to balance of an individual's exploration and exploitation capability for different evolving phase, F and CR equal to two different self-adjusted nonlinear functions. F and CR vary dynamically with each generation evolution. SADE maintains the diversity of population and improves the global convergence ability. It also improves the efficiency and success rate and avoids the premature convergence. Simulation and comparisons based on test-sets of CSPs demonstrate the effectiveness, efficiency and robustness of the proposed algorithm.},
  doi       = {10.1109/ICNC.2010.5582383},
  groups    = {ieee},
  issn      = {2157-9563},
  keywords  = {constraint theory;evolutionary computation;self-adaptive differential evolution algorithm;binary CSP;SADE algorithm;F-mutation rate;CR crossover rate;constraint satisfaction problems;Strontium;Algorithm design and analysis;Chromium;Convergence;Approximation algorithms;Computer science;Heuristic algorithms;differential evolution;self-adaptive;CSPs},
}

@InProceedings{Kim2018,
  author    = {M. {Kim} and M. {Shehab} and H. {Lee} and S. {Lee}},
  title     = {Trust-Aware Goal Modeling from Use Case for Cooperative Self-Adaptive Systems},
  booktitle = {2018 IEEE International Conference on Systems, Man, and Cybernetics (SMC)},
  year      = {2018},
  pages     = {4405-4410},
  month     = {Oct},
  abstract  = {The self-adaptive systems are the systems that can adjust its behavior based on the dynamically changing environments to provide the appropriate services to the user. However, as the user demands the complicated service from the self-adaptive systems, they should cooperate with other systems because they have the dedicated services for the specific demand. The system should select the appropriate cooperation partner among many candidates. In this situation, the trust becomes one of the important criteria to achieve the minimum level of security in the open and distributed environment. However, many existing works on the self-adaptive system focus on the internal adaptation process or the adaptation in the closed environment. As the first attempt to tackle the trust attribute, in this paper, we propose the trust-aware goal modeling from the use case for cooperative self-adaptive system. By analyzing the characteristics of the trust in the requirements engineering process, we can understand when the trust should be considered and how it can be represented in the system design. In addition, we illustrate the unmanned vehicle scenario to show how the proposed approach can be applied to the real case.},
  doi       = {10.1109/SMC.2018.00744},
  groups    = {ieee},
  issn      = {2577-1655},
  keywords  = {adaptive systems;control engineering computing;cooperative systems;mobile robots;remotely operated vehicles;trust-aware goal modeling;internal adaptation process;system design;cooperative self-adaptive system;unmanned vehicle scenario;Requirements engineering;Analytical models;Synthetic aperture sonar;Stakeholders;Security;Unmanned vehicles;trust;goal modeling;self-adaptive system},
}

@InProceedings{Pandey2016,
  author    = {A. {Pandey} and G. A. {Moreno} and J. {C��mara} and D. {Garlan}},
  title     = {Hybrid Planning for Decision Making in Self-Adaptive Systems},
  booktitle = {2016 IEEE 10th International Conference on Self-Adaptive and Self-Organizing Systems (SASO)},
  year      = {2016},
  pages     = {130-139},
  month     = {Sep.},
  abstract  = {Run-time generation of adaptation plans is a powerful mechanism that helps a self-adaptive system to meet its goals in a dynamically changing environment. In the past, researchers have demonstrated successful use of various automated planning techniques to generate adaptation plans at run time. However, for a planning technique, there is often a trade-off between timeliness and optimality of the solution. For some self-adaptive systems, ideally, one would like to have a planning approach that is both quick and finds an optimal adaptation plan. To find the right balance between these conflicting requirements, this paper introduces a hybrid planning approach that combines more than one planner to obtain the benefits of each. In this paper, to instantiate a hybrid planner we combine deterministic planning with Markov Decision Process (MDP) planning to obtain the best of both worlds: deterministic planning provides plans quickly when timeliness is critical, while allowing MDP planning to generate optimal plans when the system has sufficient time to do so. We validate the hybrid planning approach using a realistic workload pattern in a simulated cloud-based self-adaptive system.},
  doi       = {10.1109/SASO.2016.19},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {cloud computing;digital simulation;Markov processes;planning (artificial intelligence);decision making;run-time generation;dynamically changing environment;automated planning techniques;hybrid planning approach;Markov decision process planning;MDP;workload pattern;simulated cloud-based self-adaptive system;Planning;Uncertainty;Servers;Time factors;Markov processes;Maintenance engineering;Space exploration;Self-Adaptive Systems;Automated Planning;Cloud-Based Systems},
}

@InProceedings{Qin2012,
  author    = {H. {Qin} and X. {Wu} and J. {Hou} and H. {Wang} and W. {Zhang} and W. {Dou}},
  title     = {Self-Adaptive Cloud Pricing Strategies with Markov Prediction and Data Mining Method},
  booktitle = {2012 International Conference on Cloud and Service Computing},
  year      = {2012},
  pages     = {219-226},
  month     = {Nov},
  abstract  = {Cloud computing as a new IT technology is burgeoning and an increasing number of providers are offering various web services related to cloud computing. Meanwhile, the demands of different kinds of users are also rising sharply. In order to maximize the revenue, a proper pricing model is in desperate need. Nowadays, most of the providers are using static pricing which neglects the changes of supply and demand. Since the web services are easy to access and can be used by a large number of users, a dynamic pricing model aimed at maximizing the revenue is proposed. Our dynamic pricing model can automatically adjust the prices of resources according to the demands from users and the pricing for packages is based on Apriori Algorithm. Furthermore, the dynamic pricing model also can be adjusted and optimized by Genetic Annealing Algorithm so as to well adapt to the changes of Supply and demand. Compared with the static pricing model, the dynamic pricing model can increase the revenue to a considerable extent.},
  doi       = {10.1109/CSC.2012.41},
  groups    = {ieee},
  keywords  = {cloud computing;data mining;genetic algorithms;Markov processes;prediction theory;pricing;resource allocation;supply and demand;Web services;self-adaptive cloud pricing strategies;Markov prediction;data mining method;IT technology;Web services;cloud computing;static pricing;supply and demand;dynamic pricing model;revenue maximization;packages pricing;genetic annealing algorithm;Pricing;Biological cells;Cloud computing;Computational modeling;Sociology;Statistics;Vectors;dynamic pricing;IaaS;cloud computing;maximize revenue;data mining},
}

@InProceedings{Tan2017,
  author    = {Y. {Tan} and M. {Zhang} and J. {Zhu} and H. {Liu}},
  title     = {A self-adaptive modified fruit fly optimization algorithm},
  booktitle = {2017 36th Chinese Control Conference (CCC)},
  year      = {2017},
  pages     = {2928-2934},
  month     = {July},
  abstract  = {Fruit fly optimization algorithm (FOA) is inspired by imitating the foraging activity of fruit flies. Aiming at its inability to search the entire solution space, a Self-Adaptive Modified Fruit Fly Optimization Algorithm (SAMFOA) is proposed. Firstly, a new calculation formula of the smell concentration judgment value is designed. With the use of the new formula, the smell concentration judgment value is no longer restricted to be non-negative value so the algorithm is able to search both the positive and negative part of the solution space. Secondly, a self-adaptive osphresis foraging radius is introduced to enhance the ability to break away from local optimum. Experiments on 20 numerical benchmark functions show that the algorithm has good performance in terms of global searching ability, optimize accuracy and stability.},
  doi       = {10.23919/ChiCC.2017.8027810},
  groups    = {ieee},
  issn      = {1934-1768},
  keywords  = {optimisation;search problems;self-adaptive modified fruit fly optimization algorithm;foraging activity imitation;fruit flies;solution space searching;SAMFOA;calculation formula;smell concentration judgment value;self-adaptive osphresis foraging radius;global searching ability;Optimization;Algorithm design and analysis;Linear programming;Benchmark testing;Particle swarm optimization;Convergence;Position measurement;Swarm intelligence optimization;Fruit fly optimization algorithm;Numerical optimization},
}

@InProceedings{Dong2010,
  author    = {G. {Dong} and L. {Chang} and G. {Fei} and W. {Wang} and X. {Niu} and P. {Gong}},
  title     = {Performance enhancement of localization in wireless sensor network by self-adaptive algorithm based on difference},
  booktitle = {2010 Global Mobile Congress},
  year      = {2010},
  pages     = {1-5},
  month     = {Oct},
  abstract  = {In this paper, we present a self-adaptive localization algorithm based on difference for the node localization in wireless sensor network. We first divide the sensing area into several small regions according to the density of unknown nodes. Then, we distribute the beacon nodes within the sensing area in a reasonable manner. The measured errors of estimated location in beacon nodes are considered as the adjusted values and are broadcasted to the adjacent unknown nodes. Based on the broadcasted adjusted values, the unknown nodes adjust their relative position information. The simulation results show that with the proposed algorithm the node localization errors can be reduced and the accuracy of localization is greatly increased.},
  doi       = {10.1109/GMC.2010.5634594},
  groups    = {ieee},
  keywords  = {wireless sensor networks;wireless sensor network;localization performance enhancement;self-adaptive localization algorithm;beacon nodes;node localization errors;Force;Wireless sensor networks;Sensors;Mobile communication;Accuracy;Simulation;Mobile computing},
}

@InProceedings{LiyunZuo2015,
  author    = {{Liyun Zuo} and L. {Shu} and {Shoubin Dong} and {Zhangbing Zhou} and {Lei Wang}},
  title     = {A dynamic self-adaptive resource-load evaluation method in cloud computing},
  booktitle = {2015 11th International Conference on Heterogeneous Networking for Quality, Reliability, Security and Robustness (QSHINE)},
  year      = {2015},
  pages     = {287-291},
  month     = {Aug},
  abstract  = {Cloud resource and its load have dynamic characteristics. To address this challenge, a dynamic self-adaptive evaluation method (termed SDWM) is proposed in this paper. SDWM uses some dynamic evaluation indicators to evaluate resource state more accurately. And it divides the resource load into three states - Overload, Normal and Idle by the self-adaptive threshold. Then it migrates overload resources to balance load, and releases idle resources whose idle times exceed a threshold to save energy, which can effectively improve system utilization. Experimental results demonstrate SDWM has better adaptability than other similar methods when resources dynamically join or exit. This shows the positive effect of the dynamic self-adaptive threshold.},
  groups    = {ieee},
  keywords  = {cloud computing;self-adaptive threshold;idle state;normal state;overload state;source state;dynamic evaluation indicators;cloud resource;cloud computing;dynamic self-adaptive resource-load evaluation method;Dynamic scheduling;Heuristic algorithms;Cloud computing;Servers;Resource management;Petrochemicals;Processor scheduling;cloud computing;energy;load evaluation},
}

@Article{Dong2014,
  author   = {H. {Dong} and F. K. {Hussain}},
  title    = {Self-Adaptive Semantic Focused Crawler for Mining Services Information Discovery},
  journal  = {IEEE Transactions on Industrial Informatics},
  year     = {2014},
  volume   = {10},
  number   = {2},
  pages    = {1616-1626},
  month    = {May},
  issn     = {1941-0050},
  abstract = {It is well recognized that the Internet has become the largest marketplace in the world, and online advertising is very popular with numerous industries, including the traditional mining service industry where mining service advertisements are effective carriers of mining service information. However, service users may encounter three major issues - heterogeneity, ubiquity, and ambiguity, when searching for mining service information over the Internet. In this paper, we present the framework of a novel self-adaptive semantic focused crawler - SASF crawler, with the purpose of precisely and efficiently discovering, formatting, and indexing mining service information over the Internet, by taking into account the three major issues. This framework incorporates the technologies of semantic focused crawling and ontology learning, in order to maintain the performance of this crawler, regardless of the variety in the Web environment. The innovations of this research lie in the design of an unsupervised framework for vocabulary-based ontology learning, and a hybrid algorithm for matching semantically relevant concepts and metadata. A series of experiments are conducted in order to evaluate the performance of this crawler. The conclusion and the direction of future work are given in the final section.},
  doi      = {10.1109/TII.2012.2234472},
  groups   = {ieee},
  keywords = {advertising;indexing;information retrieval;Internet;learning (artificial intelligence);meta data;mining industry;ontologies (artificial intelligence);vocabulary;self-adaptive semantic focused crawler;mining services information discovery;Internet;online advertising;mining service industry;mining service advertisements;heterogeneity;ubiquity;ambiguity;SASF crawler;mining service information formatting;mining service information indexing;Web environment;unsupervised framework;vocabulary-based ontology learning;concept matching;metadata;Ontologies;Crawlers;Semantics;Internet;Advertising;Business;Industries;Mining service industry;ontology learning;semantic focused crawler;service advertisement;service information discovery},
}

@InProceedings{Jiang2016,
  author    = {Y. {Jiang} and P. {Tan} and H. {Song} and B. {Wan} and M. {Hosseini} and L. {Sha}},
  title     = {A Self-Adaptively Evolutionary Screening Approach for Sepsis Patient},
  booktitle = {2016 IEEE 29th International Symposium on Computer-Based Medical Systems (CBMS)},
  year      = {2016},
  pages     = {60-65},
  month     = {June},
  abstract  = {Today, sepsis syndrome is one of the leading cause of death globally, and is of great clinical importance. In this paper, we present a self-adaptively evolutionary sepsis screening system to shorten the time of syndrome detection and improve the positive effect of treatment, with the screening frequency and content can be automatically adjusted according to the current status of the patient. First, we propose a novel graphical computation model named AdapDBN with a clearly defined syntax for the medical knowledge presentation, especially for the presentation of the pathophysiology model of the disease. Then, the semantics of AdapDBN is formally defined for the evolutionary inference of syndrome onset probability. Finally, we demonstrate how to initialize AdapDBN with sepsis-related epidemiologic statics, published clinical research and physician's knowledge and how to incorporate it into existing sepsis screening and decision support flow. We evaluate its effectiveness and superiority with comparisons to existing computation techniques.},
  doi       = {10.1109/CBMS.2016.8},
  groups    = {ieee},
  issn      = {2372-9198},
  keywords  = {diseases;medical computing;patient treatment;physiology;probability;self-adaptively evolutionary sepsis screening system;sepsis syndrome detection;patient treatment;graphical computation model;AdapDBN semantics;medical knowledge presentation;disease pathophysiology model;syndrome onset probability evolutionary inference;sepsis-related epidemiologic statics;Monitoring;Computational modeling;Bayes methods;Automata;Adaptation models;Diseases;Sepsis;Adaptively;Dynamic Bayesian Network},
}

@InProceedings{Singh2017,
  author    = {I. {Singh} and S. {Lee}},
  title     = {Self-adaptive requirements for intelligent transportation system: A case study},
  booktitle = {2017 International Conference on Information and Communication Technology Convergence (ICTC)},
  year      = {2017},
  pages     = {520-526},
  month     = {Oct},
  abstract  = {Intelligent Transportation System (ITS) is the emerging transportation which comprises of the advanced technologies such as wireless communications, video vehicle detection, distributed system architectures, human machine interface, sensing and actuating, to improve safety of the passengers, traffic congestion, fuel consumption and optimize other services of the transportation system such as real time traffic situation, electronic toll collection, automatic road enforcement and hot lanes. The current ITS systems lacks self-adaptive capability to take spontaneous decisions. The environment of the ITS system is very complex so optimal decisions cannot be taken but a good enough decision can be taken which fulfills the requirement of the system. To build an ITS system having the capability to adapt itself, this paper presents the self-adaptive requirements for the ITS. To elicit the requirements for ITS, we use scenarios based model and goal based model using the requirements Engineering processes (Elicitation, Elaboration, Specification, Validation) with MAPE-K. We use Knowledge Acquisition on Automated Specification (KAOS) approach to build goal model using Objectiver tool, and use RELAX syntax to elicit adaptive requirements for ITS.},
  doi       = {10.1109/ICTC.2017.8191032},
  groups    = {ieee},
  keywords  = {formal specification;intelligent transportation systems;knowledge acquisition;ITS systems;requirements engineering;Knowledge Acquisition on Automated Specification;KAOS approach;Objectiver tool;RELAX syntax;self-adaptive requirements;intelligent transportation system;Requirements Engineering;Self-Adaptive;ITS},
}

@InProceedings{Zeller2011,
  author    = {M. {Zeller} and C. {Prehofer} and G. {Weiss} and D. {Eilers} and R. {Knorr}},
  title     = {Towards Self-Adaptation in Real-Time, Networked Systems: Efficient Solving of System Constraints for Automotive Embedded Systems},
  booktitle = {2011 IEEE Fifth International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2011},
  pages     = {79-88},
  month     = {Oct},
  abstract  = {While there has been considerable work on self-adaptive systems, applying these techniques to networked, embedded systems poses several new problems due to the requirements of embedded real-time systems. Among others, we have to consider memory and hardware limitations, as well as task schedulability and timing dependencies. The goal of this paper is to find a correct placement of software components efficiently, even though most of these individual constraints are highly intractable (NP-complete). This is a prerequisite for runtime adaptation in such domains and can be used for system optimization, extension or failure handling. We introduce an integrated model of system constraints for efficient computation of software component allocation, focusing on automotive embedded systems. For solving these, we have developed and compared two techniques based on SAT solving and Simulated Annealing, which enforce placement constraints efficiently. This reduces the size of the constraints significantly, but still leads to 2 million variables and more than 126 thousand equations in our case study with realistic automotive system settings. We show that both approaches provide solutions in several seconds on current commodity hardware, and show that SAT solving is more efficient for larger sets of equations.},
  doi       = {10.1109/SASO.2011.19},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {automotive engineering;embedded systems;simulated annealing;self-adaptation;networked system;system constraint;automotive embedded system;self-adaptive system;embedded real-time system;system optimization;software component allocation;simulated annealing;realistic automotive system;commodity hardware;SAT solving;Automotive engineering;Actuators;Embedded systems;Resource management;Runtime;Sensors;runtime adaptation;networked embedded systems;automotive;constraints;allocation},
}

@InProceedings{Poggi2016a,
  author    = {F. {Poggi} and D. {Rossi} and P. {Ciancarini} and L. {Bompani}},
  title     = {Semantic Run-Time Models for Self-Adaptive Systems: A Case Study},
  booktitle = {2016 IEEE 25th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE)},
  year      = {2016},
  pages     = {50-55},
  month     = {June},
  abstract  = {Today's software systems increasingly work in changing environments, where rapid modifications in user needs, resource variabilities and system faults require remarkable administrative efforts. In order to mitigate the costs for governing these activities, software systems are expected to dynamically self-adapt. The problem of supporting auto-adaptation, which is complex activity in itself, is further exacerbated when applied to legacy systems which have not been developed for this purpose. In this paper we introduce a novel approach to self-adaptation based on the MAPE-K paradigm, where semantic models are used to provide an unified view of the heterogeneous elements composing these systems, and reasoning mechanisms are leveraged to drive adaptation strategies. We present the implementation of an adaptation engine based these concepts that uses ontologies and Semantic Web technologies, and discuss its application in a real world case study. From this experience, we offer recommendations for future research in this area.},
  doi       = {10.1109/WETICE.2016.20},
  groups    = {ieee},
  keywords  = {semantic Web;Semantic Web technologies;drive adaptation strategies;MAPE-K paradigm;resource variabilities;software systems;semantic run-time models;self-adaptative systems;Adaptation models;Monitoring;Ontologies;Temperature sensors;Computational modeling;Semantics;Servers;Self-adaptive Systems;Semantic Web;Models@run.time},
}

@InProceedings{Fiack2014,
  author    = {L. {Fiack} and B. {Miramond} and A. {Upegui} and F. {Vannel}},
  title     = {Dynamic parallel reconfiguration for self-adaptive hardware architectures},
  booktitle = {2014 NASA/ESA Conference on Adaptive Hardware and Systems (AHS)},
  year      = {2014},
  pages     = {218-224},
  month     = {July},
  abstract  = {Adaptive Hardware Systems can rely on software or hardware adaptation. Software adaptation can be globally assimilated to mode switching, either at a technological or hardware level (DVFS, Idle processor mode ...), or at the application level (bandwidth adaptation in telecommunication, multispectral cameras, ...). Hardware adaptation corresponds to a deeper change in the internal organization of the computing architecture of an embedded system. It enables more powerful adaptation but is currently limited by the reconfiguration (tool and architecture) of today's FPGA devices. We present in this paper a multi-FPGA platform designed to exhibit unique computing capabilities. The joint design of the electronic board and the internal architecture of each reconfigurable device permits dynamic parallel (and not partial) reconfiguration of several parts of the system while maintaining global routing and local computation in the rest of the system. Dynamic parallel reconfiguration and technological independence are enabled by considering reconfiguration at coarse grain. We describe in the paper the hardware elements composing the platform. The specific design of the global system allowed us to reach a fully operational platform. We present statistical experiments to evaluate the inter-chip network capacity which show that our platform supports up to 18 parallel reconfigurations per second.},
  doi       = {10.1109/AHS.2014.6880180},
  groups    = {ieee},
  keywords  = {embedded systems;field programmable gate arrays;network routing;parallel architectures;reconfigurable architectures;statistical analysis;dynamic parallel reconfiguration;self-adaptive hardware architectures;adaptive hardware systems;hardware adaptation;software adaptation;mode switching;DVFS;idle processor mode;computing architecture;embedded system;FPGA devices;multiFPGA platform;electronic board;reconfigurable device;interchip network capacity;Field programmable gate arrays;Microprocessors;Hardware;Routing;Receivers;Arrays},
}

@InProceedings{Datta2014,
  author    = {S. K. {Datta} and C. {Bonnet} and N. {Nikaein}},
  title     = {Self-adaptive battery and context aware mobile application development},
  booktitle = {2014 International Wireless Communications and Mobile Computing Conference (IWCMC)},
  year      = {2014},
  pages     = {761-766},
  month     = {Aug},
  abstract  = {Overall high power consumption in the mobile applications forces the mobile users to recharge frequently. Most of the Android applications do not implement any self-adaptive strategies that react to the battery level, status and context. Thus the applications continue to consume power even when battery is critically low. Intelligent control of hardware and software optimization based on the battery level is the key to power saving. This paper introduces a self-adaptive application development framework which proposes three profiles with various self-adaptive features for mobile applications. The framework employs an analyzer engine which decides the activation of appropriate profile based on battery and context information. The self-adaption takes place in four levels - hardware & software features adaption, user features adaption and additional optimization. When the battery is critically low, priority is given to maximize the battery life until next charging opportunity. Such implementation is highly desirable for mobile applications with high dependency on display hardware (e.g. games) and/or on network operations (e.g. YouTube, Dropbox). Prototype Android applications are developed and results show up to 40% reduction in application power consumption. Power Tutor has been used to get the power consumption results.},
  doi       = {10.1109/IWCMC.2014.6906452},
  groups    = {ieee},
  issn      = {2376-6506},
  keywords  = {mobile radio;optimisation;power consumption;smart phones;telecommunication power management;ubiquitous computing;self-adaptive battery application development;context aware mobile application development;power consumption;intelligent control;hardware optimization;software optimization;self-adaptive features;analyzer engine;battery information;context information;user features adaption;battery life;next charging opportunity;Android applications;power tutor;Batteries;Power demand;Androids;Humanoid robots;Engines;Context;Hardware;Android;Battery level and status;Context;Power consumption;Self-adaptive application},
}

@InProceedings{Santambrogio2009,
  author    = {M. D. {Santambrogio}},
  title     = {From Reconfigurable Architectures to Self-Adaptive Autonomic Systems},
  booktitle = {2009 International Conference on Computational Science and Engineering},
  year      = {2009},
  volume    = {2},
  pages     = {926-931},
  month     = {Aug},
  abstract  = {Systems on a chip (SoC) can draw various benefits such as adaptability and efficient acceleration of compute-intensive tasks from the inclusion of reconfigurable hardware as a system component. Dynamic reconfiguration capabilities of current reconfigurable devices create an additional dimension in the temporal domain. During the design space exploration phase, overheads associated with reconfiguration and hardware/software interfacing need to be evaluated carefully in order to harvest the full potential of dynamic reconfiguration. In order to overcome the limits deriving by the increasing complexity and the associated workload to maintain such complex infrastructure, one possibility is to adopt self-adaptive and autonomic computing systems. A self-adaptive and autonomic computing system is a system able to configure, heal, optimize and protect itself without the need for human intervention.},
  doi       = {10.1109/CSE.2009.490},
  groups    = {ieee},
  keywords  = {logic design;reconfigurable architectures;system-on-chip;reconfigurable architecture;self-adaptive system;autonomic computing system;system-on-chip;SoC;Reconfigurable architectures;Hardware;Acceleration;Software performance;Costs;Computer architecture;Computer science;Artificial intelligence;Laboratories;Space exploration;Performance;Reconfiguration;Codesign;Runtime Adaptability;Self-Adaptive Systems},
}

@Article{Duan2016,
  author   = {T. {Duan} and J. {Shen} and P. {Wang} and S. {Liu}},
  title    = {A self-adaptive programming mechanism for reconfigurable parsing and processing},
  journal  = {China Communications},
  year     = {2016},
  volume   = {13},
  number   = {Supplement 1},
  pages    = {87-97},
  issn     = {1673-5447},
  abstract = {In this paper, we present a self-adaptive programming mechanism (SAP) that targets programming hardware devices of reconfigurable parsing and processing. The SAP programming system locates in software of network data plane and has three features: (1) programmable packet parsing: the packet header format can be customized and new header type can be added; (2) reconfigurable packet processing: the match fields to be handled in each match table can be specified; (3) function-adaptive control: any function control systems can determine the packet processing flow independently without the need of knowing the specifics of the underlying hardware. Finally, we implement a prototype on NetFPGA-10G together with two representative function control systems (router and OpenFlow switch) to demonstrate how SAP works. We believe the data plane of reconfigurable parsing and processing will lead to future switches that provide greater flexibility, and unlock the potential of network function innovation.},
  doi      = {10.1109/CC.0.7560898},
  groups   = {ieee},
  keywords = {field programmable gate arrays;Internet;packet switching;program compilers;reconfigurable architectures;telecommunication network routing;self-adaptive programming mechanism;SAP mechanism;programmable packet parsing;reconfigurable packet processing;function-adaptive control;NetFPGA-10G;function control system;network router;OpenFlow switch;Internet;Hardware;Programming;Switches;Computer architecture;Pipelines;Software;programming mechanism; selfadaptive;reconfigurable; network data plane;NetFPGA},
}

@InProceedings{Hachicha2016a,
  author    = {M. {Hachicha} and R. B. {Halima} and A. H. {Kacem}},
  title     = {Modeling and verifying self-adaptive systems: A refinement approach},
  booktitle = {2016 IEEE International Conference on Systems, Man, and Cybernetics (SMC)},
  year      = {2016},
  pages     = {003967-003972},
  month     = {Oct},
  abstract  = {Self-adaptive systems are able to modify their behavior and/or structure to deal with their continuously changing environment and internal dynamics. MAPE control loops, based on these four steps: Monitoring, Analysis, Planning, and Execution, have been identified as crucial elements in realizing self-adaptation of software systems. Adaptive systems are generally more difficult to design, specify and verify due to their high complexity. Ensuring the correctness of the system's adaptation logic is very crucial. In this paper, we propose a refinement approach that aims first to model step-by-step self-adaptive systems based on MAPE control loop. Second, our approach aims to formally specify self-adaptive systems at a high level of abstraction using the Event-B method. This formal specification provides a way to verify several properties for self-adaptive systems such as safety, reachability and temporal constraints. We illustrate our approach by verifying the fire detection system that exhibits a self-adaptive behavior.},
  doi       = {10.1109/SMC.2016.7844853},
  groups    = {ieee},
  keywords  = {formal specification;self-adjusting systems;system monitoring;self-adaptive systems;refinement approach;continuously changing environment;internal dynamics;MAPE control loops;software systems;adaptation logic;Event-B method;temporal constraints;fire detection system;Unified modeling language;Monitoring;Adaptation models;Context;Safety;Batteries;Conferences},
}

@InProceedings{Kliem2014,
  author    = {A. {Kliem} and A. {Boelke} and A. {Grohnert} and N. {Traeder}},
  title     = {Self-adaptive middleware for ubiquitous medical device integration},
  booktitle = {2014 IEEE 16th International Conference on e-Health Networking, Applications and Services (Healthcom)},
  year      = {2014},
  pages     = {298-304},
  month     = {Oct},
  abstract  = {E-Health systems need to dynamically integrate a huge variety of medical sensors in order to provide a meaningful survey of a patient's condition. Devices like smart phones or gateways usually used as integrators, often underlie resource constraints and have to cope with the mobility of the patient. Therefore it is difficult to realize an overall integration middleware, that allows to handle a sufficient amount of medical sensors and is able to quickly adapt to changing requirements (e.g. new sensors or data aggregation modules) while preserving mobility and resource constraints. We present a middleware solution for the integration of medical devices and the aggregation of resulting data streams, that is able to adapt itself to the requirements of patients and Care Delivery Operators, using a modular approach and external knowledge repositories. Knowledge in the shape of configurations and runtime pluggable software modules is used to properly integrate and handle discovered medical devices on demand.},
  doi       = {10.1109/HealthCom.2014.7001858},
  groups    = {ieee},
  keywords  = {knowledge management;medical information systems;middleware;mobile computing;smart phones;self-adaptive middleware;ubiquitous medical device integration;e-health systems;medical sensors;patient condition;smart phones;gateways;resource constraints;integration middleware;mobility preservation;resource constraints;care delivery operators;patients requirements;external knowledge repositories;runtime pluggable software modules;medical devices;data streams;Middleware;Engines;Containers;Sensors;Routing;Protocols;Logic gates;E-health;telemedicine;self-adaptive;dynamic reconfiguration;medical device integration;interoperable medical devices;plug-and-play},
}

@InProceedings{Weyns2016,
  author    = {D. {Weyns} and M. U. {Iftikhar}},
  title     = {Model-Based Simulation at Runtime for Self-Adaptive Systems},
  booktitle = {2016 IEEE International Conference on Autonomic Computing (ICAC)},
  year      = {2016},
  pages     = {364-373},
  month     = {July},
  abstract  = {Modern software systems are subject to uncertainties, such as dynamics in the availability of resources or changes of system goals. Self-adaptation enables a system to reason about runtime models to adapt itself and realises its goals under uncertainties. Our focus is on providing guarantees for adaption goals. A prominent approach to provide such guarantees is automated verification of a stochastic model that encodes up-to-date knowledge of the system and relevant qualities. The verification results allow selecting an adaption option that satisfies the goals. There are two issues with this state of the art approach: i) changing goals at runtime (a challenging type of uncertainty) is difficult, and ii) exhaustive verification suffers from the state space explosion problem. In this paper, we propose a novel modular approach for decision making in self-adaptive systems that combines distinct models for each relevant quality with runtime simulation of the models. Distinct models support on the fly changes of goals. Simulation enables efficient decision making to select an adaptation option that satisfies the system goals. The tradeoff is that simulation results can only provide guarantees with a certain level of accuracy. We demonstrate the benefits and tradeoffs of the approach for a service-based telecare system.},
  doi       = {10.1109/ICAC.2016.67},
  groups    = {ieee},
  keywords  = {decision making;digital simulation;formal verification;telemedicine;model-based simulation;self-adaptive systems;software systems;self-adaptation;runtime models;stochastic model automated verification;adaption option;state space explosion problem;decision making;service-based telecare system;Adaptation models;Runtime;Uncertainty;Decision making;Concrete;Analytical models;Stochastic processes;Self-adaptation;models at run-time;simulation at runtime;TAS exemplar},
}

@InProceedings{Liao2015,
  author    = {Y. {Liao} and C. {Wang} and X. {Wu} and F. {Lu} and P. {Wang} and S. {Cai}},
  title     = {On the mechanical design and control of a self-adaptive exoskeleton chair},
  booktitle = {2015 IEEE International Conference on Information and Automation},
  year      = {2015},
  pages     = {937-942},
  month     = {Aug},
  abstract  = {This paper presents a novel device that can be attached to a lower-limb exoskeleton to assist lower extremity hemiplegic patients during sitting down and standing up. Such device serves as a self-adaptive exoskeleton chair. The mechanical design has simple structure, great applicability, reliability and high driving efficiency. This paper first models and analysis the muscle forces during standing up and sitting down process utilizing OpenSim. Moreover, the simulation of motor energy consumption using the ADAMS software was also presented to verify the effectiveness of the proposed device.},
  doi       = {10.1109/ICInfA.2015.7279421},
  groups    = {ieee},
  keywords  = {mechanical engineering computing;medical robotics;reliability;self-adjusting systems;self-adaptive exoskeleton chair;mechanical design;reliability;muscle force analysis;OpenSim;motor energy consumption simulation;ADAMS software;Joints;Exoskeletons;Knee;Muscles;Gravity;Torque;Exoskeleton;Self-adaptive chair;Sitting down process;ADAMS simulation},
}

@InProceedings{Adiththan2018,
  author    = {A. {Adiththan} and K. {Ravindran}},
  title     = {Orchestration of cooperative cruise control for networked self-adaptive cars},
  booktitle = {2018 10th International Conference on Communication Systems Networks (COMSNETS)},
  year      = {2018},
  pages     = {235-242},
  month     = {Jan},
  abstract  = {Networked embedded software systems incorporate varying degrees of adaptation behavior to sustain their operations with acceptable quality of service (QoS), in the face of hostile external events - such as resource outages in a cloud service, road slipperiness in a car driving, etc. For instance, a highly agile cruise control system of a car may dynamically adjust its controller parameters to generate a higher-than-normal increase in torque when encountering a higher road elevation (relative to a statically configured controller). With the high complexity of such dynamic adaptive systems, their QoS capability depends on how well they respond to hostile external events. The paper formulates model-based assessment techniques to reason about how capable is a networked system S in meeting its QoS specs. We benchmark the QoS capability of S by stress-testing S with artificially injected failures. As a case study, we describe the QoS assessment of a multi-vehicle adaptive cruise control system.},
  doi       = {10.1109/COMSNETS.2018.8328203},
  groups    = {ieee},
  issn      = {2155-2509},
  keywords  = {adaptive control;cooperative systems;embedded systems;networked control systems;quality of service;road vehicles;velocity control;highly agile cruise control system;controller parameters;statically configured controller;dynamic adaptive systems;QoS capability;hostile external events;QoS specs;QoS assessment;multivehicle adaptive cruise control system;networked self-adaptive cars;networked embedded software systems;adaptation behavior;networked system;model-based assessment techniques;stress-testing;cooperative cruise control;acceptable quality of service;Quality of service;Cruise control;Automobiles;Torque;Roads;Aerospace electronics;Steady-state},
}

@InProceedings{Iancu2011,
  author    = {B. {Iancu} and V. {Dadarlat} and A. {Peculea} and E. {Cebuc} and C. {Ardelean}},
  title     = {SAR �� A self-adaptive QoS aware network layer framework},
  booktitle = {2011 RoEduNet International Conference 10th Edition: Networking in Education and Research},
  year      = {2011},
  pages     = {1-8},
  month     = {June},
  abstract  = {Quality of service frameworks in computer networks are sets of mechanisms that run over multiple network equipment with the aim of ensuring network services. Several frameworks have been developed using different approaches, each framework showing advantages but also drawbacks. In order to eliminate these shortcomings, a new organization of the bandwidth is proposed and a new framework for ensuring end-to-end quality of service was developed and implemented. The functionalities and performances of the proposed framework were tested and validated through an experimental methodology, using a software system for developing and testing of quality of services sensitive frameworks and technologies.},
  doi       = {10.1109/RoEduNet.2011.5993698},
  groups    = {ieee},
  issn      = {2247-5443},
  keywords  = {computer networks;quality of service;SAR;self-adaptive QoS aware network layer framework;end-to-end quality of service;computer networks;network services;software system;Bandwidth;Admission control;Erbium;IP networks;Monitoring;end-to-end QoS;framework;admission control;bandwidth;reconfiguration;self-adaptive},
}

@InProceedings{Rani2013,
  author    = {C. {Rani} and D. P. {Kothari} and K. {Busawon}},
  title     = {Combined economic emission dispatch problem using chaotic self adaptive PSO},
  booktitle = {2013 International Conference on Power, Energy and Control (ICPEC)},
  year      = {2013},
  pages     = {399-404},
  month     = {Feb},
  abstract  = {This research work presents a Chaotic Self Adaptive Particle Swarm Optimization (CSAPSO) algorithm in order to solve the Combined Economic Emission Dispatch (CEED) problem. The main purpose of the work is to derive a simple and effective method for optimum generation dispatch to minimize the fuel cost and emission of power networks by considering several non-linear characteristics of the generator such as valve point effect, prohibited operating zones and ramp rate limits. A chaotic local search operator is introduced in the proposed algorithm to avoid premature convergence. Simulation studies are carried out, using MATLAB software, to show the effectiveness of the proposed optimization method. The applicability and high feasibility of the proposed method is validated on IEEE 30 bus, six generator systems. The CSAPSO based approach has been extended to evaluate the trade-off curve between the fuel cost and emission according to the bi-criterion objective function. In order to see the effectiveness of the proposed algorithm, it has been compared with other algorithms in the literature. Results show that the CSAPSO is more powerful than other algorithms.},
  doi       = {10.1109/ICPEC.2013.6527689},
  groups    = {ieee},
  keywords  = {air pollution control;IEEE standards;particle swarm optimisation;power generation dispatch;power generation economics;power system simulation;chaotic self adaptive particle swarm optimization;CSAPSO;CEED;combined economic emission dispatch problem;optimum generation dispatch;fuel cost minimization;fuel emission minimization;nonlinear characteristics;valve point effect;ramp rate limit;chaotic local search operator;MATLAB software;optimization method;IEEE 30 bus six generator system;curve evaluation;fuel cost;bicriterion objective function;Fuels;Generators;Equations;Sociology;Statistics;Mathematical model;Linear programming;Combined Economic Emission Dispatch (CEED);Chaotic Self Adaptive Particle Swarm Optimization (CSAPSO);ramp rate limits;valve point effect},
}

@InProceedings{Paul2014,
  author    = {J. {Paul} and W. {Stechele} and ��. {Sousa} and V. {Lari} and F. {Hannig} and J. {Teich} and M. {Kr?hnert} and T. {Asfour}},
  title     = {Self-adaptive harris corner detector on heterogeneous many-core processor},
  booktitle = {Proceedings of the 2014 Conference on Design and Architectures for Signal and Image Processing},
  year      = {2014},
  pages     = {1-8},
  month     = {Oct},
  abstract  = {The recent years have shown the emergence of heterogeneous system architecture (HSA), which offers massive computational power assembled into a compact design. Computer vision applications with massive inherent parallelism highly benefits from such heterogeneous processors with on-chip CPU and GPU units. The highly parallel and compute intensive parts of the application program can be mapped to the GPU while the control flow and high level tasks may run on the CPU. However, they pose considerable challenge to software development due to their hybrid architecture. Sharing of resources (GPU or CPU) among applications running concurrently, leads to variations in processing interval and prolonged processing intervals leads to low quality results (frame drops) for computer vision algorithms. In this work, we propose resource-awareness and self organisation within the application layer to adapt to available resources on the heterogeneous processor. The benefits of the new model is demonstrated using a widely used computer vision algorithm called Harris corner detector. A resource-aware runtime-system and a heterogeneous processor were used for evaluation and the results indicate a well constrained processing interval and reduced frame-drops. Our evaluations demonstrate up to 20% improvements in processing rate and accuracy of the detected corner points for Harris corner detection.},
  doi       = {10.1109/DASIP.2014.7115616},
  groups    = {ieee},
  keywords  = {computer vision;edge detection;graphics processing units;microprocessor chips;multiprocessing systems;resource allocation;self-adaptive Harris corner detector;heterogeneous many-core processor;heterogeneous system architecture;HSA;computer vision applications;on-chip CPU units;on-chip GPU units;software development;resource sharing;processing intervals;resource-awareness;self organisation;resource-aware runtime-system;Central Processing Unit;Computer architecture;Detectors;Graphics processing units;Runtime;Parallel processing;Hardware},
}

@InProceedings{Sun2015a,
  author    = {J. {Sun} and S. {Duan}},
  title     = {A Self-Adaptive Middleware for Efficient Routing in Distributed Sensor Networks},
  booktitle = {2015 IEEE International Conference on Systems, Man, and Cybernetics},
  year      = {2015},
  pages     = {322-327},
  month     = {Oct},
  abstract  = {Routing in sensor networks with unpredictable network connections and node failures is challenging due to the lack of knowledge about network dynamics in decision making. We present a self-adaptive middleware for efficient routing in distributed sensor network. At the heart of the proposed approach is the design of a policy-driven language to control the relocation of software components between sensor nodes. Accordingly, various changes in sensor networks can be dynamically adapted. Based on such a middleware, we provide a few approaches in building a practical routing protocol. For instance, nodes can adaptively switch their routing strategies according to the network stability or migrate some tasks to other idle nodes to prevent from node failures.},
  doi       = {10.1109/SMC.2015.68},
  groups    = {ieee},
  keywords  = {middleware;routing protocols;telecommunication computing;telecommunication control;wireless sensor networks;distributed sensor networks;self-adaptive middleware;efficient routing;policy-driven language;relocation control;software components;sensor nodes;routing protocol;Routing;Middleware;Peer-to-peer computing;Knowledge engineering;Buildings;Routing protocols;Routing;Component-based;Relocation;Selfadaptation;Policy-driven language;Distributed sensor networks},
}

@InProceedings{Zeller2010,
  author    = {M. {Zeller} and G. {Weiss} and D. {Eilers} and R. {Knorr}},
  title     = {Co-Simulation of Self-Adaptive Automotive Embedded Systems},
  booktitle = {2010 IEEE/IFIP International Conference on Embedded and Ubiquitous Computing},
  year      = {2010},
  pages     = {73-80},
  month     = {Dec},
  abstract  = {The complexity of modern vehicular embedded systems is constantly rising. In addition, distributed embedded systems like automobiles often implement safety-relevant applications which have a high demands on safety and reliability. This poses a great challenge for the design of these systems. Self-adaptation may overcome these challenges and enhance the flexibility and robustness of automotive embedded systems. To design such systems in an efficient way, an adaptive system has to be verified and validated even in early stages of the development process. Co-simulation enables such an approach. In this paper, we outline a concept for iterative virtual prototyping of the entire automotive in-vehicle network including hardware components, software functions and interconnection networks. Furthermore, we present an approach to simulate self-adaptive behavior of the automotive embedded system.},
  doi       = {10.1109/EUC.2010.21},
  groups    = {ieee},
  keywords  = {adaptive systems;automotive engineering;embedded systems;mechanical engineering computing;reliability;safety;vehicles;virtual prototyping;self-adaptive automotive embedded systems;vehicular embedded systems;distributed embedded systems;safety;reliability;iterative virtual prototyping;automotive in-vehicle network;hardware components;software functions;interconnection networks;Automotive engineering;Embedded systems;Hardware;Adaptation model;Unified modeling language;Monitoring;Co-simulation;virtual prototyping;self-adaptation;automotive},
}

@InProceedings{Rani2013a,
  author    = {C. {Rani} and D. P. {Kothari} and K. {Busawon}},
  title     = {Chaotic self adaptive particle swarm approach for solving economic dispatch problem with valve-point effect},
  booktitle = {2013 International Conference on Power, Energy and Control (ICPEC)},
  year      = {2013},
  pages     = {405-410},
  month     = {Feb},
  abstract  = {This research work presents a Chaotic Self Adaptive Particle Swarm Optimization (CSAPSO) algorithm in order to solve the Economic Dispatch (ED) problem. The main purpose of the work is to derive a simple and effective method for optimum generation dispatch to minimize the generation cost power networks by considering several non-linear characteristics of the generator such as valve point effect, prohibited operating zones and ramp rate limits. A chaotic local search operator is introduced in the proposed algorithm to avoid premature convergence. Simulation studies are carried out, using MATLAB software, to show the effectiveness of the proposed optimization method. The applicability and high feasibility of the proposed method is validated on three different test systems. Results show that the CSAPSO is more powerful than other algorithms.},
  doi       = {10.1109/ICPEC.2013.6527690},
  groups    = {ieee},
  keywords  = {chaos;particle swarm optimisation;power generation dispatch;power system economics;search problems;chaotic self adaptive particle swarm algorithm;economic dispatch problem;valve-point effect;CSAPSO algorithm;optimum generation dispatch;generation cost power network;nonlinear characteristics;chaotic local search operator;MATLAB software;Generators;Equations;Sociology;Statistics;Fuels;Heuristic algorithms;Optimization;Economic Dispatch (ED);Chaotic Self Adaptive Particle Swarm Optimization (CSAPSO);ramp rate limits;valve point effect},
}

@InProceedings{Torres2014,
  author    = {M. H. C. {Torres} and T. {Holvoet}},
  title     = {Self-Adaptive Resilient Service Composition},
  booktitle = {2014 International Conference on Cloud and Autonomic Computing},
  year      = {2014},
  pages     = {141-150},
  month     = {Sep.},
  abstract  = {One aspect that permeates all large scale systems is the occurrence of failures. Continually, on any data center, failures are happening, either caused by malfunctioning disks, memories, network connections, or software bugs. Large scale failures - possibly caused be a ripple effect of smaller failures - are obviously even worse. The fact that failures are extremely hard or even impossible to predict makes them particularly challenging to cope with. A better alternative to predicting failures is creating systems that can cope with failures and autonomously adapt. In this paper, we investigate a decentralized self-adaptive approach to a resilient system for service composition. Our approach is based on an agent coordination mechanism known as "delegate MAS", which is particularly suited for large-scale coordination of systems. We thoroughly evaluate this approach through large and huge scale experiments of composite services. The results from these experiments show that it is possible to create service compositions which are resilient to large scale failures.},
  doi       = {10.1109/ICCAC.2014.33},
  groups    = {ieee},
  keywords  = {computer centres;failure analysis;fault tolerant computing;large-scale systems;multi-agent systems;self-adaptive resilient service composition;large scale system;data center;malfunctioning disk;memory;network connection;software bug;large scale failure;ripple effect;decentralized self-adaptive approach;resilient system;agent coordination mechanism;delegate MAS;large-scale system coordination;Quality of service;Production facilities;Availability;Abstracts;Probability distribution;Large-scale systems;Computer crashes;mas;distributed-systems;coordination;cloud computing;resilience;self-adaptation;decentralized systems},
}

@InProceedings{Sum-Im2010,
  author    = {T. {Sum-Im}},
  title     = {Self-adaptive differential evolution algorithm for economic dispatch with transmission losses consideration},
  booktitle = {TENCON 2010 - 2010 IEEE Region 10 Conference},
  year      = {2010},
  pages     = {90-95},
  month     = {Nov},
  abstract  = {In this paper, a self-adaptive differential evolution algorithm (SaDEA) is proposed for solving conventional economic dispatch (ED) problem with transmission losses consideration. The purpose of ED problem is to minimize the total fuel cost of thermal power plants associated with the technical operation and economical constraints. The software development has been performed within the mathematical programming environment of MATLAB in this work. The efficiency of the proposed methodology is initially demonstrated via the analysis of IEEE 30-bus test case. A detailed comparative study among Lambda iteration, conventional genetic algorithm (CGA), tabu search/simulated annealing (TS/SA), ant colony search algorithm (ACSA) and the proposed method is presented. From the experimental results, the proposed method has achieved solutions with good accuracy, stable convergence characteristics, simple implementation and satisfactory computational time.},
  doi       = {10.1109/TENCON.2010.5685839},
  groups    = {ieee},
  issn      = {2159-3450},
  keywords  = {costing;genetic algorithms;iterative methods;power generation dispatch;power generation economics;power transmission economics;search problems;simulated annealing;thermal power stations;self-adaptive differential evolution algorithm;economic dispatch;transmission loss consideration;SaDEA;ED problem;thermal power plants;technical operation;economical constraints;fuel cost;software development;mathematical programming environment;Matlab;IEEE 30-bus test case;Lambda iteration;conventional genetic algorithm;tabu search-simulated annealing;ant colony search algorithm;ACSA;Optimization;Propagation losses;Generators;Production;Power generation;Convergence;Fuels;Differential Evolution Algorithm;Economic Dispatch;Power System Optimization;Artificial Intelligence},
}

@InProceedings{Xia2012,
  author    = {W. {Xia} and T. {Shibata}},
  title     = {Self-adaptive quasi-Gaussian circuits for analog on-chip-trainable multi-class classifiers},
  booktitle = {2012 IEEE International Symposium on Circuits and Systems (ISCAS)},
  year      = {2012},
  pages     = {2893-2896},
  month     = {May},
  abstract  = {Self-adaptive quasi-Gaussian circuits have been developed and introduced to an analog multi-class classifier in order to enhance its classification performance. By applying a floating threshold scheme to the quasi-Gaussian kernel, the kernel can extend its tail region adaptively according to the characteristics of input data. As a result, the misclassification problem due to the zero tail region in the quasi-Gaussian kernel has been completely eliminated, and the classification accuracy is significantly improved. Software simulation showed the performance is comparable to complex Gaussian-kernel Support Vector Machines. A proof-of-concept chip implementing an analog on-chip-trainable multi-class classifier which employs 64-dimensional self-adaptive quasi-Gaussian circuits was designed in a 0.18-��m CMOS technology and is now under fabrication. Its successful operation was confirmed by Nanosim simulation.},
  doi       = {10.1109/ISCAS.2012.6271919},
  groups    = {ieee},
  issn      = {2158-1525},
  keywords  = {analogue integrated circuits;CMOS analogue integrated circuits;floating point arithmetic;64-dimensional self-adaptive quasiGaussian circuits;analog multiclass classifiers;on-chip-trainable multiclass classifiers;floating threshold scheme;quasiGaussian kernel;misclassification problem;zero tail region;software simulation;CMOS technology;Nanosim simulation;size 0.18 mum;Kernel;Vectors;Support vector machines;Simulation;Accuracy;Very large scale integration},
}

@InProceedings{Casadei2018,
  author    = {R. {Casadei} and M. {Viroli}},
  title     = {Collective Abstractions and Platforms for Large-Scale Self-Adaptive IoT},
  booktitle = {2018 IEEE 3rd International Workshops on Foundations and Applications of Self* Systems (FAS*W)},
  year      = {2018},
  pages     = {106-111},
  month     = {Sep.},
  abstract  = {On the way to the materialisation of the pervasive computing vision, the technological progress swelling from mobile computing and the Internet of Things (IoT) domain is already rich of missed opportunities. Firstly, coordinating large numbers of heterogeneous situated entities to achieve system-level goals in a resilient and self-adaptive way is complex and requires novel approaches to be seamlessly injected into mainstream distributed computing models. Secondly, achieving effective exploitation of computer resources is difficult, due to operational constraints resulting from current paradigms and uncomprehensive software infrastructures which hinder flexibility, adaptation, and smooth coordination of computational tasks execution. Indeed, building dynamic, context-oriented applications in small-or large-scale IoT with traditional abstractions is hard: even harder is to achieve opportunistic, QoS-and QoE-driven application task management across available hardware and networking infrastructure. In this insight paper, we analyse by the collective adaptation perspective the key directions of the impelling paradigm shift urged by forthcoming large-scale IoT scenarios. Specifically, we consider how collective abstractions and platforms can synergistically assist in such a transformation, by better capturing and enacting a notion of "collective service" as well as the dynamic, opportunistic, and context-driven traits of space-time-situated computations.},
  doi       = {10.1109/FAS-W.2018.00033},
  groups    = {ieee},
  keywords  = {Internet of Things;mobile computing;quality of service;ubiquitous computing;missed opportunities;heterogeneous situated entities;system-level goals;self-adaptive way;mainstream distributed computing models;effective exploitation;computer resources;operational constraints;current paradigms;uncomprehensive software infrastructures;smooth coordination;computational tasks execution;dynamic context-oriented applications;traditional abstractions;networking infrastructure;collective adaptation perspective;impelling paradigm shift;collective abstractions;collective service;dynamic context-driven traits;space-time-situated computations;self-adaptive IoT;materialisation;pervasive computing vision;technological progress;mobile computing;Internet of Things domain;large-scale IoT scenarios;opportunistic context-driven traits;opportunistic context-driven traits;Cloud computing;Programming;Internet of Things;Market research;Buildings;Adaptive systems;Computer architecture;collective adaptive systems;Internet of Things;distributed coordination;macro-programming},
}

@InProceedings{Frikha2012a,
  author    = {T. {Frikha} and N. {Ben Amor} and I. {Benhlima} and K. {Loukil} and M. {Abid} and J. {Diguet}},
  title     = {Self adaptive augmented reality systems on FPGA},
  booktitle = {2012 International Conference on Multimedia Computing and Systems},
  year      = {2012},
  pages     = {23-27},
  month     = {May},
  abstract  = {Augmented reality (AR) systems emerged and become a very gifted 3D embedded multimedia application. AR consists on adding specific 3D's animations on a video flow. The design and the implementation of such systems on FPGA are complex and difficult. To reduce computational resources that must be carefully used to execute complex application. This execution can be often done in unpredictable environments: it is the major problem to solve. The system architecture must be efficient and flexible enough to adapt system resources to the application requirements and the environment architectures and mobile's constraints. In this paper, we describe our concept of flexible architecture: we have developed IPs to obtain self-adaptive augmented reality systems to implement on FPGA.},
  doi       = {10.1109/ICMCS.2012.6320229},
  groups    = {ieee},
  keywords  = {augmented reality;computer animation;embedded systems;field programmable gate arrays;multimedia computing;video signal processing;self adaptive augmented reality systems;FPGA;AR systems;3D embedded multimedia application;3D animations;video flow;computational resources;complex application;system architecture;system resource adaptation;environment architectures;mobile constraints;flexible architecture;self-adaptive augmented reality systems;Acceleration;Software;Quality of service;Subspace constraints;Runtime;Presses;IP networks;Augmented reality;FPGA;Xilinx;Partial reconfiguration;adaptatif system;3D application;Hardware accelerator},
}

@InProceedings{M?stl2019,
  author    = {M. {M?stl} and A. {D?rflinger} and M. {Albers} and H. {Michalik} and R. {Ernst}},
  title     = {Self-Adaptation for Availability in CPU-FPGA Systems Under Soft Errors},
  booktitle = {2019 NASA/ESA Conference on Adaptive Hardware and Systems (AHS)},
  year      = {2019},
  pages     = {9-16},
  month     = {July},
  abstract  = {We introduce a model-based reliability estimation to preserve application availability in CPU-FPGA systems exposed to soft errors under varying environment conditions. The estimation is used as an in-system method to select a suitable configuration for changing radiation conditions. This allows systems to autonomously adapt their configuration in order to balance between reliability and performance. Such a self-adaptation goes beyond the state-of-the-art, where adaptation relies on preplanned reactive mode changes. By autonomously evaluating new configurations, our self-adaptation process is capable of increasing the availability by selecting the configuration with the desired application reliabilities for the current environment conditions.},
  doi       = {10.1109/AHS.2019.000-6},
  groups    = {ieee},
  issn      = {2471-769X},
  keywords  = {field programmable gate arrays;integrated circuit modelling;integrated circuit reliability;microprocessor chips;radiation hardening (electronics);CPU-FPGA systems;soft errors;model-based reliability estimation;in-system method;radiation conditions;self-adaptation process;Task analysis;Field programmable gate arrays;Hardware;Reliability engineering;Software reliability;Computational modeling;Autonomous Systems, Reliability, Self-adaption},
}

@InProceedings{Pletschacher2009,
  author    = {S. {Pletschacher}},
  title     = {A Self-Adaptive Method for Extraction of Document-Specific Alphabets},
  booktitle = {2009 10th International Conference on Document Analysis and Recognition},
  year      = {2009},
  pages     = {656-660},
  month     = {July},
  abstract  = {Recognition and encoding of digitized historical documents is still a challenging and difficult task. A major problem is the occurrence of unknown glyphs and symbols which might not even exist in modern alphabets. Current pre-trained OCR-methods hardly deliver usable results for such documents. This paper describes an alternative approach and framework for handling printed historical documents without restrictions on the contained alphabets or fonts. The basic idea is to derive all information required for encoding directly from the document itself. This is achieved by extracting a document-specific prototype alphabet of locatable glyphs. Core of the system is a customized clustering method which adapts automatically to new documents by ascertaining appropriate threshold parameters based on the special characteristics of glyphs. This way, the system is able to run without manual interventions and can be integrated into automated mass digitization workflows.},
  doi       = {10.1109/ICDAR.2009.253},
  groups    = {ieee},
  issn      = {2379-2140},
  keywords  = {document image processing;encoding;feature extraction;history;optical character recognition;pattern clustering;self-adaptive method;document-specific prototype alphabet extraction;digitized historical document recognition;digitized historical document encoding;pre-trained OCR-method;printed historical document handling;ancient glyph;customized clustering method;threshold parameter;automated mass digitization workflow;feature extraction;Prototypes;Optical character recognition software;Pattern recognition;Data mining;Image analysis;Image recognition;Document handling;Encoding;Dictionaries;Character recognition;Clustering;OCR;Encoding;Mass Digitization},
}

@InProceedings{Champrasert2007,
  author    = {P. {Champrasert} and J. {Suzuki}},
  title     = {Towards Self-Adaptive Networking with Symbiotic Behaviors of Multi-Agents},
  booktitle = {2007 International Conference on Integration of Knowledge Intensive Multi-Agent Systems},
  year      = {2007},
  pages     = {103-108},
  month     = {April},
  abstract  = {This paper describes a biologically-inspired architecture, called SymbioticSphere, which allows network systems to autonomously adapt to dynamic environmental changes. SymbioticSphere consists of two major system components: application services and middleware platforms. Each service and platform is designed as a biological entity and implements biological behaviors such as migration, replication, death and energy exchange. This paper describes how agents and platform behave and interact with each other. Simulation results show that services and platforms autonomously adapt to dynamic network conditions (e.g., user location, network traffic and resource availability) by invoking their behaviors suitable for the conditions. Simulation results also show that services and platforms autonomously behave in a symbiotic manner to pursue their mutual benefits (adaptability)},
  doi       = {10.1109/KIMAS.2007.369793},
  groups    = {ieee},
  keywords  = {biology computing;middleware;multi-agent systems;self-adaptive networking;symbiotic behaviors;multiagent systems;biologically-inspired architecture;SymbioticSphere;network systems;dynamic environmental change adaptation;application services;middleware;biological behaviors;dynamic network conditions;Symbiosis;Biological system modeling;Availability;Energy exchange;Telecommunication traffic;Application software;Middleware;Traffic control;Computer science;Biology},
}

@InProceedings{Rueckauer2012,
  author    = {M. {Rueckauer} and J. {Meyer} and T. {Schubert} and M. {H��bner} and D. {Scheurer} and J. {Becker}},
  title     = {Realtime PCI Express monitoring for self adaptive reconfigurable systems},
  booktitle = {International Multi-Conference on Systems, Signals Devices},
  year      = {2012},
  pages     = {1-6},
  month     = {March},
  abstract  = {In this paper we introduce the concept for an embedded performance monitor of PCI Express links. This PCI Express Performance Monitor (PPM) enables the analysis of several properties (e.g. amount of available credits), without affecting the performance of the monitored link. By including a PPM in an embedded system it is possible to avoid the need for high cost PCI Express measurement and analyzing equipment. The concept was implemented on a rapid prototyping system to monitor several PCI Express links that connect an Intel Atom processor with an Altera Field Programmable Gate Array (FPGA). In addition we present a framework of functions, which makes it easy to use the utilization of a monitored PCI Express link as trigger condition for self adaptive systems.},
  doi       = {10.1109/SSD.2012.6198038},
  groups    = {ieee},
  keywords  = {embedded systems;field programmable gate arrays;performance evaluation;peripheral interfaces;reconfigurable architectures;self adaptive reconfigurable systems;realtime PCI Express performance monitoring;embedded performance monitoring;PPM;embedded system;rapid prototyping system;PCI Express links;Intel Atom processor;Altera field programmable gate array;FPGA;trigger condition;Monitoring;Field programmable gate arrays;Software;Hardware;Random access memory;Adaptive systems;Performance evaluation;FPGA;Reconfiguration;Self Adaptive;PCI Express;Monitoring},
}

@InProceedings{Chong2006,
  author    = {S. Y. {Chong} and X. {Yao}},
  title     = {Self-Adapting Payoff Matrices in Repeated Interactions},
  booktitle = {2006 IEEE Symposium on Computational Intelligence and Games},
  year      = {2006},
  pages     = {103-110},
  month     = {May},
  abstract  = {Traditional iterated prisoner's dilemma (IPD) assumed a fixed payoff matrix for all players, which may not be realistic because not all players are the same in the real-world. This paper introduces a novel co-evolutionary framework where each strategy has its own self-adaptive payoff matrix. This framework is generic to any simultaneous two-player repeated encounter game. Here, each strategy has a set of behavioral responses based on previous moves, and an adaptable payoff matrix based on reinforcement feedback from game interactions that is specified by update rules. We study how different update rules affect the adaptation of initially random payoff matrices, and how this adaptation in turn affects the learning of strategy behaviors},
  doi       = {10.1109/CIG.2006.311688},
  groups    = {ieee},
  issn      = {2325-4289},
  keywords  = {adaptive systems;evolutionary computation;feedback;game theory;matrix algebra;self-adapting payoff matrices;repeated interactions;iterated prisoner dilemma;reinforcement feedback;game interaction;evolutionary games;Symmetric matrices;Feedback;Computational intelligence;Application software;Computer science;Probability distribution;Evolutionary games;Co-evolution;Iterated Prisoner's Dilemma;Mutualism;Repeated Encounter Games},
}

@InProceedings{Wang2017c,
  author    = {Y. {Wang} and Y. {Huang} and W. {Zheng} and Z. {Zhou} and D. {Liu} and M. {Lu}},
  title     = {Combining convolutional neural network and self-adaptive algorithm to defeat synthetic multi-digit text-based CAPTCHA},
  booktitle = {2017 IEEE International Conference on Industrial Technology (ICIT)},
  year      = {2017},
  pages     = {980-985},
  month     = {March},
  abstract  = {We always use CAPTCHA(Completely Automated Public Turing test to Tell Computers and Humans Apart) to prevent automated bot for data entry. Although there are various kinds of CAPTCHAs, text-based scheme is still applied most widely, because it is one of the most convenient and user-friendly way for daily user [1]. The fact is that segmentations of different types of CAPTCHAs are not always the same, which means one of CAPTCHA's bottleneck is the segmentation. Once we could accurately split the character, the problem could be solved much easier. Unfortunately, the best way to divide them is still case by case, which is to say there is no universal way to achieve it. In this paper, we present a novel algorithm to achieve state-of-the-art performance, what was more, we also constructed a new convolutional neural network as an add-on recognition part to stabilize our state-of-the-art performance of the whole CAPTCHA system. The CAPTCHA datasets we are using is from the State Administration for Industry& Commerce of the People's Republic of China. In this datasets, there are totally 33 entrances of CAPTCHAs. In this experiments, we assume that each of the entrance is known. Results are provided showing how our algorithms work well towards these CAPTCHAs.},
  doi       = {10.1109/ICIT.2017.7915494},
  groups    = {ieee},
  keywords  = {character recognition;convolution;image segmentation;neural nets;text analysis;convolutional neural network;self-adaptive algorithm;synthetic multidigit text-based CAPTCHA;completely automated public turing test to tell computers and humans apart;data entry;text-based scheme;CAPTCHA segmentations;character segmentation;add-on recognition part;China;CAPTCHAs;Image segmentation;Optical character recognition software;Neural networks;Character recognition;Business;Clustering algorithms;CAPTCHA;convolutional neural network;segmentation;reverse Turing test;clustering},
}

@InProceedings{Wang2016b,
  author    = {Y. {Wang} and M. {Lu}},
  title     = {A self-adaptive algorithm to defeat text-based CAPTCHA},
  booktitle = {2016 IEEE International Conference on Industrial Technology (ICIT)},
  year      = {2016},
  pages     = {720-725},
  month     = {March},
  abstract  = {CAPTCHA (Completely Automated Public Turing test to Tell Computers and Humans Apart) is almost everywhere in data entry due to automated scripts like bots. Nowadays, text-based scheme is still applied most widely, which typically need the users to answer questions regarding recognition task. In particular, the segmentations of different types of CAPTCHAs are not always the same. As so far, there isn't any universal way to solve the segmentation problems. In this paper, we present a novel adaptive algorithm and based on that we create a system to defeat several CAPTCHAs at the same time. The CAPTCHA datasets we used are from the State Administration for Industry&Commerce of the People's Republic of China. There are totally 33 entrances of CAPTCHAs we need to solve. In this experiments, we assume that each of the entrance is known. Results are provided showing how our algorithms work well towards these CAPTCHAs.},
  doi       = {10.1109/ICIT.2016.7474839},
  groups    = {ieee},
  keywords  = {image segmentation;optical character recognition;text analysis;self-adaptive algorithm;text-based CAPTCHA;completely automated public turing test to tell computers and humans apart;recognition task;CAPTCHAs;Image segmentation;Character recognition;Optical character recognition software;Image recognition;Histograms;Clustering algorithms;CAPTCHA;segmentation;recognition;reverse Turing test;affine transformation;clustering},
}

@InProceedings{Jai-JinLim2005,
  author    = {{Jai-Jin Lim} and K. G. {Shin}},
  title     = {Energy-efficient self-adapting online linear forecasting for wireless sensor network applications},
  booktitle = {IEEE International Conference on Mobile Adhoc and Sensor Systems Conference, 2005.},
  year      = {2005},
  pages     = {8 pp.-379},
  month     = {Nov},
  abstract  = {New energy-efficient linear forecasting methods are proposed for various sensor network applications, including in-network data aggregation and mining. The proposed methods are designed to minimize the number of trend changes for a given application-specified forecast quality metric. They also self-adjust the model parameters, the slope and the intercept, based on the forecast errors observed via measurements. As a result, they incur O(1) space and time overheads, a critical advantage for resource-limited wireless sensors. An extensive simulation study based on real-world and synthetic time-series data shows that the proposed methods reduce the number of trend changes by 20%~50% over the existing well-known methods for a given forecast quality metric. That is, they are more predictive than the others with the same forecast quality metric},
  doi       = {10.1109/MAHSS.2005.1542822},
  groups    = {ieee},
  issn      = {2155-6814},
  keywords  = {data mining;time series;wireless sensor networks;energy-efficient self-adapting forecasting;online linear forecasting;wireless sensor network applications;in-network data aggregation;data mining;time-series data;Energy efficiency;Load forecasting;Wireless sensor networks;Data mining;Predictive models;Application software;Energy measurement;Design methodology;Prediction algorithms;Monitoring},
}

@InProceedings{LiangChen2008,
  author    = {{Liang Chen} and {HanWei Shen} and {Gagan Agrawal}},
  title     = {Supporting a visualization application on a self-adapting grid middleware},
  booktitle = {2008 IEEE International Symposium on Parallel and Distributed Processing},
  year      = {2008},
  pages     = {1-8},
  month     = {April},
  abstract  = {This paper describes how we have used a self-adapting middleware to implement a distributed and adaptive volume rendering application. The middleware we have used is GATES (grid-based adaptive execution on streams), which allows processing of streaming data in a distributed environment. A challenge in supporting such an application on streaming data is to balance the visualization quality and the speed of processing, which can be automatically done by the GATES middleware. We describe how we divide the application into a number of processing stages, and what adaptation parameters we use. Our experimental studies have focused on evaluating the self-adaptation enabled by the middleware, and measuring the overhead associated with the use of middleware.},
  doi       = {10.1109/IPDPS.2008.4536208},
  groups    = {ieee},
  issn      = {1530-2075},
  keywords  = {data visualisation;grid computing;middleware;rendering (computer graphics);self-adapting grid middleware;rendering;grid-based adaptive execution on streams;GATES;Middleware;Data visualization;Application software;Rendering (computer graphics);Iterative algorithms;Computer science;Large-scale systems;Surgical instruments;Surgery;Image quality},
}

@InProceedings{Lungeanu1999,
  author    = {D. {Lungeanu} and C. -. R. {Shi}},
  title     = {Distributed simulation of VLSI systems via lookahead-free self-adaptive optimistic and conservative synchronization},
  booktitle = {1999 IEEE/ACM International Conference on Computer-Aided Design. Digest of Technical Papers (Cat. No.99CH37051)},
  year      = {1999},
  pages     = {500-504},
  month     = {Nov},
  abstract  = {The paper presents a novel protocol for parallel and distributed simulation of VLSI systems. It is novel in two aspects: first, it combines optimistic and conservative synchronization methods, allowing processes to self-adapt for maximal utilization of concurrency. Second, it does not require any application-dependent information like lookahead, which in many cases is unknown, zero, or difficult to automatically obtain from a design in a hardware description language. All these features make it very convenient and practical, extending the class of applications to at least all VHDL circuits, including delta cycle. The proposed protocol has been implemented and used for VHDL simulation. Experimental results on several large VHDL circuits (between 1411 and 14704 processes) have shown promising linear speedups. We also observed that the dynamic synchronization, in which processes automatically adapt to optimistic or conservative behavior, follows closely or finds a very good configuration. This protocol may have a strong impact for mixed-signal circuit simulation, where digital parts may be optimistic and heavy-state analog parts, conservative.},
  doi       = {10.1109/ICCAD.1999.810701},
  groups    = {ieee},
  issn      = {1092-3152},
  keywords  = {circuit simulation;VLSI;hardware description languages;distributed programming;synchronisation;protocols;distributed simulation;VLSI systems;lookahead-free self-adaptive optimistic conservative synchronization;conservative synchronization methods;application-dependent information;hardware description language;VHDL circuits;delta cycle;VHDL simulation;large VHDL circuits;linear speedups;dynamic synchronization;mixed-signal circuit simulation;heavy-state analog parts;Very large scale integration;Protocols;Discrete event simulation;Hardware;Circuit simulation;Analytical models;Optimization methods;Concurrent computing;Embedded software;Time to market},
}

@InProceedings{Jian-quanOuyang2008,
  author    = {{Jian-quan Ouyang} and {Dian-xi Shi} and {Bo Ding} and {Jin Feng} and {Huai-min Wang}},
  title     = {A framework for self-adaptive scheme in pervasive computing},
  booktitle = {2008 11th IEEE Singapore International Conference on Communication Systems},
  year      = {2008},
  pages     = {750-755},
  month     = {Nov},
  abstract  = {Nowadays, application systems in pervasive computing have to be self-adaptive, which means adapting themselves to dynamic environments. Our aim is to enable systematic development of self-adaptive component-based applications. The paper first introduces a novel policy based framework for self-adaptive scheme in pervasive computing. Then the proposed policy ontology and policy language are well expressive and easily extensible to support the design of policy which is based on the Separation of Concerns principle. Furthermore, the context-driven event channel decouples the communication between the suppliers and consumers for asynchronous communication.},
  doi       = {10.1109/ICCS.2008.4737285},
  groups    = {ieee},
  keywords  = {ontologies (artificial intelligence);ubiquitous computing;pervasive computing;self-adaptive component-based applications;policy ontology;policy language;context-driven event channel;asynchronous communication;Pervasive computing;Ontologies;Computer architecture;Military computing;Application software;Middleware;Context-aware services;Logic programming;Educational institutions;Context;Policy ontology;self-adaptive;policy language;pervasive computing},
}

@InProceedings{Rodrigues2009,
  author    = {A. L. B. {Rodrigues} and L. N. {Bezerra} and A. {Sztajnberg} and O. {Loques}},
  title     = {Self-Adaptation of Fault Tolerance Requirements Using Contracts},
  booktitle = {2009 International Conference on Computational Science and Engineering},
  year      = {2009},
  volume    = {2},
  pages     = {245-253},
  month     = {Aug},
  abstract  = {Fault tolerance is a constant concern in data centers where servers have to run with a minimal level of failures. Changes on the operating conditions or on server demands, and variations of the systems own failure rate have to be handled in such a way that SLAs are honored and services are not interrupted. We present an approach to handle fault tolerance requirements, based on component replication, which is supported by a context-aware infrastructure and guided by contracts that describe adaptation policies for each application. At run-time the infrastructure autonomically manages the deployment, the monitoring of resources, the maintenance of the fault tolerance requirements described in the contract, and reconfigures the application when necessary, to maintain compliance. An example with an Apache web server and replicated Tomcat servers is used to validate the approach.},
  doi       = {10.1109/CSE.2009.192},
  groups    = {ieee},
  keywords  = {computer centres;fault tolerance;network servers;fault tolerance requirements;data centers;server demands;component replication;context-aware infrastructure;Fault tolerance;Contracts;Runtime;Resource management;Web server;Application software;Hardware;Redundancy;Data engineering;Monitoring;fault tolerance;context-aware applications;contracts;self-adaptation},
}

@Article{Mostafa2019,
  author   = {S. {Mostafa} and B. {Findley} and N. {Meng} and X. {Wang}},
  title    = {SAIS: Self-Adaptive Identification of Security Bug Reports},
  journal  = {IEEE Transactions on Dependable and Secure Computing},
  year     = {2019},
  pages    = {1-1},
  issn     = {1941-0018},
  abstract = {Among various bug reports (BRs), security bug reports (SBRs) are unique because they require immediate concealment and fixes. When SBRs are not identified in time, attackers can exploit the vulnerabilities. Prior work identifies SBRs via text mining, which requires a predefined keyword list and trains a classifier with known SBRs and non-security bug reports (NSBRs). The former approach is not reliable, because (1) as the contexts of security vulnerabilities and terminology of SBRs change over time, the predefined list will become out-dated; and (2) users may have insufficient SBRs for training. We introduce a semi-supervised learning-based approach, \tool, to adaptively and reliably identify SBRs. Given a project's BRs containing some labeled SBRs, many more NSBRs, and unlabeled BRs, SAIS iteratively mines keywords, trains a classifier based on the keywords from the labeled data, classifies unlabeled BRs, and augments its training data with the newly labeled BRs. Our evaluation shows that SAIS is useful for identifying SBRs.},
  doi      = {10.1109/TDSC.2019.2939132},
  groups   = {ieee},
  keywords = {Computer bugs;Security;Training;Data models;Databases;Semisupervised learning;Software;Security bug reports;self learning;bug triaging},
}

@InProceedings{Carchiolo2007,
  author    = {V. {Carchiolo} and M. {Malgeri} and G. {Mangioni} and V. {Nicosia}},
  title     = {On robustness and self-adaptiveness of a socially inspired P2P network},
  booktitle = {2007 22nd international symposium on computer and information sciences},
  year      = {2007},
  pages     = {1-6},
  month     = {Nov},
  abstract  = {The growing interest for P2P overlay networks in resource sharing rises new challenges for researchers, mainly because those systems are intrinsically different from well-studied client-server environments. Finding algorithms and mechanisms to make resource sharing efficient is only the first step toward affordable, scalable and secure P2P applications. Despite the low attention put in the last years to robustness of P2P overlay networks, checking and measuring resilience of such structure with respect to faults, is a key point to push their usage in wide- range real applications. The present contribution goes into this direction, presenting an accurate study of robustness and fault- tolerance of a novel socially-inspired P2P overlay network named PROS A. We show how the self-organising structure induced by PROSA has many interesting self-adaptive capabilities, as observed in real social collaboration networks.},
  doi       = {10.1109/ISCIS.2007.4456882},
  groups    = {ieee},
  keywords  = {groupware;peer-to-peer computing;P2P network;resource sharing;fault-tolerance;PROSA;social collaboration network;Robustness;Peer to peer computing;Social network services;Resource management;Resilience;Collaborative software;Robust stability;Telecommunications;Collaboration;Displays},
}

@InProceedings{Lin2009,
  author    = {Y. {Lin} and W. {Chung} and K. {Lai} and K. {Li} and Y. {Chung}},
  title     = {SARIDS: A Self-Adaptive Resource Index and Discovery System},
  booktitle = {2009 10th International Symposium on Pervasive Systems, Algorithms, and Networks},
  year      = {2009},
  pages     = {521-526},
  month     = {Dec},
  abstract  = {Recently, the resource sharing systems apply the P2P technique to provide scalable multi-attribute range queries. However, due to the heterogeneity of resources and the variation of sharing policies in different providers, current P2P-based resource discovery systems may suffer the load imbalance problem in a large scale distributed system. In this paper, we propose a self-adaptive resource index and discovery system (SARIDS) to achieve load balancing. SARIDS adopts a two-tier architecture based on the structured P2P overlay. The intra-overlay is constructed by normal peers with the same attribute via the locality preserving hash function; and, the inter-overlay is constructed by super-peers with classified attributes in different intra-overlays. SARIDS supports not only the multi-attribute range queries but also the self-adaptive mechanisms for load balancing in the intra-overlay and among the intra-overlays. The simulation results show that SARIDS is scalable and efficient for load balancing even in the non-uniform peer range environment.},
  doi       = {10.1109/I-SPAN.2009.21},
  groups    = {ieee},
  issn      = {2375-527X},
  keywords  = {file organisation;peer-to-peer computing;resource allocation;SARIDS system;self-adaptive resource index and discovery system;resource sharing;multiattribute range queries;load balancing;two-tier architecture;structured P2P overlay;intraoverlay;hash function;peer range environment;Load management;Resource management;Large-scale systems;Peer to peer computing;Computer science;Indexing;Publishing;Information systems;Application software;Information science;Grid;Resource discovery;Multi-attribute query;Range query;Load balancing},
}

@InProceedings{An-ChengHuang2005,
  author    = {{An-Cheng Huang} and P. {Steenkiste}},
  title     = {Building self-adapting services using service-specific knowledge},
  booktitle = {HPDC-14. Proceedings. 14th IEEE International Symposium on High Performance Distributed Computing, 2005.},
  year      = {2005},
  pages     = {34-43},
  month     = {July},
  abstract  = {With the advances in middleware and Web services technologies, network sendees are evolving from simple client-sender applications to self-configuring services that can compose primitive components distributed in the Internet into a value-added service configuration that provides rich functionalities to users. A resulting research problem is how to continuously adapt such composite service configurations at run time in order to cope with the increasingly dynamic and heterogeneous network environments and computing platforms. In this paper, we propose a self-adaptation architecture that allows service developers to specify their service-specific adaptation knowledge as "externalized" adaptation strategies. These adaptation strategies are used by a general, shared adaptation framework to perform run-time adaptation operations that automatically incorporate service-specific knowledge. In addition to the strategies, we also identify another aspect of adaptation knowledge that is not addressed by previous solutions: adaptation coordination. Our framework provides integrated support for the specification and execution of both aspects of developers' adaptation knowledge.},
  doi       = {10.1109/HPDC.2005.1520931},
  groups    = {ieee},
  issn      = {1082-8907},
  keywords  = {middleware;Internet;knowledge based systems;formal specification;distributed object management;self-adapting services;middleware;Web services;client-sender application;self-configuring services;distributed components;Internet;value-added service configuration;composite service configuration;dynamic network environment;heterogeneous network environment;self-adaptation architecture;service-specific adaptation knowledge specification;run-time adaptation operation;Runtime;Middleware;Web services;Video sharing;Costs;Computer science;Distributed computing;Application software;Peer to peer computing;IP networks},
}

@InProceedings{Sun2006,
  author    = {H. {Sun} and J. {Huai} and G. {Fu} and Y. {Liu}},
  title     = {RCT: A Self-Adaptive Overlay for Efficient Computational Resource Discovery in Grid Systems},
  booktitle = {2006 Second IEEE International Conference on e-Science and Grid Computing (e-Science'06)},
  year      = {2006},
  pages     = {64-64},
  month     = {Dec},
  abstract  = {Computational resource discovery is of great importance in grid environments. Existing approaches do not consider the characteristics of application resource requirements. We propose, Resource Category Tree (RCT), which organizes computational resources based on their characteristics represented by primary attributes (PA). RCT adopts a structure of AVL tree, with each node representing a specific range of PA values. Though RCT adopts a hierarchical structure, it does not require nodes in higher levels maintain more information than those in lower levels, which makes RCT highly scalable. RCT is featured by self-organization, load-aware self-adaptation and fault tolerance. Based on RCT, commonly used queries, such as range queries and multi-attribute queries, are well supported. We conduct performance evaluations through comprehensive simulations.},
  doi       = {10.1109/E-SCIENCE.2006.261148},
  groups    = {ieee},
  keywords  = {Grid computing;Geographic Information Systems;Computer science;Application software;Fault tolerance;Computational modeling;Decision support systems;Telescopes;Resource management;Problem-solving},
}

@InProceedings{Zhao2006,
  author    = {F. {Zhao} and Q. {Zhang} and Y. {Yang}},
  title     = {A Hybrid Self-Adaptive Pso Algorithm and its Applications for Partner Selection in Holonic Manufacturing System (HMS)},
  booktitle = {2006 International Conference on Machine Learning and Cybernetics},
  year      = {2006},
  pages     = {2536-2541},
  month     = {Aug},
  abstract  = {Partner selection is a very popular problem in the research of HMS, the key step in the formation of HMS is the decision making on partner selection. In this paper, collaboration process between holons is modeling with contract net protocol; and an activity network based multi-objective partner selection model is put forward. Then a new hybrid self-adaptive PSO (HAMPSO) algorithm based on particle swarm optimization (PSO) and genetic algorithm (GA) is proposed to solve the multi-objective problem. PSO employs a collaborative population-based search, which is inspired by the social behavior of bird flocking. GA provides the optimization parameter of PSO to get a good performance during the hybrid search process. HAMPSO implements easily and reserves the generality of PSO and GA. The hybrid algorithm combines the high speed of PSO with the powerful ability to avoid being trapped in local minimum by velocity mutation. We compare the hybrid algorithm to both the standard PSO and GA model. The simulation results show that the proposed model and algorithm are effective. Moreover, such HAMPSO can be applied to many combinatorial optimization problems by simple modification},
  doi       = {10.1109/ICMLC.2006.258845},
  groups    = {ieee},
  issn      = {2160-1348},
  keywords  = {combinatorial mathematics;decision making;genetic algorithms;manufacturing systems;particle swarm optimisation;hybrid self-adaptive PSO algorithm;multiobjective partner selection model;holonic manufacturing system;decision making;HAMPSO algorithm;particle swarm optimization;genetic algorithm;velocity mutation;combinatorial optimization problem;Manufacturing systems;Collaboration;Contracts;Particle swarm optimization;Genetic algorithms;Power system modeling;Application software;Computer aided manufacturing;Civil engineering;Decision making;Particle Swarm Optimization (PSO);Genetic Algorithm (GA);Partner Selection;Holonic Manufacturing System},
}

@InProceedings{LiangChen2006,
  author    = {{Liang Chen} and G. {Agrawal}},
  title     = {Supporting self-adaptation in streaming data mining applications},
  booktitle = {Proceedings 20th IEEE International Parallel Distributed Processing Symposium},
  year      = {2006},
  pages     = {10 pp.-},
  month     = {April},
  abstract  = {There are many application classes where the users are flexible with respect to the output quality. At the same time, there are other constraints, such as the need for real-time or interactive response, which are more crucial. This paper presents and evaluates a runtime algorithm for supporting adaptive execution for such applications. The particular domain we target is distributed data mining on streaming data. This work has been done in the context of a middleware system called GATES (grid-based adaptive execution on streams) that we have been developing. The self-adaptation algorithm we present and evaluate in this paper has the following characteristics. First, it carefully evaluates the long-term load at each processing stage. It considers different possibilities for the load at a processing stage and its next stages, and decides if the value of an adaptation parameter needs to be modified, and if so, in which direction. To find the ideal new value of an adaptation parameter, it performs a binary search on the specified range of the parameter. To evaluate the self-adaptation algorithm in our middleware, we have implemented two streaming data mining applications. The main observations from our experiments are as follows. First, our algorithm is able to quickly converge to stable values of the adaptation parameter, for different data arrival rates, and independent of the specified initial value. Second, in a dynamic environment, the algorithm is able to adapt the processing rapidly. Finally, in both static and dynamic environments, the algorithm clearly outperforms the algorithm described in our earlier work and an obvious alternative, which is based on linear-updates.},
  doi       = {10.1109/IPDPS.2006.1639312},
  groups    = {ieee},
  issn      = {1530-2075},
  keywords  = {self-adjusting systems;data mining;middleware;grid computing;self-adaptation;streaming data mining;distributed data mining;middleware system;grid-based adaptive execution;Data mining;Middleware;Application software;Runtime;Streaming media;Heuristic algorithms;Data visualization;Real time systems;Computer science;Program processors},
}

@InProceedings{Musliner2013,
  author    = {D. J. {Musliner} and S. E. {Friedman} and T. {Marble} and J. M. {Rye} and M. W. {Boldt} and M. {Pelican}},
  title     = {Self-Adaptation Metrics for Active Cybersecurity},
  booktitle = {2013 IEEE 7th International Conference on Self-Adaptation and Self-Organizing Systems Workshops},
  year      = {2013},
  pages     = {53-58},
  month     = {Sep.},
  abstract  = {FUZZBUSTER is a host-based adaptive security system that automatically discovers, refines, and repairs vulnerabilities in hosted applications in order to prevent cyber attacks. FUZZBUSTER must decide when to adapt its applications, when to revoke its previous adaptations, and when to sacrifice functionality to improve security. This requires an adaptation quality metric that captures (1) an application's susceptibility to cyber attacks and (2) an application's functionality, since adapting an application affects both of these factors. FUZZBUSTER uses different types of test cases to measure security and functionality. In this paper, we describe FUZZBUSTER's adaptation metrics and we present two different policies for balancing security and functionality. We provide empirical results comparing these policies, and we also demonstrate how FUZZBUSTER can temporarily sacrifice the functionality of hosted applications to increase host security, and then restore functionality when more favorable adaptations are found.},
  doi       = {10.1109/SASOW.2013.31},
  groups    = {ieee},
  keywords  = {security of data;self adaptation metrics;active cybersecurity;fuzzbuster;adaptive security system;cyber attacks;adaptation quality metric;adaptation metrics;hosted applications;Maintenance engineering;Measurement;Software;Conferences;Computer crime;self-adaptive immunity;cybersecurity;fuzz-testing},
}

@InProceedings{Dricot2001,
  author    = {J. -. {Dricot} and P. {De Doncker} and M. {Dierickx} and F. {Grenez} and H. {Bersini}},
  title     = {Development of distributed self-adaptive instrumentation networks using Jini technology},
  booktitle = {VIMS 2001. 2001 IEEE International Workshop on Virtual and Intelligent Measurement Systems (IEEE Cat. No.01EX447)},
  year      = {2001},
  pages     = {22-27},
  month     = {May},
  abstract  = {This paper describes a client-server architecture for the creation of dynamic and self-adaptive instrumentation over the network, either local or the Internet. The proposed solution allows multiuser, multi-instrument sessions by the means of a new cooperative concept known as Jini. Client applications take advantage of this system-independent technology by using the Java programming language.},
  doi       = {10.1109/VIMS.2001.924895},
  groups    = {ieee},
  keywords  = {computerised instrumentation;Java;client-server systems;local area networks;Internet;distributed object management;intelligent sensors;distributed self-adaptive instrumentation networks;Jini;client-server architecture;local area network;Internet;multiuser system;multi-instrument;system-independent technology;Java;intelligent sensors;mobile networks;Instruments;Java;Virtual machining;Application software;Robustness;Hardware;IP networks;Intelligent sensors;Programming profession;Network topology},
}

@InProceedings{Cui2014a,
  author    = {Y. {Cui} and J. {Lane} and R. {Voyles} and A. {Krishnamoorthy}},
  title     = {A new fault tolerance method for field robotics through a self-adaptation architecture},
  booktitle = {2014 IEEE International Symposium on Safety, Security, and Rescue Robotics (2014)},
  year      = {2014},
  pages     = {1-6},
  month     = {Oct},
  abstract  = {Fault tolerance is increasingly important for urban search and rescue robotic systems because any failure mode may affect the reliability of the robot in meeting mission objectives. To support convenient development of fault tolerant robotic systems, this paper proposes ReFrESH, which is a self-adaptive framework that provides systemic self-diagnosis and self-maintenance mechanisms in the presence of unanticipated situations. Specifically, ReFrESH augments the port-based object by attaching performance evaluation and estimation methods to each functional component so that the robot can easily detect and locate faults. In conjunction, a task level decision mechanism interacts with these fault detection elements in order to dynamically find an optimal solution to mitigate faults. A demonstrative application of ReFrESH illustrates its applicability through a task for visual servoing to a target deployed on a multi-robot system.},
  doi       = {10.1109/SSRR.2014.7017646},
  groups    = {ieee},
  issn      = {2374-3247},
  keywords  = {fault diagnosis;fault tolerance;rescue robots;self-adjusting systems;fault tolerance method;field robotics;self-adaptation architecture;urban search and rescue robotic systems;failure mode;robot reliability;mission objectives;fault tolerant robotic systems;ReFrESH;self-adaptive framework;systemic self-diagnosis;self-maintenance mechanisms;port-based object;performance evaluation;performance estimation methods;functional component;fault detection;fault location;task level decision mechanism;faults mitigation;visual servoing;multirobot system;Monitoring;Software;Robot sensing systems;Fault tolerance;Fault tolerant systems;Computer architecture},
}

@InProceedings{Preuveneers2006,
  author    = {D. {Preuveneers} and Y. {Berbers}},
  title     = {Multi-dimensional Dependency and Conflict Resolution for Self-adaptable Context-aware Systems},
  booktitle = {International Conference on Autonomic and Autonomous Systems (ICAS'06)},
  year      = {2006},
  pages     = {36-36},
  month     = {July},
  abstract  = {Self-adaptable systems dynamically adapt to satisfy new functionality requirements, to optimize performance and to adapt to variable runtime conditions. Context-aware systems acquire and utilize information about the context of a user and a device to provide personalized applications. Adaptation in a transparent way for the user is an important concern for both systems. To decrease the adaptation complexity of self-adaptable context-aware systems, we propose to model self-adaptation across three layers of abstractions: the runtime infrastructure, the context middleware and the user applications. The aim is to achieve per layer self-adaptation of the composition or behavior of these layers without jeopardizing the integrity and usability of the overall system. We discuss a multi-dimensional dependency and conflict resolution mechanism to guide self-adaptation and find a stable reconfiguration of the system at runtime},
  doi       = {10.1109/ICAS.2006.37},
  groups    = {ieee},
  issn      = {2168-1872},
  keywords  = {knowledge based systems;middleware;ubiquitous computing;multidimensional dependency;self-adaptable context-aware system;dynamic adaptation;personalized application;adaptation complexity;self-adaptation model;runtime infrastructure;context middleware;user application;conflict resolution mechanism;stable system reconfiguration;Context-aware services;Runtime;Middleware;Computer science;Usability;Video sharing;Videoconference;Protocols;Application software;Context modeling},
}

@InProceedings{Jackson2009,
  author    = {D. {Jackson}},
  title     = {Self-adaptive focusing of evolutionary effort in hierarchical genetic programming},
  booktitle = {2009 IEEE Congress on Evolutionary Computation},
  year      = {2009},
  pages     = {1821-1828},
  month     = {May},
  abstract  = {In an attempt to address the scaling up of genetic programming to handle complex problems, we have proposed a hierarchical approach in which programs are formed from independently evolved code fragments, each of which is responsible for handling a subset of the test input cases. Although this approach offers substantial performance advantages in comparison to more conventional systems, the programs it evolves exhibit some undesirable properties for certain problem domains. We therefore propose the introduction of a self-adaptive mechanism that allows the system dynamically to focus evolutionary effort on the program components most in need. Experimentation reveals that not only does this technique lead to better-behaved programs, it also gives rise to further significant performance improvements.},
  doi       = {10.1109/CEC.2009.4983162},
  groups    = {ieee},
  issn      = {1941-0026},
  keywords  = {genetic algorithms;self-adaptive focusing;evolutionary method;genetic programming;Genetic programming;Hierarchical systems;Hardware;Circuits;Encapsulation;System testing;Helium;Software engineering;Tree data structures},
}

@InProceedings{Kassem2008,
  author    = {G. {Kassem} and R. {Schult}},
  title     = {ERP Self-Adaptive customizing},
  booktitle = {2008 3rd International Conference on Information and Communication Technologies: From Theory to Applications},
  year      = {2008},
  pages     = {1-5},
  month     = {April},
  abstract  = {The implementation of an ERP system is a long and cost intensive process. Functions of the ERP system, which are delivered in an enterprise neutral but sector specific fashion need to be adjusted to the specific business requirements of an enterprise. Exact knowledge of the ERP system is required because each ERP system has its own technical concepts and terminologies. Therefore many enterprises employ ERP system experts in order to customize the ERP system to be introduced as well as to further enhance the customization after its introduction. A concept for the implementation of a Self- Adaptive ERP System should allow for the automatic customization of an ERP system on the basis of the of enterprise process models provided and analysis of the ERP system usage.},
  doi       = {10.1109/ICTTA.2008.4530374},
  groups    = {ieee},
  keywords  = {enterprise resource planning;middleware;self-adjusting systems;ERP self-adaptive customizing;cost intensive process;automatic customization;enterprise process models;Enterprise resource planning;Business;Terminology;Information systems;Data mining;Costs;Data processing;Computer architecture;Best practices;Software libraries;ERP systems;reference model;data mining;workflow},
}
{G��demann2006,
  author        = {M. {G��demann} and F. {Ortmeier} and W. {Reif}},
  title         = {Safety and Dependability Analysis of Self-Adaptive Systems},
  booktitle     = {Second International Symposium on Leveraging Applications of Formal Methods, Verification and Validation (isola 2006)},
  year          = {2006},
  pages         = {177-184},
  month         = {Nov},
  __markedentry = {[guan:6]},
  abstract      = {In this paper we present a technique for safety analysis of self-adaptive systems with formal methods. Self- adaptive systems are characterized by the ability to dynamically (self-)adapt and reorganize. The aim of this approach is to make the systems more dependable. But in general it is unclear how big the benefit is - compared to a traditional design. We propose a dependability analysis based on the results of safety analysis to measure the quality of self-x capabilities of an adaptive system with formal methods. This is important for unbiased and evidence-based decision making in early design phases. To illustrate the results we show the application of the method to a case study from the domain of production automation.},
  doi           = {10.1109/ISoLA.2006.38},
  keywords      = {decision making;safety;self-adjusting systems;safety analysis;dependability analysis;self-adaptive systems;formal methods;evidence-based decision making;Safety;Robots;Adaptive systems;Production;Robotics and automation;Fasteners;Gain measurement;Switches;Application software;Decision making},
}

@InProceedings{YangYang2010,
  author    = {{Yang Yang} and {Xue-song Qiu} and {Luo-ming Meng} and {Lan-lan Rui}},
  title     = {A self-adaptive method of task allocation in clustering-based MANETs},
  booktitle = {2010 IEEE Network Operations and Management Symposium - NOMS 2010},
  year      = {2010},
  pages     = {440-447},
  month     = {April},
  abstract  = {In a clustering-based MANETs, task allocation has posed increasing research challenges because the needs of management and coordination are accentuated by complicated demands of cluster members. A self-adaptive method of task allocation is designed to facilitate self-planning and self-negotiation for nodes during tasks being distributed and executed. The method is composed of two parts: for one part, the cluster head works out an integrated schedule for tasks, including selecting different sets of execution nodes and defining their functions according to task types. Cooperative group towards synergetic task is formed by policies of filtering and voting. Assignment modes based on either polling or mobile agents are also involved, the latter adopts an improved Ant Colony Optimization (ACO) algorithm to plan a migration path. For another, if a cluster member fails to accomplish a task, it could negotiate as a tenderee with other nodes using a revised contract net protocol. In addition, we employ a stimulation mechanism of distributing virtual task experience in connection with QoS guarantees to offer compensation for nodes' energy consumption and extra load. Simulation results demonstrate performance benefits of our self-adaptive method can efficaciously alleviate load of the cluster head, balance loads of nodes in consideration of energy restriction, and prolong the lifecycle of the cluster.},
  doi       = {10.1109/NOMS.2010.5488499},
  groups    = {ieee},
  issn      = {2374-9709},
  keywords  = {ad hoc networks;mobility management (mobile radio);optimisation;pattern clustering;protocols;quality of service;self-adaptive method;task allocation;clustering-based MANET;cluster head;cooperative group;synergetic task;filtering policy;improved ant colony optimization algorithm;revised contract net protocol;QoS;node energy consumption;load balancing;stimulation mechanism;Energy consumption;Contracts;Protocols;Technology management;Telecommunication network management;Collaborative software;Scheduling;Collision mitigation;Clustering algorithms;Laboratories;MANETs;Task allocation;Cooperative group;Ant algorithm;Contract net protocol},
}

@InProceedings{JieChen2004,
  author    = {{Jie Chen} and {Xilin Chen} and {Wen Gao}},
  title     = {Resampling for face detection by self-adaptive genetic algorithm},
  booktitle = {Proceedings of the 17th International Conference on Pattern Recognition, 2004. ICPR 2004.},
  year      = {2004},
  volume    = {3},
  pages     = {822-825 Vol.3},
  month     = {Aug},
  abstract  = {Over the past ten years, face detection has been thoroughly studied in computer vision research for its interesting applications. However, all of the state-of-the-art statistical methods suffer from the data collection for training a classifier. This paper presents a self-adaptive genetic algorithm (GA)-based method to swell face database through re-sampling from the existing faces. The basic idea is that a face is composed of a limited components set, and the GA can simulate the procedure of heredity. This simulation can also cover the variations of faces in different lighting conditions, poses, accessories, and quality conditions. To verify the generalization capability of the proposed method, we also use the expanded database to train an Adaboost-based face detector and test it on the MIT+CMU frontal face test set. The experimental results show that the data collection can be efficiently speeded up by the proposed methods.},
  doi       = {10.1109/ICPR.2004.1334655},
  groups    = {ieee},
  issn      = {1051-4651},
  keywords  = {face recognition;image classification;image sampling;genetic algorithms;statistical analysis;sampling methods;visual databases;face detection;self adaptive genetic algorithm;computer vision;statistical methods;image classifier;face database;resampling method;Adaboost based face detector;MIT+CMU frontal face test set;Face detection;Genetic algorithms;Testing;Snow;Image databases;Detectors;Learning systems;Computer science;Computer vision;Application software},
}

@InProceedings{Dini2004,
  author    = {P. {Dini}},
  title     = {Internet, GRID, self-adaptability and beyond: are we ready?},
  booktitle = {Proceedings. 15th International Workshop on Database and Expert Systems Applications, 2004.},
  year      = {2004},
  pages     = {782-788},
  month     = {Sep.},
  abstract  = {This paper reflects different understanding and positions on future trends of GRID-oriented technologies, applications, and networks, as perceived by representatives from industry and academia. There is no definitive answer on the topic that is raised in the title. Instead, the question serves as a starting point for a discussion of methodologies to apply, of engineering requirements to consider, of technical challenges to resolve harnessing this next stage of evolution of the Internet. The panel guests present their perception on these issues. Is GRID the Internet-ng? What do GRID and self-adaptable applications have in common? Does GRID facilitate the adaptability of applications? Where would the Internet, as it exists today, fall short? Will Web services come to the rescue? Are there new paradigms associated with heavily shared resources (infrastructure, protocols, services, user communities)? Which major bumps are ahead the roads for self-adaptability over GRID, how can they be crossed, at what cost, and what new paradigms are associated along this road? These are all open questions with no definitive conclusion, discussed from the point of view of what constitutes the state of the art today. Responses are intended to stimulate thought and foster discussion, rather than being a comprehensive treatise of the subject.},
  doi       = {10.1109/DEXA.2004.1333571},
  groups    = {ieee},
  issn      = {1529-4188},
  keywords  = {Internet;grid computing;Internet;GRID;self-adaptability;GRID-oriented technology;engineering requirement;Web service;shared resource;Internet;Grid computing;IP networks;Resource management;Roads;Information management;Application software;Databases;Web services;Protocols},
}

@InProceedings{Kavanagh2018,
  author    = {R. {Kavanagh} and K. {Djemame}},
  title     = {Energy-aware Self-Adaptive Middleware for Heterogeneous Parallel Architectures},
  booktitle = {2018 Fifth International Symposium on Innovation in Information and Communication Technology (ISIICT)},
  year      = {2018},
  pages     = {1-8},
  month     = {Oct},
  abstract  = {Hardware in HPC environments in recent years has become ever more heterogeneous in order to improve computational performance and as an aspect of managing power and energy constraints. This increase in heterogeneity requires middleware abstractions to eliminate additional complexities that it brings. In this paper we present a self-adaptation framework which includes aspects such as automated configuration, deployment and redeployment of applications to different heterogeneous infrastructure. This therefore not only mitigates complexity but aims to take advantage of the existing heterogeneity. The overall result of this paper is a generic event driven self-adaptive system that manages application QoS at runtime, which includes the automatic migration of applications between different accelerated infrastructures. Discussion covers when this migration is appropriate and quantifies the likely benefits.},
  doi       = {10.1109/ISIICT.2018.8613291},
  groups    = {ieee},
  keywords  = {middleware;parallel architectures;power aware computing;quality of service;heterogeneous infrastructure;accelerated infrastructures;middleware abstractions;energy constraints;computational performance;HPC environments;heterogeneous parallel architectures;energy-aware self-adaptive middleware;application QoS;generic event driven self-adaptive system;self-adaptation framework;Hardware;Computer architecture;Quality of service;Clocks;Complexity theory;Software;Monitoring;Self-adaptation;energy modelling;middleware;heterogeneous hardware architectures;application deployment.},
}

@Article{HaiyingWang2002,
  author   = {{Haiying Wang} and F. {Azuaje} and N. {Black}},
  title    = {Improving biomolecular pattern discovery and visualization with hybrid self-adaptive networks},
  journal  = {IEEE Transactions on NanoBioscience},
  year     = {2002},
  volume   = {99},
  number   = {4},
  pages    = {146-166},
  month    = {Dec},
  issn     = {1558-2639},
  abstract = {There is an increasing need to develop powerful techniques to improve biomedical pattern discovery and visualization. This paper presents an automated approach, based on hybrid self-adaptive neural networks, to pattern identification and visualization for biomolecular data. The methods are tested on two datasets: leukemia expression data and DNA splice-junction sequences. Several supervised and unsupervised models are implemented and compared. A comprehensive evaluation study of some of their intrinsic mechanisms is presented. The results suggest that these tools may be useful to support biological knowledge discovery based on advanced classification and visualization tasks.},
  doi      = {10.1109/TNB.2003.809465},
  groups   = {ieee},
  keywords = {molecular biophysics;self-organising feature maps;DNA;unsupervised learning;data mining;genetics;biology computing;pattern classification;pattern clustering;biomolecular pattern discovery;biomolecular visualization;hybrid self-adaptive neural networks;pattern identification;leukemia expression data;automated approach;DNA splice-junction sequences;supervised models;unsupervised models;intrinsic mechanisms;biological knowledge discovery;advanced classification tasks;Data visualization;Bioinformatics;Neural networks;Sequences;Clustering algorithms;DNA;Pattern analysis;Data mining;Application software;Genetics},
}

@InProceedings{YunboWu2004,
  author    = {{Yunbo Wu} and {Zhishu Li} and {Zhihua Cheng} and {Wang Hu}},
  title     = {A flexible self-adaptable scheduling model for QoS multimedia provision},
  booktitle = {2004 International Conference on Communications, Circuits and Systems (IEEE Cat. No.04EX914)},
  year      = {2004},
  volume    = {1},
  pages     = {516-520 Vol.1},
  month     = {June},
  abstract  = {With the increasing growth of multimedia applications, it is becoming crucial to support effectively the QoS guarantees of multimedia applications in future communication networks. This area has drawn very much attention and many significant results have been achieved. However, how to implement QoS management efficiently and flexibly in a wide range of networks, including wireless access networks and backbone, still remains problematic. We present a simple but effective adaptable scheduling model; it consists of two asymmetric queues under an exhaustive service policy, and characterizes the ability to ensure automatically the delay requirements of traffic according to its burstiness. Moreover, we have adopted a novel analytical method to deduce the exact expression of mean delay. Simulations verify the validity of the analysis. Furthermore, as an instance, numerical discussions about voice/video aggregation are presented; it is shown that our model can conveniently achieve the delay demands for both voice and video.},
  doi       = {10.1109/ICCCAS.2004.1346171},
  groups    = {ieee},
  keywords  = {adaptive scheduling;delays;IP networks;multimedia communication;quality of service;queueing theory;telecommunication network management;telecommunication traffic;visual communication;voice communication;self-adaptable scheduling model;multimedia applications;QoS management;wireless access networks;backbone networks;asymmetric queues;delay requirements;bursty traffic;voice/video aggregation;IP networks;Job shop scheduling;Delay;Traffic control;Application software;Wireless networks;Spine;Processor scheduling;Educational institutions;Computer science;Communication networks},
}

@InProceedings{VanWambeke2007,
  author    = {N. {Van Wambeke} and F. {Armando} and C. {Chassot} and E. {Exposito}},
  title     = {Architecture and Models for Self-Adaptability of Transport Protocols},
  booktitle = {21st International Conference on Advanced Information Networking and Applications Workshops (AINAW'07)},
  year      = {2007},
  volume    = {1},
  pages     = {977-982},
  month     = {May},
  abstract  = {Quality of service (QoS) oriented self-adaptive transport protocols are a major issue in the conception of future services for emergent networking technologies (wireless, mobiles, ad-hoc... ). Indeed, transport protocols will have to cope with dynamic applicative and network requirements/constraints throughout the lifetime of a connection while still having to provide the best possible end-to-end QoS to the end users. This is due to the multiplication of access network technologies and the deployment of cross- technology handover (i.e. convergence WiFi/GSM) combined with the generalized mobility of end users in the future "ambient" Internet. Transport protocols whose internal architecture may be dynamically configured appear to be a very promising solution for the support of QoS oriented adaptation. In this context, various problems such as the coordination of distributed adapting entities as well as the best way to guide this adaptation still remain under exploration. Regarding this last problem, model based decision process is a promising approach to avoid ad-hoc specific solutions. Following this approach, this paper introduces an analytical model for the decision process aimed at choosing the best module composition to be instantiated in order to optimize the QoS in a dynamic context. This approach is further illustrated by a case study in which the model is used to self-adaptively optimize applicative QoS for the recently introduced IEEE 802.11e wireless networks standard.},
  doi       = {10.1109/AINAW.2007.99},
  groups    = {ieee},
  keywords  = {quality of service;self-adjusting systems;transport protocols;self-adaptability;quality of service;self-adaptive transport protocols;QoS oriented adaptation;distributed adapting entity;model based decision process;IEEE 802.11e wireless networks standard;Transport protocols;Quality of service;IP networks;Analytical models;Context;GSM;Wireless networks;Layout;Application software;Collaborative work;Quality of Service;Self-adaptation;Micro Protocols;Transport Protocol;Decision model},
}

@Article{CostaJunior2016,
  author   = {E. {Costa Junior} and P. H. M. {Maia} and F. J. {Affonso}},
  title    = {SASeS: A Framework for the Development of Service-based Self-adaptive Applications},
  journal  = {IEEE Latin America Transactions},
  year     = {2016},
  volume   = {14},
  number   = {9},
  pages    = {4187-4195},
  month    = {Sep.},
  issn     = {1548-0992},
  abstract = {Self-adaptive Systems (SaS) enable the structural or behavioral adaptation at runtime in response to context changes or user's new needs without interruption in their execution. In service-based SaS, the adaptation activity can be considered as a complex activity, since such systems need to modify or replace a service (e.g., due to an unforeseen situation or failure) at runtime without perception of their stakeholders (i.e., client of these services). Based on this scenario, a framework called SASeS (Self-Adaptive Service-based System) was design. In short, this framework was developed based on web services standards and design patterns that support common tasks in the development of such systems. Moreover, SASeS provides a mechanism for the management of the control loop (or feedback loop), which enables constantly self-evaluating (i.e., monitor, analyze, plan, and execute) the adaptation activity. In order to show the applicability of our framework, two case studies are reported in this paper.},
  doi      = {10.1109/TLA.2016.7785951},
  groups   = {ieee},
  keywords = {service-oriented architecture;ubiquitous computing;SASeS;self-adaptive systems;context changes;self-adaptive service-based system;control loop;Software;Monitoring;IEEE transactions;Runtime;Sockets;XML;Context;framework;self-adaptive systems;service-based systems},
}

@InProceedings{Chun2014,
  author    = {I. {Chun} and J. {Park} and W. {Kim}},
  title     = {Self-adaptive system development method for smart control systems in CPS},
  booktitle = {16th International Conference on Advanced Communication Technology},
  year      = {2014},
  pages     = {635-639},
  month     = {Feb},
  abstract  = {The human desire to develop high reactive, safety, precise and convenient control system makes smart machinery equipped with computing elements appear on the scene. Especially in order to get free of household affairs, the necessity of home service robot - that is a good example of control systems - has been increased. Home service robot is a robot used for household chores on behalf of human. We expect that every home will at least possess and use more than one home service robot in the near future. However the operating environment of home service robots - like house, yard, garage, and so on - has much uncertainty and uncontrollable conditions, so that it is impossible to make robots suitable to all situations. In this paper, to achieve user satisfaction and overcome abnormal situation, we propose a self-adaptive system development method that make home service robots dependable, secure, safe, and efficient, and operating in real-time. To apply this approach, home service robots could be more intelligent in the adaptation.},
  doi       = {10.1109/ICACT.2014.6779039},
  groups    = {ieee},
  issn      = {1738-9445},
  keywords  = {adaptive control;intelligent control;service robots;self-adaptive system development method;smart control systems;CPS;smart machinery;computing elements;household affairs;home service robot;household chores;user satisfaction;Software;Adaptation models;Service robots;Computational modeling;Control systems;Runtime;Autonomie Computing;Home Service Robot;Intelligent system;Self-Adaptive System;Smart Control System},
}

@InProceedings{Jahan2017a,
  author    = {S. {Jahan} and A. {Marshall} and R. {Gamble}},
  title     = {Embedding Verification Concerns in Self-Adaptive System Code},
  booktitle = {2017 IEEE 11th International Conference on Self-Adaptive and Self-Organizing Systems (SASO)},
  year      = {2017},
  pages     = {121-130},
  month     = {Sep.},
  abstract  = {For a self-adaptive system, adaptive plans deployed at runtime should comply with critical requirements. The ability to assess plans is especially useful when the system operates for long periods without intervention. Dynamic compliance re-verification consumes enormous resources that may not be available. Plus, in many cases, re-verification of all requirements is unnecessary because the adaptive plan does not impact the associated state variables. If a plan can be configured dynamically from predefined parts, one method is to pre-check all possible plan combinations to determine if compliance could be violated. Unfortunately, this approach disallows runtime formulation of new functionality or new functionality integrations for self-adaptation. Thus, these new products will not be fully vetted prior to system deployment. However, if the deployed system has been verified to comply with critical requirements, then a verification process exists for each requirement. Our approach focuses on allowing the system to dynamically determine the potential for an adaptive plan to inhibit repeatability of the prior verification processes. If a verification process, such as a proof or certification, cannot be reused, there is a risk that requirement compliance can be violated. Our objective is to abstract verification concerns from the verification process and embed them as checkpoints within the code to provide a form of verification awareness. The checkpoints collect values as an adaptive plan is simulated, which are mined and visualized using ProM to determine the plan's potential to limit the reuse of the verification process.},
  doi       = {10.1109/SASO.2017.21},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {checkpointing;program verification;dynamic compliance reverification;ProM;checkpoints;self-adaptive system code;verification awareness;requirement compliance;system deployment;adaptive plan;Runtime;Adaptive systems;Adaptation models;Certification;Visualization;PROM;Software;verification awareness;verification concerns;self-adaptive systems;Linear Temporal Logic;proof reuse;ProM},
}

@InProceedings{Baclawski2017,
  author    = {K. {Baclawski} and E. S. {Chan} and D. {Gawlick} and A. {Ghoneimy} and K. C. {Gross} and Z. H. {Liu}},
  title     = {Self-adaptive dynamic decision making processes},
  booktitle = {2017 IEEE Conference on Cognitive and Computational Aspects of Situation Management (CogSIMA)},
  year      = {2017},
  pages     = {1-6},
  month     = {March},
  abstract  = {Decision making is important for many systems and is fundamental for situation awareness and information fusion. When a decision making process is confronted with new situations, goals and kinds of data, it must evolve and adapt. Highly optimized processes and efficient data structures generally have the disadvantage of having little flexibility or adaptability when confronted with new forms of data and new or changing goals. Consequently, optimized processes may only be locally optimal and may deteriorate over time. The normal approach to changing conditions is to manually reconfigure and even redevelop the system, which can be costly and time-consuming. In this article. we propose an architecture for the self-adaptation of decision making processes using flexible data structures and a process that monitors and adapts the decision making process. The objective is to have the ability to adapt both data schemas and decision making processes so that they can be both responsive and efficient.},
  doi       = {10.1109/COGSIMA.2017.7929586},
  groups    = {ieee},
  issn      = {2379-1675},
  keywords  = {data structures;decision making;self-adaptive dynamic decision making;situation awareness;information fusion;data structures;Decision making;Software;Cognition;Computer architecture;Ontologies;Airplanes;Adaptation models;Decision support;situation awareness;expert systems;control;adaptive systems;flexible data},
}
{Mu?oz-Fern��ndez2014,
  author        = {J. C. {Mu?oz-Fern��ndez} and G. {Tamura} and R. {mazo} and C. {Salinesi}},
  title         = {Towards a requirements specification multi-view framework for self-adaptive systems},
  booktitle     = {2014 XL Latin American Computing Conference (CLEI)},
  year          = {2014},
  pages         = {1-12},
  month         = {Sep.},
  __markedentry = {[guan:6]},
  abstract      = {The research on requirements specification for self-adaptive systems has a growing interest in the academy and the industry. As a result, currently there exists different proposals for the specification of requirements for self-adaptive systems. Despite the momentum that this area has received in recent years, in the works reported in the literature we have identified shortcomings. We propose a new framework to represent the requirements of self-adaptive systems. This framework seeks to manage uncertainty and to be sufficiently expressive for self-adaptive systems, including the representation of all the relevant concepts. The concepts, represented in different views to be used in a 5-stage process. Specifically, we present: (i) a discussion of the challenges and problems encountered in the literature; (ii); our proposal to solve these challenges; and (iii) a case study of the problem and its application.},
  doi           = {10.1109/CLEI.2014.6965158},
  keywords      = {formal specification;self-adjusting systems;requirements specification;self-adaptive systems;specification multiview framework;Software;Adaptation models;Radio frequency;Adaptive systems;Silicon compounds;Electronic mail;Proposals;requirements engineering;requirements specification;adaptive systems;adaptation},
}

@InProceedings{Rodriguez2010,
  author    = {I. B. {Rodriguez} and J. {Lacouture} and K. {Drira}},
  title     = {Semantic Driven Self-Adaptation of Communications Applied to ERCMS},
  booktitle = {2010 24th IEEE International Conference on Advanced Information Networking and Applications},
  year      = {2010},
  pages     = {1292-1299},
  month     = {April},
  abstract  = {To adapt communication in order to maintain the connectivity and the quality of communications in group-wide collaborative activities becomes challenging when considering mobile entities in a wireless environment, requiring responsiveness and availability of the communication system, and designing self-adaptable communication architecture remains a complex task. To simplify this task, semantic presents a very attractive alternative to support self-adaptation and context awareness. This paper proposes three ontologies to model different aspects related to communication (organizational, collaborative and contextual) and to forecast future problems in accordance with priorities. Adaptation actions are also proposed for self-adaptation in communicating architecture. These actions deal with different changing context parameters such as resource constraints and architecture evolution requirements. To illustrate the proposed ontologies and some adaptation actions, we use ERCMS (Emergency Response and Crisis Management Systems) scenarios of the ROSACE project as a case study from the more general group communication systems.},
  doi       = {10.1109/AINA.2010.158},
  groups    = {ieee},
  issn      = {2332-5658},
  keywords  = {emergency services;groupware;mobile communication;ontologies (artificial intelligence);ubiquitous computing;semantic driven communications self adaptation;group wide collaborative activities;wireless environment;mobile entities;context awareness;ontologies;emergency response and crisis management systems;ROSACE project;Ontologies;Mobile communication;Quality of service;Resource management;Context modeling;Software safety;Context-aware services;Uninterruptible power systems;International collaboration;Delay;Self-adaptation;Communication;Ontology},
}

@InProceedings{GuanghuanHu2003,
  author    = {{Guanghuan Hu} and {Chun Chen} and {Jiajun Bu}},
  title     = {A self-adaptive automatic albuming system},
  booktitle = {SMC'03 Conference Proceedings. 2003 IEEE International Conference on Systems, Man and Cybernetics. Conference Theme - System Security and Assurance (Cat. No.03CH37483)},
  year      = {2003},
  volume    = {1},
  pages     = {684-689 vol.1},
  month     = {Oct},
  abstract  = {Classification of digital photos using low-level features is an important but very difficult issue in many applications that deal with consumer photographs. Previous methods for image classification problems always aimed at some specific classification problems such as city vs. landscape. These methods were always based on some specific ground truths and they were not suitable for general classification problems. A system based on Bayesian framework and learning mechanism was proposed. The most effective and efficient classification strategy could be automatically obtained. The system was implemented and performance test was conducted using a database of real consumer photos. Experimental results show that high accuracy can be obtained for general classification problems.},
  doi       = {10.1109/ICSMC.2003.1243894},
  groups    = {ieee},
  issn      = {1062-922X},
  keywords  = {image classification;Bayes methods;self adaptive automatic albuming system;digital photos classification;image classification;Bayesian framework;learning mechanism;consumer photos database;Bayesian methods;Image segmentation;Learning systems;Layout;Application software;Image databases;Image classification;Histograms;Painting;Art},
}

@InProceedings{Mousa2018,
  author    = {A. {Mousa} and J. {Bentahar} and O. {Alam}},
  title     = {Multi-Objective Self-Adaptive Composite SaaS Using Feature Model},
  booktitle = {2018 IEEE 6th International Conference on Future Internet of Things and Cloud (FiCloud)},
  year      = {2018},
  pages     = {77-84},
  month     = {Aug},
  abstract  = {Composite services of type SaaS run in dynamic distributed environments where the quality of service (QoS) properties of the constituent services may change during execution. To face such dynamism and volatility, adaptation of composite SaaS to the runtime changes is a vital requirement. Recent research focused on centralized environments which are impractical for dynamic composition that requires distributed settings. To address this challenge, this paper proposes a distributed approach for composite SaaS adaptation using feature selection through applying the master/slave pattern. Slaves locally monitor the distributed constituent services and send performance information to the master, which in its turn reconfigures the composite services to provide the expected QoS and monitors the overall performance. Since adapting a composite SaaS to be QoS-optimal depends on multiple criteria according to the selected features, e.g., performance and cost, we model the adaptation process as a multi-objective optimization problem and then propose a genetic algorithm to compute the Pareto-optimal set of solutions for this problem. Experimental results show that our approach is efficient in distributed and large-scale environments compared to the centralized approach.},
  doi       = {10.1109/FiCloud.2018.00019},
  groups    = {ieee},
  keywords  = {cloud computing;feature selection;genetic algorithms;Pareto optimisation;quality of service;volatility;centralized environments;dynamic composition;distributed settings;feature selection;distributed constituent services;composite services;QoS-optimal;adaptation process;multiobjective optimization problem;large-scale environments;multiobjective self-adaptive composite SaaS;feature model;dynamic distributed environments;quality of service properties;master slave pattern;genetic algorithm;Pareto-optimal set;Software as a service;Quality of service;Adaptation models;Monitoring;Optimization;Computational modeling;Runtime;SaaS;Feature Model;Composite Services;Service Oriented Architecture},
}

@InProceedings{YanWang2006,
  author    = {{Yan Wang} and {Weihai Yu}},
  title     = {Reflective Hierarchical State-Machines for Self-Adaptable Distributed Transaction Coordination},
  booktitle = {International Conference on Autonomic and Autonomous Systems (ICAS'06)},
  year      = {2006},
  pages     = {2-2},
  month     = {July},
  abstract  = {Current transaction processing systems often lack the desired property to adapt their behavior to the ever-changing environment and the run-time context. Concerning a particular application domain, there could be various extended transaction coordination models, each focusing on solving specific problems. However, they are usually not targeted to manage the complicated situations with a mixture of these problems. Providing an overall transaction model for such mixture of problems is impractical, if not impossible. Our solution to this challenging issue is to build a self-adaptable transaction coordination framework. Rather than providing yet another transaction model, this framework hosts different transaction coordination protocols in the existing transaction patterns, and makes them adaptable according to the changing application context. Transaction coordination systems can choose their desired transaction patterns at the beginning of transactions, or switch their patterns at run-time if necessary. To make this possible, a formal hierarchical state-machine is incorporated into the framework, and reflection method is adopted. Experimentation of this framework is based on J2EE activity services. Mobile transaction coordination scenario is used throughout the paper as an illustration of how the framework may be applied practically},
  doi       = {10.1109/ICAS.2006.48},
  groups    = {ieee},
  issn      = {2168-1872},
  keywords  = {Java;protocols;transaction processing;reflective hierarchical state-machines;self-adaptable distributed transaction coordination;transaction processing system;transaction coordination protocols;J2EE activity services;mobile transaction coordination scenario;Mobile computing;Bandwidth;Context modeling;Switches;Environmental management;Wireless networks;Wireless communication;Computer science;Runtime environment;Application software},
}

@InProceedings{Eustache2007,
  author    = {Y. {Eustache} and J. {Diguet}},
  title     = {Configuration Management in the Context of Self Adaptive Systems},
  booktitle = {2007 International Conference on Field Programmable Logic and Applications},
  year      = {2007},
  pages     = {730-734},
  month     = {Aug},
  abstract  = {This paper presents a solution to safely and efficiently manage configurations of dynamically reconfigurable system on chip. We first define our unified RTOS-based framework for HW/SW task communication and configuration management. Then three issues are discussed and solutions given: the formalization of configuration space modeling including its different dimensions, the synchronization of configuration that mainly addresses the issue of task configuration ordering and the configuration coherency that solve the control the way a task accepts a new configuration. Finally we present the global method and give some implementation figures from a smart camera case study.},
  doi       = {10.1109/FPL.2007.4380756},
  groups    = {ieee},
  issn      = {1946-1488},
  keywords  = {configuration management;operating systems (computers);reconfigurable architectures;system-on-chip;configuration management;self adaptive systems;dynamically reconfigurable system on chip;RTOS;hardware-software task communication;Adaptive systems;Context;Communication switching;System-on-a-chip;Communication system control;Embedded system;Quality of service;Message passing;Switches;Smart cameras},
}

@InProceedings{Liu2007,
  author    = {W. {Liu} and Z. {Jiang} and Z. {Gong}},
  title     = {Online Fuzzy Self-Adaptive PID Attitude Control of a Sub Mini Fixed-Wing Air Vehicle},
  booktitle = {2007 International Conference on Mechatronics and Automation},
  year      = {2007},
  pages     = {153-157},
  month     = {Aug},
  abstract  = {An online fuzzy self-adaptive Proportional Integral Derivative (PID) controller is proposed to control the attitude of a sub miniature fixed-wing unmanned air vehicle (SUAV). The vehicle is a complex dynamic system with three rotational DOFs (degrees of freedom) and three translational DOFs. It is the three rotational DOFs that determine the air vehicle attitude in the air. The attitude control is based on the conventional PID control combined with an online fuzzy self-adaptive PID gains regulator which regulates three PID gains according to input error and the change in error, and the controller is realized on MCU system. Simulation and test flights show that the proposed controller enhanced the attitude control performance of the SUAV, such as rapidity, stability, and anti-disturbance.},
  doi       = {10.1109/ICMA.2007.4303532},
  groups    = {ieee},
  issn      = {2152-744X},
  keywords  = {adaptive control;aircraft control;attitude control;fuzzy control;remotely operated vehicles;self-adjusting systems;three-term control;online fuzzy self-adaptive PID attitude control;proportional integral derivative control;sub miniature fixed-wing unmanned air vehicle;flight software testing;Fuzzy control;Three-term control;PD control;Pi control;Proportional control;Control systems;Error correction;Attitude control;Unmanned aerial vehicles;Vehicle dynamics;SUAV;fuzzy self-adaptive PID;attitude control},
}

@InProceedings{Caron2013,
  author    = {E. {Caron} and M. D. {Faye} and J. {Rouzaud-Cornabas} and O. {Thiar��}},
  title     = {Grid middleware modelling for self-adaptive deployment},
  booktitle = {2013 IEEE Eleventh International Symposium on Autonomous Decentralized Systems (ISADS)},
  year      = {2013},
  pages     = {1-6},
  month     = {March},
  abstract  = {Software systems are increasingly expected to be self-adaptive. Such software systems have the capability to autonomously modify their behaviour at run-time in response to changes in their environment. This capability may be included in the software systems at design time or later by external mechanisms. Therefore, along their development process multiple adaptation concerns must be considered, such as the response to changes in the utilization patterns, the need for alternative algorithms for implementing a function, or the diversity of the infrastructure. This paper describes an architecture which aims to add self-adaptive capabilities to an existing middleware so that its deployment becomes self-adaptive. The framework uses external mechanisms for that purpose since this capability was not a native feature. The paper describes also a way to model system architecture, a hierarchical middleware architecture and a middleware deployment topology.},
  doi       = {10.1109/ISADS.2013.6513444},
  groups    = {ieee},
  keywords  = {Middleware;Computer architecture;Planning;Monitoring;Adaptation models;Computational modeling;Middleware;Deployment;Modelling;self-adaptation;Grid;Cloud},
}

@InProceedings{Hameed2016,
  author    = {M. {Hameed} and U. {Qamar} and U. {Akram}},
  title     = {Business intelligence: Self adapting and prioritizing database algorithm for providing big data insight in domain knowledge and processing of volume based instructions based on scheduled and contextual shifting of data},
  booktitle = {2016 Future Technologies Conference (FTC)},
  year      = {2016},
  pages     = {1168-1175},
  month     = {Dec},
  abstract  = {Modern world is not only about software and technology as the world advances it is becoming more data oriented and mathematical in nature. The current size of information that is brought in and processed is large and complex in size. Data size does not only involve using every single point of data that is reported. This information needs to be sized down and understood according to the application at hand. Data size is one issue and the other issue is the knowledge or information that needs to be extracted from it in order to obtain and achieve the purposeful meaning from the data. In memory and column oriented databases have presented viable and efficient solutions to optimize query time and column compressions. In addition to storing and retrieving data the information world has stepped up into big data with millions and terabytes of data as influx every single second. With the increase in the influx of data and out flux of responses generated and required. The world is now in need of both systems and software's that are efficient in storing huge data as well as application layer algorithms that are efficient enough to extract meaning from the layers or topologically dependent data. This paper is focused on analyzing in column store technique for managing mathematical and scientific big data involved in multiple markets; by using topological data meaning for analyzing and understanding the information from adaptive database systems. And for efficient storing in database the column oriented approach to big data analytics and query layers will be analyzed and optimized.},
  doi       = {10.1109/FTC.2016.7821749},
  groups    = {ieee},
  keywords  = {Big Data;competitive intelligence;data analysis;database management systems;query processing;topology;adaptive database system;big data analytics;query layer;topological data meaning;scientific big data management;mathematical big data management;column store technique;topologically dependent data;meaning extraction;application layer algorithm;data influx;data retrieval;data storage;column compression;query time optimization;column oriented database;in memory database;information extraction;knowledge extraction;data size;data contextual shifting;data scheduled shifting;volume based instruction processing;domain knowledge;prioritizing database algorithm;self adapting database algorithm;business intelligence;Big data;Business intelligence;Data mining;Database systems;Context;In-column memory;evolutionary algorithm;equivalent sets;topology},
}

@InProceedings{Glas2008,
  author    = {B. {Glas} and A. {Klimm} and O. {Sander} and K. D. {Muller-Glaser} and J. {Becker}},
  title     = {A self adaptive interfacing concept for consumer device integration into automotive entities},
  booktitle = {2008 IEEE International Symposium on Parallel and Distributed Processing},
  year      = {2008},
  pages     = {1-6},
  month     = {April},
  abstract  = {Innovation in today's automobiles is mainly driven by electronic development. Standard infotainment devices delivered by car manufacturers offer services such as navigation, television, DVD, telephony and more. Especially in the last few years a trend can be recognized extending from these OEM specific solutions towards integration of consumer electronic devices such as iPods, cell phones or the like. An approach solely based on software adjustments might not be sufficient to solve the problem of car to mobile device communication. Reconfigurable hardware offers a unique possibility of adapting to a given problem in hardware as well as software structures. The feature of partial dynamic reconfiguration in particular can contribute significantly to the flexibility of the overall system. Any adaptation of the running system should be automatic and going unnoticed by the user. This contribution depicts an approach that utilizes reconfigurable hardware for connecting consumer electronics to an automobile. Detection of protocols, loading of appropriate hardware interfaces, as well as integration of offered or requested services are the essential steps presented in this paper.},
  doi       = {10.1109/IPDPS.2008.4536520},
  groups    = {ieee},
  issn      = {1530-2075},
  keywords  = {automotive electronics;consumer electronics;entertainment;user interfaces;self adaptive interfacing;consumer device integration;automotive electronics;electronic development;standard infotainment device;car manufacturer;consumer electronic device;reconfigurable hardware;consumer electronics;hardware interface;multimodal interface;Automotive engineering;Hardware;Consumer electronics;Technological innovation;Automobile manufacture;Navigation;TV;DVD;Telephony;Portable media players;FPGA;reconfigurable hardware;partial dynamic reconfiguration;embedded systems;multimodal interface;consumer device integration;automotive electronics},
}

@InProceedings{Buzura2020,
  author    = {S. {Buzura} and V. {Dadarlat} and B. {Iancu} and A. {Peculea} and E. {Cebuc} and R. {Kovacs}},
  title     = {Self-adaptive Fuzzy QoS Algorithm for a Distributed Control Plane with Application in SDWSN},
  booktitle = {2020 IEEE International Conference on Automation, Quality and Testing, Robotics (AQTR)},
  year      = {2020},
  pages     = {1-6},
  month     = {May},
  abstract  = {This paper proposes a self-adaptive algorithm for improving the quality of service (QoS) rules in the distributed control plane of a software defined network (SDN). The algorithm is based on fuzzing techniques and requires that the Controllers collaborate in order to determine the best rules to use for packet forwarding. Several simulations were run with different network configurations to verify the algorithm's effectiveness by measuring the packet miss ratio on the data plane switches. The results show that a distributed and collaborative approach is generating the set of rules with the lowest miss ratio as well as it is the most efficient in decreasing the miss ratio with each algorithm iteration, compared to other approaches which are non distributed or non collaborative.},
  doi       = {10.1109/AQTR49680.2020.9129922},
  groups    = {ieee},
  keywords  = {SDWSN;QoS;Distributed control plane;Algorithm;Fuzzing},
}

@InProceedings{Maurer2010,
  author    = {M. {Maurer} and I. {Brandic} and V. C. {Emeakaroha} and S. {Dustdar}},
  title     = {Towards Knowledge Management in Self-Adaptable Clouds},
  booktitle = {2010 6th World Congress on Services},
  year      = {2010},
  pages     = {527-534},
  month     = {July},
  abstract  = {Cloud computing represents a promising computing paradigm where resources have to be dynamically allocated to software that needs to be executed. Self-manageable Cloud infrastructures are required to achieve that level of flexibility on the one hand, and to comply to users' requirements specified by means of Service Level Agreements (SLAs) on the other. Such infrastructures should automatically respond to changing component, workload, and environmental conditions minimizing user interactions with the system and preventing violations of SLAs. However, identification of system states where reactive actions are necessary for the prevention of SLA violations is far from trivial. In this paper we investigate how current knowledge management systems can be used for the prevention of SLA violations in Clouds. First, we define a typical SLA use case and formulate the expected behavior of the knowledge management system in order to prevent possible SLA violations. Second, we investigate different methods for knowledge management, e.g., situation calculus and case based reasoning (CBR). We discuss how these methods match the expected behavior for SLA violation prevention. In particular we examine the CBR method and devise several approaches for knowledge management in Clouds based on CBR. Finally, we evaluate our approach based on the presented use case.},
  doi       = {10.1109/SERVICES.2010.26},
  groups    = {ieee},
  issn      = {2378-3818},
  keywords  = {case-based reasoning;Internet;knowledge management;knowledge management;self-adaptable cloud;cloud computing;self-manageable cloud infrastructure;service level agreement;SLA;case based reasoning;Knowledge management;Clouds;Bandwidth;Monitoring;Cloud computing;Availability;Knowledge based systems;Knowledge management;Case Based Reasoning;Autonomic Computing;Cloud Computing},
}

@Article{Fang2012,
  author   = {J. {Fang} and Y. {Ren}},
  title    = {Self-Adaptive Phase-Lead Compensation Based on Unsymmetrical Current Sampling Resistance Network for Magnetic Bearing Switching Power Amplifiers},
  journal  = {IEEE Transactions on Industrial Electronics},
  year     = {2012},
  volume   = {59},
  number   = {2},
  pages    = {1218-1227},
  month    = {Feb},
  issn     = {1557-9948},
  abstract = {To adaptively reduce the influence of phase lag of traditional current mode switching power amplifiers on system stability and static and dynamic performances for magnetic bearing systems, this paper proposes a new, simple, and effective phase-lead compensation strategy based on unsymmetrical current sampling resistance network. The common problems associated with the existing phase-lead compensation methods for magnetic bearing power amplifiers are successfully handled via this method without additional hardware or software resources. The effectiveness and superiority of this proposed strategy have been demonstrated by both simulation and experimental results.},
  doi      = {10.1109/TIE.2011.2161060},
  groups   = {ieee},
  keywords = {circuit stability;compensation;magnetic bearings;magnetic switching;power amplifiers;self-adaptive phase-lead compensation;unsymmetrical current sampling resistance network;magnetic bearing switching power amplifier;phase lag reduction;current mode switching power amplifier;dynamic performances;static performances;system stability;Power amplifiers;Switches;Magnetic levitation;Resistance;Inductance;Rotors;Delay;Current sampling resistance;magnetic bearing;phase lag;self-adaptive phase-lead compensation;switching power amplifier},
}

@InProceedings{Saurav2017,
  author    = {S. K. {Saurav} and H. V. {Raghu} and S. {Bindhumadhava Bapu}},
  title     = {Self-adaptive power management framework for high performance computing},
  booktitle = {2017 International Conference on Advances in Computing, Communications and Informatics (ICACCI)},
  year      = {2017},
  pages     = {1913-1918},
  month     = {Sep.},
  abstract  = {Designing of the High Performance Computing (HPC) is a multidimensional challenge. The power and energy consumption of the HPC system is the identified concerns in the realization of the next generation supercomputers. Achieving Exaflop performance within the 20-megawatt of targeted power consumption is a very daunting task. The effective and intelligent power management is the key to achieving energy efficiency. In order to address the power consumption concerns, there is a need for an effective power management framework, which can manage and optimize power consumption of the nodes in an adaptive and intelligent manner. The fine-grained power measurement, workload characterization, and autonomous decision-making capabilities are the keys to an effective power management. This paper presents a self-adaptive power management framework for HPC systems. The devised framework is based on software-based power measurement methodologies, Application-aware power profiling, and energy-efficient rescheduling of the workloads for the energy optimization. The devised framework uses the available knobs of the power-managed components for controlling the energy consumption. The experimental results that we have achieved indicate around 12% to 20% energy savings compared to the static power management methodologies.},
  doi       = {10.1109/ICACCI.2017.8126124},
  groups    = {ieee},
  keywords  = {decision making;energy conservation;parallel processing;power aware computing;power consumption;power measurement;high performance computing;multidimensional challenge;energy consumption;HPC system;targeted power consumption;intelligent power management;energy efficiency;power consumption concerns;fine-grained power measurement;autonomous decision-making capabilities;self-adaptive power management framework;Application-aware power profiling;energy-efficient rescheduling;energy optimization;static power management methodologies;next generation supercomputers;energy savings;Exaflop performance;Power demand;Power measurement;Power system management;Adaptation models;Energy consumption;Energy efficiency;Optimization;Adaptive Power Management Framework;Application-aware power profiling;Autonomic;energy efficiency;fine-grained power measurement;high performance computing},
}

@InProceedings{Sum-Im2012,
  author    = {T. {Sum-Im}},
  title     = {A self-adaptive differential evolution algorithm for dynamic economic dispatch with valve-point effects},
  booktitle = {2012 47th International Universities Power Engineering Conference (UPEC)},
  year      = {2012},
  pages     = {1-6},
  month     = {Sep.},
  abstract  = {In this paper, a self-adaptive differential evolution algorithm (SaDEA) is proposed for solving dynamic economic dispatch (DED) problem with valve-point effects consideration. The purpose of DED problem is to minimize the total generation costs of thermal power plants associated with the technical and economical constraints. The software development has been performed within the mathematical programming environment of MATLAB in this work. The efficiency and effectiveness of the proposed technique is initially demonstrated via the analysis of 3-unit and 10-unit test systems considering valve-point loading and ramp rate constraints. A detailed comparative study among an evolutionary programming (EP), a particle swarm optimization (PSO), an enhanced particle swarm optimization (EPSO), an enhanced particle swarm optimization with Gaussian mutation (EPSO-GM), a hybrid method between evolutionary programming and sequential quadratic programming (EP-SQP), a modified hybrid EP-SQP (MHEP-SQP) and the proposed method is presented. From the experimental results, the proposed method has the achieved solutions with good accuracy, stable convergence characteristics, simple implementation and satisfactory computational time.},
  doi       = {10.1109/UPEC.2012.6398551},
  groups    = {ieee},
  keywords  = {evolutionary computation;particle swarm optimisation;power generation dispatch;power generation economics;quadratic programming;thermal power stations;self-adaptive differential evolution algorithm;dynamic economic dispatch;valve-point effects;SaDEA;DED problem;total generation costs;thermal power plants;Matlab;mathematical programming environment;unit test systems;ramp rate constraints;evolutionary programming;particle swarm optimization;PSO;enhanced particle swarm optimization;EPSO;enhanced particle swarm optimization with Gaussian mutation;EPSO-GM;sequential quadratic programming;modified hybrid EP-SQP method;Vectors;Generators;Sociology;Statistics;Heuristic algorithms;Cost function;Power generation;dynamic economic dispatch;self-adaptive differential evolution algorithm},
}

@InProceedings{Huang2014a,
  author    = {W. {Huang} and W. {Knottenbelt}},
  title     = {Self-Adaptive Containers: Interoperability Extensions and Cloud Integration},
  booktitle = {2014 IEEE 11th Intl Conf on Ubiquitous Intelligence and Computing and 2014 IEEE 11th Intl Conf on Autonomic and Trusted Computing and 2014 IEEE 14th Intl Conf on Scalable Computing and Communications and Its Associated Workshops},
  year      = {2014},
  pages     = {433-440},
  month     = {Dec},
  abstract  = {Driven by an ever-increasing diversity of application contexts, execution environments and scalability requirements, modern software is faced with the challenge of frequent code refactoring. To address this, we have proposed an STL-like self-adaptive container library, which dynamically changes its data structures and resource usage to meet programmer-specified Service Level Objectives relating to performance, reliability and primary memory use. A prototype of this library has been implemented and utilised in two case studies to prove its viability. In the present work, we explore a low-cost means to extend our library to satisfy wider classes of Service Level Objectives. This is achieved through the integration of third-party container frameworks, which exploit parallelism to boost performance and disk-based data offloading to reduce primary memory consumption, and the integration of cloud storage services, which offer cost-effective location-free storage. We demonstrate our library's application in a state-space exploration case study. With very low programmer overhead, experimental results show that our library can improve performance with a 76% reduction in insertion time and an 86% reduction in search time, and can also exploit out-of-core storage, including cloud storage.},
  doi       = {10.1109/UIC-ATC-ScalCom.2014.7},
  groups    = {ieee},
  keywords  = {cloud computing;data structures;open systems;self-adaptive containers;interoperability extensions;cloud integration;STL-like self-adaptive container library;data structures;resource usage;programmer-specified service level objectives;insertion time reduction;search time reduction;cloud storage;out-of-core storage;Libraries;Containers;Cloud computing;Data structures;Reliability;Memory management;Self-Adaptive Systems;Containers;Standard Template Library;Out-Of-Core Storage;Cloud Storage;Parallelism},
}

@Article{Zahid2018,
  author   = {F. {Zahid} and A. {Taherkordi} and E. G. {Gran} and T. {Skeie} and B. D. {Johnsen}},
  title    = {A Self-Adaptive Network for HPC Clouds: Architecture, Framework, and Implementation},
  journal  = {IEEE Transactions on Parallel and Distributed Systems},
  year     = {2018},
  volume   = {29},
  number   = {12},
  pages    = {2658-2671},
  month    = {Dec},
  issn     = {1558-2183},
  abstract = {Clouds offer flexible and economically attractive compute and storage solutions for enterprises. However, the effectiveness of cloud computing for high-performance computing (HPC) systems still remains questionable. When clouds are deployed on lossless interconnection networks, like InfiniBand (IB), challenges related to load-balancing, low-overhead virtualization, and performance isolation hinder full potential utilization of the underlying interconnect. Moreover, cloud data centers incorporate a highly dynamic environment rendering static network reconfigurations, typically used in IB systems, infeasible. In this paper, we present a framework for a self-adaptive network architecture for HPC clouds based on lossless interconnection networks, demonstrated by means of our implemented IB prototype. Our solution, based on a feedback control and optimization loop, enables the lossless HPC network to dynamically adapt to the varying traffic patterns, current resource availability, workload distributions, and also in accordance with the service provider-defined policies. Furthermore, we present IBAdapt, a simplified ruled-based language for the service providers to specify adaptation strategies used by the framework. Our developed self-adaptive IB network prototype is demonstrated using state-of-the-art industry software. The results obtained on a test cluster demonstrate the feasibility and effectiveness of the framework when it comes to improving Quality-of-Service compliance in HPC clouds.},
  doi      = {10.1109/TPDS.2018.2842224},
  groups   = {ieee},
  keywords = {cloud computing;computer centres;parallel processing;quality of service;static network reconfigurations;self-adaptive network architecture;HPC clouds;lossless interconnection networks;lossless HPC network;self-adaptive IB network prototype;storage solutions;high-performance computing systems;cloud data centers;cloud computing;InfiniBand;resource availability;workload distributions;IBAdapt;ruled-based language;quality-of-service compliance;Cloud computing;Routing;Computer architecture;Network topology;High performance computing;Self-adaptive systems;interconection networks;HPC clouds;infiniband;network reconfiguration},
}

@InProceedings{Guo2008,
  author    = {Y. {Guo} and R. {Li} and G. {Poulton} and A. {Zeman}},
  title     = {A Simulator for Self-Adaptive Energy Demand Management},
  booktitle = {2008 Second IEEE International Conference on Self-Adaptive and Self-Organizing Systems},
  year      = {2008},
  pages     = {64-73},
  month     = {Oct},
  abstract  = {A Demand-Side Program Simulation Tool is designed to predict the response from different deployment strategies of distributed domestic energy management. To date, there are several case studies of demand management and control projects from around the world. To achieve results with sufficient generality, case studies need to be conducted over long periods, with a reasonable number of diverse households. Such case studies require large capital to set up hardware and software.To bypass these financial and temporal investments, we have designed a simulator for energy suppliers to use in order to learn the likely performance of large-scale deployments. Of main interest is the prediction of not only the level and firmness of demand response in critical peak pricing trials, but also the householdpsilas comfortable level and satisfaction level. As an example of the power of the simulator we have used it to develop and test a new self-adaptive methodology to intelligently control the energy demand. The methodology is adaptive to global factors, such as the market energy price, as well as local conditions, such as the satisfaction level of households. This paper outlines self-adaptive methodologies used within the simulator. Experimental results show energy consumption under different control strategies and the improvement of system behavior through adaptive design. With the self-adaptive demand management strategy, the total energy consumed by one million householdspsila controllable loads has reduced dramatically while the satisfaction level of households is well maintained. This is one of the very first simulators that take into account both technical and human behavior aspects.},
  doi       = {10.1109/SASO.2008.71},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {adaptive control;control system synthesis;demand side management;intelligent control;power markets;self-adjusting systems;self-adaptive energy demand management;demand-side program simulation tool;distributed domestic energy management;critical peak pricing trials;market energy price;control strategies;adaptive design;Energy management;Predictive models;Project management;Hardware;Investments;Large-scale systems;Load management;Pricing;Automatic testing;Intelligent control;Self-Adaptive Systems;Energy Demand Management;Simulator;Genetic algorithm},
}

@InProceedings{Gao2008,
  author    = {M. {Gao} and J. {Xu} and J. {Tian}},
  title     = {Self-Adaptive Seismic Signal Collection Recording System Based on ARM},
  booktitle = {2008 Fifth IEEE International Symposium on Embedded Computing},
  year      = {2008},
  pages     = {326-331},
  month     = {Oct},
  abstract  = {Aim at the traditional natural seismic signal collection system has disadvantage of narrow wave band and data collection quantity is too large, a self-adaptive seismic signal collection recording system based on ARM (advanced RISC machines) is presented in this paper. The MEMS acceleration sensor chip with the characteristic of good low-frequency response and high sensitivity is used to detect seismic signal, and amplifying and filtering circuit are designed for signal conditioning to increase the signal noise ratio (SNR). Then the whole detection circuit will be assembled reasonably and debugged, and the three component seismograph is designed. A threshold signal will be set in the software to confirm the start and end time for recording system, in order to achieve the data collection efficiency and high reliability.},
  doi       = {10.1109/SEC.2008.27},
  groups    = {ieee},
  keywords  = {geophysical signal processing;reduced instruction set computing;seismology;seismometers;signal processing equipment;self-adaptive seismic signal collection recording system;ARM;advanced RISC machines;MEMS acceleration sensor chip;signal conditioning;signal noise ratio;seismograph;Signal to noise ratio;Reduced instruction set computing;Micromechanical devices;Acceleration;Sensor phenomena and characterization;Signal detection;Filtering;Signal design;Circuit noise;Low-frequency noise;Seismic signal;Collection;ARM},
}

@InProceedings{Li2019a,
  author    = {C. {Li} and M. {Zhang} and Z. {Xu} and X. {Sun}},
  title     = {Self-Adaptive Address Mapping Mechanism for Access Pattern Awareness on DRAM},
  booktitle = {2019 IEEE Intl Conf on Parallel Distributed Processing with Applications, Big Data Cloud Computing, Sustainable Computing Communications, Social Computing Networking (ISPA/BDCloud/SocialCom/SustainCom)},
  year      = {2019},
  pages     = {61-70},
  month     = {Dec},
  abstract  = {As DRAM is a considerably slow storage compared to CPU, the long access latency becomes a serious issue and affects the whole execution if fetching data is on the critical path. It is benefical if the data layout on DRAM, which is decided by address mapping, can serve data accesses with either great locality or bank-level parallelism. However for some cases, there exists a huge mismatch between access patterns and data layout of applications, which introduces the difficulty in obtaining locality or parallelism and current general address mapping cannot resolve it well. In an effort to overcome this challenge, we present an self-adaptive address mapping mechanism in memory controller to be aware of different access patterns on DRAM without any prior knowledge of applications. Moreover, there is nearly no modification on softwares, including applications, libraries and OS. We take several versions of matrix multiplication as an early verification, since their patterns are regular and simple to control. Impressively, the results reveal that memory performance of naive and tiling versions is improved up to 3.4�� and 2.7�� at most, 2.1�� and 1.7�� on average respectively. The whole execution time is reduced by up to 24% and 8% averagely. Even for highly-optimized implementations, execution time is decreased by 7% and memory performance speeds up to 1.6�� on average.},
  doi       = {10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00020},
  groups    = {ieee},
  keywords  = {cache storage;DRAM chips;matrix multiplication;DRAM;fetching data;data accesses;bank-level parallelism;current general address mapping;self-adaptive address mapping mechanism;memory performance;execution time;access pattern awareness;CPU;long access latency;data layout;memory controller;matrix multiplication;Random access memory;Layout;Parallel processing;Organizations;Libraries;Programming;Optimization;DRAM;Locality;MLP;access pattern;data layout;matrix multiplication},
}

@Article{Xue2012,
  author   = {Y. {Xue} and Y. {Zhuang} and T. {Ni} and J. {Ouyang} and Z. {Wang}},
  title    = {Enhanced self-adaptive evolutionary algorithm for numerical optimization},
  journal  = {Journal of Systems Engineering and Electronics},
  year     = {2012},
  volume   = {23},
  number   = {6},
  pages    = {921-928},
  month    = {Dec},
  issn     = {1004-4132},
  abstract = {There are many population-based stochastic search algorithms for solving optimization problems. However, the universality and robustness of these algorithms are still unsatisfactory. This paper proposes an enhanced self-adaptive evolutionary algorithm (ESEA) to overcome the demerits above. In the ESEA, four evolutionary operators are designed to enhance the evolutionary structure. Besides, the ESEA employs four effective search strategies under the framework of the self-adaptive learning. Four groups of the experiments are done to find out the most suitable parameter values for the ESEA. In order to verify the performance of the proposed algorithm, 26 state-of-the-art test functions are solved by the ESEA and its competitors. The experimental results demonstrate that the universality and robustness of the ESEA outperform its competitors.},
  doi      = {10.1109/JSEE.2012.00113},
  groups   = {ieee},
  keywords = {Sociology;Statistics;Algorithm design and analysis;Optimization;Stochastic processes;Vectors;Evolutionary computation;self-adaptive;numerical optimization;evolutionary algorithm;stochastic search algorithm},
}

@InProceedings{2018,
  title     = {Self Adaptive Software Systems are Essential for the Internet of Things},
  booktitle = {2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year      = {2018},
  pages     = {21-21},
  month     = {May},
  abstract  = {Presents the introductory welcome message from the conference proceedings. May include the conference officers' congratulations to all involved with the conference event and publication of the proceedings record.},
  groups    = {ieee},
  issn      = {2157-2305},
}

@InProceedings{2007,
  title     = {First International Conference on Self-Adaptive and Self-Organizing Systems - Title},
  booktitle = {First International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2007)},
  year      = {2007},
  pages     = {i-iii},
  month     = {July},
  abstract  = {The following topics are dealt with: peer-to-peer computing; multi-agent system; self-organizing algorithms; round-robin scheduling; combinatorial optimization and software engineering.},
  doi       = {10.1109/SASO.2007.29},
  groups    = {ieee},
  issn      = {1949-3681},
  keywords  = {multi-agent systems;peer-to-peer computing;scheduling;software engineering;peer-to-peer computing;multi-agent system;self-organizing algorithms;round-robin scheduling;combinatorial optimization;software engineering},
}

@InProceedings{Rossi2017,
  author    = {D. {Rossi} and F. {Poggi} and P. {Ciancarini}},
  title     = {Dynamic high-level in self-adaptive systems},
  booktitle = {2017 6th International Conference on Reliability, Infocom Technologies and Optimization (Trends and Future Directions) (ICRITO)},
  year      = {2017},
  pages     = {49-60},
  month     = {Sep.},
  abstract  = {An adaptive software has the ability of modify its own behavior for responding at runtime to changes in its surround context. The ability to self-adapt to changing operational contexts or scopes means that the system can modify its behavior with respect to its original requirements at run time. Recently a new dimension of adaptation is increasing its relevance for complex systems: the ability to accommodate changes in the original requirements taking place when the system is operational. A self-adaptive system should also, to some extent, enable dynamic reconfigurations to meet new or modified requirements without the need of a new design/develop/test/deploy cycle. In this paper we present a software architecture exploiting an explicit, actionable requirement model to drive self-adaptation activities. The architecture includes some semantic-based models able to manage requirements at runtime. We show an implementation of this architecture that leverages the semantic representation of changes to requirements at runtime. We show how the requirements models are related to the software architecture and how runtime changes in these models can influence the adaptive behavior of the system.},
  doi       = {10.1109/ICRITO.2017.8342398},
  groups    = {ieee},
  keywords  = {adaptive systems;software architecture;self-adaptive system;dynamic reconfigurations;software architecture;explicit requirement model;actionable requirement model;self-adaptation activities;adaptive behavior;dynamic high-level;adaptive software;operational contexts;complex systems},
}

@Article{Algabroun2020,
  author        = {Algabroun, H.},
  title         = {Dynamic sampling rate algorithm (DSRA) implemented in self-adaptive software architecture: a way to reduce the energy consumption of wireless sensors through event-based sampling},
  journal       = {Microsystem Technologies},
  year          = {2020},
  volume        = {26},
  number        = {4},
  pages         = {1067-1074},
  note          = {cited By 0},
  abstract      = {With the recent digitalization trends in the industry, wireless sensors are, in particular, gaining a growing interest. This is due to the possibility of being installed in inaccessible locations for wired sensors. Although great success has already been achieved in this area, energy limitation remains a major obstacle for further advances. As such, it is important to optimize the sampling with a sufficient rate to catch important information without excessive energy consumption, and one way to achieve sufficient sampling is using adaptive sampling for sensors. As software plays an important role in the techniques of adaptive sampling, a reference framework for software architecture is important in order to facilitate their design, modeling, and implementation. This study proposes a software architecture, named Rainbow, as the reference architecture, also, it develops an algorithm for adaptive sampling. The algorithm was implemented in the Rainbow architecture and tested using two datasets; the results show the proper operation of the architecture as well as the algorithm. In conclusion, the Rainbow software architecture has the potential to be used as a framework for adaptive sampling algorithms, and the developed algorithm allows adaptive sampling based on the changes in the signal. © 2019, The Author(s).},
  document_type = {Article},
  doi           = {10.1007/s00542-019-04631-9},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074424015&doi=10.1007%2fs00542-019-04631-9&partnerID=40&md5=88ff50d7f4b3afe67e3f1636da13933b},
}

@Conference{Arcelli2020,
  author        = {Arcelli, D.},
  title         = {Towards a generalized queuing network model for self-adaptive software systems},
  year          = {2020},
  pages         = {457-464},
  note          = {cited By 0},
  abstract      = {A Self-adaptive Software Systems (SASSs) is composed by a managing and a managed subsystem. The former comprises system's adaptation logic and controls the latter, which provides system's functionalities by perceiving and affecting the environment through its sensors and actuators, respectively. Such control often conforms to a MAPE-K feedback loop, i.e. a Knowledge-based architecture model that divides the adaptation process into four activities, namely Monitor, Analyze, Plan and Execute. Performance modeling notations, analysis methods and tools, have been coupled to other kinds of techniques (e.g. control theory, machine learning) for modeling and assessing the performance of managing subsystems, possibly aimed at supporting the identification of more convenient architectural alternatives. The contribution of this paper is a generalized Queuing Network model for SASSs, where the managed subsystem is explicitly modelled, thus widening performance modeling and analysis scope to the whole system. Job classes flowing through the QN represent activities of a global feedback control loop, which is based on the system's mode profile and implemented by class-switches operating in conformance to proper predefined class-switching and routing probabilities. Results obtained by means of a proof-of-concept addressing a realistic case study show that the generalized QN model can usefully support performance-driven architectural decision-making. Copyright © 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {MODELSWARD 2020 - Proceedings of the 8th International Conference on Model-Driven Engineering and Software Development},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85082982480&partnerID=40&md5=db922d79c47ce466a65bac6c84bb4a5e},
}

@Conference{Arcelli2020a,
  author        = {Arcelli, D.},
  title         = {Exploiting Queuing Networks to Model and Assess the Performance of Self-Adaptive Software Systems: A Survey},
  year          = {2020},
  volume        = {170},
  pages         = {498-505},
  note          = {cited By 0},
  abstract      = {Self-adaptation has emerged as a primary concern in the context of modern software systems, due to the high dynamicity of the environments where they operate, which implies the need for such systems to properly face significant degrees of uncertainty. To this aim, much work has been done, mainly by coupling autonomic managers to the managed subsystem which perceives and affects the environment through its sensors and actuators, respectively. Such coupling often results into MAPE-K feedback loop(s), i.e. a Knowledge (K)-based architectural model that divides the adaptation process into four activities, namely Monitor (M), Analyze (A), Plan (P) and Execute (E). Performance modeling notations, analysis methods and tools, have been exploited and coupled to other kinds of techniques (e.g. control theory, machine learning) for modeling and assessing the performance of autonomic managers, possibly aimed at supporting the identification of more convenient architectural alternatives. Since moving in such a big arena is not trivial and it is easy to be overwhelmed, in this literature survey, we focus on a particular performance modeling paradigm, namely Queuing Networks, with the aim of clarifying the state-of-art in exploiting such a notation to model and assess performance of Self-Adaptive Software Systems. We conclude by bringing out some research opportunities that may be worth exploring in the near future. © 2020 The Authors. Published by Elsevier B.V.All rights reserved.},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procs.2020.03.108},
  groups        = {scopus},
  journal       = {Procedia Computer Science},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085575055&doi=10.1016%2fj.procs.2020.03.108&partnerID=40&md5=2d332ae4907d9c3f34d1c878195089b4},
}

@Article{Gummalla2020,
  author        = {Gummalla, S. and Rao, G.V. and Swamy, G.V.},
  title         = {Esadsa: Enhanced self-adaptive dynamic software architecture},
  journal       = {Advances in Intelligent Systems and Computing},
  year          = {2020},
  volume        = {1090},
  pages         = {601-617},
  note          = {cited By 0},
  abstract      = {With the advent of new technologies and the trend in integration of related business, the software development has become very complex. However, complex systems are realized due to distributed computing technologies like Web services. With machine-to-machine (M2 M) interaction, human intervention is greatly reduced in distributed applications. Nevertheless, there is need for continuous changes in complex software systems. Manual incorporation of changes is both time consuming and tedious task. The self-adaptive features of software can cater to the needs of ad hoc demands pertaining to changes. Therefore, it is desirable to have a self-adaptive software architecture for distributed systems to adapt to changes automatically without traditional reengineering process involved in software update. The existing solutions do have limitations in self-adaptation and need human intervention. Rainbow is one of the examples for self-adaptive dynamic software architecture. However, it does not have knowledge mining and quality of software analysis for further improvements. It is essential to have such enhancements in the wake of self-adaptive systems of enterprises producing huge amount of data related to operations, service quality and other information required for analysing the architecture. We proposed a self-adaptive dynamic software architecture named enhanced self-adaptive dynamic software architecture (ESADSA) which is influenced by Rainbow. It incorporates modules such as QoS analyser and knowledge miner with two data mining algorithms for enhancing capabilities of the architecture. ESADSA decouples self-adaptation from target system by preserving cohesion of target system with loosely coupled interaction. A real-time case study is considered for proof of the concept. The experimental results revealed significant improvements in dynamic self-adaptation of the proposed architecture. © Springer Nature Singapore Pte Ltd. 2020.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-981-15-1480-7_51},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083970964&doi=10.1007%2f978-981-15-1480-7_51&partnerID=40&md5=e7c34299b9ae05158cac18dbaddecfc2},
}

@Article{Chen2019a,
  author        = {Chen, X. and Lin, J. and Lin, B. and Xiang, T. and Zhang, Y. and Huang, G.},
  title         = {Self-learning and self-adaptive resource allocation for cloud-based software services},
  journal       = {Concurrency Computation},
  year          = {2019},
  volume        = {31},
  number        = {23},
  note          = {cited By 3},
  abstract      = {In the presence of scale, dynamism, uncertainty, and elasticity, cloud engineers face several challenges when allocating resources for cloud-based software services. They should allocate appropriate resources in order to guarantee good quality of services as well as low cost of resources. Self-adaptive ability is needed in this process because engineers' intervention is difficult. Traditional self-adaptive resource allocation methods are policy-driven. Thus, cloud engineers usually have to develop separate sets of rules for each systems in order to allocate resources effectively, which leads to high administrative cost and implementation complexity. Machine learning has made great achievements in many fields, and it can be also applied to resource allocation. In this paper, we present a self-learning and self-adaptive approach to resource allocation for cloud-based software services. For a given cloud-based software service, its QoS model is firstly trained on history data, which is capable to predict the QoS value as output by using the information on workload and allocated resources as inputs. Then, on-line decision-making on resource allocation can be carried out automatically based on genetic algorithm, which is aimed to search reasonable resource allocation plan by using the QoS model. We evaluate our approach on RUBiS benchmark, demonstrating the accuracy of the QoS model over 90% and the improvement of resource utilization by 10%-30%. © 2018 John Wiley & Sons, Ltd.},
  art_number    = {e4463},
  document_type = {Conference Paper},
  doi           = {10.1002/cpe.4463},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85044199226&doi=10.1002%2fcpe.4463&partnerID=40&md5=49e05a78e46c1865c138b1da003c7731},
}

@Article{Chen2019b,
  author        = {Chen, X. and Lin, J. and Ma, Y. and Lin, B. and Wang, H. and Huang, G.},
  title         = {Self-adaptive resource allocation for cloud-based software services based on progressive QoS prediction model},
  journal       = {Science China Information Sciences},
  year          = {2019},
  volume        = {62},
  number        = {11},
  note          = {cited By 2},
  art_number    = {219101},
  document_type = {Letter},
  doi           = {10.1007/s11432-018-9750-2},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073219450&doi=10.1007%2fs11432-018-9750-2&partnerID=40&md5=7f527a74210a3e5463cd90b393a923f2},
}

@Article{Martins2019,
  author        = {Martins, A.L.D.M. and Garibotti, R. and Dutt, N. and Moraes, F.G.},
  title         = {The power impact of hardware and software actuators on self-adaptable many-core systems},
  journal       = {Journal of Systems Architecture},
  year          = {2019},
  volume        = {97},
  pages         = {42-53},
  note          = {cited By 0},
  abstract      = {Many-core systems rely on the advantages of the latest Complementary Metal Oxide Semiconductor (CMOS) technologies to increase the number of cores. However, this improvement comes at the cost of higher power dissipation, which prevents full use of the chip. To continue improving performance on future many-core systems, Resource Management (RM) becomes imperative to handle multi-objective and conflicting requirements such as power, performance, resilience, among others. In this task, RM can use both hardware (e.g., dynamic voltage and frequency scaling) and software actuators (e.g., task remapping). However, the complexity of synchronizing available actuators to follow a particular goal while avoiding actuation overlapping is a remaining challenge. This paper evaluates the power impact of each actuator and provides insights that will help engineers develop appropriate resource management heuristics to improve self-adaptable many-core systems. A state-of-the-art comparison shows that no related work provides or details the same comprehensiveness of actuation methods concerning power consumption. Our proposal is validated in a many-core system described in a true clock-cycle accurate model. Regarding hardware actuators, the results show the power profiling at the core level and detail the contribution of each hardware component. Furthermore, results of software actuators evidence that task events present a more significant power impact on the ratio of active and idle cores changes. © 2019 Elsevier B.V.},
  document_type = {Article},
  doi           = {10.1016/j.sysarc.2019.05.006},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85066333820&doi=10.1016%2fj.sysarc.2019.05.006&partnerID=40&md5=2378069e9a7ec5be75473d5c4e1db216},
}

@Article{Seiger2019,
  author        = {Seiger, R. and Huber, S. and Heisig, P. and Aßmann, U.},
  title         = {Toward a framework for self-adaptive workflows in cyber-physical systems},
  journal       = {Software and Systems Modeling},
  year          = {2019},
  volume        = {18},
  number        = {2},
  pages         = {1117-1134},
  note          = {cited By 5},
  abstract      = {With the establishment of Cyber-physical Systems (CPS) and the Internet of Things, the virtual world of software and services and the physical world of objects and humans move closer together. Despite being a useful means for automation, BPM technologies and workflow systems are yet not fully capable of executing processes in CPS. The effects on and possible errors and inconsistencies in the physical world are not considered by “traditional” workflow engines. In this work we propose a framework for self-adaptive workflows in CPS based on the MAPE-K feedback loop. Within this loop monitoring and analysis of additional sensor and context data is used to check for unanticipated errors in the physical world. Planning and execution of compensation actions restores Cyber-physical Consistency, which leads to an increased resilience of the process execution environment. The framework facilitates the separation of CPS aspects from the “regular” workflow views. We show the feasibility of this approach in a smart home scenario and discuss the application of our approach for legacy BPM systems. © 2017, Springer-Verlag GmbH Germany, part of Springer Nature.},
  document_type = {Article},
  doi           = {10.1007/s10270-017-0639-0},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85035146641&doi=10.1007%2fs10270-017-0639-0&partnerID=40&md5=6307205ac7c41f7968e8d0e661daf409},
}

@Article{Nguyen2019,
  author        = {Nguyen, H.Q. and Vu, H.H. and Ha, T.D.},
  title         = {Calculating development of cracks in roller-compacted concrete gravity dams based on self-adaptive finite element method in ansys software},
  journal       = {International Journal of Innovative Technology and Exploring Engineering},
  year          = {2019},
  volume        = {8},
  number        = {6},
  pages         = {510-514},
  note          = {cited By 0},
  abstract      = {Using ANSYS mechanical APDL, the authors have developed a program to calculate formation of cracks and development of cracks in roller-compacted concrete gravity body dams based on self-adaptive finite element method with grid elements which are subjected to static and dynamic loading capacity. The reliability of the program has been validated through some experimental results found in the literature. Using the program, the authors have also carried out to calculate the crack development of Son La RCC dam under loading capacity combination of earthquakes. The results show some effects of the cracks development to the loading capacity of RCC dams. © BEIESP.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85067356497&partnerID=40&md5=c683058d0bb65efdbc93d3b0c3f0ebb1},
}

@Book{Weyns2019,
  title         = {Software engineering of self-adaptive systems},
  year          = {2019},
  author        = {Weyns, D.},
  note          = {cited By 9},
  abstract      = {Modern software systems are expected to operate under uncertain conditions, without interruption. Possible causes of uncertainties include changes in the operational environment, dynamics in the availability of resources, and variations of user goals. The aim of self-adaptation is to let the system collect additional data about the uncertainties during operation. The system uses the additional data to resolve uncertainties, to reason about itself, and based on its goals to reconfigure or adjust itself to satisfy the changing conditions, or if necessary to degrade gracefully. In this chapter, we provide a particular perspective on the evolution of the field of self-adaptation in six waves. These waves put complementary aspects of engineering self-adaptive systems in focus that synergistically have contributed to the current knowledge in the field. From the presented perspective on the field, we outline a number of challenges for future research in self-adaptation, both in a short and long term. © Springer Nature Switzerland AG 2019. All rights are reserved.},
  document_type = {Book Chapter},
  doi           = {10.1007/978-3-030-00262-6_11},
  groups        = {scopus},
  journal       = {Handbook of Software Engineering},
  pages         = {399-443},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083949468&doi=10.1007%2f978-3-030-00262-6_11&partnerID=40&md5=702e3d1915258811dc5c19d9cf2a8b82},
}

@Article{Gerostathopoulos2019b,
  author        = {Gerostathopoulos, I. and Skoda, D. and Plasil, F. and Bures, T. and Knauss, A.},
  title         = {Tuning self-adaptation in cyber-physical systems through architectural homeostasis},
  journal       = {Journal of Systems and Software},
  year          = {2019},
  volume        = {148},
  pages         = {37-55},
  note          = {cited By 3},
  abstract      = {Self-adaptive software-intensive cyber-physical systems (sasiCPS) encounter a high level of run-time uncertainty. State-of-the-art architecture-based self-adaptation approaches assume designing against a fixed set of situations that warrant self-adaptation. As a result, failures may appear when sasiCPS operate in environment conditions they are not specifically designed for. In response, we propose to increase the homeostasis of sasiCPS, i.e., the capacity to maintain an operational state despite run-time uncertainty, by introducing run-time changes to the architecture-based self-adaptation strategies according to environment stimuli. In addition to articulating the main idea of architectural homeostasis, we introduce four mechanisms that reify the idea: (i) collaborative sensing, (ii) faulty component isolation from adaptation, (iii) enhancing mode switching, and (iv) adjusting guards in mode switching. Moreover, our experimental evaluation of the four mechanisms in two different case studies confirms that allowing a complex system to change its self-adaptation strategies helps the system recover from run-time errors and abnormalities and keep it in an operational state. © 2018 Elsevier Inc.},
  document_type = {Article},
  doi           = {10.1016/j.jss.2018.10.051},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056237002&doi=10.1016%2fj.jss.2018.10.051&partnerID=40&md5=25d686eab674f7e84f8a9f5908967d7b},
}

@Book{Shevtsov2019a,
  title         = {Self-adaptation of software using automatically generated control-theoretical solutions},
  year          = {2019},
  author        = {Shevtsov, S. and Weyns, D. and Maggio, M.},
  note          = {cited By 1},
  abstract      = {Control theory has contributed a set of foundational techniques to handle "change" at runtime in software applications. These techniques however have fundamental limitations as well: (i) they require the development and understanding of mathematical models; (ii) synthesizing solutions is often done on a per-problem basis, discouraging flexibility and generality. Software engineering, as a discipline, has always aimed at finding reusable and modular solutions. The combination of the desire to apply formally grounded control-theoretical principles and reuse existing solutions has motivated research on the topic of automatically generated control solutions. This research aims at designing control strategies in an automated way from data that qualifies the given problem at hand. This chapter provides an overview of the research topic of automatically generated control-theoretical solutions, explaining the key research contributions and paving the way for future research. © Springer Nature Singapore Pte Ltd. 2019. All Rights reserved.},
  document_type = {Book Chapter},
  doi           = {10.1007/978-981-13-2185-6_2},
  groups        = {scopus},
  journal       = {Engineering adaptive software systems: Communications of nii shonan meetings},
  pages         = {35-55},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85078198507&doi=10.1007%2f978-981-13-2185-6_2&partnerID=40&md5=5d45aa59e7707e530add43ef907ee199},
}

@Article{Palumbo2019a,
  author        = {Palumbo, F. and Fanni, T. and Sau, C. and Rodríguez, A. and Madroñal, D. and Desnos, K. and Morvan, A. and Pelcat, M. and Rubattu, C. and Lazcano, R. and Raffo, L. and de la Torre, E. and Juárez, E. and Sanz, C. and Sánchez de Rojas, P.},
  title         = {Hardware/Software self-adaptation in CPS: The CERBERO project approach},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2019},
  volume        = {11733 LNCS},
  pages         = {416-428},
  note          = {cited By 0},
  abstract      = {Cyber-Physical Systems (CPS) are interconnected devices, reactive and dynamic to sensed external and internal triggers. The H2020 CERBERO EU Project is developing a design environment composed by modelling, deployment and verification tools for adaptive CPS. This paper focuses on its efficient support for run-time self-adaptivity. © Springer Nature Switzerland AG 2019.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-030-27562-4_30},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85071435989&doi=10.1007%2f978-3-030-27562-4_30&partnerID=40&md5=b7684432dfa14c502fc7e331098e4b48},
}

@Article{Roopa2019,
  author        = {Roopa, Y.M. and Reddy, A.R.M.},
  title         = {An optimised component selection algorithm for self-adaptive software architecture using the component repository},
  journal       = {International Journal of Advanced Intelligence Paradigms},
  year          = {2019},
  volume        = {14},
  number        = {3-4},
  pages         = {236-247},
  note          = {cited By 0},
  abstract      = {Component-based software engineering focus on the development and reuse of the component. The component reuse is depending on the storage and retrieves process. The storage and retrieve process is carried by a component repository. This paper presents the component repository model for the developers to achieve good productivity. The component selection from the component repository according the functionality and requirements is a crucial part. This paper proposed an algorithm for optimising component selection with the functionality constraints like customer size, reliability and performance. The experimental result evaluates the performance of the algorithm and it is proved that the proposed algorithm had better performance in terms of component selection. © 2019 Inderscience Enterprises Ltd.},
  document_type = {Article},
  doi           = {10.1504/IJAIP.2019.103411},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074920333&doi=10.1504%2fIJAIP.2019.103411&partnerID=40&md5=ed19456204b7a9c439b62d84ada9f473},
}

@Conference{Seiger2019a,
  author        = {Seiger, R. and Huber, S. and Heisig, P. and Aβmann, U.},
  title         = {A framework for self-adaptive workflows in cyber-physical systems},
  year          = {2019},
  volume        = {P-292},
  pages         = {125-126},
  note          = {cited By 0},
  abstract      = {Workflows can be a useful means to formalize and enact processes among the sensors, actuators, smart objects and humans in Cyber-physical Systems (CPS). However, the dynamic nature of CPS and their resource constraint entities require the workflows and Workflow Management Systems (WfMSes) to be resilient and self-adaptive to deal with unanticipated situations and exceptions. We propose a generic framework based on the MAPE-K feedback loop to add self-management capabilities to WfMSes in the context of CPS. A case study in the smart home domain shows the general applicability of our framework for workflows and various WfMSes. © 2019 Gesellschaft fur Informatik (GI). All rights reserved.},
  document_type = {Conference Paper},
  doi           = {10.18420/se2019-38},
  groups        = {scopus},
  journal       = {Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072116731&doi=10.18420%2fse2019-38&partnerID=40&md5=d62f7a19735fc038ea0343182408de8b},
}

@Conference{Seol2019,
  author        = {Seol, K. and Baik, D.-K.},
  title         = {Learning-based adaptation determination method for problem recognition of self-adaptive software},
  year          = {2019},
  pages         = {399-400},
  note          = {cited By 0},
  abstract      = {In this paper, we propose a method for identifying the adaptation period when a problem occurs in a system in order to reduce the unnecessary adaptation of self-adaptive software. Consequently, the dangerous situation information is defined, the behavior information at the time of problem occurrence is learned, and the adaptive performance is determined by comparing it with the existing similar situations by using the k-nearest neighbors algorithm. By the use of the proposed method, a situation where an unnecessary adaptation process is performed while running the self-adaptive system could be avoided, system load may be reduced, and service quality may be enhanced. © 2019 ICAI 2015 - WORLDCOMP 2015. All rights reserved.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {Proceedings of the 2015 International Conference on Artificial Intelligence, ICAI 2015 - WORLDCOMP 2015},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85068345476&partnerID=40&md5=38bb9fc89835f2175b9f572ca85e2520},
}

@Article{Bershadsky2019c,
  author        = {Bershadsky, A. and Bozhday, A. and Evseeva, Y. and Gudkov, A.},
  title         = {Methods of Software Self-adaptation Based on Monitoring the Information Environment},
  journal       = {Communications in Computer and Information Science},
  year          = {2019},
  volume        = {1084},
  pages         = {122-131},
  note          = {cited By 1},
  abstract      = {The paper is devoted to the problem of developing a universal self-adaptation method of software systems. The main difference of proposed method is that a system extracts information about preferred structural and behavioral changes from a user feedback received in the form of reports and reviews. A semantic network of program characteristics will be built on the basis of this feedback information. This network will determine a new system configuration. For the synthesis of a semantic network, it is proposed to use methods of latent-semantic and distributive-statistical analysis. The feature diagram (the graphical representation of a feature model) will be used as a variability model of self-adaptive software. The developed method will allow a software system to independently identify and correct its own objective shortcomings directly in the process of functioning, as well as to adjust itself to different categories of users. The study was carried out with the financial support of the Russian Foundation for Basic Research in the framework of the research project No. 18-07-00408. © 2019, Springer Nature Switzerland AG.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-030-29750-3_10},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072864418&doi=10.1007%2f978-3-030-29750-3_10&partnerID=40&md5=215266c94d9728a814bc43b06b75c0a4},
}

@Conference{Zhang2019a,
  author        = {Zhang, H. and Li, Q. and Wang, L. and Cheng, W.},
  title         = {Self-adaptive software changes analysis method based on "Detection-Recognition" mechanism},
  year          = {2019},
  volume        = {2019-July},
  pages         = {287-290},
  note          = {cited By 0},
  abstract      = {Self-Adaptive Systems (SASs) need to analyze software changes accurately and continuously, that is, recognize events caused by changes, and adjust structure or behavior. However, present event recognition methods frequently monitor events, resulting in waste of system resources. And most of them ignore the impact of operating environment uncertainty, causing errors in recognizing the event and directly affecting the reliability of SASs. Addressing the above problems, this paper proposes an event recognition method based on "detection-recognition" mechanism. Firstly, the Naive Bayesian Classification algorithm is used to detect the state of the system. If the system is judged to be abnormal, we will combine with rule reasoning and fuzzy reasoning to recognize events. The system does not have to monitor the occurrence of events from time to time, avoiding the waste of system resources. Moreover, the probabilistic reasoning method of Bayesian Classification and the introduction of fuzzy reasoning can cope with environmental uncertainty and improve the accuracy of event recognition. Finally, we exemplify this mechanism with the Web system, which proves the effectiveness of the methods. © 2019 Knowledge Systems Institute Graduate School. All rights reserved.},
  document_type = {Conference Paper},
  doi           = {10.18293/SEKE2019-049},
  groups        = {scopus},
  journal       = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85071366672&doi=10.18293%2fSEKE2019-049&partnerID=40&md5=f32f01180d4abd03c159e63504515919},
}

@Article{D’Souza2019,
  author        = {D’Souza, M. and Kashi, R.N.},
  title         = {Avionics self-adaptive software: Towards formal verification and validation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2019},
  volume        = {11319 LNCS},
  pages         = {3-23},
  note          = {cited By 0},
  abstract      = {One of the future trends in the aerospace industry for ground and air operations is to make aircrafts self-adaptive, enabling them to take decisions without relying on any control authority. We propose a Belief, Desire, Intention (BDI) based multi-agent system for modelling avionics Self-Adaptive Software (SAS). Our BDI models are formally specified using Z notation and include a library of learning algorithms to cater to adaptability. Apart from satisfying various self-* properties that define adaptability features, avionics SAS, being safety critical systems, also have to satisfy safety and provide deterministic response meeting real-time constraints. We propose a validation framework to check for self-* properties. We also present a formal verification framework based on abstractions and model checking for verifying safety properties. The framework is illustrated through an avionics case study involving an adaptive flight planning system. © 2019, Springer Nature Switzerland AG.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-030-05366-6_1},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85059956734&doi=10.1007%2f978-3-030-05366-6_1&partnerID=40&md5=23dff1dd9abb79ec5d318ddf05825581},
}

@Conference{Lee2019b,
  author        = {Lee, E. and Baik, D.-K.},
  title         = {A verification technique for self-adaptive software by using model-checking},
  year          = {2019},
  pages         = {395-396},
  note          = {cited By 3},
  abstract      = {Self-adaptive software refers to software that can change its behavior by itself to perform an intended objective according to changes in the surrounding environment. In this study, a technique is proposed to detect the possibility of problem occurrence in advance, before the self-adaptive software carries out self-adaptation according to changes in the surrounding environment. For the proposed technique, a model-checking technique is applied, which is a software modeling verification technique. The proposed technique was applied to ZNN.com, which provides a self-adaptive software scenario. Through this, the possibility was shown that an adaptive-strategy can be prepared in advance by self-adaptive software through the model-checking technique in the stage prior to the execution of self-adaptation. © 2019 ICAI 2015 - WORLDCOMP 2015. All rights reserved.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {Proceedings of the 2015 International Conference on Artificial Intelligence, ICAI 2015 - WORLDCOMP 2015},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85063232527&partnerID=40&md5=c5333561f56739038de1f8a48e6e7a4e},
}

@Conference{Tenbergen2018,
  author        = {Tenbergen, B. and Daun, M. and Palomares, C. and Knauss, A. and Diederichs, F.},
  title         = {4 th international workshop on requirements engineering for self-adaptive, collaborative, and cyber physical systems (RESACS)},
  year          = {2018},
  pages         = {VII-VIII},
  note          = {cited By 0},
  art_number    = {8501471},
  document_type = {Editorial},
  doi           = {10.1109/RESACS.2018.00005},
  groups        = {scopus},
  journal       = {Proceedings - 2018 4th International Workshop on Requirements Engineering for Self-Adaptive, Collaborative, and Cyber Physical Systems, RESACS 2018},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061372579&doi=10.1109%2fRESACS.2018.00005&partnerID=40&md5=5029738e1f8d29098bf4167caef51b11},
}

@Conference{2018a,
  title         = {Proceedings - 2018 4th International Workshop on Requirements Engineering for Self-Adaptive, Collaborative, and Cyber Physical Systems, RESACS 2018},
  year          = {2018},
  note          = {cited By 0},
  abstract      = {The proceedings contain 8 papers. The topics discussed include: deriving functional safety requirements using undesired combination state templates; non-functional requirements trade-off in self-adaptive systems; a requirements-based approach for the evaluation of emulated IoT systems; ReqVision: digitizing your analog notes into readable and editable data; requirements for a flexible and generic API enabling mobile crowdsensing mHealth applications; AirborneCPS: a simulator for functional dependencies in cyber physical systems: a traffic collision avoidance system implementation; a knowledge acquisition approach for off-nominal behaviors; and towards context-aware process guidance in cyber-physical systems with augmented reality.},
  document_type = {Conference Review},
  groups        = {scopus},
  journal       = {Proceedings - 2018 4th International Workshop on Requirements Engineering for Self-Adaptive, Collaborative, and Cyber Physical Systems, RESACS 2018},
  page_count    = {57},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85062754161&partnerID=40&md5=f631fafe3489354c2955f6c0c6a27a04},
}

@Conference{Munoz-Fernandez2018,
  author        = {Muñoz-Fernández, J.C. and Mazo, R. and Salinesi, C. and Tamura, G.},
  title         = {10 Challenges for the specification of self-adaptive software},
  year          = {2018},
  volume        = {2018-May},
  pages         = {1-12},
  note          = {cited By 4},
  abstract      = {The demand for systems that continue on operation by adapting themselves in response to disturbing changes in their environment has increased in the last decades. Those systems, termed self-adaptive software (SAS) systems, should be developed with techniques and methods appropriated for analysing and designing this kind of systems, starting from the requirements phase. Several contributions propose approaches to improve the specification of requirements for those systems. This paper aims to review the most significant challenges still open in the domains of languages for requirements specification and methods for model verification of self-adaptive systems, independently of their particular application areas. More concretely, the main contribution of this paper is a list of ten challenges to achieve a better-defined specification of requirements for SAS systems, and a more effective verification of such specifications. These challenges are well worthy of being addressed in both communities, the requirements engineering (RE) and the SAS one. © 2018 IEEE.},
  document_type = {Conference Paper},
  doi           = {10.1109/RCIS.2018.8406640},
  groups        = {scopus},
  journal       = {Proceedings - International Conference on Research Challenges in Information Science},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050854758&doi=10.1109%2fRCIS.2018.8406640&partnerID=40&md5=dd5116540ce93edb0bdf3bf792439117},
}

@Article{Settanni2018b,
  author        = {Settanni, G. and Skopik, F. and Wurzenberger, M. and Fiedler, R.},
  title         = {Countering targeted cyber-physical attacks using anomaly detection in self-adaptive Industry 4.0 Systems [Abwehr zielgerichteter cyber-physischer Angriffe mittels Anomalie-Erkennung in selbstadaptiven Industrie-4.0-Systemen]},
  journal       = {Elektrotechnik und Informationstechnik},
  year          = {2018},
  volume        = {135},
  number        = {3},
  pages         = {278-285},
  note          = {cited By 3},
  abstract      = {This paper presents a novel approach to flexibly control the depth of monitoring applied to CPS-enabled safety-critical infrastructures, to timely detect deviations from the desired operational status, and discusses how the application of anomaly detection (AD) techniques can be further leveraged to automatically adapt the security controls of the infrastructure itself. © 2018, Springer-Verlag GmbH Austria, ein Teil von Springer Nature.},
  document_type = {Article},
  doi           = {10.1007/s00502-018-0615-6},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85047299546&doi=10.1007%2fs00502-018-0615-6&partnerID=40&md5=933a7af1286623cf60dc983ce15b6f25},
}

@Article{Aradea2018,
  author        = {Aradea and Supriana, I. and Surendro, K.},
  title         = {Self-adaptive software modeling based on contextual requirements},
  journal       = {Telkomnika (Telecommunication Computing Electronics and Control)},
  year          = {2018},
  volume        = {16},
  number        = {3},
  pages         = {1276-1288},
  note          = {cited By 3},
  abstract      = {The ability of self-adaptive software in responding to change is determined by contextual requirements, i.e. a requirement in capturing relevant context-atributes and modeling behavior for system adaptation. However, in most cases, modeling for self-adaptive software is does not take into consider the requirements evolution based on contextual requirements. This paper introduces an approach through requirements modeling languages directed to adaptation patterns to support requirements evolution. The model is prepared through contextual requirements approach that is integrated into MAPE-K (monitor, anayze, plan, execute - knowledge) patterns in goal-oriented requirements engineering. As an evaluation, the adaptation process is modeled for cleaner robot. The experimental results show that the requirements modeling process has been able to direct software into self-adaptive capability and meet the requirements evolution. © 2018 Universitas Ahmad Dahlan.},
  document_type = {Article},
  doi           = {10.12928/TELKOMNIKA.v16i3.7032},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85048793620&doi=10.12928%2fTELKOMNIKA.v16i3.7032&partnerID=40&md5=2266853cf21bc8cee6c77e308d100ffd},
}

@Conference{Borda2018b,
  author        = {Borda, A. and Pasquale, L. and Koutavas, V. and Nuseibeh, B.},
  title         = {Compositional verification of self-adaptive cyber-physical systems},
  year          = {2018},
  pages         = {1-11},
  note          = {cited By 3},
  abstract      = {Cyber-Physical Systems (CPSs) must often self-adapt to respond to changes in their operating environment. However, using formal verification techniques to provide assurances that critical requirements are satisfied can be computationally intractable due to the large state space of self-adaptive CPSs. In this paper we propose a novel language, Adaptive CSP, to model self-adaptive CPSs modularly and provide a technique to support compositional verification of such systems. Our technique allows system designers to identify (a subset of) the CPS components that can affect satisfaction of given requirements, and define adaptation procedures of these components to preserve the requirements in the face of changes to the system's operating environment. System designers can then use Adaptive CSP to represent the system including potential self-adaptation procedures. The requirements can then be verified only against relevant components, independently from the rest of the system, thus enabling computationally tractable verification. Our technique enables the use of existing formal verification technology to check requirement satisfaction. We illustrate this through the use of FDR, a refinement checking tool. To achieve this, we provide an adequate translation from a subset of Adaptive CSP to the language of FDR. Our technique allows system designers to identify alternative adaptation procedures, potentially affecting different sets of CPS components, for each requirement, and compare them based on correctness and optimality. We demonstrate the feasibility of our approach using a substantive example of a smart art gallery. Our results show that our technique reduces the computational complexity of verifying self-adaptive CPSs and can support the design of adaptation procedures. © 2018 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/3194133.3194146},
  groups        = {scopus},
  journal       = {Proceedings - International Conference on Software Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051500987&doi=10.1145%2f3194133.3194146&partnerID=40&md5=135a8d4ea721a6dc560f1de938e8f286},
}

@Conference{DAngelo2018,
  author        = {D'Angelo, M. and Napolitano, A. and Caporuscio, M.},
  title         = {CyPhEF: A model-driven engineering framework for self-Adaptive cyber-physical systems},
  year          = {2018},
  pages         = {101-104},
  note          = {cited By 7},
  abstract      = {Self-Adaptation is nowadays recognized as an effective approach to deal with the uncertainty inherent to cyber-physical systems, which are composed of dynamic and deeply intertwined physical and software components interacting with each other. Engineering a self-Adaptive cyber-physical system is challenging, as concerns about both the physical and the control system should be jointly considered. To this end, we present CyPhEF, a Model-Driven Engineering framework supporting the development and validation of self-Adaptive cyber-physical systems. Demo video: https://youtu.be/nmg-w2kfKEA. © 2018 Authors.},
  document_type = {Conference Paper},
  doi           = {10.1145/3183440.3183483},
  groups        = {scopus},
  journal       = {Proceedings - International Conference on Software Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049692631&doi=10.1145%2f3183440.3183483&partnerID=40&md5=60c227525343d737bad1dd92e5d76995},
}

@Conference{Kubat2018,
  author        = {Kubát, P. and Bulej, L. and Bureš, T. and Horký, V. and Tůma, P.},
  title         = {Adaptive dispatch: A pattern for performance-aware software self-adaptation},
  year          = {2018},
  volume        = {2018-January},
  pages         = {195-198},
  note          = {cited By 0},
  abstract      = {Modern software systems often employ dynamic adaptation to runtime conditions in some parts of their functionality ś well known examples range from autotuning of computing kernels through adaptive battery saving strategies of mobile applications to dynamic load balancing and failover functionality in computing clouds. Typically, the implementation of these features is problem-specific ś a particular autotuner, a particular load balancer, and so on ś and enjoys little support from the implementation environment beyond standard programming constructs. In this work, we propose Adaptive Dispatch as a generic coding pattern for implementing dynamic adaptation. We believe that such pattern can make the implementation of dynamic adaptation features better in multiple aspects ś an explicit adaptation construct makes the presence of adaptation easily visible to programmers, lends itself to manipulation with development tools, and facilitates coordination of adaptation behavior at runtime. We present an implementation of the Adaptive Dispatch pattern as an internal DSL in Scala. © 2018 Association for Computing Machinery.},
  document_type = {Conference Paper},
  doi           = {10.1145/3185768.3186406},
  groups        = {scopus},
  journal       = {ICPE 2018 - Companion of the 2018 ACM/SPEC International Conference on Performance Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051840975&doi=10.1145%2f3185768.3186406&partnerID=40&md5=338568acf3893112339602f4deb25a38},
}

@Article{Zavala2018,
  author        = {Zavala, E.},
  title         = {Towards Adaptive Monitoring Services for Self-Adaptive Software Systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2018},
  volume        = {10797 LNCS},
  pages         = {357-362},
  note          = {cited By 0},
  abstract      = {In order to deal with the great diversity of execution contexts, modern software systems rely on feedback control loops and external monitoring services for observing them and their environment, and respond to context changes through adaptation. In this process, the monitoring services play a crucial role since the quality of the monitoring data (e.g., timeliness, freshness, accuracy, availability, etc.) affects directly the self-adaptation decisions. Most of the current approaches supporting monitoring for self-adaptive systems (SASs) assume that the monitors are static components and they do not change at runtime. Due to the dynamism of execution contexts mentioned before, this vision is not valid anymore. Nowadays, monitoring services need to be adaptive as well, in order to respond to context changes, e.g., new measures to collect are required or a monitor service failure occurs at runtime. The complexity of handling monitoring services adaptation in coordination with SASs operation challenges and offers new opportunities to software engineers. In order to address this challenge, this research proposes to extend the adaptation logic of modern SASs with an external MAPE-K loop for managing the adaptation process of the monitoring services participating in the SASs adaptation logic. Different algorithmic, statistical, modeling and stochastic analysis and decision-making techniques are being explored for implementing this loop. Moreover, a reusable architecture for enacting the adaptation decisions in the monitoring services is being developed. The approach will be evaluated in two systems: a self-adaptive smart vehicle and a real self-adaptive video streaming service. © Springer International Publishing AG, part of Springer Nature 2018.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-91764-1_31},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049037202&doi=10.1007%2f978-3-319-91764-1_31&partnerID=40&md5=e1222eae2e58476f606fd789a686340f},
}

@Article{Huuhtanen2018,
  author        = {Huuhtanen, A. and Mäkitalo, N. and Mikkonen, T.},
  title         = {Architecting self-adaptive software systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2018},
  volume        = {11153 LNCS},
  pages         = {59-70},
  note          = {cited By 0},
  abstract      = {A growing number of software systems operate in uncertain environments. They benefit from an ability to autonomously adapt to changes during runtime without suffering from a lowered quality of service. Several different architectural approaches to self-adaptive software exist with their sources of inspiration varying from psychology to mathematics. In this literature survey, we study and evaluate four types of approaches: architecture-based, control-based, learning-based and awareness-based approaches. Our aim is to clarify whether a unified, general approach to computational self-adaptivity is possible and what it could look like. We conclude that a general solution should combine aspects of all of the studied approaches. © Springer Nature Switzerland AG 2018.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-030-03056-8_6},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85058296036&doi=10.1007%2f978-3-030-03056-8_6&partnerID=40&md5=f1a18ccdeb22848cbed561b308203e7c},
}

@Article{MohanaRoopa2018,
  author        = {MohanaRoopa, Y. and Ramesh Babu, M. and Kumar, J. and Kishore Babu, D.},
  title         = {Optimal component architecture using particle swarm optimization algorithm for self-adaptive software architecture},
  journal       = {International Journal of Engineering and Technology(UAE)},
  year          = {2018},
  volume        = {7},
  number        = {1.6 Special Issue 6},
  pages         = {23-26},
  note          = {cited By 2},
  abstract      = {The component-based software engineering (CBSE) ensue the procedure of reconfiguration and reusability of components to reap the higher productivity. The context-aware structures are portion of CBSE, which observes the functionality of the system and adopt auto-matically according to the execution context. In this paper, we are focusing on the aware context guidelines that automatically adapt to the given context given by the customers and remodel the software architecture based totally on the requirements. The component reposi-tory turned into added, in which it carries the wide variety of reusable components. The fuzzy logic becomes carried out to the compo-nent evaluation in the component repository. The Particle Swarm Optimization (PSO) algorithm applied, to optimize component archi-tecture. The Hospital management system is used to test the adaptability of the system. © 2018Dr. Y. mohanaRoopa et al.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072787301&partnerID=40&md5=b231953be66f806ec9fd1cd4d0a02665},
}

@Article{Wu2018,
  author        = {Wu, T. and Li, Q. and Wang, L. and He, L. and Li, Y.},
  title         = {Using reinforcement learning to handle the runtime uncertainties in self-adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2018},
  volume        = {11176 LNCS},
  pages         = {387-393},
  note          = {cited By 2},
  abstract      = {The growth of scale and complexity of software as well as the complex environment with high dynamic lead to the uncertainties in self-adaptive software’s decision making at run time. Self-adaptive software needs the ability to avoid negative effects of uncertainties to the quality attributes of the software. However, existing planning methods cannot handle the two types of runtime uncertainties caused by complexity of system and running environment. This paper proposes a planning method to handle these two types of runtime uncertainties based on reinforcement learning. To handle the uncertainty from the system, the proposed method can exchange ineffective self-adaptive strategies to effective ones according to the iterations of execution effects at run time. It can plan dynamically to handle uncertainty from environment by learning knowledge of relationship between system states and actions. This method can also generate new strategies to deal with unknown situations. Finally, we use a complex distributed e-commerce system, Bookstore, to validate the ability of proposed method. © Springer Nature Switzerland AG 2018.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-030-04771-9_28},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85058578606&doi=10.1007%2f978-3-030-04771-9_28&partnerID=40&md5=6b20e5e80c7e0521e7d06c2d03e5ab6b},
}

@Conference{Moritani2017,
  author        = {Moritani, B.I. and Lee, J.},
  title         = {An approach for managing a distributed feature model to evolve self-adaptive dynamic software product lines},
  year          = {2017},
  volume        = {2},
  pages         = {107-110},
  note          = {cited By 1},
  abstract      = {While maintaining core assets of a product line, product line engineers may need to adapt the assets to accommodate new requirements and new devices from the changing and newly emerging markets. Additionally, due to the emergence of new computing environments like autonomous systems (e.g., ubiquitous computing and the Internet of Things), there is increasing demand for dynamic adaptations of core assets, and this often needs to be managed with minimum human intervention.We propose an approach for managing a distributed feature model in order to facilitate the adaptation of self-adaptive dynamic software product lines (DSPLs). In addition, our approach allows the change of behaviours to promote the long lifecycle of self-adaptive DSPL. The case study applied in this paper is a baby care system (BCS). BCS assists people to monitor a baby while they are sleeping. We tested our BCS in the following scenarios: Adding features, removing features and changing behaviours. All these scenarios showed that it is possible to use our approach to self-adapt DSPLs. © 2017 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/3109729.3109743},
  groups        = {scopus},
  journal       = {ACM International Conference Proceeding Series},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85032269026&doi=10.1145%2f3109729.3109743&partnerID=40&md5=b00624b7e5eca991eb0e4a42845e4b93},
}

@Book{Iber2017,
  title         = {A self-adaptive software system for increasing the reliability and security of cyber-physical systems},
  year          = {2017},
  author        = {Iber, J. and Rauter, T. and Kreiner, C.},
  note          = {cited By 5},
  abstract      = {The advancement and interlinking of cyber-physical systems offer vast new opportunities for industry. The fundamental threat to this progress is the inherent increase of complexity through heterogeneous systems, software, and hardware that leads to fragility and unreliability. Systems cannot only become more unreliable, modern industrial control systems also have to face hostile security attacks that take advantage of unintended vulnerabilities overseen during development and deployment. Self-adaptive software systems offer means of dealing with complexity by observing systems externally. In this chapter the authors present their ongoing research on an approach that applies a self-adaptive software system in order to increase the reliability and security of control devices for hydro-power plant units. The applicability of the approach is demonstrated by two use cases. Further, the chapter gives an introduction to the field of self-adaptive software systems and raises research challenges in the context of cyber-physical systems. © 2018, IGI Global. All rights reserved.},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-5225-2845-6.ch009},
  groups        = {scopus},
  journal       = {Solutions for Cyber-Physical Systems Ubiquity},
  pages         = {223-246},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85046285337&doi=10.4018%2f978-1-5225-2845-6.ch009&partnerID=40&md5=de789027f87b097d8e5d7512a70800fc},
}

@Book{Musil2017,
  title         = {Patterns for self-adaptation in Cyber-Physical Systems},
  year          = {2017},
  author        = {Musil, A. and Musil, J. and Weyns, D. and Bures, T. and Muccini, H. and Sharaf, M.},
  note          = {cited By 12},
  abstract      = {Engineering Cyber-Physical Systems (CPS) is challenging, as these systems have to handle uncertainty and change during operation. A typical approach to deal with uncertainty is enhancing the system with self-adaptation capabilities. However, realizing self-adaptation in CPS, and consequently also in Cyber-Physical Production Systems (CPPS) as a member of the CPS family, is particularly challenging due to the specific characteristics of these systems, including the seamless integration of computational and physical components, the inherent heterogeneity and large-scale of such systems, and their open-endedness. In this chapter we survey CPS studies that apply the promising design strategy of combining different self-adaptation mechanisms across the technology stack of the system. Based on the survey results, we derive recurring adaptation patterns that structure and consolidate design knowledge. The patterns offer problem-solution pairs to engineers for the design of future CPS and CPPS with self-adaptation capabilities. Finally, the chapter outlines the potential of collective intelligence systems for CPPS and their engineering based on the survey results. © Springer International Publishing AG 2017.},
  document_type = {Book Chapter},
  doi           = {10.1007/978-3-319-56345-9_13},
  groups        = {scopus},
  journal       = {Multi-Disciplinary Engineering for Cyber-Physical Production Systems: Data Models and Software Solutions for Handling Complex Engineering Projects},
  pages         = {331-368},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85048914233&doi=10.1007%2f978-3-319-56345-9_13&partnerID=40&md5=73d2ac980c9d25c64996879c5e4ff893},
}

@Article{Calinescu2017,
  author        = {Calinescu, R. and Gerasimou, S. and Johnson, K. and Paterson, C.},
  title         = {Using runtime quantitative verification to provide assurance evidence for self-adaptive software: advances, applications and research challenges},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2017},
  volume        = {9640 LNCS},
  pages         = {223-248},
  note          = {cited By 4},
  abstract      = {Providing assurance that self-adaptive software meets its dependability, performance and other quality-of-service (QoS) requirements is a great challenge. Recent approaches to addressing it use formal methods at runtime, to drive the reconfiguration of self-adaptive software in provably correct ways. One approach that shows promise is runtime quantitative verification (RQV), which uses quantitative model checking to reverify the QoS properties of self-adaptive software after environmental, requirement and system changes. This reverification identifies QoS requirement violations and supports the dynamic reconfiguration of the software for recovery from such violations. More importantly, it provides irrefutable assurance evidence that adaptation decisions are correct. In this paper, we survey recent advances in the development of efficient RQV techniques, the application of these techniques within multiple domains and the remaining research challenges. © Springer International Publishing AG 2017.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-74183-3_8},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041808638&doi=10.1007%2f978-3-319-74183-3_8&partnerID=40&md5=954570e6a3b9d67f60fc785d91155954},
}

@Article{Iber2017a,
  author        = {Iber, J. and Rauter, T. and Krisper, M. and Kreiner, C.},
  title         = {The potential of self-adaptive software systems in industrial control systems},
  journal       = {Communications in Computer and Information Science},
  year          = {2017},
  volume        = {748},
  pages         = {150-161},
  note          = {cited By 6},
  abstract      = {New generations of industrial control systems offer higher performance, are networked and can be controlled remotely. Following this progress, the complexity of such systems increases through heterogeneous systems, hardware and more capable software. This may lead to an increase of unreliability and insecurity. Self-adaptive software systems offer a mean of dealing with complexity by monitoring a control system, detecting anomalies and adapting the control system to problems. Regarding such methods, industrial control systems have the advantage of being less dynamic. The network topology is fixed, devices rarely change, and the functionality of all the resources is known in principle. In this work, we examine this advantage and present the potential of self-adaptive software systems. The context of the presented work is control systems for hydropower units. © 2017, Springer International Publishing AG.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-64218-5_12},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85030635378&doi=10.1007%2f978-3-319-64218-5_12&partnerID=40&md5=285850d20ec854dd30c886ef753cb5fd},
}

@Article{Rajan2017,
  author        = {Rajan, B. and Chandra, V.},
  title         = {ABC metaheuristic based optimized adaptation planning logic for decision making intelligent agents in self adaptive software system},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2017},
  volume        = {10387 LNCS},
  pages         = {496-504},
  note          = {cited By 0},
  abstract      = {The potential of machine intelligence is enormously increasing with a vision of computing systems that can act as good decision making and self managing entities. This led to the introduction of systems that are more intelligent with self* properties and are known as Self Adaptive Software Systems (SAS). Intelligent Agents which has a high adaptation capability forms the main component of such systems. These self adaptive systems are provided with the ability of self–configuring based on the run time environmental changes which guarantee the overall system functional and QoS goals. This paper proposes an optimized decentralized adaptation logic for modeling SAS which exploits the multi-agent concept. Each subsystem has an objective and uses an Artificial Bee Colony metaheuristic to achieve local optimization which in turn leads to the optimization of the whole distributed system. © Springer International Publishing AG 2017.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-61845-6_49},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85026756725&doi=10.1007%2f978-3-319-61845-6_49&partnerID=40&md5=30b69610bcec262e3ae99313e6e3faa8},
}

@Conference{Benato2017,
  author        = {Benato, G.S. and Affonso, F.J. and Nakagawa, E.Y.},
  title         = {Infrastructure based on template engines for automatic generation of source code for self-Adaptive software domain},
  year          = {2017},
  pages         = {30-35},
  note          = {cited By 1},
  abstract      = {Self-Adaptive Software (SaS), a special class of software system, constantly deals with some type of changes (i.e., structural and/or behavioral) to meet the user's new needs or autonomously react to modifications in its execution environment. Software adaptation, when manually performed, becomes an onerous and error-prone activity. Automated approaches have been adopted as a feasible alternative to overcome such adversities because they reduce the human involvement to a minimum. Based on this scenario, a Reference Architecture for SaS (RA4SaS) [1], [2] was designed in previous work. This architecture enables the adaptation of SaS at runtime by means of a controlled adaptation approach. In this sense, an automated process and a complete infrastructure to allow the phases of such process were also developed. This paper presents the design and implementation of a new module for automatic generation of source code for our architecture based on template engines [3]. In short, the main benefits of this module can be summarized in three items: (i) higher design flexibility, maintenance and evolution of SaS; (ii) introduction of new capabilities for automatic generation of source code; and (iii) performance improvement. To present the operation of this new module, a case study was conducted. As result, we have observed that our architecture has good perspective to efficiently contribute to the SaS area.},
  document_type = {Conference Paper},
  doi           = {10.18293/SEKE2017-147},
  groups        = {scopus},
  journal       = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85029517926&doi=10.18293%2fSEKE2017-147&partnerID=40&md5=d533d958e88e16394cc9143495052f88},
}

@Article{Kim2017,
  author        = {Kim, H. and Lee, E. and Baik, D.-K.},
  title         = {Self-adaptive software simulation: A lighting control system for multiple devices},
  journal       = {Communications in Computer and Information Science},
  year          = {2017},
  volume        = {751},
  pages         = {380-391},
  note          = {cited By 3},
  abstract      = {In this research, we propose a lighting control system for environments with multiple light sources, including a natural light source and an artificial light source, based on a self–adaptive software control system. We also propose an algorithm for optimization between control devices in a multi-lighting environment, and evaluation methods for self-adaptive software in an Internet of Things environment. Based on these proposals, a simulation is carried out. © Springer Nature Singapore Pte Ltd. 2017.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-981-10-6463-0_33},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028960408&doi=10.1007%2f978-981-10-6463-0_33&partnerID=40&md5=539698547b55811ed4abb6e83f60f275},
}

@Article{Lemos2017,
  author        = {de Lemos, R. and Garlan, D. and Ghezzi, C. and Giese, H. and Andersson, J. and Litoiu, M. and Schmerl, B. and Weyns, D. and Baresi, L. and Bencomo, N. and Brun, Y. and Camara, J. and Calinescu, R. and Cohen, M.B. and Gorla, A. and Grassi, V. and Grunske, L. and Inverardi, P. and Jezequel, J.-M. and Malek, S. and Mirandola, R. and Mori, M. and Müller, H.A. and Rouvoy, R. and Rubira, C.M.F. and Rutten, E. and Shaw, M. and Tamburrelli, G. and Tamura, G. and Villegas, N.M. and Vogel, T. and Zambonelli, F. and Dagstuhl Seminar Organizers},
  title         = {Software engineering for self-adaptive systems: research challenges in the provision of assurances},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2017},
  volume        = {9640 LNCS},
  pages         = {3-30},
  note          = {cited By 25},
  abstract      = {The important concern for modern software systems is to become more cost-effective, while being versatile, flexible, resilient, dependable, energy-efficient, customisable, configurable and self-optimising when reacting to run-time changes that may occur within the system itself, its environment or requirements. One of the most promising approaches to achieving such properties is to equip software systems with self-managing capabilities using self-adaptation mechanisms. Despite recent advances in this area, one key aspect of self-adaptive systems that remains to be tackled in depth is the provision of assurances, i.e., the collection, analysis and synthesis of evidence that the system satisfies its stated functional and non-functional requirements during its operation in the presence of self-adaptation. The provision of assurances for self-adaptive systems is challenging since run-time changes introduce a high degree of uncertainty. This paper on research challenges complements previous roadmap papers on software engineering for self-adaptive systems covering a different set of topics, which are related to assurances, namely, perpetual assurances, composition and decomposition of assurances, and assurances obtained from control theory. This research challenges paper is one of the many results of the Dagstuhl Seminar 13511 on Software Engineering for Self-Adaptive Systems: Assurances which took place in December 2013. © Springer International Publishing AG 2017.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-74183-3_1},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041808822&doi=10.1007%2f978-3-319-74183-3_1&partnerID=40&md5=0cd9c5cbe5c6ef16e47e9a4dd0d64bf2},
}

@Article{Litoiu2017,
  author        = {Litoiu, M. and Shaw, M. and Tamura, G. and Villegas, N.M. and Müller, H.A. and Giese, H. and Rouvoy, R. and Rutten, E.},
  title         = {What can control theory teach us about assurances in self-adaptive software systems?},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2017},
  volume        = {9640 LNCS},
  pages         = {90-134},
  note          = {cited By 7},
  abstract      = {Self-adaptive software (SAS) systems monitor their own behavior and autonomously make dynamic adjustments to maintain desired properties in response to changes in the systems’ operational contexts. Control theory provides verifiable feedback models to realize this kind of autonomous control for a broad class of systems for which precise quantitative or logical discrete models can be defined. Recent MAPE-K models, along with variants such as the hierarchical ACRA, address a broader range of tasks. However, they do not provide the inherent assurance mechanisms that control theory does, as they do not explicitly identify and establish the properties that reliable controllers should have. These properties, in general, result not from the abstract models, but from the specifics of control strategies, which are precisely what these models fail to analyze. We show that, even for systems too complex for direct application of classical control theory, the abstractions of control theory provide design guidance that identifies important control characteristics and raises critical design issues about the details of the strategy that determine the controllability of the resulting systems. This in turn enables careful reasoning about whether the control characteristics are in fact achieved. In this chapter we examine the control theory approach, explain several control strategies illustrated with examples from both domains, classical control theory and SAS, and show how the issues addressed by these strategies can and should be seriously considered for the assurance of self-adaptive software systems. From this examination we distill challenges for developing principles that may serve as the basis of a control theory for the assurance of self-adaptive software systems. © Springer International Publishing AG 2017.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-74183-3_4},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041446526&doi=10.1007%2f978-3-319-74183-3_4&partnerID=40&md5=cbb844a17913c0ec12c63e9918e18648},
}

@Article{Taherkordi2017,
  author        = {Taherkordi, A. and Herrmann, P. and Blech, J.O. and Férnandez, Á.},
  title         = {Service virtualization for self-adaptation in mobile cyber-physical systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2017},
  volume        = {10380 LNCS},
  pages         = {56-68},
  note          = {cited By 1},
  abstract      = {Mobile Cyber-Physical Systems (mCPS) consist of cooperating units that often operate in an unpredictably changing environment. Thus, they need to adapt quickly to varying spatial and temporal conditions during operation, e.g., to avoid collisions. The control software of the mobile units has to reflect this complex dynamics, and traditional device-level adaptation models are usually not efficient enough to engineer them smoothly. We address this challenge by proposing a Virtual Adaptation Services Framework (VASF). It provides a virtualized application-level view to adaptation requirements, enabling adaptation coordination between cooperative mCPS devices. In particular, VASF allows us to describe the contextual conditions of mCPS by abstract rules that are analyzed at runtime by the tool-set BeSpaceD. Based on this analysis, the control systems of the involved mCPS units are automatically reconfigured using the OSGi framework. The approach is demonstrated with DiddyBorg robots that are operated by Raspberry Pi boards. © Springer International Publishing AG 2017.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-68136-8_5},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85034247913&doi=10.1007%2f978-3-319-68136-8_5&partnerID=40&md5=6138b8b0e31f43a47f30293de328d22a},
}

@Article{2017,
  title         = {International Seminar on Software Engineering for Self-Adaptive Systems: Assurances, 2013},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2017},
  volume        = {9640 LNCS},
  note          = {cited By 0},
  abstract      = {The proceedings contain 14 papers. The special focus in this conference is on Software Engineering for Self-Adaptive Systems. The topics include: Models for the consistent interaction of adaptations in self-adaptive systems; Feedback control as MAPE-K loop in autonomic computing; An extended description of MORPH: A reference architecture for configuration and behaviour self-adaptation; MOSES: A platform for experimenting with qos-driven self-adaptation policies for service oriented systems; perpetual assurances for self-adaptive systems; challenges in composing and decomposing assurances for self-adaptive systems; what can control theory teach us about assurances in self-adaptive software systems?; MCaaS: Model checking in the cloud for assurances of adaptive systems; analyzing self-adaptation via model checking of stochastic games; an approach for isolated testing of self-organization algorithms; using runtime quantitative verification to provide assurance evidence for self-adaptive software: advances, applications and research challenges; contracts-based control integration into software systems.},
  document_type = {Conference Review},
  groups        = {scopus},
  page_count    = {433},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041864211&partnerID=40&md5=7a4f215d39fa25e95cfeab9a527014b1},
}

@Article{Camara2017,
  author        = {Camara, J. and De Lemos, R. and Laranjeiro, N. and Ventura, R. and Vieira, M.},
  title         = {Robustness-Driven Resilience Evaluation of Self-Adaptive Software Systems},
  journal       = {IEEE Transactions on Dependable and Secure Computing},
  year          = {2017},
  volume        = {14},
  number        = {1},
  pages         = {50-64},
  note          = {cited By 7},
  abstract      = {An increasingly important requirement for certain classes of software-intensive systems is the ability to self-adapt their structure and behavior at run-time when reacting to changes that may occur to the system, its environment, or its goals. A major challenge related to self-adaptive software systems is the ability to provide assurances of their resilience when facing changes. Since in these systems, the components that act as controllers of a target system incorporate highly complex software, there is the need to analyze the impact that controller failures might have on the services delivered by the system. In this paper, we present a novel approach for evaluating the resilience of self-adaptive software systems by applying robustness testing techniques to the controller to uncover failures that can affect system resilience. The approach for evaluating resilience, which is based on probabilistic model checking, quantifies the probability of satisfaction of system properties when the target system is subject to controller failures. The feasibility of the proposed approach is evaluated in the context of an industrial middleware system used to monitor and manage highly populated networks of devices, which was implemented using the Rainbow framework for architecture-based self-adaptation. © 2015 IEEE.},
  document_type = {Article},
  doi           = {10.1109/TDSC.2015.2429128},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85027563352&doi=10.1109%2fTDSC.2015.2429128&partnerID=40&md5=e98d7d164077e2fe2e41a5e7fd23c534},
}

@Article{Giese2017,
  author        = {Giese, H.},
  title         = {Formal models and analysis for self-adaptive cyber-physical systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2017},
  volume        = {10231 LNCS},
  pages         = {3-9},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-57666-4_1},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018346607&doi=10.1007%2f978-3-319-57666-4_1&partnerID=40&md5=d9398df249cc9f0ae10afe037ddaa52f},
}

@Conference{Daun2017,
  author        = {Daun, M. and Tenbergen, B. and Palomares, C. and Knauss, A.},
  title         = {3rd international workshop on requirements engineering for self-adaptive \&amp; cyber physical systems},
  year          = {2017},
  volume        = {1796},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016223638&partnerID=40&md5=6f4df46ce51f27757d78b73889e16037},
}

@Conference{Georgii2017,
  author        = {Georgii, M. and Schmelzer, C. and Braas, H. and Orozaliev, J. and Vajen, K.},
  title         = {A flexible software framework for self-adapting algorithm-based fault detection and diagnosis in solar heating systems},
  year          = {2017},
  pages         = {1180-1187},
  note          = {cited By 0},
  abstract      = {A software framework for algorithm-based fault detection in solar heating systems is described. It automatically links modular algorithms in order to perform the best applicable fault detection methods considering the data available for each monitored system. It follows an object-oriented design, where algorithm objects communicate their needed data and parameter inputs, offered outputs as well as constraints via corresponding objects to a path finder. Special effort is made to enable the creation of flexible measurement data requests that do not need to know sensor names in advance. In this paper the basic concepts and implementation approaches to achieve this flexibility in the software framework are described. Finally, exemplary results are shown for a set of algorithms that were implemented in the software framework to determine gradual leakage in a monitored system and bring the capabilities of the framework to life. © 2017. The Authors.},
  document_type = {Conference Paper},
  doi           = {10.18086/swc.2017.19.05},
  groups        = {scopus},
  journal       = {ISES Solar World Congress 2017 - IEA SHC International Conference on Solar Heating and Cooling for Buildings and Industry 2017, Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050530954&doi=10.18086%2fswc.2017.19.05&partnerID=40&md5=38c1a16b4d01321667706cc913b7071f},
}

@Article{Gerostathopoulos2016,
  author        = {Gerostathopoulos, I. and Bures, T. and Hnetynka, P. and Keznikl, J. and Kit, M. and Plasil, F. and Plouzeau, N.},
  title         = {Self-adaptation in software-intensive cyber–physical systems: From system goals to architecture configurations},
  journal       = {Journal of Systems and Software},
  year          = {2016},
  volume        = {122},
  pages         = {378-397},
  note          = {cited By 25},
  abstract      = {Design of self-adaptive software-intensive cyber–physical systems (siCPS) operating in dynamic environments is a significant challenge when a sufficient level of dependability is required. This stems partly from the fact that the concerns of self-adaptivity and dependability are to an extent contradictory. In this paper, we introduce IRM-SA (Invariant Refinement Method for Self-Adaptation)—a design method and associated formally grounded model targeting siCPS—that addresses self-adaptivity and supports dependability by providing traceability between system requirements, distinct situations in the environment, and predefined configurations of system architecture. Additionally, IRM-SA allows for architecture self-adaptation at runtime and integrates the mechanism of predictive monitoring that deals with operational uncertainty. As a proof of concept, it was implemented in DEECo, a component framework that is based on dynamic ensembles of components. Furthermore, its feasibility was evaluated in experimental settings assuming decentralized system operation. © 2016},
  document_type = {Article},
  doi           = {10.1016/j.jss.2016.02.028},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960976259&doi=10.1016%2fj.jss.2016.02.028&partnerID=40&md5=17808c5482bbf8923bd5b5b46a557049},
}

@Article{Yang2016,
  author        = {Yang, Q.-L. and Ma, X.-X. and Xing, J.-C. and Hu, H. and Wang, P. and Han, D.-S.},
  title         = {Software self-adaptation: control theory based approach},
  journal       = {Jisuanji Xuebao/Chinese Journal of Computers},
  year          = {2016},
  volume        = {39},
  number        = {11},
  pages         = {2189-2215},
  note          = {cited By 1},
  abstract      = {Software self-adaptation (SSA) is a capability that enables a software system to adjust itself to react to the frequent changes from external environments, user requirements and its own. It has become a hot topic in software engineering community in recent years. Due to the natural similarity between the “sense-decide-adjust” self-adaptation loop and the “sense-plan-act” control loop, it grows an important paradigm to use control theory as a research tool to deal with issues of SSA. In this paper, a survey is made on the-state-of-the-art of the research of SSA based on control theory. Firstly, the concepts and principles of SSA are explained and discussed. Secondly, the research ideas and representative work of control theory based SSA are explored. Thirdly, on the basis of the provision of our reviewing method and process, this paper defines a framework for reviewing. Moreover, using this reviewing framework, the paper thoroughly analyzes and compares the state-of-the-art of existing work from the perspectives of control engineering and software engineering with such classifying criteria as control structures, conceptual frameworks, theory foundations, development approach, and evaluating methods. Finally, the paper identifies deficiency of current work and predicts future research trends. © 2016, Science Press. All right reserved.},
  document_type = {Article},
  doi           = {10.11897/SP.J.1016.2016.02189},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84996993028&doi=10.11897%2fSP.J.1016.2016.02189&partnerID=40&md5=0d180599f717417dda7e471dd42a1c56},
}

@Article{Franco2016,
  author        = {Franco, J.M. and Correia, F. and Barbosa, R. and Zenha-Rela, M. and Schmerl, B. and Garlan, D.},
  title         = {Improving self-adaptation planning through software architecture-based stochastic modeling},
  journal       = {Journal of Systems and Software},
  year          = {2016},
  volume        = {115},
  pages         = {42-60},
  note          = {cited By 11},
  abstract      = {The ever-growing complexity of software systems makes it increasingly challenging to foresee at design time all interactions between a system and its environment. Most self-adaptive systems trigger adaptations through operators that are statically configured for specific environment and system conditions. However, in the occurrence of uncertain conditions, self-adaptive decisions may not be effective and might lead to a disruption of the desired non-functional attributes. To address this, we propose an approach that improves the planning stage by predicting the outcome of each strategy. In detail, we automatically derive a stochastic model from a formal architecture description of the managed system with the changes imposed by each strategy. Such information is used to optimize the self-adaptation decisions to fulfill the desired quality goals. To assess the effectiveness of our approach we apply it to a cloud-based news system and predicted the reliability for each possible adaptation strategy. The results obtained from our approach are compared to a representative static planning algorithm as well as to an oracle that always makes the ideal decision. Experiments show that our method improves both availability and cost when compared to the static planning algorithm, while being close to the oracle. Our approach may therefore be used to optimize self-adaptation planning. © 2016 Elsevier Inc. All rights reserved.},
  document_type = {Article},
  doi           = {10.1016/j.jss.2016.01.026},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960942679&doi=10.1016%2fj.jss.2016.01.026&partnerID=40&md5=275865cce6d4972bf19cba0b12db9079},
}

@Conference{Nguyen2016,
  author        = {Nguyen, T. and Zhao, X.},
  title         = {Decoupled concurrency: A self-adaptive software architecture for programming multicores},
  year          = {2016},
  volume        = {04-08-April-2016},
  pages         = {1358-1360},
  note          = {cited By 1},
  abstract      = {Modern parallel hardware architectures implicitly require programmers to write concurrent programs that can be executed in parallel on multiple cores. The traditional way of writing concurrent programs mixes concurrency and functionality code. As a result, in order to fully exploit the potentials that the underlying hardware provides, the code must be changed to utilize the more advanced hardware resources. To address this challenge, we propose a new software architecture which separates programs' concurrency from their functionality code. Specifically, the level of concurrency of a computation can be dynamically tuned at run-time based on predefined tuning policies, which are programmable and reusable. © 2016 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2851613.2851966},
  groups        = {scopus},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975873940&doi=10.1145%2f2851613.2851966&partnerID=40&md5=a57afdfbf5968b46484edea69ef26756},
}

@Article{Kim2016a,
  author        = {Kim, Y.-J. and Seok, J.-S. and Jung, Y. and Ha, O.-K.},
  title         = {Light-Weight and Versatile Monitor for a Self-Adaptive Software Framework for IoT Systems},
  journal       = {Journal of Sensors},
  year          = {2016},
  volume        = {2016},
  note          = {cited By 2},
  abstract      = {Today, various Internet of Things (IoT) devices and applications are being developed. Such IoT devices have different hardware (HW) and software (SW) capabilities; therefore, most applications require customization when IoT devices are changed or new applications are created. However, the applications executed on these devices are not optimized for power and performance because IoT device systems do not provide suitable static and dynamic information about fast-changing system resources and applications. Therefore, this paper proposes a light-weight and versatile monitor for a self-adaptive software framework to automatically control system resources according to the system status. The monitor helps running applications guarantee low power consumption and high performance for an optimal environment. The proposed monitor has two components: a monitoring component, which provides real-time static and dynamic information about system resources and applications, and a controlling component, which supports real-time control of system resources. For the experimental verification, we created a video transport system based on IoT devices and measured the CPU utilization by dynamic voltage and frequency scaling (DVFS) for the monitor. The results demonstrate that, for up to 50 monitored processes, the monitor shows an average CPU utilization of approximately 4% in the three DVFS modes and demonstrates maximum optimization in the Performance mode of DVFS. © 2016 Young-Joo Kim et al.},
  art_number    = {8085407},
  document_type = {Article},
  doi           = {10.1155/2016/8085407},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006093213&doi=10.1155%2f2016%2f8085407&partnerID=40&md5=723b048649d82c90f46806e2e87cbd9c},
}

@Conference{Affonso2016,
  author        = {Affonso, F.J. and Leite, G. and Nakagawa, E.Y.},
  title         = {DmS-Modeler: A tool for modeling decision-making systems for self-adaptive software domain},
  year          = {2016},
  volume        = {2016-January},
  pages         = {617-622},
  note          = {cited By 2},
  abstract      = {The ability to modify its own structure and/or behavior at runtime is a native feature in the development of Self-adaptive Software (SaS). In previous work, a Reference Architecture for SaS (RA4SaS), an automated process for adaptation, and a framework for decision-making were developed to assist the development of SaS. Although such initiatives have collaborated with evolution of SaS, the design of the Decisionmaking Systems (DmS), element of first class for SaS, is manually conducted. Therefore, this paper presents a tool called DmSModeler, which aims to assist the development of DmS for SaS, providing facilities for modeling, calibration of such system, and automatic generation of infrastructure (i.e., source code and databases). Aiming to present the applicability of our tool, a case study was conducted and the results enable us to have good perspectives of contribution to the SaS area and other domains of software systems.},
  document_type = {Conference Paper},
  doi           = {10.18293/SEKE2016-184},
  groups        = {scopus},
  journal       = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988349872&doi=10.18293%2fSEKE2016-184&partnerID=40&md5=fa499dfeea8de70693ee42d7193b8604},
}

@Article{Gerostathopoulos2016a,
  author        = {Gerostathopoulos, I. and Skoda, D. and Plasil, F. and Bures, T. and Knauss, A.},
  title         = {Architectural homeostasis in self-adaptive software-intensive cyber-physical systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9839 LNCS},
  pages         = {113-128},
  note          = {cited By 13},
  abstract      = {Self-adaptive software-intensive cyber-physical systems (sasiCPS) encounter a high level of run-time uncertainty. State-of-the-art architecturebased self-adaptation approaches assume designing against a fixed set of situations that warrant self-adaptation; as a result, failures may appear when sasiCPS operate in environment conditions they are not specifically designed for. In response, we propose to increase the homeostasis of sasiCPS, i.e., the capacity to maintain an operational state despite run-time uncertainty, by introducing run-time changes to the architecture-based self-adaptation strategies according to environment stimuli. In addition to articulating the main idea of architectural homeostasis, we describe three mechanisms that reify the idea: (i) collaborative sensing, (ii) faulty component isolation from adaptation, and (iii) enhancing mode switching. Moreover, our experimental evaluation of the three mechanisms confirms that allowing a complex system to change its self-adaptation strategies helps the system recover from runtime errors and abnormalities and keep it in an operational state. © Springer International Publishing AG 2016.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-48992-6_8},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84998893291&doi=10.1007%2f978-3-319-48992-6_8&partnerID=40&md5=8b4e02c6c518398537d1dc5dd285335b},
}

@Conference{Stier2016a,
  author        = {Stier, C. and Groenda, H.},
  title         = {Ensuring model continuity when simulating self-adaptive software systems},
  year          = {2016},
  volume        = {48},
  number        = {5},
  pages         = {9-16},
  note          = {cited By 0},
  abstract      = {Self-adaptivity in software systems aims to balance the use of costly resources, i.e. of servers and energy, under given constraints such as Quality of Service (QoS) requirements. Simulation does not require risky testing in running systems and has less assumptions and limitations than formal verification when evaluating the effect of self-adaptation mechanisms. Existing simulation frameworks for analyzing self-adaptive software systems require re-implementing algorithms to conform to the abstraction and interfaces of the simulation framework. We present an approach for coupling simulation-based analyses of self-adaptive software systems with self-adaptation mechanisms that eliminates the need to re-implement the mechanisms and ensures model continuity. The evaluation demonstrates the low complexity required when our approach is used to ensure model continuity between simulation and self-adaptation framework. It presents the results of two experiments we performed after coupling the SimuLizar simulation framework and the CACTOS runtime management framework for Cloud platforms. With this coupling, Cloud data center operators benefit from what-ifanalyses of self-adaptation mechanisms and software engineers can optimize the QoS of systems on the drawing board without acquiring deep knowledge of simulation internals. © 2016 Society for Modeling & Simulation International (SCS).},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {Simulation Series},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977125894&partnerID=40&md5=d8bd6250537b6568a18f9e27952e4128},
}

@Article{Fan2016,
  author        = {Fan, R. and Peng, Y.Q. and Chen, Y.F. and Liu, X.H.},
  title         = {Dynamic modeling self-adaptive software by intelligent service components},
  journal       = {Journal of Software Engineering},
  year          = {2016},
  volume        = {10},
  number        = {1},
  pages         = {147-154},
  note          = {cited By 0},
  abstract      = {In order to construct independent autonomous, dynamic evolved, flexible software entity and dynamically assemble them under the internet for self-adaptive software, novel intelligent component model is critical. This paper propose to fusion agent, service and component for building autonomy, dynamic evolved, intelligent accumulated, great granularity Intelligent Service Component (ISC), provide the good software entity for self-adaptive software. We try to expand all functions into services, on command dynamic integrate relative services to Intelligent Service System (ISS). A case shows that the Intelligent Service Component (ISC) is able to dynamic rebuild and intelligent interact each other for software system adaptability. A novel self-adaptive software system is constructed by intelligent service components. © 2016 Academic Journals Inc.},
  document_type = {Article},
  doi           = {10.3923/jse.2016.147.154},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960865902&doi=10.3923%2fjse.2016.147.154&partnerID=40&md5=188af4ab7ee080506f42beadeacec66d},
}

@Article{Seiger2016,
  author        = {Seiger, R. and Huber, S. and Heisig, P. and Assmann, U.},
  title         = {Enabling self-adaptive workflows for cyber-physical systems},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2016},
  volume        = {248},
  pages         = {3-17},
  note          = {cited By 22},
  abstract      = {The ongoing development of Internet of Things technologies leads to the interweaving of the virtual world of software with the physical world. However, applying workflow technologies for automating processes in these Cyber-physical Systems (CPS) poses new challenges as the real world effects of a process have to be verified to provide a consistent view of the cyber and physical world executions. In this work we present a synchronization and adaptation mechanism for processes based on the MAPE-K feedback loop for self-adaptive systems. By applying this loop, sensor and context information can be used to verify the real world effects of workflow execution and adapt the process in case of errors. The approach increases autonomy and resilience of process execution in CPS due to the self-adaptation capabilities. We present generic extensions to process meta-models and execution engines to implement the feedback loop and discuss our approach within a smart home scenario. © Springer International Publishing Switzerland 2016.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-39429-9_1},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976648197&doi=10.1007%2f978-3-319-39429-9_1&partnerID=40&md5=6a56635453646f4841a972cbd2e46304},
}

@Conference{Daun2016,
  author        = {Daun, M. and Palomares, C. and Tenbergen, B.},
  title         = {2nd international workshop on requirements engineering for self-adaptive \&amp; cyber physical systems},
  year          = {2016},
  volume        = {1564},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964681307&partnerID=40&md5=baa753488722703066853ee7809059d9},
}

@Article{Qian2015,
  author        = {Qian, W. and Peng, X. and Chen, B. and Mylopoulos, J. and Wang, H. and Zhao, W.},
  title         = {Rationalism with a dose of empiricism: Combining goal reasoning and case-based reasoning for self-adaptive software systems},
  journal       = {Requirements Engineering},
  year          = {2015},
  volume        = {20},
  number        = {3},
  pages         = {233-252},
  note          = {cited By 6},
  abstract      = {Requirements-driven approaches provide an effective mechanism for self-adaptive systems by reasoning over their runtime requirements models to make adaptation decisions. However, such approaches usually assume that the relations among alternative system configurations, environmental parameters and requirements are clearly understood, which is often not true. Moreover, they do not consider the influence of the current configuration of an executing system on adaptation decisions. In this paper, we propose an improved requirements-driven self-adaptation approach that combines goal reasoning and case-based reasoning. In the approach, past experiences of successful adaptations are retained as adaptation cases, which are described by not only requirements violations and contexts, but also currently deployed system configurations. The approach does not depend on a set of original adaptation cases, but employs goal reasoning to provide adaptation solutions when no similar cases are available. Case-based reasoning is used to provide more precise adaptation decisions that better reflect the complex relations among requirements violations, contexts, and current system configurations by utilizing past experiences. To prevent case-based reasoning from getting trapped in suboptimal adaptation solutions, an additional case mutation mechanism is introduced to mutate existing adaptation solutions when necessary. We conduct an experimental study with an online shopping benchmark to evaluate the effectiveness of our approach. The results show that our approach outperforms both a requirements-driven approach and a case-based approach in terms of satisfaction level of quality constraints. The results also confirm the effectiveness of case mutation for producing better adaptation solutions. In addition, we empirically investigate the evolution process of adaptation solutions. The evolution analysis reveals some general evolution trends of adaptation solutions such as different evolution phases. © Springer-Verlag London 2015.},
  art_number    = {A006},
  document_type = {Article},
  doi           = {10.1007/s00766-015-0227-1},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943362770&doi=10.1007%2fs00766-015-0227-1&partnerID=40&md5=483c4c92f8b0ac6bf17efd2703cdd4d6},
}

@Conference{Filieri2015,
  author        = {Filieri, A. and Hoffmann, H. and Maggio, M.},
  title         = {Automated multi-objective control for self-adaptive software design},
  year          = {2015},
  pages         = {13-24},
  note          = {cited By 48},
  abstract      = {While software is becoming more complex everyday, the requirements on its behavior are not getting any easier to satisfy. An application should offer a certain quality of service, adapt to the current environmental conditions and withstand runtime variations that were simply unpredictable during the design phase. To tackle this complexity, control theory has been proposed as a technique for managing software's dynamic behavior, obviating the need for human intervention. Control-theoretical solutions, however, are either tailored for the specific application or do not handle the complexity of multiple interacting components and multiple goals. In this paper, we develop an automated control synthesis methodology that takes, as input, the configurable software components (or knobs) and the goals to be achieved. Our approach automatically constructs a control system that manages the specified knobs and guarantees the goals are met. These claims are backed up by experimental studies on three different software applications, where we show how the proposed automated approach handles the complexity of multiple knobs and objectives. © 2015 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2786805.2786833},
  groups        = {scopus},
  journal       = {2015 10th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE 2015 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960379897&doi=10.1145%2f2786805.2786833&partnerID=40&md5=8db4ade1c630439103b5e529d250bead},
}

@Article{Gamez2015,
  author        = {Gámez, N. and Fuentes, L. and Troya, J.M.},
  title         = {Creating self-adapting mobile systems with dynamic software product lines},
  journal       = {IEEE Software},
  year          = {2015},
  volume        = {32},
  number        = {2},
  pages         = {105-112},
  note          = {cited By 11},
  abstract      = {Mobile systems must cope with continuous context changes, making them an ideal fit with dynamic software product lines (DSPLs), which enable product adaptation at run time. In this DSPL-based process, devices upload only a small reconfiguration plan rather than the entire variability model, and providers manage diversity without disrupting the base model. © 2015 IEEE.},
  art_number    = {6730834},
  document_type = {Article},
  doi           = {10.1109/MS.2014.24},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925066673&doi=10.1109%2fMS.2014.24&partnerID=40&md5=84ee08ec14506adeb6ee5fe997944443},
}

@Article{Sheshasaayee2015,
  author        = {Sheshasaayee, A. and Ramanujam, B.},
  title         = {An approach for prioritising soft and hard goals in self adaptive software systems},
  journal       = {International Journal of Applied Engineering Research},
  year          = {2015},
  volume        = {10},
  number        = {7},
  pages         = {16563-16574},
  note          = {cited By 0},
  abstract      = {Background: Self-adaptive systems are software-intensive systems having the capability to respond to a variety of changes that occur in their operating environment. These systems modify their behavior by adapting their structure at run-time in an autonomous way [1]. Method: This paper focuses on requirements gathering and prioritization of requirements in self adaptive software systems. There are several requirements gathering approaches that exist for such systems, our approach considers an integration of several techniques to gather requirements of self adaptive systems and also prioritise the soft and hard goals of the system. Findings: The extent to which the several requirements influence the system and change the behavior of the system is crucial and leaves an uncertain state of the system. Prioritisation of hard goals is obtained by calculating the normalized priority vector. © Research India Publications.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929380103&partnerID=40&md5=2dcd5c2d9c8f0221742989db1ebd9b7c},
}

@Article{Fu2015,
  author        = {Fu, Y. and Chen, H. and Song, F.},
  title         = {STWM: A solution to self-adaptive task-worker matching in software crowdsourcing},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9528},
  pages         = {383-398},
  note          = {cited By 8},
  abstract      = {Crowdsourcing engages a workforce to accomplish complex tasks regardless of geographical limitation and is now growing rapidly in a variety of areas. On the one hand the selection of a wide array of workers has created a competitive and flexible market that suits well the needs of different types of task publishers, on the other hand, it is hard to select workers that satisfy the requirements of the task publishers best among a large number of workers. As such, task-worker matching plays a crucial role in crowdsourcing lifecycle. In this paper, we present a solution that enables customizing task description and adaptive task matching for software crowd work. An extensible meta-model is proposed to support description of both worker skills and task requirements. Based on this meta-model, we define an algorithm that allows self-adaptive matching of the task requirements against the worker skills. Further, several workers will be chosen to form a team once a single individual doesn’t meet the requirements of the task. A full experimental validation with four tasks and thousands of workers has been done showing the validation of our solution. © Springer International Publishing Switzerland 2015.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-27119-4_27},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959441524&doi=10.1007%2f978-3-319-27119-4_27&partnerID=40&md5=8aa58579709c73645c0514ca849ffd92},
}

@Article{Han2015,
  author        = {Han, D.-S. and Yang, Q.-L. and Xing, J.-C.},
  title         = {UML-Based modeling and formal verification for software self-adaptation},
  journal       = {Ruan Jian Xue Bao/Journal of Software},
  year          = {2015},
  volume        = {26},
  number        = {4},
  pages         = {730-746},
  note          = {cited By 10},
  abstract      = {Modeling and formal verification for software self-adaptation are the basis to improve development efficiency and to ensure reliability of self-adaptive software. However, there is a gap between visual modeling and formal modeling of software self-adaptation in existing work, which to some degree hampers the development of self-adaptive software. In order to systematically support modeling and formal verification for self-adaptive software, an approach called MV4SAS is proposed in this paper by incorporating the visual UML and the strictly defined timed automata. Firstly, the modeling facilities are defined by introducing new stereotypes, tagged values and constraints with UML extending mechanism, and the structural and behavioral models are created on the ground of the newly created facilities. Secondly, the behavioral model of self-adaptive software is mapped to timed automata network according to the predefined transformation algorithm, and the formal model of self-adaptive software is then created. Finally, using the model-checking tool UPPAAL, the reliability of software self-adaptation is verified with a set of predefined properties. Case study shows that the proposed approach can effectively reduce the modeling and verification complexity and improve development efficiency and reliability of self-adaptive software. © Copyright 2015, Institute of Software, the Chinese Academy of Sciences. All rights reserved.},
  document_type = {Article},
  doi           = {10.13328/j.cnki.jos.004758},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928678836&doi=10.13328%2fj.cnki.jos.004758&partnerID=40&md5=604014e76ad3ddba007cd4815a4eafb0},
}

@Article{Ghezzi2015,
  author        = {Ghezzi, C. and Gibilisco, G.P. and Menghi, C. and Miglierina, M.},
  title         = {A control-theoretic approach to self-adaptive systems and an application to cloud-based software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {8987},
  pages         = {63-83},
  note          = {cited By 1},
  abstract      = {Software systems are usually developed to provide a fixed set of functionalities within given environmental conditions. However, in the last few years, there has been an increasing interest in systems that can autonomously modify their behavior in response to dynamic changes occurring in their execution environment. In one word, they must be self-adaptive. Self-adaptation requires the ability to discover and analyze changes, and to react by applying an adequate set of adaptation actions. The choice of the adaptation actions to apply can be performed in a model-driven fashion, that is by evaluating their effectiveness on a model of the system that is kept alive and updated at run-time. We describe an approach to the design of self-adaptive systems that frames self-adaptation as a control theory problem. Our approach considers the architecture of the application, represented through a Discrete Time Markov Chain (DTMC); the running environment upon which it is deployed, described through a Queuing Model (QM); and a cost model, specified through a Dynamic System. At run-time the system autonomously increases or decreases the amount of resources allocated to different components of the application in response to changes of both workload intensity and distribution, and of performance of the computing resources. The adopted policy both minimizes costs and maintains the desired QoS, in terms of average response time. We evaluate our approach simulating a cloud computing application in a cloud infrastructure. This computing environment has been chosen because it allows on-demand access to a configurable pool of resources that can be easily provisioned and released at run-time. © Springer International Publishing Switzerland 2015.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-28406-4_3},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957038719&doi=10.1007%2f978-3-319-28406-4_3&partnerID=40&md5=e88e115b81c109eafc1f17302e380b6d},
}

@Conference{Ho2015,
  author        = {Ho, H.N. and Lee, E.},
  title         = {Model-based reinforcement learning approach for planning in self-adaptive software system},
  year          = {2015},
  note          = {cited By 8},
  abstract      = {Policy-based adaptation is one of interesting topics in selfadaptive software research community. Current works in the field proposed the term of policy evolution, which concentrate to tackle the impact of environmental uncertainty on adaptation decision. These works adopted the advances of Reinforcement Learning (RL) to continuously optimize system behavior in run-time. However, there are several issues remain very primitive in current researches, especially the arbitrary exploitation-exploration trade-off and random exploration, which could lead to slow learning, hence, frail decision in exceptional situations. With model-free approach, these works could not leverage the knowledge about underlying system, which is essential and plentiful in software engineering, to enhance their learning. In this paper, we introduce the advantages of model-based RL. By utilizing engineering knowledge, system maintains a model of interaction with its environment and predicts the consequence of its action, to improve and guarantee system performance. We also discuss the engineering issues and propose a procedure to adopt model-based RL to build a self-adaptive software and bring policy evolution closer to real-world applications.},
  art_number    = {a103},
  document_type = {Conference Paper},
  doi           = {10.1145/2701126.2701191},
  groups        = {scopus},
  journal       = {ACM IMCOM 2015 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926166573&doi=10.1145%2f2701126.2701191&partnerID=40&md5=a87b5b9970d23b5b981d533592568ea7},
}

@Article{Mao2015,
  author        = {Mao, X.-J. and Dong, M.-G. and Qi, Z.-C. and Yin, J.-W.},
  title         = {Running mechanism and implementation technique of self-adaptive software in open environment},
  journal       = {Jisuanji Xuebao/Chinese Journal of Computers},
  year          = {2015},
  volume        = {38},
  number        = {9},
  pages         = {1893-1906},
  note          = {cited By 0},
  abstract      = {Due to the uncertainty and unpredictability of environment changes, it is a great challenge to develop self-adaptive systems in open environment. First, it is difficult for developers to clearly predict various environment changes and precisely define self-adaptation requirements at design-time. Second, many of self-adaptation decisions should be made by system at run-time. In order to deal with the problems, the paper presents an approach that is based on software agent technology and organization metaphor to support the development and running of such systems. Our approach enables developer to describe self-adaptive systems and investigate self-adaptation according to the high-level organization abstractions. A self-adaptation mechanism called role dynamic binding is designed and on-line self-adaptation is achieved by introducing enforcement learning. The paper details the on-line self-adaptation decision algorithm that integrates dynamic binding mechanism with enforcement learning together. Especially, a general-purpose and systematics software engineering solution to developing such system is provided, including self-adaptive software model, implementation framework, structured process and supporting software environment SADE+. A case is studied to illustrate our approach and validate its effectiveness. ©, 2015, Jisuanji Xuebao/Chinese Journal of Computers. All right reserved.},
  document_type = {Article},
  doi           = {10.11897/SP.J.1016.2015.01893},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942901732&doi=10.11897%2fSP.J.1016.2015.01893&partnerID=40&md5=cc93c55e4bc7a0b1d8732bf49b786393},
}

@Conference{Affonso2015,
  author        = {Affonso, F.J. and Leite, G. and Oliveira, R.A.P. and Nakagawa, E.Y.},
  title         = {A framework based on learning techniques for decision-making in self-adaptive software},
  year          = {2015},
  volume        = {2015-January},
  pages         = {24-29},
  note          = {cited By 5},
  abstract      = {The development of Self-adaptive Software (SaS) presents specific innovative features compared to traditional ones since this type of software constantly deals with structural and/or behavioral changes at runtime. Capabilities of human administration are showing a decrease in relative effectiveness, since some tasks have been difficult to manage introducing potential problems, such as change management and simple human error. Self-healing systems, a system class of SaS, have emerged as a feasible solution in contrast to management complexity, since such system often combines machine learning techniques with control loops to reduce the number of situations requiring human intervention. This paper presents a framework based on learning techniques and the control loop (MAPE-K) to support the decision-making activity for SaS. In addition, it is noteworthy that this framework is part of a wider project developed by the authors of this paper in previous work (i.e., reference architecture for SaS [1]). Aiming to present the viability of our framework, we have conducted a case study using a flight plan module for Unmanned Aerial Vehicles. The results have shown an environment accuracy of about 80%, enabling us to project good perspectives of contribution to the SaS area and other domains of software systems, and enabling knowledge sharing and technology transfer from academia to industry. Copyright © 2015 by KSI Research Inc. and Knowledge Systems Institute Graduate School.},
  document_type = {Conference Paper},
  doi           = {10.18293/SEKE2015-125},
  groups        = {scopus},
  journal       = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969800064&doi=10.18293%2fSEKE2015-125&partnerID=40&md5=7e3750db56a53843887590e56e3d6767},
}

@Article{Yang2015b,
  author        = {Yang, X.-Y. and Zhou, Y. and Ding, Z.-H.},
  title         = {Improving software reliability based on online fault localization and self-adaption},
  journal       = {Ruan Jian Xue Bao/Journal of Software},
  year          = {2015},
  volume        = {26},
  number        = {4},
  pages         = {886-903},
  note          = {cited By 0},
  abstract      = {Reliability is an important index to measure the quality of software. Online predicting and improving software reliability are an important research topic. Most existing methods have the following weakness: They can neither predict software reliability on different time intervals nor locate the faulty components that cause the declining of the reliability. This paper proposes a new method to online improve reliability for service composition. The method uses the monitored failure data at ports to predict the reliabilities of service composition on different time intervals. If the predicted reliability is lower than the expected value, it then locates the faulty component that causes the declining of the reliability by using an improved spectrum-fault-localization method. The system is automatically reconfigured by adding a new component or replacing the faulty component to improve the system reliability. An online shop example is used to demonstrate the effectiveness of the proposed method. © Copyright 2015, Institute of Software, the Chinese Academy of Sciences. All rights reserved.},
  document_type = {Article},
  doi           = {10.13328/j.cnki.jos.004761},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928668381&doi=10.13328%2fj.cnki.jos.004761&partnerID=40&md5=93f576a98db47c0dbb1709ac6e791ede},
}

@Conference{Daun2015,
  author        = {Daun, M. and Palomares, C. and Ramírez, I.M. and Tenbergen, B.},
  title         = {1st international workshop on requirements engineering for self-adaptive and cyber-physical systems},
  year          = {2015},
  volume        = {1342},
  pages         = {140-141},
  note          = {cited By 0},
  document_type = {Editorial},
  groups        = {scopus},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925965319&partnerID=40&md5=ed697b893e6845c334962b7be71b8501},
}

@Article{Calinescu2015,
  author        = {Calinescu, R. and Gerasimou, S. and Banks, A.},
  title         = {Self-adaptive software with decentralised control loops},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9033},
  pages         = {235-251},
  note          = {cited By 32},
  abstract      = {We present DECIDE, a rigorous approach to decentralising the control loops of distributed self-adaptive software used in mission-critical applications. DECIDE uses quantitative verification at runtime, first to agree individual component contributions to meeting system-level quality-of-service requirements, and then to ensure that components achieve their agreed contributions in the presence of changes and failures. All verification operations are carried out locally, using component-level models, and communication between components is infrequent. We illustrate the application of DECIDE and show its effectiveness using a case study from the unmanned underwater vehicle domain. © Springer-Verlag Berlin Heidelberg 2015.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-662-46675-9_16},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944216887&doi=10.1007%2f978-3-662-46675-9_16&partnerID=40&md5=8083aee439dacacbec3fce21cfb40504},
}

@Conference{Lee2015a,
  author        = {Lee, H.-C. and Lee, S.-W.},
  title         = {Towards knowledge-intensive software engineering framework for self-adaptive software},
  year          = {2015},
  volume        = {2015-January},
  pages         = {30-35},
  note          = {cited By 1},
  abstract      = {A self-adaptive system reacts to the changing environment by modifying its functionality in relation to the encountered state of the environment. In order to adapt to a new situation, such system goes through many decision points during the adaptation process. Knowledge forms the basis of decision making within the adaptation process. There are already many existing self-adaptive system frameworks. However, these frameworks have limitation in the way they represent the rationale for adaptation and the semantics behind the knowledge they use. This paper takes a step forward by proposing a knowledge-intensive adaptation framework to both manage knowledge and support the analytical decision making process. The proposed approach represents the adaptation knowledge by using ontology which helps to organize, analyze and extend knowledge. Ontology is able to represent the semantics behind knowledge and provide the evidence for the adaptation. The proposed approach uses a special ontology named the Adaptation Problem Domain Ontology. It specifies the system goals, features, architectures, and the relationship between them. This ontology is used to answer the problem of adaptation at each decision point and determine the appropriate system structure by reasoning the semantics behind knowledge. Thus, the system can consider the semantics behind knowledge for adaptation, and then the stakeholders can understand the adaptation process. We apply the proposed framework to the smart grid domain and show how the system adapts to a new situation using rationale for adaptation and the semantics behind the knowledge. Copyright © 2015 by KSI Research Inc. and Knowledge Systems Institute Graduate School.},
  document_type = {Conference Paper},
  doi           = {10.18293/SEKE2015-222},
  groups        = {scopus},
  journal       = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969792960&doi=10.18293%2fSEKE2015-222&partnerID=40&md5=47b61ab9ecb123b11508243477586e98},
}

@Conference{Filieri2014,
  author        = {Filieri, A. and Hoffmann, H. and Maggio, M.},
  title         = {Automated design of self-adaptive software with control-theoretical formal guarantees},
  year          = {2014},
  number        = {1},
  pages         = {299-310},
  note          = {cited By 88},
  abstract      = {Self-adaptation enables software to execute successfully in dynamic, unpredictable, and uncertain environments. Control theory provides a broad set of mathematically grounded techniques for adapting the behavior of dynamic systems. While it has been applied to specific software control problems, it has proved difficult to define methodologies allowing non-experts to systematically apply control techniques to create adaptive software. These difficulties arise because computer systems are usually non-linear, with varying workloads and heterogeneous components, making it difficult to model software as a dynamic system; i.e., by means of differential or difference equations. This paper proposes a broad scope methodology for automatically constructing both an approximate dynamic model of a software system and a suitable controller for managing its non-functional requirements. Despite its generality, this methodology provides formal guarantees concerning the system's dynamic behavior by keeping its model continuously updated to compensate for changes in the execution environment and effects of the initial approximation. We apply the methodology to three case studies, demonstrating its generality by tackling different domains (and different non-functional requirements) with the same approach. Being broadly applicable and fully automated, this methodology may allow the adoption of control theoretical solutions (and their formal properties) for a wide range of software adaptation problems. © 2014 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2568225.2568272},
  groups        = {scopus},
  journal       = {Proceedings - International Conference on Software Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994156481&doi=10.1145%2f2568225.2568272&partnerID=40&md5=a5e532c9a5258fc6782d74acbd9bdcd1},
}

@Article{Aissaoui2014,
  author        = {Aissaoui, O. and Amirat, A. and Atil, F.},
  title         = {A model-based framework for building self-adaptive distributed software},
  journal       = {Informatica (Slovenia)},
  year          = {2014},
  volume        = {38},
  number        = {3},
  pages         = {289-306},
  note          = {cited By 0},
  abstract      = {Reconfiguration is widely used for evolving and adapting systems that cannot be shut down for update. However, in distributed systems, supporting reconfiguration is a challenging task since a reconfiguration consists of distributed reconfiguration actions that need to be coordinated and the application consistency must be preserved. To address this challenge, we propose a framework based on a reflexive three layer architecture model for the development of distributed dynamic and reliable component-based applications. The bottom layer of this model is the application layer. It contains the system's application-level functionality. The change management layer is the middle layer. It reacts to changes in state reported from the application layer. The uppermost layer is the self-adaptation layer that introduces the self-adaptation capabilities to the framework itself. It ensures the service continuity of the change management layer and manages the adaptation of this last to the changes which it carries out itself on the application layer. The framework is conceived especially for supporting the distributed reconfigurations. For that, it incorporates a negotiation and coordination mechanism for managing this type of reconfiguration. Moreover, it incorporates a separate system for ensuring the reliability of the application. The paper introduces a prototype implementation of the proposed framework and its empirical evaluation.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907809545&partnerID=40&md5=2b3fd7eaef3b0d964e46632d42f99b51},
}

@Article{Bennaceur2014,
  author        = {Bennaceur, A. and France, R. and Tamburrelli, G. and Vogel, T. and Mosterman, P.J. and Cazzola, W. and Costa, F.M. and Pierantonio, A. and Tichy, M. and Akşit, M. and Emmanuelson, P. and Gang, H. and Georgantas, N. and Redlich, D.},
  title         = {Mechanisms for leveraging models at runtime in self-adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8378 LNCS},
  pages         = {19-46},
  note          = {cited By 24},
  abstract      = {Modern software systems are often required to adapt their behavior at runtime in order to maintain or enhance their utility in dynamic environments. Models at runtime research aims to provide suitable abstractions, techniques, and tools to manage the complexity of adapting software systems at runtime. In this chapter, we discuss challenges associated with developing mechanisms that leverage models at runtime to support runtime software adaptation. Specifically, we discuss challenges associated with developing effective mechanisms for supervising running systems, reasoning about and planning adaptations, maintaining consistency among multiple runtime models, and maintaining fidelity of runtime models with respect to the running system and its environment. We discuss related problems and state-of-the-art mechanisms, and identify open research challenges. © 2014 Springer International Publishing.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-08915-7_2},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904817608&doi=10.1007%2f978-3-319-08915-7_2&partnerID=40&md5=78c72022bc9498556517cf6a526b6ec3},
}

@Article{Sun2014,
  author        = {Sun, J. and Satoh, I.},
  title         = {Dynamic Deployment of Software Components for Self-adaptive Distributed Systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8729},
  pages         = {194-203},
  note          = {cited By 2},
  abstract      = {This paper proposes a novel approach to adapting applications, which are running on one or more computers. The key idea behind the proposed approach is to introduce the policy-based relocation of components to define functions between computers as a basic mechanism for adaptation on distributed systems. It is constructed as a middleware system for Java-based general-purposed software components. This paper describes the proposed approach and the design and implementation of the approach with several applications, e.g., adaptive data replication between primary backup and chain replication approaches. © Springer International Publishing Switzerland 2014.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921651073&partnerID=40&md5=af0d2d6ae215ed40d44a916f0ef6edcf},
}

@Article{Sun2014a,
  author        = {Sun, X. and Wang, X. and Wu, J. and Liu, Y.},
  title         = {Prediction-based manufacturing center self-adaptive demand side energy optimization in cyber physical systems},
  journal       = {Chinese Journal of Mechanical Engineering (English Edition)},
  year          = {2014},
  volume        = {27},
  number        = {3},
  pages         = {488-495},
  note          = {cited By 6},
  abstract      = {Cyber physical systems (CPS) recently emerge as a new technology which can provide promising approaches to demand side management (DSM), an important capability in industrial power systems. Meanwhile, the manufacturing center is a typical industrial power subsystem with dozens of high energy consumption devices which have complex physical dynamics. DSM, integrated with CPS, is an effective methodology for solving energy optimization problems in manufacturing center. This paper presents a prediction-based manufacturing center self-adaptive energy optimization method for demand side management in cyber physical systems. To gain prior knowledge of DSM operating results, a sparse Bayesian learning based componential forecasting method is introduced to predict 24-hour electric load levels for specific industrial areas in China. From this data, a pricing strategy is designed based on short-term load forecasting results. To minimize total energy costs while guaranteeing manufacturing center service quality, an adaptive demand side energy optimization algorithm is presented. The proposed scheme is tested in a machining center energy optimization experiment. An AMI sensing system is then used to measure the demand side energy consumption of the manufacturing center. Based on the data collected from the sensing system, the load prediction-based energy optimization scheme is implemented. By employing both the PSO and the CPSO method, the problem of DSM in the manufacturing center is solved. The results of the experiment show the self-adaptive CPSO energy optimization method enhances optimization by 5% compared with the traditional PSO optimization method. © Chinese Mechanical Engineering Society and Springer-Verlag Berlin Heidelberg 2014.},
  document_type = {Article},
  doi           = {10.3901/CJME.2014.03.488},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904755914&doi=10.3901%2fCJME.2014.03.488&partnerID=40&md5=6cb3428bf6c3e9846006a3807c6a873f},
}

@Article{Siam2014,
  author        = {Siam, A. and Maamri, R. and Sahnoun, Z.},
  title         = {Fuzzy organization of self-adaptive agents based on software components},
  journal       = {International Journal of Intelligent Information Technologies},
  year          = {2014},
  volume        = {10},
  number        = {3},
  pages         = {36-56},
  note          = {cited By 4},
  abstract      = {This paper addresses the development of organizational multi agent systems as a preferred solution to develop open, distributed and adaptive application. It proposes a combination between components and agents to define a flexible organizational model of MAS based on three concepts: roles, self-adaptive agents based on components and fuzzy groups. Roles are played by agents in fuzzy groups. A fuzzy group is a fuzzy set of agents characterized by a membership function expressing the partial membership of each agent to the group. The membership function expresses the degree of capacity of each agent to play a role. This work proposes a fuzzy measure of the capacity of agents to play roles. It proposes a model of auto adaptive agents constructed by automatic assembly (reassembly) of software components. Components implement required capabilities to play roles. The proposed model and introduced concepts have been tested using the Madkit platform. Copyright © 2014, IGI Global.},
  document_type = {Article},
  doi           = {10.4018/ijiit.2014070103},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919662340&doi=10.4018%2fijiit.2014070103&partnerID=40&md5=335e15962ca8cb37b9481c1aa901178d},
}

@Conference{Camara2014a,
  author        = {Cámara, J. and Correia, P. and De Lemos, R. and Vieira, M.},
  title         = {Empirical resilience evaluation of an architecture-based self-adaptive software system},
  year          = {2014},
  pages         = {63-72},
  note          = {cited By 10},
  abstract      = {Architecture-based self-adaptation is considered as a promising approach to drive down the development and operation costs of complex software systems operating in ever changing environments. However, there is still a lack of evidence supporting the arguments for the beneficial impact of architecture-based self-adaptation on resilience with respect to other customary approaches, such as embedded code-based adaptation. In this paper, we report on an empirical study about the impact on resilience of incorporating architecture-based self-adaptation in an industrial middle- ware used to collect data in highly populated networks of devices. To this end, we compare the results of resilience evaluation between the original version of the middleware, in which adaptation mechanisms are embedded at the code- level, and a modified version of that middleware in which the adaptation mechanisms are implemented using Rainbow, a framework for architecture-based self-adaptation. Our results show improved levels of resilience in architecture-based compared to embedded code-based self-adaptation. Copyright © 2014 ACM 978-1-4503-2577-6/14/06 ...$15.00.},
  document_type = {Conference Paper},
  doi           = {10.1145/2602576.2602577},
  groups        = {scopus},
  journal       = {QoSA 2014 - Proceedings of the 10th International ACM SIGSOFT Conference on Quality of Software Architectures (Part of CompArch 2014)},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904463526&doi=10.1145%2f2602576.2602577&partnerID=40&md5=462d50aa27bd64f97e6072905468d5d2},
}

@Conference{Becker2014,
  author        = {Becker, S. and Dziwok, S. and Gerking, C. and Heinzemann, C. and Schäfer, W. and Meyer, M. and Pohlmann, U.},
  title         = {The mechatronic UML method: Model-driven software engineering of self-adaptive mechatronic systems},
  year          = {2014},
  pages         = {614-615},
  note          = {cited By 16},
  abstract      = {The software of mechatronic systems interacts with the system's physical environment. In such systems, an incorrect software may cause harm to human life. As a consequence, software engineering methods for developing such software need to enable developers to effectively and efficiently proof their correctness. This is further complicated by additional characteristics of mechatronic systems as selfadaptation and coordination with other systems. In this poster, we present MechatronicUML which is a modeldriven software engineering method that especially considers these characteristics of self-adaptive mechatronic systems. Copyright © 2014 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2591062.2591142},
  groups        = {scopus},
  journal       = {36th International Conference on Software Engineering, ICSE Companion 2014 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903642709&doi=10.1145%2f2591062.2591142&partnerID=40&md5=37466db1c7eda4a18ab0a500871b8b4c},
}

@Article{Mao2014,
  author        = {Mao, X. and Dong, M. and Liu, L. and Wang, H.},
  title         = {An Integrated approach to developing self-adaptive software},
  journal       = {Journal of Information Science and Engineering},
  year          = {2014},
  volume        = {30},
  number        = {4},
  pages         = {1071-1085},
  note          = {cited By 4},
  abstract      = {One of the main challenges of developing self-adaptive systems in open environment comes from uncertain self-adaptation requirements due to the unpredictability of environment changes and its co-existence with well-defined self-adaptation requirements in self-adaptive systems. This paper presents an integrated approach that combines offline and on-line self-adaptation together in a unified technical framework to support the development and running of such systems. We consider self-adaptive system as a multi-agent organization and propose a novel dynamic binding self-adaptation mechanism inspired from organization metaphors to specify and analyze self-adaptation. A description language, SADL, is designed to program well-defined self-adaptation logic at design-time and implement off-line self-adaptation. In order to deal with uncertain selfadaptation, a reinforcement learning method is incorporated with the dynamic binding mechanism, which enables software agents to make decisions on self-adaptation at runtime and implement on-line self-adaptation. Our approach provides a unified frame-work to accommodate off-line and on-line approaches and a general-purpose methodology to develop complex self-adaptive systems in a systematic way. A supported platform called SADE+ is developed and a case is studied to illustrate the proposed approach.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940284935&partnerID=40&md5=780ed4ad736c387c0c2866f24761df33},
}

@Conference{Parvizi-Mosaed2014,
  author        = {Parvizi-Mosaed, A. and Moaven, S. and Habibi, J. and Heydarnoori, A.},
  title         = {Towards a tactic-based evaluation of self-adaptive software architecture availability},
  year          = {2014},
  volume        = {2014-January},
  number        = {January},
  pages         = {168-173},
  note          = {cited By 3},
  abstract      = {Nowadays, several non-automatic or semi-automatic software architecture evaluation methods have been proposed to evaluate their quality attributes as availability. In spite of their applicability, they are not effective in self-adaptive software architectures due to their off-line properties; e.g., scenario-based methods. Since the architectural tactics provide a bridge between architectural designs and quality attributes, they have sufficient potential to resolve this problem. In this paper, we assume that the software architecture is completely composed of some architectural patterns. Then we propose an automated evaluation method which composes the architectural tactics and the patterns to measure the availability of software architectures. In this method, the composition of a few availability tactics and patterns are simulated with appropriate probability distribution functions. To predict the availability of patterns, a data mining approach is applied to these simulated models to generate training models for each combination of tactics and patterns. Furthermore, a utility function is defined to compute the availability of systems by these models in O(n) where n is the number of patterns of systems. This method improves the data gathering and analysis activities of the SASSY (Self-Architecting Software SYstems) framework. To validate our method, we have applied it to the Rapidminer case study. Copyright © 2014 by Knowledge Systems Institute Graduate School.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938302961&partnerID=40&md5=1fd6df7eac259d38b009efbd61473eee},
}

@Conference{Camara2013,
  author        = {Cámara, J. and Correia, P. and De Lemos, R. and Garlan, D. and Gomes, P. and Schmerl, B. and Ventura, R.},
  title         = {Evolving an adaptive industrial software system to use architecture-based self-adaptation},
  year          = {2013},
  pages         = {13-22},
  note          = {cited By 28},
  abstract      = {Although architecture-based self-adaptation has been widely used, there is still little understanding about the validity and tradeoffs of incorporating it into real-world software-intensive systems which already feature built-in adaptation mechanisms. In this paper, we report on our experience in integrating Rainbow, a platform for architecture-based self-adaptation, and an industrial middleware employed to monitor and manage highly populated networks of devices. Specifically, we reflect on aspects such as the effort required for framework customization and legacy code refactoring, performance improvement, and the impact of architecture-based self-adaptation on system evolution. © 2013 IEEE.},
  art_number    = {6595488},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAMS.2013.6595488},
  groups        = {scopus},
  journal       = {ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884999929&doi=10.1109%2fSEAMS.2013.6595488&partnerID=40&md5=70bf21b47f265c8e1bc28e67fdac720b},
}

@Article{Andersson2013,
  author        = {Andersson, J. and Baresi, L. and Bencomo, N. and De Lemos, R. and Gorla, A. and Inverardi, P. and Vogel, T.},
  title         = {Software engineering processes for self-adaptive systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7475 LNCS},
  pages         = {51-75},
  note          = {cited By 32},
  abstract      = {In this paper, we discuss how for self-adaptive systems some activities that traditionally occur at development-time are moved to run-time. Responsibilities for these activities shift from software engineers to the system itself, causing the traditional boundary between development-time and run-time to blur. As a consequence, we argue how the traditional software engineering process needs to be reconceptualized to distinguish both development-time and run-time activities, and to support designers in taking decisions on how to properly engineer such systems. Furthermore, we identify a number of challenges related to this required reconceptualization, and we propose initial ideas based on process modeling. We use the Software and Systems Process Engineering Meta-Model (SPEM) to specify which activities are meant to be performed off-line and on-line, and also the dependencies between them. The proposed models should capture information about the costs and benefits of shifting activities to run-time, since such models should support software engineers in their decisions when they are engineering self-adaptive systems. © 2013 Springer-Verlag.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35813-5_3},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879878438&doi=10.1007%2f978-3-642-35813-5_3&partnerID=40&md5=56be723c263a5462af3f7fad45ed45e0},
}

@Article{Villegas2013,
  author        = {Villegas, N.M. and Tamura, G. and Müller, H.A. and Duchien, L. and Casallas, R.},
  title         = {DYNAMICO: A reference model for governing control objectives and context relevance in self-adaptive software systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7475 LNCS},
  pages         = {265-293},
  note          = {cited By 42},
  abstract      = {Despite the valuable contributions on self-adaptation, most implemented approaches assume adaptation goals and monitoring infrastructures as non-mutable, thus constraining their applicability to systems whose context awareness is restricted to static monitors. Therefore, separation of concerns, dynamic monitoring, and runtime requirements variability are critical for satisfying system goals under highly changing environments. In this chapter we present DYNAMICO, a reference model for engineering adaptive software that helps guaranteeing the coherence of (i) adaptation mechanisms with respect to changes in adaptation goals; and (ii) monitoring mechanisms with respect to changes in both adaptation goals and adaptation mechanisms. DYNAMICO improves the engineering of self-adaptive systems by addressing (i) the management of adaptation properties and goals as control objectives; (ii) the separation of concerns among feedback loops required to address control objectives over time; and (iii) the management of dynamic context as an independent control function to preserve context-awareness in the adaptation mechanism. © 2013 Springer-Verlag.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35813-5_11},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883567578&doi=10.1007%2f978-3-642-35813-5_11&partnerID=40&md5=99d4a63a7e5fa35c417739fb504ab23f},
}

@Article{DeLemos2013,
  author        = {De Lemos, R. and Giese, H. and Müller, H.A. and Shaw, M. and Andersson, J. and Litoiu, M. and Schmerl, B. and Tamura, G. and Villegas, N.M. and Vogel, T. and Weyns, D. and Baresi, L. and Becker, B. and Bencomo, N. and Brun, Y. and Cukic, B. and Desmarais, R. and Dustdar, S. and Engels, G. and Geihs, K. and Göschka, K.M. and Gorla, A. and Grassi, V. and Inverardi, P. and Karsai, G. and Kramer, J. and Lopes, A. and Magee, J. and Malek, S. and Mankovskii, S. and Mirandola, R. and Mylopoulos, J. and Nierstrasz, O. and Pezzè, M. and Prehofer, C. and Schäfer, W. and Schlichting, R. and Smith, D.B. and Sousa, J.P. and Tahvildari, L. and Wong, K. and Wuttke, J.},
  title         = {Software engineering for self-adaptive systems: A second research roadmap},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7475 LNCS},
  pages         = {1-32},
  note          = {cited By 335},
  abstract      = {The goal of this roadmap paper is to summarize the state-of-the-art and identify research challenges when developing, deploying and managing self-adaptive software systems. Instead of dealing with a wide range of topics associated with the field, we focus on four essential topics of self-adaptation: design space for self-adaptive solutions, software engineering processes for self-adaptive systems, from centralized to decentralized control, and practical run-time verification & validation for self-adaptive systems. For each topic, we present an overview, suggest future directions, and focus on selected challenges. This paper complements and extends a previous roadmap on software engineering for self-adaptive systems published in 2009 covering a different set of topics, and reflecting in part on the previous paper. This roadmap is one of the many results of the Dagstuhl Seminar 10431 on Software Engineering for Self-Adaptive Systems, which took place in October 2010. © 2013 Springer-Verlag.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35813-5_1},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879852118&doi=10.1007%2f978-3-642-35813-5_1&partnerID=40&md5=ec0e388b01f0bf53727be0c64ddeb6a2},
}

@Article{Esfahani2013b,
  author        = {Esfahani, N. and Malek, S.},
  title         = {Uncertainty in self-adaptive software systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7475 LNCS},
  pages         = {214-238},
  note          = {cited By 94},
  abstract      = {The ever-growing complexity of software systems coupled with their stringent availability requirements are challenging the manual management of software after its deployment. This has motivated the development of self-adaptive software systems. Self-adaptation endows a software system with the ability to satisfy certain objectives by automatically modifying its behavior at runtime. While many promising approaches for the construction of self-adaptive software systems have been developed, the majority of them ignore the uncertainty underlying the adaptation. This has been one of the key inhibitors to widespread adoption of self-adaption techniques in risk-averse real-world applications. Uncertainty in this setting is a vaguely understood term. In this paper, we characterize the sources of uncertainty in self-adaptive software system, and demonstrate its impact on the system's ability to satisfy its objectives. We then provide an alternative notion of optimality that explicitly incorporates the uncertainty underlying the knowledge (models) used for decision making. We discuss the state-of-the-art for dealing with uncertainty in this setting, and conclude with a set of challenges, which provide a road map for future research. © 2013 Springer-Verlag.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35813-5_9},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883580334&doi=10.1007%2f978-3-642-35813-5_9&partnerID=40&md5=70b9651c709701e4ac3abda2c8312dda},
}

@Article{Tamura2013a,
  author        = {Tamura, G. and Villegas, N.M. and Müller, H.A. and Sousa, J.P. and Becker, B. and Karsai, G. and Mankovskii, S. and Pezzè, M. and Schäfer, W. and Tahvildari, L. and Wong, K.},
  title         = {Towards practical runtime verification and validation of self-adaptive software systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7475 LNCS},
  pages         = {108-132},
  note          = {cited By 48},
  abstract      = {Software validation and verification (V&V) ensures that software products satisfy user requirements and meet their expected quality attributes throughout their lifecycle. While high levels of adaptation and autonomy provide new ways for software systems to operate in highly dynamic environments, developing certifiable V&V methods for guaranteeing the achievement of self-adaptive software goals is one of the major challenges facing the entire research field. In this chapter we (i) analyze fundamental challenges and concerns for the development of V&V methods and techniques that provide certifiable trust in self-adaptive and self-managing systems; and (ii) present a proposal for including V&V operations explicitly in feedback loops for ensuring the achievement of software self-adaptation goals. Both of these contributions provide valuable starting points for V&V researchers to help advance this field. © 2013 Springer-Verlag.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35813-5_5},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883136062&doi=10.1007%2f978-3-642-35813-5_5&partnerID=40&md5=ffab395fcd314c255c29f811b35d5957},
}

@Article{Ding2013,
  author        = {Ding, B. and Wang, H.-M. and Shi, D.-X.},
  title         = {Constructing software with self-adaptability},
  journal       = {Ruan Jian Xue Bao/Journal of Software},
  year          = {2013},
  volume        = {24},
  number        = {9},
  pages         = {1981-2000},
  note          = {cited By 16},
  abstract      = {Along with the transition of application scenario and the increase of its own complexity, software needs the capability of actively adapting itself to the changes in its environment, which means that it needs to adjust its behavior in response to those changes. The realization of software self-adaptation is closely related to many academic fields such as software monitoring, context-aware computing, decision and control theory, software evolution and maintenance, and etc. It is a great challenge to construct this kind of software systematically in software engineering practice. From the perspective of the construction and implementation of self-adaptive software, this paper reviews the existing research and practices based on the "sensing-decision-execution" basic self-adaptation cycle. This study presents the concept of software self-adaptation and a taxonomy of the characteristics of sensing, decision and execution activities, summary those most focused enabling techniques for constructing adaptive software, analyze a set of typical research projects, and then describe the future research trend in the field of constructing adaptive software. © 2013 ISCAS.},
  document_type = {Article},
  doi           = {10.3724/SP.J.1001.2013.04432},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885358178&doi=10.3724%2fSP.J.1001.2013.04432&partnerID=40&md5=f92c9925b5bef6204c891c28b97f4e5d},
}

@Conference{Camara2013a,
  author        = {Camara, J. and De Lemos, R. and Laranjeiro, N. and Ventura, R. and Vieira, M.},
  title         = {Robustness evaluation of controllers in self-adaptive software systems},
  year          = {2013},
  pages         = {1-10},
  note          = {cited By 7},
  abstract      = {An increasingly important requirement for software-intensive systems is the ability to self-manage by adapting their structure and behavior at run-time in an autonomous way as a response to a variety of changes that may occur to the system, its environment, or its goals. In particular, self-adaptive (or autonomic) systems incorporate complex software components that act as controllers of a target system by executing actions through effectors, based on information monitored by probes. However, although these controllers are becoming critical in many application domains, it is still difficult to assess their robustness. The proposed approach for evaluating the robustness of controllers for self-adaptive software systems, is aimed at the effective identification of design faults. To achieve this objective, our proposal is based on a set of robustness tests that include the provision of mutated inputs to the interfaces between the controller and the target system (i.e., probes). The feasibility of the approach is evaluated in the context of Znn.com, a case study implemented using the Rainbow framework for architecture-based self-adaptation. © 2013 IEEE.},
  art_number    = {6542600},
  document_type = {Conference Paper},
  doi           = {10.1109/LADC.2013.17},
  groups        = {scopus},
  journal       = {Proceedings - 6th Latin-American Symposium on Dependable Computing, LADC 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84881133350&doi=10.1109%2fLADC.2013.17&partnerID=40&md5=dfaf4f54e04961b2fd41a4e23ef59c5c},
}

@Article{Calinescu2013a,
  author        = {Calinescu, R.},
  title         = {Emerging techniques for the engineering of self-adaptive high-integrity software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7740 LNCS},
  pages         = {297-310},
  note          = {cited By 13},
  abstract      = {The demand for cost effectiveness and increased flexibility has driven the fast-paced adoption of software systems in areas where requirement violations may lead to financial loss or loss of life. Many of these software systems need to deliver not only high integrity but also self adaptation to the continual changes that characterise such application areas. A challenge long solved by control theory for continuous-behaviour systems was thus reopened in the realm of software systems. Software engineering needs to embark on a quest for self-adaptive high-integrity software. This paper explains the growing need for software capable of both self-adaptation and high integrity, and explores the starting point for the quest to make it a reality. We overview emerging techniques for the engineering of self-adaptive high-integrity software, propose a service-based architecture that aims to integrate these techniques, and discuss opportunities for future research. © 2013 Springer-Verlag.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-36249-1_11},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873857495&doi=10.1007%2f978-3-642-36249-1_11&partnerID=40&md5=ff2157071d91315ee69d7d7938c84c5e},
}

@Article{Zhou2013,
  author        = {Zhou, Y. and Ge, J. and Hu, J.},
  title         = {An agent-based approach for software self-adaptation},
  journal       = {ICIC Express Letters},
  year          = {2013},
  volume        = {7},
  number        = {2},
  pages         = {527-534},
  note          = {cited By 0},
  abstract      = {The highly dynamic nature of the open environments nowadays poses new challenges for the situated software's adaptability. The paper proposes a software agentbased approach to enable self-adaptation. Particularly, we aim at the domain of distributed component-based systems in open environments. The approach features the collaboration of two kinds of software agents, i.e., the intelligent agent and the mobile agent. The former gathers the contextual information and makes adaptation decisions, while the latter is responsible for conducting the dynamic evolution. A supporting system is implemented and an example application is presented to illustrate the feasibility and effectiveness of our approach. © 2013 ISSN 1881-803X.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872134169&partnerID=40&md5=3ae2cb33da036bbd6c54861910e904ab},
}

@Article{Yang2013b,
  author        = {Yang, Q.-L. and Lv, J. and Tao, X.-P. and Ma, X.-X. and Xing, J.-C. and Song, W.},
  title         = {Fuzzy self-adaptation of mission-critical software under uncertainty},
  journal       = {Journal of Computer Science and Technology},
  year          = {2013},
  volume        = {28},
  number        = {1},
  pages         = {165-187},
  note          = {cited By 11},
  abstract      = {Mission-critical software (MCS) must provide continuous, online services to ensure the successful accomplishment of critical missions. Self-adaptation is particularly desirable for assuring the quality of service (QoS) and availability of MCS under uncertainty. Few techniques have insofar addressed the issue of MCS self-adaptation, and most existing approaches to software self-adaptation fail to take into account uncertainty in the self-adaptation loop. To tackle this problem, we propose a fuzzy control based approach, i.e., Software Fuzzy Self-Adaptation (SFSA), with a view to deal with the challenge of MCS self-adaptation under uncertainty. First, we present the SFSA conceptual framework, consisting of sensing, deciding and acting stages, and establish the formal model of SFSA to lay a rigorous and mathematical foundation of our approach. Second, we develop a novel SFSA implementation technology as well as its supporting tool, i.e., the SFSA toolkit, to automate the realization process of SFSA. Finally, we demonstrate the effectiveness of our approach through the development of an adaptive MCS application in process control systems. Validation experiments show that the fuzzy control based approach proposed in this work is effective and with low overheads. © 2013 Springer Science+Business Media New York & Science Press, China.},
  document_type = {Conference Paper},
  doi           = {10.1007/s11390-013-1321-9},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873370895&doi=10.1007%2fs11390-013-1321-9&partnerID=40&md5=a6ecfe7292b4542cdc947f7a70395f78},
}

@Article{Dragone2013,
  author        = {Dragone, M.},
  title         = {Building self-adaptive software systems with component, services \& agents technologies: Self-OSGI},
  journal       = {Communications in Computer and Information Science},
  year          = {2013},
  volume        = {358},
  pages         = {300-316},
  note          = {cited By 1},
  abstract      = {This paper examines component & service, and agent technologies, and shows how to build a component & service-based framework with agent-like features for the construction of software systems with self-configuring, self-healing, self-optimizing, and self protecting (self-*) properties. This paper illustrates the design of one such framework, Self-OSGi, built over Java technology from the Open Service Gateway Initiative (OSGi) and loosely based on the Belief, Desire, Intention (BDI) agent model. The use of the new framework is illustrated and benchmarked with a simulated robotic application and with a dynamic service-selection test. © Springer-Verlag Berlin Heidelberg 2013.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-36907-0_20},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882284238&doi=10.1007%2f978-3-642-36907-0_20&partnerID=40&md5=aa68fadc60659d4b1f501ccd03df8f33},
}

@Conference{DeLaIglesia2013,
  author        = {De La Iglesia, D.G. and Weyns, D.},
  title         = {SA-MAS: Self-adaptation to enhance software qualities in multi-agent systems},
  year          = {2013},
  volume        = {2},
  pages         = {1159-1160},
  note          = {cited By 3},
  abstract      = {Engineering multi-agent systems (MAS) is known to be a complex task. One of the reasons lays in the complexity to combine multiple concerns that a MAS has to address, such as system functionality, coordination, robustness, etc. A well-recognized approach to manage system complexity is the use of self-adaptation (SA). Self-adaptation extends a system with support to monitor and adapt itself to realize a concern of interest (optimization, fault-tolerance, etc.). We present SA-MAS, an architectural approach that integrates MAS with SA. We present a reference model for SA-MAS and illustrate it with an excerpt from our research. Copyright © 2013, International Foundation for Autonomous Agents and Multiagent Systems (www.ifaamas.org). All rights reserved.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {12th International Conference on Autonomous Agents and Multiagent Systems 2013, AAMAS 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899427507&partnerID=40&md5=64eb4463150b5b748d682b0fd259bc75},
}

@Article{Liu2012b,
  author        = {Liu, W. and Feng, Z.},
  title         = {Context-based requirement modeling for self-adaptive service software},
  journal       = {Journal of Computational Information Systems},
  year          = {2012},
  volume        = {8},
  number        = {24},
  pages         = {10131-10140},
  note          = {cited By 2},
  abstract      = {Service-oriented self-adaptation software (SoSAS) utilizes services as fundamental elements for developing applications that have the capability to autonomously modify their behavior at run-time in response to changes in their environment. While a few techniques have been developed to support the modeling and analysis of requirements for self-adaptive systems, limited attention has been paid to the description of service requirements and uncertainty in requirements of SoSAS. In this paper, we propose a context-based requirement representing and modeling framework as a fundamental of self-adaptation evolution. We introduce a context snapshot model to represent uncertainty in requirement with domain knowledge; goal-oriented context requirement to model user requirements and process-oriented context requirement to model service requirements; and finally, propose means-c-end analysis to relate user and service requirement with context condition. We illustrate and evaluate our approach through three scenarios of city intelligent traffic domain in the support tool ConUSER. © 2011 by Binary Information Press.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84871858378&partnerID=40&md5=91287b331b744f06a00be615aafbe526},
}

@Article{Liu2012c,
  author        = {Liu, W. and Feng, Z.},
  title         = {Requirement uncertainty analysis for service-oriented self-adaptation software},
  journal       = {Communications in Computer and Information Science},
  year          = {2012},
  volume        = {345},
  pages         = {156-163},
  note          = {cited By 4},
  abstract      = {While a few techniques have been developed to support the modeling and analysis of requirements for self-adaptive systems, limited attention has been paid to the description of service requirements and uncertainty in requirements of SoSAS. In this paper, we discussed the characteristics of service-oriented self-adaptation software. A context snapshot model to represent uncertainty is introduced in requirements with domain knowledge; and the context requirements to model user requirements and service requirements; and finally, propose means-c-end analysis to relate user and service requirement with context condition. We design and develop a support tool ConUSER to realize the uncertainty oriented requirement analysis. © Springer-Verlag Berlin Heidelberg 2012.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35211-9_20},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882272727&doi=10.1007%2f978-3-642-35211-9_20&partnerID=40&md5=11708fd1ae9ae702aa296eaf145d4890},
}

@Article{Calinescu2012,
  author        = {Calinescu, R. and Ghezzi, C. and Kwiatkowska, M. and Mirandola, R.},
  title         = {Self-adaptive software needs quantitative verification at runtime},
  journal       = {Communications of the ACM},
  year          = {2012},
  volume        = {55},
  number        = {9},
  pages         = {69-77},
  note          = {cited By 177},
  abstract      = {Human activity increasingly relies on software being able to make self-adaptation decisions. The only way to achieve dependable software adaptation is to unite autonomic computing and mathematically based modeling and analysis techniques. Quantitative verification and model checking must also be used at runtime to predict and identify requirement violations, as well as to plan the adaptation steps necessary to prevent or recover from violations and obtain irrefutable proof the reconfigured software complies with its requirements. In developing a machine, software engineers must first derive a specification from the requirements and so must understand the relevant assumptions to be made about the environment in which the machine is expected to work. Domain assumptions play a fundamental role in building systems. Quantitative verification is a mathematically based technique for analyzing the correctness, performance, and reliability of systems exhibiting stochastic behavior.},
  document_type = {Article},
  doi           = {10.1145/2330667.2330686},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865658584&doi=10.1145%2f2330667.2330686&partnerID=40&md5=18e7dab59a6643a1e64435ba421e1ca7},
}

@Article{Xiang2012,
  author        = {Xiang, L.F.},
  title         = {Self-adapting unified software test for network information processing},
  journal       = {Advances in Intelligent and Soft Computing},
  year          = {2012},
  volume        = {148 AISC},
  number        = {VOL. 1},
  pages         = {227-232},
  note          = {cited By 0},
  abstract      = {We present an self-adapting approach to generate unified the SLS(Symbolic Labeled System) for network information processing. The semantics of the network information processing are defined using the Inputs, Outputs, Effect (IOE) paradigm. For each network information processing, our approach produces testing goals high are refinements of the network information processing using set of fault methods. A new planner component accepts these testing goals, along with an initial state of the network information processing definitions to generate a sequence of network information processing invocations as a test case. We study the techniques used in our software test approach. These results indicate that the approach described here leads to a large number of remains in effort with comparable results for requirements coverage and fault detection effectiveness. © 2012 Springer-Verlag GmbH.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-28655-1_36},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864317489&doi=10.1007%2f978-3-642-28655-1_36&partnerID=40&md5=0246b261c3caa2d2844ab7bb8f3cd455},
}

@Conference{DiBeneditto2012,
  author        = {Di Beneditto, M.E.M.},
  title         = {Automating the reconfiguration for self-adaptable software},
  year          = {2012},
  pages         = {13-18},
  note          = {cited By 0},
  abstract      = {Considering a runtime compositional software adaptation, one important aspect about the engineering of self-adaptive systems is to decide how to reconfigure the software, that is, how to change its structure. After a desired configuration has been chosen for some context, the task is to decide how to achieve this desired state and, after that, execute this reconfiguration. Furthermore, this reconfiguration plan must be correct in relation to the programming model, the application architectural restrictions and, must leave the application in a consistent state. The plan execution must guarantee some level of reliability not to bring the system in an undesired state. In order to automate the reconfiguration, this work proposes an approach that employs Artificial Intelligence techniques to solve this issue. The reconfiguration plans are based on a model of cause and effect, which describes the set of reconfiguration actions from the underlying component model and, this component model provides a reflective support to execute the generated reconfiguration plan. Copyright © 2012 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2304676.2304680},
  groups        = {scopus},
  journal       = {WCOP'12 - Proceedings of the 17th International Doctoral Symposium on Components and Architecture},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864033974&doi=10.1145%2f2304676.2304680&partnerID=40&md5=08a198b2b830b99632d7f71ae4e193fd},
}

@Article{Gu2012,
  author        = {Gu, X.},
  title         = {IDES: Self-adaptive software with online policy evolution extended from rainbow},
  journal       = {Studies in Computational Intelligence},
  year          = {2012},
  volume        = {429},
  pages         = {181-195},
  note          = {cited By 2},
  abstract      = {One common approach or framework of self-adaptive software is to incorporate a control loop that monitoring, analyzing, deciding and executing over a target system using predefined rules and policies. Unfortunately, policies or utilities in such approaches and frameworks are statically and manually defined. The empirical adaptation policies and utility profiles cannot change with environment thus cannot make robust and assurance decisions. Various efficiency improvements have been introduced to online evolution of self-adaptive software itselfhowever, there is no framework with policy evolution in policy-based self-adaptive software such as Rainbow. Our approach, embodied in a system called IDES (Intelligent Decision System) uses reinforcement learning to provides an architecture based self-adaptive framework. We associate each policy with a preference value. During the running time the system automatically assesses system utilities and use reinforcement learning to update policy preference. We evaluate our approach and framework by an example system for bank dispatching. The experiment results reveal the intelligence and reactiveness of our approach and framework. © 2012 Springer-Verlag Berlin Heidelberg.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-30454-5_13},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863228577&doi=10.1007%2f978-3-642-30454-5_13&partnerID=40&md5=7a291407a4e4066c350c5403e37beef1},
}

@Article{Wang2012b,
  author        = {Wang, H. and Zheng, Z.},
  title         = {Self-adaptive survival environment model of software as a service applications based on ontology},
  journal       = {Advanced Science Letters},
  year          = {2012},
  volume        = {11},
  number        = {1},
  pages         = {578-583},
  note          = {cited By 0},
  abstract      = {Software survival environment has important influence on variant properties of SaaS applications. The original impulse of software evolution results from the mutable and unanticipated nature of software survival environment. Consequently, it is necessary to analyze the various factors that lead to software evolution. Furthermore, the various entities of SaaS applications and the relationship between them will be subject to the software survival environment. Driving factors of survival environment in SaaS applications are analyzed and a self-adaptive survival model based on software architecture is presented. Survival ontology and uncertainties are modeled respectively as survival ontology model-SOM (Survival Ontology Model) and uncertainty ontology model- UOM (Uncertainty Ontology Model). The uncertainty of software survival environment is also addressed. © 2012 American Scientific Publishers. All rights reserved.},
  document_type = {Article},
  doi           = {10.1166/asl.2012.3004},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864412293&doi=10.1166%2fasl.2012.3004&partnerID=40&md5=e65a9d5ea6aa09a2a5e34282d4b5fb27},
}

@Article{Liu2012e,
  author        = {Liu, W. and Feng, Z.},
  title         = {Uncertainty modeling of self-adaptive software requirement},
  journal       = {International Journal of Advancements in Computing Technology},
  year          = {2012},
  volume        = {4},
  number        = {11},
  pages         = {87-95},
  note          = {cited By 4},
  abstract      = {Service oriented computing utilizes services as fundamental elements for developing applications that have the capability to autonomously modify their behavior at run-time in response to the changes in their environment, which is especially suitable for designing and developing self-adaptive software. While uncertainty induced by randomness environment in service oriented self-adaptive software requirement is a well-studied activity, representing and analyzing uncertainty have not enjoyed equal attention. In this paper, we address this problem by amalgamating context snapshot with goal and business process model to support the representation of uncertainty for self-adaptive software requirements. We define a context snapshot model to represent requirement uncertainty with domain knowledge; context-specific goal-oriented requirement model is constructed for customer requirements and context-specific process-oriented requirement model is constructed for service requirements; and finally, propose means-c-end analysis to relate the customer requirements and service requirements with context condition. We illustrate and evaluate our approach through a case study about a city intelligent traffic information system.},
  document_type = {Article},
  doi           = {10.4156/ijact.vol4.issue11.9},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867145509&doi=10.4156%2fijact.vol4.issue11.9&partnerID=40&md5=72a7bd782249beb4338dab91982c6e51},
}

@Article{Chen2011,
  author        = {Chen, H. and Li, R. and Li, R. and Sha, E.},
  title         = {An assignment model and algorithm for self-adaptive software based on architecture},
  journal       = {Jisuanji Yanjiu yu Fazhan/Computer Research and Development},
  year          = {2011},
  volume        = {48},
  number        = {12},
  pages         = {2300-2307},
  note          = {cited By 1},
  abstract      = {The research on self-adaptive evolution software is one of the new focuses in the field of software engineering, and the online evolution that makes software adapt to the changing environment according to the architecture meta information attracts most people's attention. But due to the insufficient consideration in non-function requirements of software evolution, we focus on the optimal component assignment problem in self-adaptive software which is continuously meeting system's constraints based on architecture information during runtime. In this paper, the component assignment based architecture model is firstly described in detail, and a component assignment model is set up for this problem and proved to be NP (non-deterministic polynomial). And then we propose a heuristic algorithm to find a solution for this problem. Finally, the experimental results show that compared with the algorithm of greedy and ILP, the proposed algorithm has many advantages such as multi-object balance and time performance, and compared with ILP alone, the algorithm has better time performance. So it testifies that the heuristic algorithm proposed in this paper is effective for online evolution decision.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84855447552&partnerID=40&md5=150c71f62fc752702a9a2b887cf5b92e},
}

@Article{Magableh2011c,
  author        = {Magableh, B. and Barrett, S.},
  title         = {Productivity evaluation of self-Adaptive software model driven architecture},
  journal       = {International Journal of Information Technology and Web Engineering},
  year          = {2011},
  volume        = {6},
  number        = {4},
  pages         = {1-19},
  note          = {cited By 0},
  abstract      = {Anticipating context changes using a model-based approach requires a formal procedure for analysing and modelling context-dependent functionality and stable description of the architecture which supports dynamic decision-making and architecture evolution. This article demonstrates the capabilities of the context-oriented component-based application-model-driven architecture (COCA-MDA) to support the development of self-adaptive applications; the authors describe a state-of-the-art case study and evaluate the development effort involved in adopting the COCA-MDA in constructing the application. An intensive analysis of the application requirements simplified the process of modelling the application's behavioural model; therefore, instead of modelling several variation models, the developers modelled an extra-functionality model. COCA-MDA reduces the development effort because it maintains a clear separation of concerns and employs a decomposition mechanism to produce a context-oriented component model which decouples the applications' core functionality from the context-dependent functionality. Estimating the MDA approach's productivity can help the software developers select the best MDA-based methodology from the available solutions. Thus, counting the source line of code is not adequate for evaluating the development effort of the MDA-based methodology. Quantifying the maintenance adjustment factor of the new, adapted, and reused code is a better estimate of the development effort of the MDA approaches. © 2011, IGI Global.},
  document_type = {Article},
  doi           = {10.4018/jitwe.2011100101},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868118602&doi=10.4018%2fjitwe.2011100101&partnerID=40&md5=aecbb6a212792038c701582819fa8725},
}

@Article{Ehlers2011,
  author        = {Ehlers, J. and Hasselbring, W.},
  title         = {A self-adaptive monitoring framework for component-based software systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2011},
  volume        = {6903 LNCS},
  pages         = {278-286},
  note          = {cited By 11},
  abstract      = {To allow architectural self-adaptation at runtime, software systems require continuous monitoring capabilities to observe and to reflect on their innate runtime behavior. For software systems in productive operation, the monitoring overhead has to be kept deliberately small. By consequence, a trade-off between the monitoring coverage and the resulting effort for data collection and analysis is necessary. In this paper, we present a framework that allows for autonomic on-demand adaptation of the monitoring coverage at runtime. We employ our self-adaptive monitoring approach to investigate performance anomalies in component-based software systems. The approach is based on goal-oriented monitoring rules specified with the OCL. The continuous evaluation of the monitoring rules enables to zoom into the internal realization of a component, if it behaves anomalous. Our tool support is based on the Eclipse Modeling Project and the Kieker monitoring framework. We provide evaluations of the monitoring overhead and the anomaly rating procedure using the JPetStore reference application as a Java EE-based test system. © 2011 Springer-Verlag.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-23798-0_30},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-80053182618&doi=10.1007%2f978-3-642-23798-0_30&partnerID=40&md5=a2b9e5f2758eb034811b252e8c22176d},
}

@Conference{Perez-Palacin2011,
  author        = {Perez-Palacin, D. and Mirandola, R. and Merseguer, J.},
  title         = {Software architecture adaptability metrics for QoS-based self-adaptation},
  year          = {2011},
  pages         = {171-175},
  note          = {cited By 4},
  abstract      = {One of the major current research trends in Software Engineering is the focus on the development of new techniques to deal efficiently with the design of systems that are able to evolve overtime and adapt to rapid changes of their requirements. However, it is still an open issue how to quantify and evaluate the adaptability of a given software system. In this paper we propose the definition of metrics able to quantify and evaluate such software adaptability at the architectural level. Besides, we define a relationship with the quality of service that the software must guarantee by means of a relation between the values of these metrics and the system quality requirements. The presented metrics can be used by the software architect to guide the system adaptation to fulfill the overall quality requirements. © 2011 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2000259.2000288},
  groups        = {scopus},
  journal       = {CompArch'11 - Proceedings of the 2011 Federated Events on Component-Based Software Engineering and Software Architecture - QoSA+ISARCS'11},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960528311&doi=10.1145%2f2000259.2000288&partnerID=40&md5=c786e73bf93fba784406193c31459e77},
}

@Conference{Ehlers2011a,
  author        = {Ehlers, J. and Van Hoorn, A. and Waller, J. and Hasselbring, W.},
  title         = {Self-adaptive software system monitoring for performance anomaly localization},
  year          = {2011},
  pages         = {197-200},
  note          = {cited By 30},
  abstract      = {Autonomic computing components and services require continuous monitoring capabilities for collecting and analyzing data of runtime behavior. Particularly for software systems, a trade-off between monitoring coverage and performance overhead is necessary. In this paper, we propose an approach for localizing performance anomalies in software systems employing self-adaptive monitoring. Time series analysis of operation response times, incorporating architectural information about the diagnosed software system, is employed for anomaly localization. Comprising quality of service data, such as response times, resource utilization, and anomaly scores, OCL-based monitoring rules specify the adaptive monitoring coverage. This enables to zoom into a system's or component's internal realization in order to locate root causes of software failures and to prevent failures by early fault determination and correction. The approach has been implemented as part of the Kieker monitoring and analysis framework. The evaluation presented in this paper focuses on monitoring overhead, response time forecasts, and the anomaly detection process. © 2011 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/1998582.1998628},
  groups        = {scopus},
  journal       = {Proceedings of the 8th ACM International Conference on Autonomic Computing, ICAC 2011 and Co-located Workshops},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960193092&doi=10.1145%2f1998582.1998628&partnerID=40&md5=b9085f23e76c44a424d9768317392c9c},
}

@Conference{Villegas2011,
  author        = {Villegas, N.M. and Müller, H.A. and Tamura, G. and Duchien, L. and Casallas, R.},
  title         = {A framework for evaluating quality-driven self-adaptive software systems},
  year          = {2011},
  pages         = {80-89},
  note          = {cited By 64},
  abstract      = {Over the past decade the dynamic capabilities of self-adaptive software-intensive systems have proliferated and improved significantly. To advance the field of self-adaptive and self-managing systems further and to leverage the benefits of self-adaptation, we need to develop methods and tools to assess and possibly certify adaptation properties of self-adaptive systems, not only at design time but also, and especially, at run-time. In this paper we propose a framework for evaluating quality-driven self-adaptive software systems. Our framework is based on a survey of self-adaptive system papers and a set of adaptation properties derived from control theory properties. We also establish a mapping between these properties and software quality attributes. Thus, corresponding software quality metrics can then be used to assess adaptation properties. © 2011 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/1988008.1988020},
  groups        = {scopus},
  journal       = {Proceedings - International Conference on Software Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959550156&doi=10.1145%2f1988008.1988020&partnerID=40&md5=87328f5539e05de7c67c753109f03509},
}

@Conference{DaSilva2011a,
  author        = {Da Silva, C.E. and De Lemos, R.},
  title         = {Dynamic plans for integration testing of self-adaptive software systems},
  year          = {2011},
  pages         = {148-157},
  note          = {cited By 15},
  abstract      = {Self-adaptive software systems are able to modify their own structure and/or behaviour at run-time in order to cope with changes. During software self-adaptation, new components may be incorporated to the software system. One crucial aspect when incorporating new components is to test them for guaranteeing that they can interoperate as specified. However, this aspect has been often neglected when considering architectural reconfiguration. To deal with this problem, this paper presents an approach for the dynamic generation of plans for conducting the integration testing of self-adaptive software systems. In order to evaluate our approach, we have developed a prototype application that has been used to conduct some experiments, and to demonstrate the feasibility of our approach. © 2011 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/1988008.1988029},
  groups        = {scopus},
  journal       = {Proceedings - International Conference on Software Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959572087&doi=10.1145%2f1988008.1988029&partnerID=40&md5=be6eaecf63a4e8ba5fd5058c00515b79},
}

@Conference{Perez-Palacin2011a,
  author        = {Perez-Palacin, D. and Merseguer, J.},
  title         = {Performance sensitive self-adaptive service-oriented software using hidden Markov models},
  year          = {2011},
  pages         = {201-206},
  note          = {cited By 7},
  abstract      = {Service Oriented Architecture (SOA) is a paradigm where applications are built on services offered by third party providers. Behavior of providers evolves and makes a challenge the performance prediction of SOA applications. A proper decision about when a provider should be substituted can dramatically improve the performance of the application. We propose hidden Markov models (HMM) to help service integrators to foretell the current state of third-parties. The paper leverages different algorithms that change providers based on predictions about their states. We also integrate these algorithms and HMMs in an architectural solution to coordinate them with other challenges in the SOA world.},
  document_type = {Conference Paper},
  doi           = {10.1145/1958746.1958776},
  groups        = {scopus},
  journal       = {ICPE'11 - Proceedings of the 2nd Joint WOSP/SIPEW International Conference on Performance Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-79953861697&doi=10.1145%2f1958746.1958776&partnerID=40&md5=3a5dd9fb20f9d270f40f5219d579db5c},
}

@Article{DaSilva2011b,
  author        = {Da Silva, C.E. and De Lemos, R.},
  title         = {A Framework for automatic generation of processes for self-adaptive software systems},
  journal       = {Informatica (Ljubljana)},
  year          = {2011},
  volume        = {35},
  number        = {1},
  pages         = {3-13},
  note          = {cited By 7},
  abstract      = {The self-adaptation of software systems is a complex process that depends on several factors that can change during the system operational lifetime. Hence, it is necessary to define mechanisms for providing a self-adaptive system the capability of generating during run-time the process that controls its adaptation. This paper presents a framework for the automatic generation of processes for self-adaptive software systems based on the use of workflows, model-based and artificial intelligence planning techniques. Our approach can be applied to different application domains, improves the scalability associated with the generation of adaptation plans, and enables the usage of different planning techniques. For evaluating the approach, we have developed a prototype for generating during run-time the workflows that coordinate the architectural reconfiguration of a web-based application.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-79953330809&partnerID=40&md5=5d751569579f3f6aaa181ec0ccc6846d},
}

@Article{Stavru2011d,
  author        = {Stavru, S. and Ilieva, S.},
  title         = {Self-adaptive software systems through exploratory changes},
  journal       = {Advances in Intelligent and Soft Computing},
  year          = {2011},
  volume        = {101},
  pages         = {215-216},
  note          = {cited By 0},
  abstract      = {Most of the research in self-adaptive software systems is concerned with self-adaptation as response to change in its environment, which threatens system’s efficiency and operation. But except for avoiding and resolving system disturbances, there could be another reason for self-adaptation-the reason for exploration. This paper applies the concept of exploratory change to self-adaptive software systems and proposes a new paradigm for self-adaptation named exploratory self-adaptation. © Springer-Verlag Berlin Heidelberg 2011.},
  document_type = {Conference Paper},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976632899&partnerID=40&md5=42aeebb8eb3dffbcc8d276cbad508d43},
}

@Article{Li2010,
  author        = {Li, B. and Zhang, X. and Zhu, J.},
  title         = {A goal-driven self-adaptive software system framework based on agent},
  journal       = {Journal of Computational Information Systems},
  year          = {2010},
  volume        = {6},
  number        = {12},
  pages         = {4195-4205},
  note          = {cited By 0},
  abstract      = {In this paper, a self-adaptive software system framework is proposed. The requirement model layer to Agent layer mapping mechanism is given to achieve the automatic conversion from requirement layer to implementation layer. The detailed work includes proposing a new goal-driven self-adaptive software system design framework based on agent (GASF); analyzing the main functions of each layer of GASF; defining model concepts (role, goal, plan, resource, activity and restriction) as well as three model methods (goal modeling method, plan modeling method and restriction modeling method); proposing mapping rules which mapping model concept and model method in requirement model of GASF to Agent based on JADE platform; developing the GASF2J (GASF-to-JADE) prototype system based on Eclipse platform. © 2010 Binary Information Press.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-78651372722&partnerID=40&md5=1bc63f1dcc2ca6fb50d7d300be047013},
}

@Article{Chen2010a,
  author        = {Chen, X. and Huang, G. and Sun, Y. and Mei, H.},
  title         = {A software architecture model supporting analysis and planning in self-adaptation},
  journal       = {Jisuanji Yanjiu yu Fazhan/Computer Research and Development},
  year          = {2010},
  volume        = {47},
  number        = {7},
  pages         = {1156-1164},
  note          = {cited By 0},
  abstract      = {The approach based on model-driven software architecture is one of the most important approaches for software adaptation. Especially in the analysis and planning stages, many model-based methods and tools are used to support designers in decision making. But most of these approaches and their supporting tools are provided only for specific architectural description languages or modeling tools. It is hard to reuse or integrate them with other approaches. On the other hand, recent research in the field of model driven architecture (MDA) provides standards to enhance the interoperability of the methods and tools. These standards include MOF for meta modeling, QVT for model query, view and transformation, and so on. For these concerns, the authors summarize the models and model operations needed in the analysis and planning stages to see how to apply standard model technologies to support these stages. They then extend the ABC-ADL, and use the standard model technologies including model transformation and model query in its implementation to support analysis and planning. The adaptation of an anti-pattern in ECPerf system is used as a case study to show the usability of our ADL. In addition, two analysis approaches used in the case study show how to use their ADL to reuse and integrate other approaches.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77956003705&partnerID=40&md5=e88d093461992841d95ca31f876736ff},
}

@Article{Ding2010,
  author        = {Ding, S. and Yang, S. and Ma, X. and Kan, H.},
  title         = {A trustworthiness self-adaptive evaluation model oriented to software evolution},
  journal       = {Wuhan Daxue Xuebao (Xinxi Kexue Ban)/ Geomatics and Information Science of Wuhan University},
  year          = {2010},
  volume        = {35},
  number        = {5},
  pages         = {542-545},
  note          = {cited By 0},
  abstract      = {This paper presents a trustworthiness evaluation self-adaptive model for the complex system software. The model abstracts the complicated logical calculus in the process of trustworthiness evaluation and provides a reasonable approach to achieve the index system of self-reconfiguration under continuous states. This model is helpful to solve the problem of the software trustworthiness evaluation under dynamic and environment.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77953241159&partnerID=40&md5=4e4c58c4ef000fca77669ad10fc16685},
}

@Article{Sun2010,
  author        = {Sun, X. and Zhang, Y. and Wang, X. and Wang, L.},
  title         = {Research on the evaluation criterion for performance searching process of self-adapting numerical software},
  journal       = {Jisuanji Yanjiu yu Fazhan/Computer Research and Development},
  year          = {2010},
  volume        = {47},
  number        = {4},
  pages         = {679-686},
  note          = {cited By 2},
  abstract      = {With the rapid development of computer hardware, researchers pay more and more attentions to how to make efficient use of computer resources and develop the high performance software. Traditionally, researchers produce manual-optimized software for a given machine or resort to the optimization of compiler. There are many problems in these two methods, including poor portability and the difficulty to synchronize with the development of hardware. When designing high performance self-adapting numerical software packages (SANS), such as FFTW, ATLAS, PHiPAC, OSKI, etc, using auto-tuning method becomes a very useful way and could avoid the problems mentioned above. However, the searching process always consumes too much time. In the experiment, it is found that the current best performance does not change rapidly during the whole process, which is completely the opposite of the change of performance gained at the runtime, and the best performance gained at the beginning is or almost close to the best performance gained after the whole search process. In order to search efficiently, a criterion Pt is proposed to evaluate the self-adapting searching process and the method on how to use the criterion to control the searching process for reducing the search time is also given. The experiment result shows that the method given can get an acceptable performance in a short time.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77952619762&partnerID=40&md5=155af9c293aa9219e947456a9492654f},
}

@Article{Wang2010d,
  author        = {Wang, H. and Ying, J. and Jiang, T.},
  title         = {Proactive self-adaptation of software based on inspecting uncertainty},
  journal       = {Zhejiang Daxue Xuebao(Gongxue Ban)/Journal of Zhejiang University (Engineering Science)},
  year          = {2010},
  volume        = {44},
  number        = {2},
  pages         = {213-219},
  note          = {cited By 1},
  abstract      = {A method of proactive self-adaptation (PSA) was proposed to address the unanticipated adaptation of the traditional reactive self-adaptation (RSA) model. The PSA method presented an important problem to be resolved how the model learns from the environment. Hidden Markov model (HMM) was employed to learn from history behavior of target system, and then generated anticipatory actions. The PSA method can proactively adjust the runtime behaviors of the system to be adaptive to the new situations compared to the traditional RSA model. The application system made sound decision by combining the observation from system administrators and the cognitive power of PSA. Then applications implemented the proactive autonomic management and reduced manual operation. Experimental results show that the PSA method provides for application with proactive self-adaptive management mechanism and improves the manageability and quality of service (QoS) of application.},
  document_type = {Article},
  doi           = {10.3785/j.issn.1008-973X.2010.02.001},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77950571703&doi=10.3785%2fj.issn.1008-973X.2010.02.001&partnerID=40&md5=249dc7420a1fc26ba0c874134367b757},
}

@Conference{VanHoorn2009,
  author        = {Van Hoorn, A. and Hasselbring, W. and Rohr, M.},
  title         = {Engineering and continuously operating self-Adaptive software systems: Required design decisions},
  year          = {2009},
  volume        = {537},
  pages         = {52-63},
  note          = {cited By 0},
  abstract      = {Self-adaptive or autonomic systems are computing systems which are able to manage/adapt themselves at runtime according to certain high-level goals. It is appropriate to equip software systems with adaptation capabilities in order to optimize runtime properties, such as performance, availability, or operating costs. Architectural models are often used to guide system adaptation. When engineering such systems, a number of cross-cutting design decisions, e.g. instrumentation, targeting at a system's later operation/maintenance phase must and can be considered during early design stages. In this paper, we discuss some of these required design decisions for adaptive software systems and how models can help in engineering and operating these systems. The discussion is based on our experiences, including those gathered from evaluating research results in industrial settings. To illustrate the discussion, we use our selfadaptation approach SLAstic to describe how we address the discussed issues. SLAstic aims to improve a software system's resource efficiency by performing architecturebased runtime reconfigurations that adapt the system capacity to varying workloads, for instance to decrease the operating costs.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893493228&partnerID=40&md5=9328b909ca7942d785d1a25f91392e2a},
}

@Conference{Elkhodary2009,
  author        = {Elkhodary, A. and Malek, S. and Esfahani, N.},
  title         = {On the role of features in analyzing the architecture of self-adaptive software systems},
  year          = {2009},
  volume        = {509},
  pages         = {41-50},
  note          = {cited By 4},
  abstract      = {In traditional software families, feature-orientation has been shown effective for bridging the semantic gap between a software system's requirements and its architecture. Over the past few years, the emergence of self-adaptive software systems, which are significantly more challenging to build than traditional systems, has gained the attention of the software engineering research community. In this paper, we show that using features at runtime could alleviate some of the key challenges of building such systems. The underlying insights are that: (1) features allow representation of the engineer's knowledge about some facets of the system that can be used to enhance the adaptation logic, and (2) features can serve as an abstraction to deal with the heterogeneity of the underlying architectural models, analytical algorithms, and implementation platforms. We describe the role of features in a self-adaptive framework that we have developed, entitled FeatUre-oriented SelfadaptatION (FUSION). We also report on our preliminary experience with FUSION that demonstrates the benefits of using features in different stages of self-adaptation.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891432736&partnerID=40&md5=2108d79cf73cf4e4bf20c2d085eeba0b},
}

@Book{Garlan2009,
  title         = {Software architecture-based self-adaptation},
  year          = {2009},
  author        = {Garlan, D. and Schmerl, B. and Cheng, S.-W.},
  note          = {cited By 58},
  abstract      = {Increasingly, systems must have the ability to self-adapt to meet changes in their execution environment. Unfortunately, existing solutions require human oversight, or are limited in the kinds of systems and the set of quality-of-service concerns they address. Our approach, embodied in a system called Rainbow, uses software architecture models and architectural styles to overcome existing limitations. It provides an engineering approach and a framework of mechanisms to monitor a target system and its environment, reflect observations into a system's architecture model, detect opportunities for improvement, select a course of action, and effect changes in a closed loop. The framework provides general and reusable infrastructures with well-defined customization points, allowing engineers to systematically customize Rainbow to particular systems and concerns. © 2009 Springer Science+Business Media, LLC.},
  document_type = {Book Chapter},
  doi           = {10.1007/978-0-387-89828-5_2},
  groups        = {scopus},
  journal       = {Autonomic Computing and Networking},
  pages         = {31-55},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960016261&doi=10.1007%2f978-0-387-89828-5_2&partnerID=40&md5=40138e319d9f87c51395672b7ba36dae},
}

@Article{Andersson2009a,
  author        = {Andersson, J. and De Lemos, R. and Malek, S. and Weyns, D.},
  title         = {Modeling dimensions of self-adaptive software systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2009},
  volume        = {5525 LNCS},
  pages         = {27-47},
  note          = {cited By 114},
  abstract      = {It is commonly agreed that a self-adaptive software system is one that can modify itself at run-time due to changes in the system, its requirements, or the environment in which it is deployed. A cursory review of the software engineering literature attests to the wide spectrum of software systems that are described as self-adaptive. The way self-adaptation is conceived depends on various aspects, such as the users' requirements, the particular properties of a system, and the characteristics of the environment. In this paper, we propose a classification of modeling dimensions for self-adaptive software systems. Each modeling dimension describes a particular facet of the system that is relevant to self-adaptation. The modeling dimensions provide the engineers with a common set of vocabulary for specifying the self-adaptive properties under consideration and select suitable solutions. We illustrate how the modeling dimensions apply to several application scenarios. © 2009 Springer Berlin Heidelberg.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-02161-9_2},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-70350031595&doi=10.1007%2f978-3-642-02161-9_2&partnerID=40&md5=51680760dd74060c968a70f694e13209},
}

@Article{Cheng2009b,
  author        = {Cheng, B.H.C. and De Lemos, R. and Giese, H. and Inverardi, P. and Magee, J. and Andersson, J. and Becker, B. and Bencomo, N. and Brun, Y. and Cukic, B. and Di Marzo Serugendo, G. and Dustdar, S. and Finkelstein, A. and Gacek, C. and Geihs, K. and Grassi, V. and Karsai, G. and Kienle, H.M. and Kramer, J. and Litoiu, M. and Malek, S. and Mirandola, R. and Müller, H.A. and Park, S. and Shaw, M. and Tichy, M. and Tivoli, M. and Weyns, D. and Whittle, J.},
  title         = {Software engineering for self-adaptive systems: A research roadmap},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2009},
  volume        = {5525 LNCS},
  pages         = {1-26},
  note          = {cited By 668},
  abstract      = {The goal of this roadmap paper is to summarize the state-of-the-art and to identify critical challenges for the systematic software engineering of self-adaptive systems. The paper is partitioned into four parts, one for each of the identified essential views of self-adaptation: modelling dimensions, requirements, engineering, and assurances. For each view, we present the state-of-the-art and the challenges that our community must address. This roadmap paper is a result of the Dagstuhl Seminar 08031 on "Software Engineering for Self-Adaptive Systems," which took place in January 2008. © 2009 Springer Berlin Heidelberg.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-02161-9_1},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-70350033987&doi=10.1007%2f978-3-642-02161-9_1&partnerID=40&md5=bd9e76f73b3ec9ce0ac47531bde464a6},
}

@Conference{Rahnama2009,
  author        = {Rahnama, H. and Aubry, X. and Sadeghian, A. and Ferworn, A.},
  title         = {A context-aware development framework for building self-adaptive mobile software for public transport systems},
  year          = {2009},
  note          = {cited By 0},
  abstract      = {This paper describes design, modeling and implementation of a self-adaptive and context-aware unified solution for the Paris Metro Authority (RATP). By using the system, passengers can be directed, assisted and notified during the course of their journey based on their profiles. Automatic adaptation and delivery of context-based mobile services such as voice and visual information for passengers with hearing and sight problems along with real-time monitoring and provisioning of assistance to passengers with special needs are some of the features of our proposed system. Part of this framework, passengers' needs are processed in the form of context information and the travel assistant application adapts itself optimally according to synthesized context information.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {16th ITS World Congress},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954542041&partnerID=40&md5=c2d24c75b384f4172d745b38d4da729d},
}

@Article{Tang2009a,
  author        = {Tang, S. and Peng, X. and Yu, Y. and Zhao, W.},
  title         = {Goal-directed modeling of self-adaptive software architecture},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2009},
  volume        = {29 LNBIP},
  pages         = {313-325},
  note          = {cited By 3},
  abstract      = {Today's large-scale computing systems are deployed in open, changing and unpredictable environments. To operate reliably, such systems should be able to adapt to new circumstances on their own to get them running and keep them running. Self-adaptive software system has been proposed as a good solution for this demand. However, very few techniques are available to date for systematically building such kind of system. Aiming at this requirement, this paper presents a sound approach to derive a self-adaptive software architecture model from the requirements goal model in systematic way. At the same time, we illustrate our approach by applying it to a simplified on-line shopping system. © 2009 Springer Berlin Heidelberg.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-01862-6_26},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-67249124666&doi=10.1007%2f978-3-642-01862-6_26&partnerID=40&md5=a91ed0a2402ed24be551c43d12bf761a},
}

@Article{Chang2009,
  author        = {Chang, Z.-M. and Mao, X.-J. and Qi, Z.-C.},
  title         = {Applying Bigraph theory to self-adaptive software architecture},
  journal       = {Jisuanji Xuebao/Chinese Journal of Computers},
  year          = {2009},
  volume        = {32},
  number        = {1},
  pages         = {97-106},
  note          = {cited By 4},
  abstract      = {Existing theories of mobile and concurrency calculi for dynamic software architecture can not provide powerful support for evolutionary properties of self-adaptive software. Under this circumstance, Bigraph is based on a graphical model of mobile computation that emphasizes both locality and connectivity and has a complete and extensible theory framework. Therefore, Bigraph can provide a sound concept and intuitive, pervasive expression for self-adaptive software architecture. This paper introduces Bigraphical theory and current research, describes self-adaptive software architecture formally, analyzes and verifies some properties of dynamic evolution, and then discusses some promising directions of formal self-adaptive software architecture.},
  document_type = {Article},
  doi           = {10.3724/SP.J.1016.2009.00097},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-61349171957&doi=10.3724%2fSP.J.1016.2009.00097&partnerID=40&md5=1f38efa641a32fa621653458cf4bea90},
}

@Conference{Kim2008,
  author        = {Kim, D. and Park, S.},
  title         = {Software architecture-based approach to self-adaptive function for intelligent robots},
  year          = {2008},
  volume        = {17},
  number        = {1 PART 1},
  note          = {cited By 0},
  abstract      = {An intelligent service robot helps human users with providing various services such as bringing a newspaper, recommending TV programs, and preparing meals. Each service can be accomplished by coordinating various motion actuations that are activated based on sensory data. Due to the limitation of robot computingresources such as CPU time and memory, the software components that implement such motion actuations can not be loaded and executed at the same time as the complexity of the service increases. That is, those components may compete with each other for the limited computing-resources, and this may result an unexpected behavior of the robot. In this paper, we propose a software architecture-based approach for self-adaptive function that optimizes the use of computing resources by supporting dynamic re-deployment of software components. Organizations of motion actuations for providing services are modeled by software architecture that describes required components and their configurations. In our approach, when a resource problem is detected, components are re-deployed across single-board computers (SBCs) in the robot while maintaining the functional and quality requirements of the components and configuration among them represented in the software architecture. We designed the self-adaptive software framework and implemented a prototype of it. We also had an experiment of our approach on an infotainment robot, and successfully proved the effectiveness of the architecture-based self-adaptive function. Copyright © 2007 International Federation of Automatic Control All Rights Reserved.},
  document_type = {Conference Paper},
  doi           = {10.3182/20080706-5-KR-1001.4216},
  groups        = {scopus},
  journal       = {IFAC Proceedings Volumes (IFAC-PapersOnline)},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-79961018590&doi=10.3182%2f20080706-5-KR-1001.4216&partnerID=40&md5=89b9037e45c4d0e0a62e89e6d916cfad},
}

@Conference{Eustache2008,
  author        = {Eustache, Y. and Diguet, J.-P.},
  title         = {Specification and OS-based implementation of self-adaptive, hardware/software embedded systems},
  year          = {2008},
  pages         = {67-72},
  note          = {cited By 7},
  abstract      = {This paper presents our solution for specifying and imple-menting self-adaptivness within an OS-based and reconfig-urable embedded system according to objectives such as qual-ity of service (QoS), performance or power consumption. More precisely, we detail our approach to separate, at runtime, application-specific decisions and hardware/software imple-mentation decisions at system level. The first ones are re-lated to the control of the efficiency of applications, they are specified in Local Configuration Managers (LCM) based on the knowledge of application engineers. The second ones are generic and address the choice between various hardware and software implementations according to observations of the gap between online measurements and objectives set by the user, these decisions are implemented in the Global Con-figuration Manager (GCM) as an adaptive close-loop model. We have designed a video tracking application on an FPGA to demonstrate the effectiveness of our solution, results are given for a system built around a NIOS soft-core with μCOS II RTOS and new services for managing hardware and soft-ware tasks transparently. Copyright 2008 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/1450135.1450151},
  groups        = {scopus},
  journal       = {Embedded Systems Week 2008 - Proceedings of the 6th IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis, CODES+ISSS 2008},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-63349107613&doi=10.1145%2f1450135.1450151&partnerID=40&md5=ba0139ead790f43e232b4b3db6e6d072},
}

@Conference{Goel2008,
  author        = {Goel, A.K. and Jones, J. and Parnin, C. and Rugaber, S. and Sinharoy, A.},
  title         = {Self-adaptation in software agents: An initial case study in game-playing agents},
  year          = {2008},
  pages         = {365-379},
  note          = {cited By 1},
  abstract      = {As the task environment of a software artifact evolves, so must its design. For example, as the task environment in a computer game evolves, so must the design of the software agent that plays the game (or the agent's behavior is likely to become more suboptimal than before). We are exploring how a software artifact may adapt itself as it's task environment evolves incrementally. In particular, we are investigating how a game-playing agent may adapt itself as the percepts, actions, rules and constraints of its environment evolve from one version of the game to the next. A core research question in our work is what must an agent know about its design so that it can identify and make the right self-modifications to meet the needs of the new task environment? Our hypothesis is that the agent's self-knowledge of its teleology (i.e., the mechanisms by which it's design achieves its functions) may support the process of self-adaptation. In this paper, we describe the preliminary design of an interactive environment called GAIA in which a human game engineer and a game-playing software agent cooperatively adapt the agent's software design and program code. As the game-playing agent uses it's self-knowledge of it's teleology to identify modifications to it's design and code, the game engineer may (or may not) accept specific modifications and thus guide the process of self-adaptation. We also illustrate a first, simple example from FreeCiv, an interactive turn-based strategy game, at a high-level of specification. © The Authors 2008.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {Proceedings of the 3rd International Conference on Design Science Research in Information Systems and Technology, DESRIST 2008},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880177580&partnerID=40&md5=48005bfc2bab190f27e8d8d644453d98},
}

@Article{Mei2008,
  author        = {Mei, H. and Huang, G. and Lan, L. and Li, J.},
  title         = {A software architecture centric self-adaptation approach for Internetware},
  journal       = {Science in China, Series F: Information Sciences},
  year          = {2008},
  volume        = {51},
  number        = {6},
  pages         = {722-742},
  note          = {cited By 31},
  abstract      = {Being one of the basic features of Internetware, self-adaptation means that the software system can monitor its runtime state and behavior and adjust them when necessary according to pre-defined policies. Focusing on the three fundamental issues of self-adaptation, including the scope, operability and trustworthiness, a software architecture (SA) centric approach for Internetware's self-adaptation is presented in this paper. All of the self-adaptive actions, i.e. monitoring, analyzing, planning and executing, are performed based on SA. In detail, runtime state and behavior of Internetware are represented and changed in the form of runtime software architecture. The knowledge for self-adaptation is captured, organized and reasoned in the form of SA so that automatic analysis and decision-making are achieved. © 2008 Science in China Press and Springer-Verlag GmbH.},
  document_type = {Article},
  doi           = {10.1007/s11432-008-0052-y},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-44149097155&doi=10.1007%2fs11432-008-0052-y&partnerID=40&md5=ecff07a57f172e3286b591ba19391408},
}

@Article{Geihs2008,
  author        = {Geihs, K.},
  title         = {Self-adaptive software [Selbst-adaptive software]},
  journal       = {Informatik-Spektrum},
  year          = {2008},
  volume        = {31},
  number        = {2},
  pages         = {133-145},
  note          = {cited By 11},
  abstract      = {Mobile and "pervasive computing" introduce a growing demand for software systems that are able to adapt themselves to dynamically changing environments. Dynamic adaptation happens at application run-time due to changing resource and context conditions. For example, applications may want to react dynamically to fluctuations in network connectivity, battery capacity, appearance of new devices and services, or to a change of user preferences. In this paper we present an overview over the state of the art of self-adaptive software systems.We discuss different adaptation requirements and appropriate computing infrastructures that support software adaptation at runtime. Furthermore, a development methodology for adaptive applications is described. Among many research projects that have tackled the question of software adaptivity, project MADAMhas delivered a comprehensive solution for self-adaptive software systems.We discuss the main results of MADAMin order to illustrate the presented adaptation concepts, and we compare these results with related work. © Springer-Verlag 2007.},
  document_type = {Article},
  doi           = {10.1007/s00287-007-0198-9},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-43449113292&doi=10.1007%2fs00287-007-0198-9&partnerID=40&md5=bdff46659b59deedc7349a4b2b10cb00},
}

@Article{Feng2008,
  author        = {Feng, Y. and Huang, G. and Mei, H.},
  title         = {Method for modeling and realizing self-adaptive software architecture},
  journal       = {Beijing Daxue Xuebao (Ziran Kexue Ban)/Acta Scientiarum Naturalium Universitatis Pekinensis},
  year          = {2008},
  volume        = {44},
  number        = {1},
  pages         = {67-76},
  note          = {cited By 2},
  abstract      = {The authors present an architecture-based approach to self-adaptive systems, called self-adaptive software architecture (SASA). To guarantee the general applicability, the authors synthesize a set of popular and/or sophisticated methods in architecture based software engineering, including the quality related architecture analysis methods for identifying why and when to change, the quality driven architecture design methods for deciding what to change, the architectural description language with dynamisms for recording the above knowledge, and the runtime software architecture for executing the designed adaptations. The approach is demonstrated on Java 2 Platform Enterprise Edition (J2EE).},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-39749203466&partnerID=40&md5=d49631131dfb13cd19b9cc7e5135812d},
}

@Article{Grondin2008,
  author        = {Grondin, G. and Bouraqadi, N. and Vercouter, L.},
  title         = {Component reassembling and state transfer in MADCAR-based self-adaptive software},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2008},
  volume        = {11},
  pages         = {258-277},
  note          = {cited By 5},
  abstract      = {In this paper, we introduce MaDcAr, a model of engines for dynamic and automatic (re)assembling of component-based software. In MaDcAr, an application description consists of the definition of some valid configurations and the state transfer rules to apply during adaptations. This description is uncoupled from any implementation and can therefore be reused with other components. Given an application description, a MaDcAr engine builds a constraint solving problem that makes it possible to choose an appropriate configuration and the components to assemble. This choice takes into account the cost of the target configuration with respect to the available resources. To ensure the application consistency, the engine relies on the state transfer rules to initialize the component attributes of the target assembly using the component attributes of the source assembly. © Springer-Verlag Berlin Heidelberg 2008.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-540-69824-1_15},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-82455170168&doi=10.1007%2f978-3-540-69824-1_15&partnerID=40&md5=df8b18dfe0e98952fd85fb37fb4c5f1e},
}

@Conference{Ma2007,
  author        = {Ma, X. and Zhou, Y. and Pan, J. and Yu, P. and Lu, J.},
  title         = {Constructing self-Adaptive systems with polymorphic software architecture},
  year          = {2007},
  pages         = {2-8},
  note          = {cited By 9},
  abstract      = {Facing changing environment and user requirements, modern distributed software systems often have to evolve accordingly. We propose an extended object-oriented programming model for dynamically self-Adaptive distributed software systems. With this model every component of a system is explicitly situated in an active architectural context, which is naturally used to regulate and facilitate potential runtime reconfiguration. The architecture context is explicitly implemented with a distributed shared object, whose state changes and polymorphic substitutions realize the anticipated and unanticipated architectural reconfigurations respectively. Thus the adaptation behavior specified at the architectural level can be automatically carried out. A prototypical supporting system is developed for the model. Copyright © (2007) by Knowledge Systems Institute (KSI).},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {19th International Conference on Software Engineering and Knowledge Engineering, SEKE 2007},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-44149090416&partnerID=40&md5=ffd4be51def958edf4e7d0967779d3e0},
}

@Article{Rui2006,
  author        = {Rui, Y.-B. and Ding, G.-L. and Wu, Z.-G.},
  title         = {Accuracy self-adaptive method of fin and tube heat exchanger simulation software},
  journal       = {Shanghai Jiaotong Daxue Xuebao/Journal of Shanghai Jiaotong University},
  year          = {2006},
  volume        = {40},
  number        = {8},
  pages         = {1360-1364},
  note          = {cited By 0},
  abstract      = {A method to correct the simulation accuracy of the fin-and-tube heat exchanger model was presented, which can choose correction strategies automatically according to the number of the experiment data points the users can offer. When the number of data points is small, the air side heat transfer coefficient is corrected with polynomial regress. When the number of data points is large, the air side heat transfer coefficient is corrected with artificial neural network. The practical simulation with this method shows: (1) the max and mean deviation of heat flow rate are 28.96% and 11.12% respectively, when no correction is made; (2) the max and mean deviation of heat flow rate are 15.33% and 5.38% respectively, with polynomial correction method; (3) the max and mean deviation of heat flow rate are 4.9% and 1.0% respectively, when artificial neural network correction is used.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-33750587725&partnerID=40&md5=435cea4e793003cb94033b544d2f75dd},
}

@Article{Chen2006,
  author        = {Chen, L. and Li, S.-L.},
  title         = {Dynamic self-adapting software architecture for replica management in grids},
  journal       = {Ruan Jian Xue Bao/Journal of Software},
  year          = {2006},
  volume        = {17},
  number        = {6},
  pages         = {1436-1447},
  note          = {cited By 2},
  abstract      = {Single data replica management strategy can not meet the complexity and diverseness in data grid. This paper proposes a dynamic self-adapting replica management architecture (DSA-RM) driven by software architecture (SA). In DSA-RM, architecture descriptions are shared by the whole grid environment as a system kernel to schedule various replica management components that are adapted to various application and VO in data grid. By the abstraction of DSA-RM, the paper describes the formal definitions of replica management components and discusses the dynamic self-adapting regulation of component evolution and multiplication in dynamic environment. By these regulations, the DSA-RM's framework and algorithms of multiplication are designed. Experimental results show that the DSA-RM can effectively promote the performance of grid system. Finally, the project of applying the DSA-RM on Shanghai medical data grid is introduced.},
  document_type = {Article},
  doi           = {10.1360/jos171436},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-33746813615&doi=10.1360%2fjos171436&partnerID=40&md5=a13ed0708aba5c05af4efbcce14b466d},
}

@Article{Robertson2005,
  author        = {Robertson, P. and Laddaga, R.},
  title         = {Model based diagnosis and contexts in self adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2005},
  volume        = {3460 LNCS},
  pages         = {112-127},
  note          = {cited By 11},
  abstract      = {Self Adaptive Software monitors its own operation and attempts to correct deviations from required behavior. In the self adaptive architectures we are developing, it accomplishes this by diagnosing the sources of deviant behavior, whether internal program problems, or contextual changes in an embedded program's environment. The software then responds by reconfiguring itself, to use alternate procedures that either correct the malfunction, or perform better in the current context. We present the GRAVA architecture as an example, and show how it utilizes diagnosis of the external context to limit complexity and enhance robustness in several vision applications. © Springer-Verlag Berlin Heidelberg 2005.},
  document_type = {Conference Paper},
  doi           = {10.1007/11428589_8},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-36849079392&doi=10.1007%2f11428589_8&partnerID=40&md5=d75c5b44262f16e64c387b240cc02397},
}

@Article{Kim2005,
  author        = {Kim, D. and Park, S.},
  title         = {AlchemistJ: A framework for self-adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2005},
  volume        = {3824 LNCS},
  pages         = {98-109},
  note          = {cited By 4},
  abstract      = {The major goal of self-adaptive software is to provide a mechanism that allows a software system to dynamically change its architectural configuration during run-time to cope with requirement changes and unexpected conditions. Software which needs to handle dynamically changing internal and external environment is one of the areas in which self-adaptive software may do an important role in improving the reliability and performance of software systems. There are three main capabilities that are necessary to support self-adaptive software: the ability to monitor and recognize internal/external situations that affect behavior of the software system; the ability to determine when and what to reconfigure in the software system to handle the situations; and the ability to dynamically change the software architecture during run-time to make the reconfiguration effective. In this paper, we describe a software framework to support such capabilities to realize self-adaptive software and its experiment results. © IFIP International Federation for Information Processing 2005.},
  document_type = {Conference Paper},
  doi           = {10.1007/11596356_13},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-33744960275&doi=10.1007%2f11596356_13&partnerID=40&md5=a6e3ab8121231033df2084a4bf982712},
}

@Conference{Kim2005a,
  author        = {Kim, D. and Kim, J. and Park, S.},
  title         = {A framework for self-adaptive software},
  year          = {2005},
  pages         = {793},
  note          = {cited By 0},
  abstract      = {The major goal of self-adaptive software is to provide a mechanism that allows a software system to dynamically change its architectural configuration during runtime to cope with requirement changes and unexpected conditions. There are three main capabilities that are necessary to support self-adaptive software for robots: Recognition of environment, Decision making & learning, Dynamic reconfiguration. we describe a software framework to support such capabilities to realize self-adaptive software for intelligent robots.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {17th International Conference on Software Engineering and Knowledge Engineering, SEKE 2005},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886871499&partnerID=40&md5=15181b3f7be9f2c16c3857a21921943d},
}

@Article{Eijkhout2005,
  author        = {Eijkhout, V. and Fuentes, E. and Eidson, T. and Dongarra, J.},
  title         = {The component structure of a self-adapting numerical software system},
  journal       = {International Journal of Parallel Programming},
  year          = {2005},
  volume        = {33},
  number        = {2-3},
  pages         = {137-143},
  note          = {cited By 3},
  abstract      = {Self-Adapting Numerical Software (SANS) systems aim to automate some of the laborious human decision making involved in adapting numerical algorithms to problem data, network conditions, and computational platform. In this paper we describe the structure of a SANS system that tackles automatic algorithm choice, based on dynamic inspection of the problem data. We describe the various components of such a system, and their interfaces. © 2005 Springer Science+Business Media, Inc.},
  document_type = {Article},
  doi           = {10.1007/s10766-005-3577-3},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-23944519127&doi=10.1007%2fs10766-005-3577-3&partnerID=40&md5=7a1eef478a30fbf5fd9c96e0cef1a3ce},
}

@Conference{Ghoneim2005,
  author        = {Ghoneim, A. and Apel, S. and Saake, G.},
  title         = {Evolutionary software life cycle for self-adapting software systems},
  year          = {2005},
  pages         = {211-216},
  note          = {cited By 0},
  abstract      = {Reactive non-stoppable software systems perform tasks continually to face environmental changes. These changes require for adapting strategies of the set of behaviors, or to add new ones according to the ability of the underlying hardware capabilities. Current approaches to runtime adaptation focus only on information which is provided by the implementation phase. Design information is not involved, even though it is extremely useful for adaptation, because they holds the semantics of the regarding software system. We present an evolutionary life cycle for self-evolving software systems by combining the traditional spiral life cycle model, known from software development with a reflective architecture which processes design information. This allows the iterative evolution of software systems at runtime. The reflective architecture (especially the metalevel) evolves the behavior and structure of the software system using its design information. Furthermore, we propose the concept of meta-feedback to react flexibly on the continuous changes of the environment. The proposed life cycle practicability is illustrated through a case study, a robot control software.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {ICEIS 2005 - Proceedings of the 7th International Conference on Enterprise Information Systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-78649238242&partnerID=40&md5=94f5127bcbbcdbcfa471a7510177a341},
}

@Conference{Chen2004,
  author        = {Chen, Z. and Dongarra, J. and Luszczek, P. and Roche, K.},
  title         = {The LAPACK for clusters project: An example of self adapting numerical software},
  year          = {2004},
  volume        = {37},
  pages         = {4461-4470},
  note          = {cited By 4},
  abstract      = {This article describes the context, design, and recent development of the LAPACK for Clusters (LFC) project (LAPACK stands for Linear Algebra PACKage). It has been developed in the framework of Self-Adapting Numerical Software (SANS) since we believe such an approach can deliver the convenience and ease of use of existing sequential environments bundled with the power and versatility of highly-tuned parallel codes that execute on clusters. Accomplishing this task is far from trivial as we argue in the paper by presenting pertinent case studies and possible usage scenarios.},
  art_number    = {STGRD01},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {Proceedings of the Hawaii International Conference on System Sciences},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-12344324505&partnerID=40&md5=9dac5663714b2b6deb89fdf24e102a5a},
}

@Article{Zhao2004,
  author        = {Zhao, X.-P. and Li, M.-S. and Wang, Q. and Chan, K. and Leung, H.},
  title         = {Agent-based self-adaptive software process model},
  journal       = {Ruan Jian Xue Bao/Journal of Software},
  year          = {2004},
  volume        = {15},
  number        = {3},
  pages         = {348-359},
  note          = {cited By 24},
  abstract      = {Traditional software process models are mostly static, mechanical, and passive. Traditional approach requires modeler to determine all the possible conditions the software process will encounter and to define explicitly the solutions into a process model. It lacks the ability to allow further deliberations when the modeled environment changes. This paper presents an Agent-based self-adaptive software process model. In this approach, software process is modeled as peers: process Agents. These software process Agents can adapt themselves to the software process environment and act with initiative and autonomy. When the process environment changes, the process agents can dynamically change their behavior to ensure that the development goal can still be achieved.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-2942715153&partnerID=40&md5=f629d9057082bddb7b6d7bf235639734},
}

@Article{Nowostawski2004,
  author        = {Nowostawski, M. and Purvis, M. and Gecow, A.},
  title         = {Software self-adaptability by means of artificial evolution},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2004},
  volume        = {3038},
  pages         = {552-559},
  note          = {cited By 0},
  abstract      = {Contemporary distributed software systems are reaching extremely high complexity levels which exceeds complexities of known engineering problems to date. Especially open heterogeneous multi-agent systems which may potentially be spread all around the globe, interacting with different changing web-services and web-technologies are exposed to demanding, dynamic and highly unpredictable environments. Traditional control-based handling of adaptability may not be suitable anymore, therefore there is a tendency for exploring different adaptability models inspired by natural/biological phenomena. In this article we review overall design of an adaptive software system based on a simple model of artificial evolution. We propose a new paradigm for handling complexity in dynamic environments based on a theory of self-producing self-adaptive software systems. We have substantial evidence to believe that a bottomup approach based on self-production and self-maintenance may help to build more robust and more flexible self-adapting software systems. This paper introduces the new framework, provides analysis of some results, implications and future research directions toward a complete and selfcontained theory of evolvable and self-adaptable software systems. © Springer-Verlag 2004.},
  document_type = {Article},
  doi           = {10.1007/978-3-540-24688-6_72},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-35048834770&doi=10.1007%2f978-3-540-24688-6_72&partnerID=40&md5=15284447db96faf7cb71794fb2fe62a1},
}

@Article{Salo2004,
  author        = {Salo, O. and Kolehmainen, K. and Kyllönen, P. and Löthman, J. and Salmijärvi, S. and Abrahamsson, P.},
  title         = {Self-adaptability of agile software processes: A case study on post-iteration workshops},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2004},
  volume        = {3092},
  pages         = {184-193},
  note          = {cited By 15},
  abstract      = {None of the agile methods are claimed to fit all development situations. A team should attempt to adapt the methods and practices to fit their specific needs. For that reason agile principles call for self-reflection on a regular basis in order to identify where and how to make improvements. While some systematic approaches on how to execute this self-reflection process effectively have already been proposed, little empirical evidence currently exists. This paper reports empirical results based on a study where a project team conducted a self-reflection process called “post-iteration workshop” in order to improve and optimize the adopted practices in an XP project. Both qualitative and quantitative data were collected from four 1-2 hour workshops. The results show that with less than 4% effort it is possible to hold postiteration workshops that significantly help to improve and optimize practices and enhance the learning and satisfaction of the project team. © Springer-Verlag Berlin Heidelberg 2004.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-540-24853-8_21},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944230805&doi=10.1007%2f978-3-540-24853-8_21&partnerID=40&md5=132e9db2d38389c12fa45649a5cb3cef},
}

@Article{Chen2003,
  author        = {Chen, Z. and Dongarra, J. and Luszczek, P. and Roche, K.},
  title         = {Self-adapting software for numerical linear algebra library routines on clusters},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2003},
  volume        = {2659},
  pages         = {665-672},
  note          = {cited By 0},
  abstract      = {This article describes the context, design, and recent development of the LAPACK for Clusters (LFC) project. It has been developed in the framework of Self-Adapting Numerical Software (SANS) since we believe such an approach can deliver the convenience and ease of use of existing sequential environments bundled with the power and versatility of highly-tuned parallel codes that execute on clusters. Accomplishing this task is far from trivial as we argue in the paper by presenting pertinent case studies and possible usage scenarios. © Springer-Verlag Berlin Heidelberg 2003.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-35248822172&partnerID=40&md5=eb499086e9fbbc2d84931101e30e0a94},
}

@Article{Dongarra2003,
  author        = {Dongarra, J. and Eijkhout, V.},
  title         = {Self-adapting numerical software and automatic tuning of heuristics},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2003},
  volume        = {2660},
  pages         = {759-767},
  note          = {cited By 5},
  abstract      = {Self-Adapting Numerical Software (SANS) systems aim to bridge the knowledge gap that exists between the expertise of domain scientists, and the know-how that is needed to fulfill efficiently their computational demands. This know-how extends to algorith choice, computational grid utilization, and use of properly optimized kernels. A SANS system is a piece of meta software that mediates between the application program and the computational platform so that application scientists - with disparate levels of knowledge of algorithmic and programmatic complexities of the underlying numerical software - can easily realize numerical solvers and efficiently solve their problem. The main component of a SANS system is an Intelligent Agent that automates method selection based on data, algorithm and system attributes. The IA uses heuristics to make its decisions. In this paper we explain how the heuristics of the IA can be tuned over time by redundant testing and using the nature of many applications. © Springer-Verlag Berlin Heidelberg 2003.},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-27644485607&partnerID=40&md5=38ecfba01daa06c80d144b48469daeaf},
}

@Article{Dongarra2003a,
  author        = {Dongarra, J.},
  title         = {High performance computing trends and self adapting numerical software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2003},
  volume        = {2858},
  pages         = {1-9},
  note          = {cited By 0},
  document_type = {Article},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0242370927&partnerID=40&md5=e11f8c548686a44ae873265b07e19c35},
}

@Article{Laws2003,
  author        = {Laws, A.G. and Taleb-Bendiab, A. and Wade, S.J. and Reilly, D.},
  title         = {From wetware to software: A cybernetic perspective of self-adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2003},
  volume        = {2614},
  pages         = {257-280},
  note          = {cited By 5},
  abstract      = {The development and application of software engineering practices over the last thirty years have undoubtedly resulted in the production of significantly improved software. However, the majority of modern software systems remain intrinsically fragile and highly vulnerable to environmental change and require continuing and problematic manual adaptation. In this paper and given the problems inherent in manual software adaptation, the authors argue that imbuing the software system with the ability to self-adapt offers a potentially profitable route forward. For support of this claim, the authors draw on the emerging discipline of self-adaptive software, which seeks to devolve some of the responsibility for maintenance activity to the software itself. Realizing such auto-adaptive capability proves to be a challenging problem. The authors contend that many of the themes, problems and goals currently identified in the field of self-adaptive software bear a striking resemblance to problems that have long formed the basis of enquiry in the well-established field of cybernetics. Classical cybernetics, drawing on mathematical models of the adaptive processes of biological organisms, seeks to identify the general principles of control and communication required for organisms to survive in a changing environment. Consequently, cybernetics appears to offer the potential to apply naturally developed adaptation strategies to software artifacts. Therefore, after discussing these theoretical foundations, this paper reports their practical application by presenting the initial findings from the development of an experimental, agent based, adaptive In-Vehicle Telematics System (IVTS) for use by the Emergency Services. © Springer-Verlag Berlin Heidelberg 2003.},
  document_type = {Review},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-35248823182&partnerID=40&md5=1d142a15a28e5b1bc7d9f0636e5110f6},
}

@Article{Dongarra2003b,
  author        = {Dongarra, J. and Eijkhout, V.},
  title         = {Self-adapting numerical software for next generation applications},
  journal       = {International Journal of High Performance Computing Applications},
  year          = {2003},
  volume        = {17},
  number        = {2},
  pages         = {125-131},
  note          = {cited By 31},
  abstract      = {The challenge for the development of next generation software is the successful management of the complex grid environment while delivering to the scientist the full power of flexible compositions of the available logarithmic alternatives. Self-Adapting Numerical Software (SANS) systems are intended to meet this significant challenge. A SANS system can dramatically improve the ability of computational scientists to model complex, interdisciplinary phenomena with maximum efficiency and a minimum of extra-domain expertise.},
  document_type = {Article},
  doi           = {10.1177/1094342003017002002},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0038322367&doi=10.1177%2f1094342003017002002&partnerID=40&md5=4f19d210ff9e863e2a9df39f5bcadf5e},
}

@Article{Laddaga2003,
  author        = {Laddaga, R. and Robertson, P. and Shrobe, H.},
  title         = {Introduction to self-adaptive software: Applications},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2003},
  volume        = {2614},
  pages         = {1-5},
  note          = {cited By 9},
  abstract      = {The second International Workshop on Self Adaptive Software was held on scenic Lake Balaton, in Hungary during May 17-19, 2001. The workshop was sponsored by the Technical University of Budapest, and organized by Gábor Péceli, Head of the Department of Measurement and Information Systems, assisted by Simon Gyula, Senior Lecturer in the department. This book presents the collection of papers delivered at this workshop, along with some related papers, and reports of the workshop activities. © Springer-Verlag Berlin Heidelberg 2003.},
  document_type = {Article},
  doi           = {10.1007/3-540-36554-0_1},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-35248892959&doi=10.1007%2f3-540-36554-0_1&partnerID=40&md5=587bb258b37436c160e8d16ff6f699af},
}

@Article{Laddaga2003a,
  author        = {Laddaga, R. and Robertson, P. and Shrobe, H.},
  title         = {Results of the second international workshop on self-adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2003},
  volume        = {2614},
  pages         = {281-290},
  note          = {cited By 1},
  abstract      = {The second International Workshop on Self Adaptive Software was held on scenic Lake Balaton, in Hungary during May 17-19, 2001. The workshop was sponsored by the Technical University of Budapest, and organized by Gábor Péceli, Head of the Department of Measurement and Information Systems, assisted by Simon Gyula, Senior Lecturer in the department. This paper reports on the results of three workshop sessions held on the topics of applications, research needed and design patterns, all for self adaptive software. © Springer-Verlag Berlin Heidelberg 2003.},
  document_type = {Article},
  doi           = {10.1007/3-540-36554-0_20},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-35248855531&doi=10.1007%2f3-540-36554-0_20&partnerID=40&md5=06a9e90ae2cca232c34394a3882e0c18},
}

@Article{Laddaga2003b,
  author        = {Laddaga, R. and Robertson, P. and Shrobe, H.},
  title         = {Probabilistic dispatch, dynamic domain architecture, and self-adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2003},
  volume        = {2614},
  pages         = {227-237},
  note          = {cited By 0},
  abstract      = {In this paper we report on a beginning effort in the self adaptive software research area of improving function or method dispatch. We extend type-signature based method dispatch in a dynamic object oriented programming language with probabilistic dispatch, where the choice of method to use is determined by statistical means. This research direction is part of a larger self adaptive software effort at the MIT Artificial Intelligence Laboratory, called Dynamic Domain Architectures. © Springer-Verlag Berlin Heidelberg 2003.},
  document_type = {Article},
  doi           = {10.1007/3-540-36554-0_17},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-35248825097&doi=10.1007%2f3-540-36554-0_17&partnerID=40&md5=8faba29ce1eeeced7a316e46cb7ef345},
}

@Article{2003,
  title         = {2nd International Workshop on Self-Adaptive Software, IWSAS 2001},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2003},
  volume        = {2614},
  pages         = {1-290},
  note          = {cited By 0},
  abstract      = {The proceedings contain 20 papers. The special focus in this conference is on Self-Adaptive Software. The topics include: Introduction to self-adaptive software; managing online self-adaptation in real-time environments; an approach to self-adaptive software based on supervisory control; constraint-guided self-adaptation; model-based adaptivity in real-time scheduling; adaptive agent based system for state estimation using dynamic multidimensional information sources; confidence from self-knowledge and domain knowledge; FDTS in self-adaptive protocol specification; frame-based self-adaptive test case selection; model-based diagnosis for information survivability; exercising qualitative control in autonomous adaptive survivable systems; dynamic change in workflow-based coordination of distributed services; a smart spell checker system implementation using adaptive software architecture; design principles for resource management systems for intelligent spaces; adaptivity in agent-based systems via interplay between action selection and norm selection; probabilistic dispatch, dynamic domain architecture, and self-adaptive software; a cybernetic perspective of self-adaptive software and results of the second international workshop on self-adaptive software.},
  document_type = {Conference Review},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959048052&partnerID=40&md5=e192b7647128d61fed0d8d2a02acaf31},
}

@Article{Karsai2003,
  author        = {Karsai, G. and Ledeczi, A. and Sztipanovits, J. and Peceli, G. and Simon, G. and Kovacshazy, T.},
  title         = {An approach to self-adaptive software based on supervisory control},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2003},
  volume        = {2614},
  pages         = {24-38},
  note          = {cited By 19},
  abstract      = {Self-adaptive software systems use observations of their own behavior, and that of their environment, to select and enact adaptations in accordance with some objective(s). This adaptation is a higher-level system function that performs optimizations, manages faults, or otherwise supports achieving an objective via changes in the running system. In this paper, we show how this capability can be realized using techniques found in hierarchical control systems, and we discuss interrelated issues of stability, assurance, and implementation. © Springer-Verlag Berlin Heidelberg 2003.},
  document_type = {Article},
  doi           = {10.1007/3-540-36554-0_3},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-35248861664&doi=10.1007%2f3-540-36554-0_3&partnerID=40&md5=df81e7d4ad1b1cc389bdc039883742b2},
}

@Conference{Baeck2002,
  author        = {Bäck, T.},
  title         = {Adaptive Business Intelligence Based on Evolution Strategies: Some Application Examples of Self-Adaptive Software},
  year          = {2002},
  volume        = {6},
  pages         = {2-6},
  note          = {cited By 0},
  abstract      = {Self-adaptive software is one of the key discoveries in the field of evolutionary computation, originally invented in the framework of so-called Evolution Strategies in Germany. Self-adaptivity enables the algorithm to dynamically adapt to the problem characteristics and even to cope with changing environmental conditions - as they occur in unforeseeable ways in many real-world business applications. In evolution strategies, self-adaptability is generated by means of an evolutionary search process that operates on the solutions generated by the method as well as on the evolution strategy's parameters, i.e., the algorithm itself. By focusing on a basic algorithmic variant of evolution strategies, the fundamental idea of self-adaptation is outlined in this paper. Applications of evolution strategies for NuTech's clients include the whole range of business tasks, including R & D, technical design, control, production, quality control, logistics, and management decision support. While such examples can of course not be disclosed, we illustrate the capabilities of evolution strategies by giving some simpler application examples to problems occurring in traffic control and engineering.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {Proceedings of the Joint Conference on Information Sciences},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-18844472915&partnerID=40&md5=d8c55cf0430ec9e72d6d9bf80fd1210e},
}

@Conference{DeLemos2002,
  author        = {De Lemos, R. and Fiadeiro, J.L.},
  title         = {An Architectural Support for Self-Adaptive Software for Treating Faults},
  year          = {2002},
  pages         = {39-42},
  note          = {cited By 21},
  abstract      = {Considering the current trend of building systems from existing components that allow neither code inspection nor change, the solution for enabling dynamic adaptation of software systems should not be intrusive in the way that components should be designed. The architectural approach for treating faults described in this paper, instead of providing mechanisms and techniques at the component level, it relies on the interactions between components for obtaining flexible software structures that are nevertheless robust to the occurrence of undesirable events.},
  document_type = {Conference Paper},
  doi           = {10.1145/582128.582136},
  groups        = {scopus},
  journal       = {Proceedings of the first ACM SIGSOFT Workshop on Self-Healing Systems (WOSS'02)},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0141649402&doi=10.1145%2f582128.582136&partnerID=40&md5=3090005fe519f76468576a7ea7329cee},
}

@Conference{Laws2002,
  author        = {Laws, A. and Allen, M. and Taleb-Bendiab, A.},
  title         = {Normative services for self-adaptive software to support dependable enterprise information systems},
  year          = {2002},
  volume        = {2},
  pages         = {954-961},
  note          = {cited By 0},
  abstract      = {The development and application of software engineering practices over the last thirty years have undoubtedly resulted in the production of significantly improved software, yet the majority of modern software systems remain intrinsically fragile. Nowhere is this more apparent than in those systems that attempt to model real world situations. Here, the abstractions and assumptions made in attempting to capture the unbounded, unspecifiable richness of the real world in the finite and static medium of software, inevitably result in systems that are deeply riven with uncertainty. Such systems remain highly vulnerable to environmental change and consequently require continuing adaptation. In this paper, the authors concede to the inevitability of such uncertainty and argue that the key to the problem lies in the adaptability of the software system. Moreover, given the problems inherent in manual software adaptation, it is further contended that imbuing the software system with a degree of autonomy presents a seductive means to cope with adversity and uncertainty. For theoretical support of this claim, the authors make recourse to the field of cybernetics, an area well-versed in the problems of adaptive systems. Further support is drawn from the emerging disciple of self-adaptive software, which seeks to devolve some of the responsibility for maintenance activity to the software itself through the use of a federated normative systems approach and systems' self-awareness. The paper presents a brief review of the recent work in self-adaptive software and an overview of multi-agent systems. These notions are then combined using the managerial cybernetics of Beer's Viable System Model (VSM) as a conceptual guide, to underpin the development of normative services for the control and management of complex adaptive software. The paper continues with the presentation of a framework and design for intelligent adaptive systems and concludes by providing support for this approach through examples drawn from an on-going research project in evolving dependable services provision.},
  document_type = {Conference Paper},
  groups        = {scopus},
  journal       = {ICEIS 2002 - Proceedings of the 4th International Conference on Enterprise Information Systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908879435&partnerID=40&md5=6e441c9e60a2afe2cfdc82dca4a42a7a},
}

@Article{Meng2001,
  author        = {Meng, A.C.},
  title         = {On evaluating self-adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2001},
  volume        = {1936},
  pages         = {65-73},
  note          = {cited By 6},
  abstract      = {This article attempts to address the issues of evaluating self-adaptive software systems, an emerging discipline. Since the field is in its early phase and has not produced enough mature systems for consideration, we try to approach the evaluation issue by considering a descriptive model of selfadaptive software based on control systems. Taking inspirations and using the vocabularies from the feedforward and feedback control paradigms, this article will illustrate the analogous properties in self-adaptive software and its evaluation consideration such as stability and robustness. Existing approaches to self-adaptive software take different aspects, ranging from viewing it as new programming paradigm, new architecture style, new modeling paradigm to a new software engineering principle. This article tries to elicit the evaluation consideration from these different aspects. © Springer-Verlag Berlin Heidelberg 2001.},
  document_type = {Conference Paper},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957019741&partnerID=40&md5=d560e26ab7dd16150e7e001957a70b77},
}

@Article{Dowling2001,
  author        = {Dowling, J. and Cahill, V.},
  title         = {The K-component architecture meta-model for self-adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2001},
  volume        = {2192},
  pages         = {81-88},
  note          = {cited By 83},
  abstract      = {Software architectures have recently emerged as a level of design concerned with specifying the overall structure of a system. Traditionally, software architectures only provide static descriptions of the participants and interaction structures in a system. Dynamic software architectures, however, can be reconfigured at runtime and therefore provide support for building dynamically adaptable applications. Software architectures can be specified using architectural reflection. In this paper we introduce an architecture meta-model that realises a dynamic software architecture. The architecture meta-model reifies the configuration graph of the architecture and is automatically generated from our component definitions and implementation language source-code. We show how graph transformations that re-write the architecture’s configuration graph can be implemented as reflective programs, called adaptation contracts. Adaptation contracts are written in a separate programming language, thus cleanly separating the adaptation code from the computational code. Adaptation contracts can even be replaced at run-time. They are deployed in a run-time meta-level architecture that addresses issues of system safety, integrity and overhead during graph transformation. The paper also describes a prototype implementation of our model called K-Components. © Springer-Verlag Berlin Heidelberg 2001.},
  document_type = {Conference Paper},
  doi           = {10.1007/3-540-45429-2_6},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947205814&doi=10.1007%2f3-540-45429-2_6&partnerID=40&md5=1f61eec15376b7728e914f7497e62bb5},
}

@Article{Pavlovic2001,
  author        = {Pavlović, D.},
  title         = {Towards semantics of self-adaptive software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2001},
  volume        = {1936},
  pages         = {50-64},
  note          = {cited By 6},
  abstract      = {When people perform computations, they routinely monitor their results, and try to adapt and improve their algorithms when a need arises. The idea of self-adaptive software is to implement this common facility of human mind within the frameworkof the standard logical methods of software engineering. The ubiquitous practice of testing, debugging and improving programs at the design time should be automated, and established as a continuing run time routine. Technically, the taskth us requires combining functionalities of automated software development tools and of runtime environments. Such combinations lead not just to challenging engineering problems, but also to novel theoretical questions. Formal methods are needed, and the standard techniques do not suffice. As a first contribution in this direction, we present a basic mathematical frameworksuitable for describing self-adaptive software at a high level of semantical abstraction. A static view leads to a structure akin to the Chu construction. An dynamic view is given by a coalgebraic presentation of adaptive transducers. © Springer-Verlag Berlin Heidelberg 2001.},
  document_type = {Conference Paper},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957038863&partnerID=40&md5=a34122674e8d77517e2708cd0a77b96d},
}

@Conference{Rammig1998,
  author        = {Rammig, F.J. and Grösbrink, S. and Stahl, K. and Zhao, Y.},
  title         = {Designing self-adaptive embedded real-time software-Towards system engineering of self-adaptation},
  year          = {1998},
  volume        = {1998-January},
  pages         = {37-42},
  note          = {cited By 2},
  abstract      = {Upcoming interlinked embedded systems will be confronted with unexpectedly changing environments, which makes online adaptation without manual interference necessary. There is a need for appropriate system architectures and novel design approaches. In this paper, we discuss general concepts of self-adaptive real-time systems. Furthermore, specific system engineering techniques solving two important aspects of such a paradigm are presented. We discuss how the necessity for adaptation can be identified using Online Model Checking and how self-adapting safety guards can be designed by means of Artificial Immune Systems. Finally, we present an approach to integrating these techniques into an underlying platform architecture based on mixed-criticality virtualization. © 2015 ieee.},
  art_number    = {7091163},
  document_type = {Conference Paper},
  doi           = {10.1109/sbesc.2014.15},
  groups        = {scopus},
  journal       = {European Signal Processing Conference},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85019557466&doi=10.1109%2fsbesc.2014.15&partnerID=40&md5=4f6700715ff6845e1c8162a440f5513c},
}

@Article{Sztipanovits1998,
  author        = {Sztipanovits, J. and Karsai, G. and Bapty, T.},
  title         = {Self-Adaptive Software: For Signal Processing},
  journal       = {Communications of the ACM},
  year          = {1998},
  volume        = {41},
  number        = {5},
  pages         = {66-73},
  note          = {cited By 46},
  document_type = {Article},
  doi           = {10.1145/274946.274958},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0032058009&doi=10.1145%2f274946.274958&partnerID=40&md5=134d3d9850673c3cdc52ccbb9a15c58f},
}

@Article{Ginsburg1986,
  author        = {Ginsburg, S.},
  title         = {Self-adapting menus for CAD software},
  journal       = {Computers and Structures},
  year          = {1986},
  volume        = {23},
  number        = {4},
  pages         = {475-479},
  note          = {cited By 0},
  abstract      = {CAD programs usually employ menus for enhancing user-machine interaction. This paper describes an approach which enables the user to obtain improved menu organization. The approach is based on recording the sequence of operations which take place during a design session or several sessions, and modifying the menus accordingly. The user is also allowed to further modify the menus interactively. This capability improves the performance of the designer, especially when using complex CAD or expert systems which offer a large variety of options. The self-adapting menus simplify the selection process, and result in custom-made software which is more suited for the individual user. © 1986.},
  document_type = {Article},
  doi           = {10.1016/0045-7949(86)90090-8},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0022564004&doi=10.1016%2f0045-7949%2886%2990090-8&partnerID=40&md5=84aa40ad2da980b818a23f2ef007be27},
}

@Conference{Ginsburg1986a,
  author        = {Ginsburg, Shlomo},
  title         = {SELF-ADAPTING CAD SOFTWARE.},
  year          = {1986},
  pages         = {406-410},
  note          = {cited By 0},
  abstract      = {An approach for enhancing CAD and other interactive software is described. The goals of the approach are bifold, to customize complex programs which employ computer graphics, and to improve the development process of such software. The idea on which the approach is based is to record user operations, and modify the graphics accordingly.},
  document_type = {Conference Paper},
  groups        = {scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0022506423&partnerID=40&md5=4c5dcb9b2fe5b6e34a9b9a0136bd98ca},
}

@Article{Son2015,
  author   = {Yunsik Son and Jin-Woo Jung},
  journal  = {Procedia Computer Science},
  title    = {Self-Management Technique for Adaptive Robot Software based on Task Environment Similarity},
  year     = {2015},
  issn     = {1877-0509},
  note     = {The 10th International Conference on Future Networks and Communications (FNC 2015) / The 12th International Conference on Mobile Systems and Pervasive Computing (MobiSPC 2015) Affiliated Workshops},
  pages    = {538 - 543},
  volume   = {56},
  abstract = {In this paper, we propose a novel method by which the robot can choose the most suitable software module for the given task based on the evaluation of task environment, and the resulting relationship between the environmental information and robot software module is managed by the robot itself. In addition, the performance of the robot can be improved through the update process of the E-S(Environment-S/W module) relationship information when the new environmental information or new robot software modules are given. The effectiveness of the proposed self-management technique is shown by the experiments with 70 random maps, which shows the improvement of performance as the task continues to proceed.},
  doi      = {https://doi.org/10.1016/j.procs.2015.07.248},
  groups   = {sciencedirect, [guan:]},
  keywords = {Self-Update of Software Modules, Environment-S/W Module Relationship Information, Similarity of Task Environments, Adaptive Robot Software Framework.},
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050915017299},
}

@Article{Wang2012c,
  author   = {Tieshan Wang and Bin Li and Lingjun Zhao and Xiaowei Zhang},
  journal  = {Physics Procedia},
  title    = {A goal-driven Self-adaptive Software System Design Framework based on Agent},
  year     = {2012},
  issn     = {1875-3892},
  note     = {International Conference on Applied Physics and Industrial Engineering 2012},
  pages    = {2010 - 2016},
  volume   = {24},
  abstract = {The methods currently apply to ensure the robustness and dependability of software system do not effectively map to more open, dynamic environments. A new goal-driven self-adaptive software system design framework based on agent is proposed. Every layer of our model provides specific conceptual descriptions and domain capabilities of their domain. let goal be the core modeling concept, a self-adaptive software system modeling framework driven by goal is proposed; let Agent be core implementing entity, the self-adaptive software system is build in open environment.},
  doi      = {https://doi.org/10.1016/j.phpro.2012.02.295},
  groups   = {sciencedirect, [guan:]},
  keywords = {Goal, Role, Multi-Agent Systems, Goal model},
  url      = {http://www.sciencedirect.com/science/article/pii/S1875389212003380},
}

@Article{Ginsburg1986b,
  author   = {Shlomo Ginsburg},
  journal  = {Computers \& Structures},
  title    = {Self-adapting menus for CAD software},
  year     = {1986},
  issn     = {0045-7949},
  number   = {4},
  pages    = {475 - 479},
  volume   = {23},
  abstract = {CAD programs usually employ menus for enhancing user-machine interaction. This paper describes an approach which enables the user to obtain improved menu organization. The approach is based on recording the sequence of operations which take place during a design session or several sessions, and modifying the menus accordingly. The user is also allowed to further modify the menus interactively. This capability improves the performance of the designer, especially when using complex CAD or expert systems which offer a large variety of options. The self-adapting menus simplify the selection process, and result in custom-made software which is more suited for the individual user.},
  doi      = {https://doi.org/10.1016/0045-7949(86)90090-8},
  groups   = {sciencedirect, [guan:]},
  url      = {http://www.sciencedirect.com/science/article/pii/0045794986900908},
}

@InCollection{Salama2017b,
  author    = {M. Salama and R. Bahsoon and N. Bencomo},
  booktitle = {Managing Trade-Offs in Adaptable Software Architectures},
  publisher = {Morgan Kaufmann},
  title     = {Chapter 11 - Managing Trade-offs in Self-Adaptive Software Architectures: A Systematic Mapping Study},
  year      = {2017},
  address   = {Boston},
  editor    = {Ivan Mistrik and Nour Ali and Rick Kazman and John Grundy and Bradley Schmerl},
  isbn      = {978-0-12-802855-1},
  pages     = {249 - 297},
  abstract  = {Self-adaptation has been driven by the need to achieve and maintain quality attributes in the face of the continuously changing requirements, as well as the uncertain demand during run-time. Designing architectures that exhibit a good trade-off between multiple quality attributes is challenging, especially in the case of self-adaptive software systems, due to the complexity, heterogeneity, and ultra-large scale of modern software systems. This challenge increases with the dynamic, open, and uncertain operating environment, as well as the need for complying to environmental, regulatory, and sustainability requirements; such as energy consumption regulations. This study aims at analyzing the research landscape that have explicitly addressed trade-offs management for self-adaptive software architectures, to obtain a comprehensive overview on the current state of research on this specialized area. A systematic mapping study was conducted to identify and analyze research works related to analyzing and managing trade-offs to support decision-making for self-adaptive software architectures. Twenty primary studies were evidently selected and analyzed to classify software paradigms, quality attributes considered, and the self-* properties that drive trade-offs management. The results show constant interest in finding solutions for trade-offs management at design-time and run-time, as well as the success of research initiatives even when new research challenges are found. The findings call for foundational framework to analyze and manage trade-offs for self-adaptive software architectures that can explicitly consider specific multiple quality attributes, the run-time dynamics, the uncertainty of the environment and the complex challenges of modern, ultra-large scale systems in particular given software paradigms.},
  doi       = {https://doi.org/10.1016/B978-0-12-802855-1.00011-3},
  groups    = {sciencedirect, [guan:]},
  keywords  = {Self-adaptation, Self-adaptive architecture, Software architecture, Trade-offs management, Systematic mapping study, Self-awareness, Long-living software},
  url       = {http://www.sciencedirect.com/science/article/pii/B9780128028551000113},
}

@InCollection{Malek2017,
  author    = {S. Malek and K. Canavera and N. Esfahani},
  booktitle = {Managing Trade-Offs in Adaptable Software Architectures},
  publisher = {Morgan Kaufmann},
  title     = {Chapter 6 - Automated Inference Techniques to Assist With the Construction of Self-Adaptive Software},
  year      = {2017},
  address   = {Boston},
  editor    = {Ivan Mistrik and Nour Ali and Rick Kazman and John Grundy and Bradley Schmerl},
  isbn      = {978-0-12-802855-1},
  pages     = {131 - 154},
  abstract  = {The state-of-the-art in engineering self-adaptive software systems involves manual construction of numerous models, which are then used at runtime for making and effecting adaptation decisions. For instance, predictive analytical models (e.g., queuing network models, Markov models) are constructed to assess the impact of adaptation choices on the system’s quality objectives (e.g., performance, reliability) at runtime. The construction of such models is unwieldy and impractical for use by practitioners. This chapter describes an alternative approach for engineering adaptive software that aims to alleviate the challenges of manually developing such models. The approach heavily draws on inference techniques to derive automatically the models necessary for building an adaptive architecture. In particular, the chapter provides an overview of two complementary thrusts of recent research: (1) A machine learning approach to automatically derive the models predicting the impact of architectural change (i.e., enabling a particular capability at runtime, such as caching or authentication) on the system’s quality objectives (e.g., response time, availability). These types of models are used to make adaptation decisions to fix problems that may arise at runtime. (2) A data mining approach to derive automatically the models expressing the probabilistic dependencies between the architectural elements (components) of the system. These types of models are used to ensure changes in the running software do not create inconsistency, and jeopardize its functionality. In addition to describing the progress in this area, the chapter also covers the remaining research challenges and areas of future research in employing automated inference techniques in the construction of adaptive architectures.},
  doi       = {https://doi.org/10.1016/B978-0-12-802855-1.00006-X},
  groups    = {sciencedirect, [guan:]},
  keywords  = {Self-adaptive software, Software architecture, Machine learning, Data mining},
  url       = {http://www.sciencedirect.com/science/article/pii/B978012802855100006X},
}

@Article{Arcelli2020b,
  author   = {Davide Arcelli},
  journal  = {Procedia Computer Science},
  title    = {Exploiting Queuing Networks to Model and Assess the Performance of Self-Adaptive Software Systems: A Survey},
  year     = {2020},
  issn     = {1877-0509},
  note     = {The 11th International Conference on Ambient Systems, Networks and Technologies (ANT) / The 3rd International Conference on Emerging Data and Industry 4.0 (EDI40) / Affiliated Workshops},
  pages    = {498 - 505},
  volume   = {170},
  abstract = {Self-adaptation has emerged as a primary concern in the context of modern software systems, due to the high dynamicity of the environments where they operate, which implies the need for such systems to properly face significant degrees of uncertainty. To this aim, much work has been done, mainly by coupling autonomic managers to the managed subsystem which perceives and affects the environment through its sensors and actuators, respectively. Such coupling often results into MAPE-K feedback loop(s), i.e. a Knowledge (K)-based architectural model that divides the adaptation process into four activities, namely Monitor (M), Analyze (A), Plan (P) and Execute (E). Performance modeling notations, analysis methods and tools, have been exploited and coupled to other kinds of techniques (e.g. control theory, machine learning) for modeling and assessing the performance of autonomic managers, possibly aimed at supporting the identification of more convenient architectural alternatives. Since moving in such a big arena is not trivial and it is easy to be overwhelmed, in this literature survey, we focus on a particular performance modeling paradigm, namely Queuing Networks, with the aim of clarifying the state-of-art in exploiting such a notation to model and assess performance of Self-Adaptive Software Systems. We conclude by bringing out some research opportunities that may be worth exploring in the near future.},
  doi      = {https://doi.org/10.1016/j.procs.2020.03.108},
  groups   = {sciencedirect, [guan:]},
  keywords = {Self-Adaptive Software Systems, Software Architectures, Autonomous Systems, Performance Engineering, Queuing Networks},
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050920305469},
}

@Article{Hudec2019,
  author   = {Ján Hudec},
  journal  = {IFAC-PapersOnLine},
  title    = {Enhancement of Adaptive Software-Based Self Test Generation of Embedded Processors Cores},
  year     = {2019},
  issn     = {2405-8963},
  note     = {16th IFAC Conference on Programmable Devices and Embedded Systems PDES 2019},
  number   = {27},
  pages    = {56 - 61},
  volume   = {52},
  abstract = {The paper deals with automatic software-based test generation for processors as basic blocks of current complex systems on chip and embedded systems. Testing processors needs continually new test generation methods, algorithms and test application techniques for their verification, manufacture and infield testing and reliable life-time run. The functional tests of processors are mainly generated over an instruction set architecture and processor model description. Such types of tests are serving as additional tests to structural testing or as tests used in verification. They run in similar form and frequency as real programmes. Such tests are categorized as the software-based self tests. A metric for quality evaluation of the software-based tests is obviously provided by code coverage of a processor model. A functional test generation method is based on VHDL model of processors and genetic algorithms with using various evolutionary strategies. The contribution to the SBST methods based on GAs using the latest defined ES was identified. Functionality and effectiveness of the developed methods were evaluated in the implemented system AGenMIX with enhanced function of genetic algorithms computation over three types of RISC processor.},
  doi      = {https://doi.org/10.1016/j.ifacol.2019.12.732},
  groups   = {sciencedirect, [guan:]},
  keywords = {Processor functional test generation, software-based self test, genetic algorithms, evolutionary strategies, VHDL code coverage, fitness function, test simulation, verification, validation},
  url      = {http://www.sciencedirect.com/science/article/pii/S2405896319326813},
}

@Article{Patikirikorala2012b,
  author   = {Tharindu Patikirikorala and Alan Colman and Jun Han and Liuping Wang},
  journal  = {Journal of Systems and Software},
  title    = {An evaluation of multi-model self-managing control schemes for adaptive performance management of software systems},
  year     = {2012},
  issn     = {0164-1212},
  note     = {Self-Adaptive Systems},
  number   = {12},
  pages    = {2678 - 2696},
  volume   = {85},
  abstract = {Due to the increasing complexity of software systems and the dynamic unpredictable environments they operate in, methodologies to incorporate self-adaptation into these systems have been investigated in recent years. The feedback control loop has been one of the key concepts used in building self-adaptive software systems to manage their performance among other quality aspects. In order to design an effective feedback control loop for a software system, modeling the behavior of the software system with sufficient accuracy is paramount. In general, there are many environmental conditions and system states that impact on the performance of a software system. As a consequence, it is impractical to characterize the diverse behavior of such a software system using a single system model. To represent such highly nonlinear behavior and to provide effective runtime control, the design, integration and self-management (automatic switching) of multiple system models and controllers are required. In this paper, we investigate a control engineering approach, called Multi-Model Switching and Tuning (MMST) adaptive control, to assess its effectiveness for the adaptive performance management of software systems. We have conducted a range of experiments with two of the most promising MMST adaptive control schemes under different operating conditions of a representative software system. The experiment results have shown that the MMST control schemes are superior in managing the performance of the software system, compared with a number of other control schemes based on a single model. We have also investigated the impact of the configuration parameters for the MMST schemes to provide design guidance. A library of MMST schemes has been implemented to aid the software engineer in developing MMST-based self-managing control schemes for software systems.},
  doi      = {https://doi.org/10.1016/j.jss.2012.05.077},
  groups   = {sciencedirect, [guan:]},
  keywords = {Feedback control, Adaptive control, Reconfiguring control, Self-managing systems, Quality of service, Multi-model},
  url      = {http://www.sciencedirect.com/science/article/pii/S0164121212001628},
}

@Article{Tajalli2014,
  author   = {Tajalli, Hossein and Medvidović, Nenad},
  journal  = {Software: Practice and Experience},
  title    = {iDARE—a reference architecture for integrated software environments},
  year     = {2014},
  number   = {3},
  pages    = {299-316},
  volume   = {44},
  abstract = {SUMMARYTraditionally, software development environments have tended to treat a system's development-time activities separately from its run-time. After a system is in operation, it frequently needs to be maintained and evolved. In traditional environments, this results in frequent relocations of a system between the disjoint development and run-time environments, which is undesirable for several reasons. A more effective solution is to couple the development and run-time environments to directly monitor and adapt running systems. Given the growing need for interaction between development-time and run-time aspects of modern software systems, it is important to understand development and run-time environments, and their relationship. To this end, we study and classify a wide range of software development environments on the basis of their level of interaction with the corresponding run-time environments. Particularly, we identify, study, and characterize Self-Adaptive Life-cycle Environments (SALEs), an emerging class of modern development environments that are tightly integrated with run-time environments. We reify our study of the development environments into a novel reference architecture, iDARE, that captures and differentiates the architectures of software environments – from those, such as traditional development environments, that have no interaction with the run-time environments, to the ones, such as SALEs, that are tightly integrated with the run-time environments. We use iDARE to highlight several shortcomings of existing SALEs. Adherence to iDARE has the potential to improve certain quality properties of the integrated development and run-time environments, such as adaptability, fault-tolerance, robustness, availability, and resource consumption. We identify a number of opportunities for future research. Copyright © 2013 John Wiley \& Sons, Ltd.},
  doi      = {10.1002/spe.2207},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2207},
  groups   = {wiley, guan:6},
  keywords = {reference architecture, development environment, run-time environment, run-time tool, self-adaptation},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2207},
}

@InBook{Vassev2018,
  author    = {Vassev, Emil and Hinchey, Mike},
  chapter   = {7},
  pages     = {121-138},
  publisher = {John Wiley \& Sons, Ltd},
  title     = {Toward Artificial Intelligence through Knowledge Representation for Awareness},
  year      = {2018},
  isbn      = {9781119174240},
  abstract  = {Software-intensive systems require considerable knowledge provided by software engineers to help explain the problem domain. Still today, computers “talk” in a “binary” language that is simple, logical, and sound, with none of the ambiguity that characterizes human language. Artificial intelligence requires knowledge to be given to computers in well-founded computational structures that programs can translate into binary computer language. Such knowledge-representation structures generally take the form of primitives such as rules, frames, semantic networks, concept maps, ontologies, and logical expressions. This chapter walks the reader through the field of knowledge representation to consecutively introduce a new, yet promising knowledge-representation technique emphasizing self-adaptation behavior. Furthermore, the chapter introduces the notion of artificial awareness and demonstrates how knowledge representation can be used to integrate awareness in system behavior.},
  booktitle = {Software Technology: 10 Years of Innovation in IEEE Computer},
  doi       = {10.1002/9781119174240.ch7},
  eprint    = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/9781119174240.ch7},
  groups    = {wiley, guan:6},
  keywords  = {artificial intelligence, awareness model, KnowLang, knowledge representation, logical reasoning, self-adaptive behavior, statistical reasoning},
  url       = {https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119174240.ch7},
}

@Article{Floch2013,
  author   = {Floch, J. and Frà, C. and Fricke, R. and Geihs, K. and Wagner, M. and Lorenzo, J. and Soladana, E. and Mehlhase, S. and Paspallis, N. and Rahnama, H. and Ruiz, P.A. and Scholz, U.},
  journal  = {Software: Practice and Experience},
  title    = {Playing MUSIC — building context-aware and self-adaptive mobile applications},
  year     = {2013},
  number   = {3},
  pages    = {359-388},
  volume   = {43},
  abstract = {SUMMARY Although the idea of context-awareness was introduced almost two decades ago, few mobile software applications are available today that can sense and adapt to their run-time environment. The development of context-aware and self-adaptive applications is complex and few developers have experience in this area. On the basis of several demonstrators built by the joint European research project MUSIC, this paper describes typical context and adaptation features relevant for the development of context-aware and self-adaptive mobile applications. We explain how the demonstrators were realised using the open-source platform MUSIC and present the feedback of the developers of these demonstrators. The main contribution of this paper is to show how the development complexity of context-aware and self-adaptive mobile applications can be mastered by using an adaptation framework such as MUSIC. Copyright © 2012 John Wiley \& Sons, Ltd.},
  doi      = {10.1002/spe.2116},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2116},
  groups   = {wiley, guan:6},
  keywords = {context awareness, self-adaptive software, model-driven development, middleware},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2116},
}

@InBook{2008,
  chapter   = {8},
  pages     = {323-387},
  publisher = {John Wiley \& Sons, Ltd},
  title     = {Architecting IT All},
  year      = {2008},
  isbn      = {9780470461808},
  abstract  = {Summary This chapter contains sections titled: A Problem Shared, Distributed Data as Yet Unshared, and Knowledge from IT Architecture is a Combined Discipline of Art, Science, and Engineering A Balanced View of Art, Science, and Engineering for an Optimized Solution for Business, People, and Technology IT Architecture Provides a Three-Way Bridge Between Business, People, and Technology The Purpose: Help Healthcare Professionals to Make Informed Decisions for Policies, Diagnoses, Treatment, and Prognoses Clinical Email System for Secure Exchange of Data Among Healthcare Professionals Diagnostic Tests and Even Surgery can be Performed Remotely over the Network via Telemedicine Access Rights Based on Identity, Roles, Purposes, Logical Locations The Electronic Data Vault for Secure Management of Personal Health Records “Translational Research” for Personalized, Preventative, Wellness-Oriented Healthcare Biomedical Informatics for Enablement of Translational Research Extreme Epidemiology: Integration of Multidimensional Heterogeneous Data for Translational Life Sciences Research Active Data Repository for Multidimensional Data Management for Translational Life Sciences Research An Active, as Opposed to Passive, Multidimensional Data Repository for Biomedical Informatics From Data to Information, and to Knowledge, through Mining Multidimensional Data Rule to Network to Clinical Insight: A Worked Example An Orientation to the Classical Way that Healthcare Looks at Statistics More General Data Analytics How to Mobilize Translational Life Sciences Research for Information-Based Medicine Self-Adaptive Computing Based on Dynamic Software Engineering Approach Ontology-Based Semantic Metadata Management for Self-Describing Data Data-Centric Computing Framework for Translational Research So What?—A Conclusion},
  booktitle = {The Engines of Hippocrates},
  doi       = {10.1002/9780470461808.ch8},
  eprint    = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/9780470461808.ch8},
  groups    = {wiley, guan:6},
  keywords  = {data-centric computing model, self-describing data based on ontology-based metadata management, self-adaptive software engineering model},
  url       = {https://onlinelibrary.wiley.com/doi/abs/10.1002/9780470461808.ch8},
}

@Article{Magableh2020,
  author   = {Magableh, Basel and Almiani, Muder},
  journal  = {Software: Practice and Experience},
  title    = {A deep recurrent Q network towards self-adapting distributed microservice architecture},
  year     = {2020},
  number   = {2},
  pages    = {116-135},
  volume   = {50},
  abstract = {Summary One desired aspect of microservice architecture is the ability to self-adapt its own architecture and behavior in response to changes in the operational environment. To achieve the desired high levels of self-adaptability, this research implements distributed microservice architecture model running a swarm cluster, as informed by the Monitor, Analyze, Plan, and Execute over a shared Knowledge (MAPE-K) model. The proposed architecture employs multiadaptation agents supported by a centralized controller, which can observe the environment and execute a suitable adaptation action. The adaptation planning is managed by a deep recurrent Q-learning network (DRQN). It is argued that such integration between DRQN and Markov decision process (MDP) agents in a MAPE-K model offers distributed microservice architecture with self-adaptability and high levels of availability and scalability. Integrating DRQN into the adaptation process improves the effectiveness of the adaptation and reduces any adaptation risks, including resource overprovisioning and thrashing. The performance of DRQN is evaluated against deep Q-learning and policy gradient algorithms, including (1) a deep Q-learning network (DQN), (2) a dueling DQN (DDQN), (3) a policy gradient neural network, and (4) deep deterministic policy gradient. The DRQN implementation in this paper manages to outperform the aforementioned algorithms in terms of total reward, less adaptation time, lower error rates, plus faster convergence and training time. We strongly believe that DRQN is more suitable for driving the adaptation in distributed services-oriented architecture and offers better performance than other dynamic decision-making algorithms.},
  doi      = {10.1002/spe.2778},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2778},
  groups   = {wiley, guan:6},
  keywords = {deep Q-learning networks, multiagent environment, policy approximation, Q-learning algorithms, recurrent Q-learning networks, reinforcement learning, self-adaptive architectures, service-oriented architecture},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2778},
}

@InBook{2007a,
  chapter   = {14},
  pages     = {261-274},
  publisher = {John Wiley \& Sons, Ltd},
  title     = {Cultural Algorithms},
  year      = {2007},
  isbn      = {9780470512517},
  abstract  = {Summary This chapter contains sections titled: Culture and Artificial Culture Basic Cultural Algorithm Belief Space Fuzzy Cultural Algorithm Advanced Topics Applications Assignments},
  booktitle = {Computational Intelligence},
  doi       = {10.1002/9780470512517.ch14},
  eprint    = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/9780470512517.ch14},
  groups    = {wiley, guan:6},
  keywords  = {standard evolutionary algorithms, cultural algorithm (CA) and dual-inheritance system, self-adapting control parameters, situational and normative knowledge component, fuzzy acceptance function, multi-objective optimization, interval-constraint networks, nondominated solutions},
  url       = {https://onlinelibrary.wiley.com/doi/abs/10.1002/9780470512517.ch14},
}

@Article{ReddyManumachu2019,
  author   = {Reddy Manumachu, Ravi and Lastovetsky, Alexey L.},
  journal  = {Concurrency and Computation: Practice and Experience},
  title    = {Design of self-adaptable data parallel applications on multicore clusters automatically optimized for performance and energy through load distribution},
  year     = {2019},
  note     = {e4958 cpe.4958},
  number   = {4},
  pages    = {e4958},
  volume   = {31},
  abstract = {Summary Self-adaptability is a highly preferred feature in HPC applications. A crucial building block of a self-adaptable application is a data partitioning algorithm that must possess several essential qualities apart from low runtime and memory costs. On modern platforms composed of multicore CPU processors, data partitioning algorithms striving to solve the bi-objective optimization problem for performance and energy (BOPPE) face a formidable challenge. They must take into account the new complexities inherent in these platforms such as severe resource contention and non-uniform memory access (NUMA). Novel model-based methods and data partitioning algorithms have been proposed that address the challenge. However, these methods take as input full functional performance and energy models (FPM and FEM), which have prohibitively high model construction costs. Therefore, they are not suitable for employment in self-adaptable applications. In this paper, we present a self-adaptable data partitioning algorithm called ADAPTALEPH, which solves BOPPE on homogeneous clusters of multicore CPUs. Unlike the state-of-the-art solving BOPPE that take as inputs full FPM and FEM, it constructs partial FPM and FEM during its execution using all the available processors. It returns a locally Pareto-optimal set of solutions, which are the heterogeneous workload distributions that achieve inter-node optimization of data-parallel applications for performance and energy. We experimentally study the efficiency of ADAPTALEPH for three data-parallel applications, ie, matrix-vector multiplication, matrix-matrix multiplication, and fast Fourier transform, on a modern multicore CPU and simulations for homogeneous clusters of such CPUs. We demonstrate that the locally Pareto-optimal front approaches the globally Pareto-optimal front as the number of points in the partial discrete FPM and FEM functions are increased. The number of points in the partial FPM/FEM when the locally Pareto-optimal front becomes the globally Pareto-optimal front is considerably less than the number of points in the full FPM/FEM thereby suggesting development of methods that can leverage this finding to drastically reduce the model construction times.},
  doi      = {10.1002/cpe.4958},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.4958},
  groups   = {wiley, guan:6},
  keywords = {bi-objective optimization, data parallelism, energy, multicore, performance, self-adaptable},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.4958},
}

@Article{Boton-Fernandez2015,
  author   = {Botón-Fernández, María and Vega-Rodríguez, Miguel A. and Prieto Castrillo, Francisco},
  journal  = {Concurrency and Computation: Practice and Experience},
  title    = {Intelligent self-adaptive resources selection for grid applications},
  year     = {2015},
  number   = {14},
  pages    = {3539-3560},
  volume   = {27},
  abstract = {Summary Grid computing is considered a promising trend, which enables the sharing of a wide variety of computational and storage resources geographically distributed. Despite the advantages of such paradigm, several problems have emerged during the last decade; most of them caused by an inefficient utilization of grid resources. The present contribution proposes an approach to improve the grid resources selection process. An optimization model for choosing grid resources in an intelligent way has been designed. A mathematical formulation to monitor the resources efficiency has also been established. Furthermore, the model provides a self-adaptive capability to grid applications, enhancing them for dealing with the changing environmental conditions. The model applies an artificial intelligence algorithm for ensuring an efficient selection. In particular, three different versions have been implemented. Each of them uses a different algorithm. Finally, during the evaluation phase of the model, the experimental tests were performed in a real grid infrastructure. The results show that the model improves the infrastructure throughput, by increasing the finished tasks rate and by reducing the applications execution time. Copyright © 2014 John Wiley \& Sons, Ltd.},
  doi      = {10.1002/cpe.3348},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.3348},
  groups   = {wiley, guan:6},
  keywords = {optimization, self-adaptive application, grid computing, evolutionary computing},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.3348},
}

@Article{Henricksen2006,
  author   = {Henricksen, Karen and Indulska, Jadwiga and Rakotonirainy, Andry},
  journal  = {Software: Practice and Experience},
  title    = {Using context and preferences to implement self-adapting pervasive computing applications},
  year     = {2006},
  number   = {11‐12},
  pages    = {1307-1330},
  volume   = {36},
  abstract = {Abstract Applications that exploit contextual information in order to adapt their behaviour to dynamically changing operating environments and user requirements are increasingly being explored as part of the vision of pervasive or ubiquitous computing. Despite recent advances in infrastructure to support these applications through the acquisition, interpretation and dissemination of context data from sensors, they remain prohibitively difficult to develop and have made little penetration beyond the laboratory. This situation persists largely due to a lack of appropriately high-level abstractions for describing, reasoning about and exploiting context information as a basis for adaptation. In this paper, we present our efforts to address this challenge, focusing on our novel approach involving the use of preference information as a basis for making flexible adaptation decisions. We also discuss our experiences in applying our conceptual and software frameworks for context and preference modelling to a case study involving the development of an adaptive communication application. Copyright © 2006 John Wiley \& Sons, Ltd.},
  doi      = {10.1002/spe.760},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.760},
  groups   = {wiley, guan:6},
  keywords = {context-awareness, self-adapting applications, pervasive computing, preference modelling},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.760},
}

@Article{Cardinale2019,
  author   = {Cardinale, Yudith and El Haddad, Joyce and Manouvrier, Maude and Rukoz, Marta},
  journal  = {Concurrency and Computation: Practice and Experience},
  title    = {Fuzzy ACID properties for self-adaptive composite cloud services execution},
  year     = {2019},
  note     = {e4360 cpe.4360},
  number   = {2},
  pages    = {e4360},
  volume   = {31},
  abstract = {Summary The ACID transaction model has played a cornerstone role in service composition to guarantee that composite services (CSs) have transactional support and consistent outcomes even in presence of failures. However, the classical ACID properties are too restrictive for independent and multi-proprietors services running on distributed environments, such clouds. Transactional properties allow a relaxed atomicity and isolation, providing an “all-or-(almost)nothing” model. In previous works, we proposed a model to relax atomicity, called fuzzy atomicity, according user requirements (acceptable fuzzy atomicity). In this article, we extend that model and propose an approach to measure the fuzzy atomicity. Our model allows to self-adapt the CS execution, taking into account the state of the CS execution and user preferences (ie, the acceptable fuzzy atomicity expressed in the user requirements). This fuzzy atomicity measure is applied in a self-adaptive CS execution model based on the transactional properties (pivot, compensatable, and retriable) of its component services and on a checkpointing mechanism. It is suitable to cloud computing, which offers cloud services on demand and in which CS execution should preserve the self-organizing and self-adaptivity properties of such environment, specially in the presence of failures. We show how it is possible to relax the retriable property in CSs execution, based on our fuzzy atomicity model. Additionally, in this work, we present a comparative analysis of the most recent works in the context of ACID properties relaxation for CS.},
  doi      = {10.1002/cpe.4360},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.4360},
  groups   = {wiley, guan:6},
  keywords = {cloud computing services, fault tolerance, relaxed atomicity, self-adaptive execution, service composition},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.4360},
}

@Article{Qu2016,
  author   = {Qu, Yufu and Zhu, Shenyu and Zhang, Ping},
  journal  = {Microscopy Research and Technique},
  title    = {A self-adaptive and nonmechanical motion autofocusing system for optical microscopes},
  year     = {2016},
  number   = {11},
  pages    = {1112-1122},
  volume   = {79},
  abstract = {Abstract For the design of a passive autofocusing (AF) system for optical microscopes, many time-consuming and tedious experiments have been performed to determine and design a better focus criterion function, owing to the sample-dependence of this function. To accelerate the development of the AF systems in optical microscopes and to increase AF speed as well as maintain the AF accuracy, this study proposes a self-adaptive and nonmechanical motion AF system. The presented AF system does not require the selection and design of a focus criterion function when it is developed. Instead, the system can automatically determine a better focus criterion function for an observed sample by analyzing the texture features of the sample and subsequently perform an AF procedure to bring the sample into focus in the objective of an optical microscope. In addition, to increase the AF speed, the Z axis scanning of the mechanical motion of the sample or the objective is replaced by focusing scanning performed by a liquid lens, which is driven by an electrical current and does not involve mechanical motion. Experiments show that the reproducibility of the results obtained with the proposed self-adaptive and nonmechanical motion AF system is better than that provided by that of traditional AF systems, and that the AF speed is 10 times faster than that of traditional AF systems. Also, the self-adaptive function increased the speed of AF process by an average of 10.5\% than Laplacian and Tenegrad functions.},
  doi      = {10.1002/jemt.22765},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/jemt.22765},
  groups   = {wiley, guan:6},
  keywords = {autofocusing, criterion function, liquid lens, self-adaptive},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/jemt.22765},
}

@Article{Bacciu2019,
  author   = {Bacciu, Davide and Di Rocco, Maurizio and Dragone, Mauro and Gallicchio, Claudio and Micheli, Alessio and Saffiotti, Alessandro},
  journal  = {Computational Intelligence},
  title    = {An ambient intelligence approach for learning in smart robotic environments},
  year     = {2019},
  note     = {10.1111/coin.12233},
  number   = {4},
  pages    = {1060-1087},
  volume   = {35},
  abstract = {Abstract Smart robotic environments combine traditional (ambient) sensing devices and mobile robots. This combination extends the type of applications that can be considered, reduces their complexity, and enhances the individual values of the devices involved by enabling new services that cannot be performed by a single device. To reduce the amount of preparation and preprogramming required for their deployment in real-world applications, it is important to make these systems self-adapting. The solution presented in this paper is based upon a type of compositional adaptation where (possibly multiple) plans of actions are created through planning and involve the activation of pre-existing capabilities. All the devices in the smart environment participate in a pervasive learning infrastructure, which is exploited to recognize which plans of actions are most suited to the current situation. The system is evaluated in experiments run in a real domestic environment, showing its ability to proactively and smoothly adapt to subtle changes in the environment and in the habits and preferences of their user(s), in presence of appropriately defined performance measuring functions.},
  doi      = {10.1111/coin.12233},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1111/coin.12233},
  groups   = {wiley, guan:6},
  keywords = {adaptive planning, ambient intelligence, recurrent neural networks, robotic ecology, self-adaptive system, smart environment},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1111/coin.12233},
}

@InBook{Tei2016,
  author    = {Tei , Kenji},
  chapter   = {1},
  pages     = {1-21},
  publisher = {John Wiley \& Sons, Ltd},
  title     = {Shared Wireless Sensor Networks as Enablers for a Context Management System in Smart Cities},
  year      = {2016},
  isbn      = {9781119329954},
  abstract  = {Summary This chapter describes the architecture of XAC middleware and the issues relevant to the shared Wireless sensor network (WSN) from the viewpoints of the task-description language, runtime task management and self-adaptation. A middleware approach is effective at reducing costs associated with developing measurement tasks for a WSN. XAC middleware provides languages with multiple levels of abstraction. It provides data-level, group-level and node-level languages so that the programmer can choose an adequate level of abstraction. XAC middleware is implemented using SunSPOT, a commercial sensor node provided by Oracle. The middleware consists of base-station-side middleware and sensor-side middleware. The base-station-side middleware provides interfaces to context-aware applications to register or unregister their measurement tasks. The sensor-side middleware manages the components inputted by the base-station-side middleware. In the shared WSN, one or more measurement tasks can be used and performed simultaneously, and self-adaptive tasks can have different accuracy requirements and different priorities. .},
  booktitle = {Enablers for Smart Cities},
  doi       = {10.1002/9781119329954.ch1},
  eprint    = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/9781119329954.ch1},
  groups    = {wiley, guan:6},
  keywords  = {context management system, runtime task management, self-adaptation, task-description language, wireless sensor network, XAC middleware},
  url       = {https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119329954.ch1},
}

@InBook{2017a,
  chapter   = {7},
  pages     = {147-169},
  publisher = {John Wiley \& Sons, Ltd},
  title     = {Implementation of Self-healing Control Technology},
  year      = {2017},
  isbn      = {9781119109341},
  abstract  = {Summary A strong power grid, information transmission, and self-healing control system are the most important factors comprising a distribution network self-healing system. An active power distribution network is vital to achieving a self-healing function for the distribution network. A self-healing grid or self-healing control is an inevitable trend for power grid dispatching and controlling systems. Recently, the electric power communication network has been greatly improved, and dispersed data acquisition and centralized data processing are made possible remotely in traditional relay protection, automatic device, and dispatching systems. Self-adaptive relay protection by nature is a control system that is able to feedback information or messages. It is compatible with self-healing technology and an actuating device for self-healing control, which is the focus of the research. Automatic coordination between the primary and secondary systems is estimated by real-time information acquisition and self-healing control technology, with high demand for reliability and safety.},
  booktitle = {Self‐healing Control Technology for Distribution Networks},
  doi       = {10.1002/9781119109341.ch7},
  eprint    = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/9781119109341.ch7},
  groups    = {wiley, guan:6},
  keywords  = {dispersed data acquisition, distribution network self-healing system, electric power communication network, power grid dispatching system, real-time information acquisition, self-adaptive relay protection units, self-healing control technology},
  url       = {https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119109341.ch7},
}

@InBook{2016,
  chapter   = {11},
  pages     = {227-268},
  publisher = {John Wiley \& Sons, Ltd},
  title     = {Evolutionary Optimization},
  year      = {2016},
  isbn      = {9781119214403},
  abstract  = {This chapter focuses on quantitative evolutionary optimization, in which there is a numeric description-a function-that operates on a potential solution and returns either a single real number or multiple numbers that describe the value of the solution. The essence of the evolutionary approach to optimization is to utilize a population of contending ideas about how to solve a problem and subject those ideas to random variation and selection in light of objective criteria that provide feedback on the suitability of the solutions. Some important extensions of the basic application of evolutionary algorithms for optimization are also covered, including handling constraints and allowing the evolutionary algorithm to learn how to optimize its own search parameters in a process called self-adaptation. Designing an evolutionary optimization algorithm requires choices of representation, selection, and variation operators. The chapter addresses approaches to trading-off between Gaussian and Cauchy mutation operators in real-valued evolutionary optimization.},
  booktitle = {Fundamentals of Computational Intelligence},
  doi       = {10.1002/9781119214403.ch11},
  eprint    = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/9781119214403.ch11},
  groups    = {wiley, guan:6},
  keywords  = {Cauchy mutation operators, combinatorial evolutionary optimization, constraint handling, evolutionary computation, Gaussian mutation operators, numeric evolutionary optimization, self-adaptation},
  url       = {https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119214403.ch11},
}

@Article{Wang2017f,
  author   = {Wang, Jun and Yin, Haibing and Fu, Yongfeng and Yang, Xiaokang},
  journal  = {International Journal of Communication Systems},
  title    = {A self-adaptive load-dispatching control framework for device data accessing in IoT-based systems},
  year     = {2017},
  note     = {e3260 IJCS-16-0402.R1},
  number   = {12},
  pages    = {e3260},
  volume   = {30},
  abstract = {Summary The Internet of things (IoT) information system plays important roles in disposing of huge volumes of real-time service requests from heterogeneous devices, targeting for different complex application requirements. Load-dispatching control (LDC) is a key problem to be solved for devices accessing concurrently in cluster systems. Self-adaptive LDC optimizes the resource allocation to ensure no overloading node, thus, improving the performance of IoT systems. This paper focuses on adaptive dispatching control problem in IoT information system. First, a device data access platform is proposed for reducing the load imbalance and improving the efficiency of data processing. Then, we propose a processing capability prediction model to evaluate the system performance. On the basis of the model, we present a practical self-adaptive LDC framework with a self-adaptive control strategy and a load dispatching method. Finally, a case study is given to verify the framework and the control strategy. Experimental results show that the proposed strategy can meet the requirements of dynamic load balancing with the ability to avoid the load imbalance problem, and the LDC-based device access platform can process data accessing effectively and ubiquitously.},
  doi      = {10.1002/dac.3260},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/dac.3260},
  groups   = {wiley, guan:6},
  keywords = {adjust strategy, cluster system, data access, load dispatching, self-adaptive control},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1002/dac.3260},
}

@Article{Zhu2010a,
  author   = {Zhu, Qing and Zhang, Yunsheng and Wu, Bo and Zhang, Yeting},
  journal  = {The Photogrammetric Record},
  title    = {Multiple close-range image matching based on a self-adaptive triangle constraint},
  year     = {2010},
  number   = {132},
  pages    = {437-453},
  volume   = {25},
  abstract = {Abstract Reliable image matching is an essential and difficult task in digital photogrammetry and computer vision. Possible problems from geometric distortions, illumination changes, scale changes and difficult texture conditions will result in matching ambiguity, especially for close-range image matching. This paper presents a multiple close-range image matching method for surface reconstruction based on a self-adaptive triangle constraint. This method features two aspects. First, the triangles constructed from the previously matched interest points provide strong geometric constraints for the subsequent point matching combined with gradient orientation and disparity constraints. The dynamic update of the triangulation adapts automatically to the changes of image textures. Secondly, a consistency check in object space is performed to remove possible mismatches. Using three sets of actual triple overlapped close-range images for the experiment, the results revealed that the proposed method provides improved matching reliability.},
  doi      = {10.1111/j.1477-9730.2010.00603.x},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1477-9730.2010.00603.x},
  groups   = {wiley, guan:6},
  keywords = {close-range images, consistency check, multiple image matching, self-adaptive triangle constraint},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1477-9730.2010.00603.x},
}

@Article{Panchangam2001,
  author   = {Panchangam, Appaji and Sastry, K. V. L. N. and Rao, D. V. G. L. N. and DeCristofano, B. S. and Kimball, B. R. and Nakashima, M.},
  journal  = {Medical Physics},
  title    = {Processing of medical images using real-time optical Fourier processing},
  year     = {2001},
  number   = {1},
  pages    = {22-27},
  volume   = {28},
  abstract = {Optical image processing techniques are inherently fast in view of parallel processing. A self-adaptive optical Fourier processing system using photoinduced dichroism in a bacteriorhodopsin film was experimentally demonstrated for medical image processing. Application of this powerful analog all-optical interactive technique for cancer diagnostics is illustrated with two mammograms and a Pap smear. Microcalcification clusters buried in surrounding tissue showed up clearly in the processed image. By playing with one knob, which rotates the analyzer in the optical system, either the microcalcification clusters or the surrounding dense tissue can be selectively displayed. Bacteriorhodopsin films are stable up to 140 °C and environmentally friendly. As no interference is involved in the experiments, vibration isolation and even a coherent light source are not required. It may be possible to develop a low-cost rugged battery operated portable signal-enhancing magnifier.},
  doi      = {10.1118/1.1328079},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1118/1.1328079},
  groups   = {wiley, guan:6},
  keywords = {bacteriorhodopsin, Photoinduced anisotropy, optical Fourier processing, self-adaptive image processing, mammograms, Visual imaging, Fourier optics, Mammography, optical images, proteins, dichroism, medical image processing, cancer, mammography, adaptive signal processing, Medical image processing, Optical devices, Medical imaging, Cluster analysis, Mammography, Optical images, Parallel processing, Film mammography, Cancer, Dichroism},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1118/1.1328079},
}

@InProceedings{Yang2015,
  author    = {Yang, Jin and Pang, Jianmin and Qi, Ning and Qi, Tao},
  title     = {On-Demand Self-Adaptivity of Service Availability for Cloud Multi-Tier Applications},
  booktitle = {Proceedings of the 15th IEEE/ACM International Symposium on Cluster, Cloud, and Grid Computing},
  year      = {2015},
  series    = {CCGRID ’15},
  pages     = {1237–1240},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {Cloud data centers are increasingly becoming the first choice for many Internet enterprises (especially medium-sized and small ones) to deploy their online application. However, scaling service availability autonomously is a critical issue for Internet applications. Surplus service supply may take a lot of unnecessary money and insufficient resources reserve will result in denial of service when meeting sudden massive requests. A general idea to address the issue is increasing the resource utilization through workload balancing and dynamic resources management. In this paper, we propose a self-adaptive approach that is suitable for the multi-tier cloud applications. The approach tries to scale the applications' service availability on demand and reduce infrastructure costs by improving utilization of the resources that are already billed. Moreover, in order to cope with the unexpected requests, an evaluation method is adopted to estimate the trend of requests' development and then decide to add or remove working servers. Finally, we compare the proposed algorithms with the workload consolidation method by a quantitative analysis, showing the superiorities of costs and performance in some situations.},
  doi       = {10.1109/CCGrid.2015.146},
  groups    = {acm, wiley},
  isbn      = {9781479980062},
  keywords  = {on-demand, self-adaptivity, service availability, cloud computing, load balancing},
  location  = {Shenzhen, China},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/CCGrid.2015.146},
}

@InProceedings{Russo2019,
  author    = {Russo, Gabriele Russo},
  title     = {Self-Adaptive Data Stream Processing in Geo-Distributed Computing Environments},
  booktitle = {Proceedings of the 13th ACM International Conference on Distributed and Event-Based Systems},
  year      = {2019},
  series    = {DEBS ’19},
  pages     = {276–279},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {An ever increasing number of services requires real-time analysis of collected data streams. Emerging Fog/Edge computing platforms are appealing for such latency-sensitive applications, encouraging the deployment of Data Stream Processing (DSP) systems in geo-distributed environments. However, the highly dynamic nature of these infrastructures poses challenges on how to satisfy the Quality of Service requirements of both the application and the infrastructure providers. In this doctoral work we investigate how DSP systems can face the dynamicity of workloads and computing environments by self-adapting their deployment and behavior at run-time. Targeting geo-distributed infrastructures, we specifically search for decentralized solutions, and propose a framework for organizing adaptation using a hierarchical control approach. Focusing on application elasticity, we equip the framework with decentralized policies based on reinforcement learning. We extend our solution to consider multi-level elasticity, and heterogeneous computing resources. In the ongoing research work, we aim to face the challenges associated with mobility of users and computing resources, exploring complementary adaptation mechanisms.},
  doi       = {10.1145/3328905.3332304},
  groups    = {acm, wiley},
  isbn      = {9781450367943},
  keywords  = {Distributed Data Stream Processing, Elasticity, Reinforcement Learning, Self-Adaptive Software},
  location  = {Darmstadt, Germany},
  numpages  = {4},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/3328905.3332304},
}

@InProceedings{Yun2015,
  author    = {Yun, Jaeyoung and Park, Jinsu and Baek, Woongki},
  title     = {HARS: A Heterogeneity-Aware Runtime System for Self-Adaptive Multithreaded Applications},
  booktitle = {Proceedings of the 52nd Annual Design Automation Conference},
  year      = {2015},
  series    = {DAC ’15},
  pages     = {1-6},
  address   = {New York, NY, USA},
  month     = {June},
  publisher = {Association for Computing Machinery},
  abstract  = {Heterogeneous multi-processing (HMP) is rapidly emerging as a promising solution for high-performance and low-power computing. Despite extensive prior work, system-software support for self-adaptive multithreaded applications has been little explored in the context of HMP. To bridge this gap, we propose HARS, a heterogeneity-aware runtime system for self-adaptive multithreaded applications. HARS continuously monitors the application performance and dynamically adapts the system state to enhance the performance/watt of the target self-adaptive multithreaded applications on HMP systems, while satisfying the user-specified performance goal. We quantify the effectiveness of HARS by demonstrating that HARS achieves significantly higher efficiency than the baseline version with the Linux HMP scheduler and comparable efficiency with that of the static optimal version.},
  articleno = {107},
  doi       = {10.1145/2744769.2744848},
  groups    = {acm, wiley},
  isbn      = {9781450335201},
  issn      = {0738-100X},
  keywords  = {heterogeneous multiprocessing, self-adaptive computing},
  location  = {San Francisco, California},
  numpages  = {6},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/2744769.2744848},
}

@InProceedings{Barbosa2017,
  author    = {Barbosa, Davi Monteiro and de Moura Lima, R\^{o}mulo Gadelha and Maia, Paulo Henrique Mendes and Junior, Evil\'{a}sio Costa},
  title     = {Lotus@Runtime: A Tool for Runtime Monitoring and Verification of Self-Adaptive Systems},
  booktitle = {Proceedings of the 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2017},
  series    = {SEAMS ’17},
  pages     = {24–30},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {This paper presents Lotus@Runtime, an extensible tool that uses models@runtime to monitor and verify self-adaptive systems. The tool monitors the execution traces generated by a self-adaptive system and annotates the probabilities of occurrence of each system action on their respective transition on the system model, which is created at design time in the tool as a Labelled Transition System (LTS). Then, runtime checks of a set of reachability properties are performed against the updated probabilistic model. If a property is violated, the self-adaptive system can be informed by a notification mechanism provided by Lotus@Runtime. The applicability of the proposed tool has been demonstrated by two service-based self-adaptive systems taken and adapted from the literature.},
  doi       = {10.1109/SEAMS.2017.18},
  groups    = {acm, wiley},
  isbn      = {9781538615508},
  keywords  = {framework, runtime verification; tool, self-adaptive systems, self-*, runtime models},
  location  = {Buenos Aires, Argentina},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2017.18},
}

@InProceedings{Gerasimou2017,
  author    = {Gerasimou, Simos and Calinescu, Radu and Shevtsov, Stepan and Weyns, Danny},
  title     = {UNDERSEA: An Exemplar for Engineering Self-Adaptive Unmanned Underwater Vehicles},
  booktitle = {Proceedings of the 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2017},
  series    = {SEAMS ’17},
  pages     = {83–89},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {Recent advances in embedded systems and underwater communications raised the autonomy levels in unmanned underwater vehicles (UUVs) from human-driven and scripted to adaptive and self-managing. UUVs can execute longer and more challenging missions, and include functionality that enables adaptation to unexpected oceanic or vehicle changes. As such, the simulated UUV exemplar UNDERSEA introduced in our paper facilitates the development, evaluation and comparison of self-adaptation solutions in a new and important application domain. UNDERSEA comes with predefined oceanic surveillance UUV missions, adaptation scenarios, and a reference controller implementation, all of which can easily be extended or replaced.},
  doi       = {10.1109/SEAMS.2017.19},
  groups    = {acm, wiley},
  isbn      = {9781538615508},
  keywords  = {unmanned underwater vehicle exemplar, oceanic surveillance, self-adaptive embedded systems},
  location  = {Buenos Aires, Argentina},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2017.19},
}

@InProceedings{Lemos2019,
  author    = {de Lemos, Rog\'{e}rio and Grzeundefined, Marek},
  title     = {Self-Adaptive Artificial Intelligence},
  booktitle = {Proceedings of the 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2019},
  series    = {SEAMS ’19},
  pages     = {155–156},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {Machine learning tools, like deep neural networks, are perceived to be black boxes. That is, the only way of changing their internal data models is to retrain these models using different inputs. This is ineffective in dynamic systems that are prone to changes, like concept drift. A new promising solution is transparent artificial intelligence, based on the notions of interpretation and explanation, whose objective is to correlate the internal data models with predictions. The research question being addressed is whether we can have a self-adaptive machine learning system that is able to interpret and explain its data model in order for it to be controlled. In this position paper, we present our initial thoughts whether this can be achieved.},
  doi       = {10.1109/SEAMS.2019.00028},
  groups    = {acm, wiley},
  issn      = {2157-2321},
  keywords  = {machine learning, artificial intelligence, AI transparency, self-adaptation},
  location  = {Montreal, Quebec, Canada},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2019.00028},
}

@InProceedings{Quin2019,
  author    = {Quin, Federico and Weyns, Danny and Bamelis, Thomas and Buttar, Sarpreet Singh and Michiels, Sam},
  title     = {Efficient Analysis of Large Adaptation Spaces in Self-Adaptive Systems Using Machine Learning},
  booktitle = {Proceedings of the 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2019},
  series    = {SEAMS ’19},
  pages     = {1–12},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {When a self-adaptive system detects that its adaptation goals may be compromised, it needs to determine how to adapt to ensure its goals. To that end, the system can analyze the possible options for adaptation, i.e., the adaptation space, and pick the best option that achieves the goals. Such analysis can be resource and time consuming, in particular when rigorous analysis methods are applied. Hence, exhaustively analyzing all options may be infeasible for systems with large adaptation spaces. This problem is further complicated as the adaptation options typically include uncertainty parameters that can only be resolved at runtime. In this paper, we present a machine learning approach to tackle this problem. This approach enhances the traditional MAPE-K feedback loop with a learning module that selects subsets of adaptation options from a large adaptation space to support the analyzer with performing efficient analysis. We instantiate the approach for two concrete learning techniques, classification and regression, and evaluate the approaches for two instances of an Internet of Things application for smart environment monitoring with different sizes of adaptation spaces. The evaluation shows that both learning approaches reduce the adaptation space significantly without noticeable effect on realizing the adaptation goals.},
  doi       = {10.1109/SEAMS.2019.00011},
  groups    = {acm, wiley},
  issn      = {2157-2321},
  keywords  = {analysis, learning, IoT, self-adaptation},
  location  = {Montreal, Quebec, Canada},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2019.00011},
}

@InProceedings{Schmid2017,
  author    = {Schmid, Sanny and Gerostathopoulos, Ilias and Prehofer, Christian and Bures, Tomas},
  title     = {Self-Adaptation Based on Big Data Analytics: A Model Problem and Tool},
  booktitle = {Proceedings of the 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2017},
  series    = {SEAMS ’17},
  pages     = {102–108},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {In this paper, we focus on self-adaptation in large-scale software-intensive distributed systems. The main problem in making such systems self-adaptive is that their adaptation needs to consider the current situation in the whole system. However, developing a complete and accurate model of such systems at design time is very challenging. To address this, we present a novel approach where the system model consists only of the essential input and output parameters. Furthermore, Big Data analytics is used to guide self-adaptation based on a continuous stream of operational data. We provide a concrete model problem and a reference implementation of it that can be used as a case study for evaluating different self-adaptation techniques pertinent to complex large-scale distributed systems. We also provide an extensible tool for endorsing an arbitrary system with self-adaptation based on analysis of operational data coming from the system. To illustrate the tool, we apply it on the model problem.},
  doi       = {10.1109/SEAMS.2017.20},
  groups    = {acm, wiley},
  isbn      = {9781538615508},
  keywords  = {big data analytics, self-adaptation, model problem},
  location  = {Buenos Aires, Argentina},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2017.20},
}

@InProceedings{Moreno2017a,
  author    = {Moreno, Gabriel A. and Papadopoulos, Alessandro V. and Angelopoulos, Konstantinos and C\'{a}mara, Javier and Schmerl, Bradley},
  title     = {Comparing Model-Based Predictive Approaches to Self-Adaptation: CobRA and PLA},
  booktitle = {Proceedings of the 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2017},
  series    = {SEAMS ’17},
  pages     = {42–53},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {Modern software-intensive systems must often guarantee certain quality requirements under changing run-time conditions and high levels of uncertainty. Self-adaptation has proven to be an effective way to engineer systems that can address such challenges, but many of these approaches are purely reactive and adapt only after a failure has taken place. To overcome some of the limitations of reactive approaches (e.g., lagging behind environment changes and favoring short-term improvements), recent proactive self-adaptation mechanisms apply ideas from control theory, such as model predictive control (MPC), to improve adaptation. When selecting which MPC approach to apply, the improvement that can be obtained with each approach is scenario-dependent, and so guidance is needed to better understand how to choose an approach for a given situation. In this paper, we compare CobRA and PLA, two approaches that are inspired by MPC. CobRA is a requirements-based approach that applies control theory, whereas PLA is architecture-based and applies stochastic analysis. We compare the two approaches applied to RUBiS, a benchmark system for web and cloud application performance, discussing the required expertise needed to use both approaches and comparing their run-time performance with respect to different metrics.},
  doi       = {10.1109/SEAMS.2017.2},
  groups    = {acm, wiley},
  isbn      = {9781538615508},
  keywords  = {self-adaptation, PLA, latency, model predictive control, CobRA, adaptive system},
  location  = {Buenos Aires, Argentina},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2017.2},
}

@InProceedings{Krikava2014,
  author        = {K\v{r}ikava, Filip and Collet, Philippe and France, Robert B.},
  title         = {ACTRESS: Domain-Specific Modeling of Self-Adaptive Software Architectures},
  booktitle     = {Proceedings of the 29th Annual ACM Symposium on Applied Computing},
  year          = {2014},
  series        = {SAC ’14},
  pages         = {391–398},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 17},
  abstract      = {A common approach for engineering self-adaptive software systems is to use Feedback Control Loops (FCLs). Advances have led to more explicit and safer design of some control architectures, however, there is a need for more integrated and systematic approaches that support end-to-end integration of FCLs into software systems. In this paper, we propose a tooled approach that enables researchers and engineers to design and integrate adaptation mechanisms into software systems through FCLs. It consists of a domain-specific modeling language that raises the level of abstraction on which FCLs are defined, making them amenable to automated analysis and implementation code synthesis. The language supports composition, distribution and reflection, thereby enabling coordination and composition of multiple distributed FCLs. Its use is facilitated by a modeling environment, ACTRESS, that provides support for modeling, verification and complete code generation. We report on its application to a concrete adaptation case study and also discuss resulting properties. Copyright 2014 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2554850.2555020},
  groups        = {acm, wiley},
  isbn          = {9781450324694},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  keywords      = {model-driven engineering, domain-specific languages, domain-specific modeling, self-adaptive software systems},
  location      = {Gyeongju, Republic of Korea},
  numpages      = {8},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2554850.2555020},
}

@InProceedings{Porter2018,
  author        = {Porter, Jason and Menasc\'{e}, Daniel A. and Gomaa, Hassan and Albassam, Emad},
  title         = {TESS: Automated Performance Evaluation of Self-Healing and Self-Adaptive Distributed Software Systems},
  booktitle     = {Proceedings of the 2018 ACM/SPEC International Conference on Performance Engineering},
  year          = {2018},
  volume        = {2018-March},
  series        = {ICPE ’18},
  pages         = {40–47},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 1},
  abstract      = {This paper deals with the problem of evaluating and testing recovery and adaptation frameworks (RAF) for distributed software systems. We present TESS, a testbed for automatically generating distributed software architectures and their corresponding runtime applications, deploying them to the nodes of a cluster, running many different types of experiments involving failures and adaptation, and collecting in a database the values of a variety of failure recovery and adaptation metrics. Using the collected data, TESS automatically performs a thorough and scientific analysis of the efficiency and/or effectiveness of a RAF. This paper presents a case study on the use of TESS to evaluate DARE, a RAF developed by our group. © 2018 Association for Computing Machinery.},
  document_type = {Conference Paper},
  doi           = {10.1145/3184407.3184408},
  groups        = {acm, wiley},
  isbn          = {9781450350952},
  journal       = {ICPE 2018 - Proceedings of the 2018 ACM/SPEC International Conference on Performance Engineering},
  keywords      = {self-healing software, software architecture, experimental design, self-adaptive software, automated experimentation testbed, distributed component-based software systems},
  location      = {Berlin, Germany},
  numpages      = {8},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/3184407.3184408},
}

@InProceedings{Rawshan2015,
  author        = {Rawshan, Lamisha and Sakib, Kazi and Imran, Asif},
  title         = {Time-Waved Monitoring and Emergent Self Adaption of Software Components in Open Source Cloud},
  booktitle     = {Proceedings of the The International Conference on Engineering \& MIS 2015},
  year          = {2015},
  volume        = {24-26-September-2015},
  series        = {ICEMIS ’15},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 2},
  abstract      = {Optimized resource utilization and low cost of service has enabled the cloud to become a popular service in today's world. However, rapid scaling, continuous attacks from hackers, dynamic resource provisioning and distributed nature has made it a complex system to manually monitor and manage by system administrators. This paper proposes an effective time-waved framework for monitoring the cloud and reporting undesirable activities with minimum time delay. Next, it presents a mechanism to self-adapt the attacked modules through allocation of healthy ancillary resources. Performance analysis of the proposed framework yields desirable time complexities of 17.0, 26.6, 27.3 and 18.6 seconds for 4 types of attacks tested here. Also, replacing paralyzed cloud virtual machines (vm) with healthy ones requires 8.4 seconds on average, resulting in desirable performance. The experimentation on open source platform show that the proposed schemes enable better monitoring of cloud services. Copyright 2015 ACM.},
  art_number    = {a46},
  articleno     = {46},
  document_type = {Conference Paper},
  doi           = {10.1145/2832987.2833055},
  groups        = {acm, wiley},
  isbn          = {9781450334181},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {Cloud forensics, Self-adaptation of cloud components, Cloud computing integrity},
  location      = {Istanbul, Turkey},
  numpages      = {6},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2832987.2833055},
}

@InProceedings{Elkhodary2010,
  author        = {Elkhodary, Ahmed and Esfahani, Naeem and Malek, Sam},
  title         = {FUSION: A Framework for Engineering Self-Tuning Self-Adaptive Software Systems},
  booktitle     = {Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  year          = {2010},
  series        = {FSE ’10},
  pages         = {7–16},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 114},
  abstract      = {Self-adaptive software systems are capable of adjusting their behavior at run-time to achieve certain objectives. Such systems typically employ analytical models specified at design-time to assess their characteristics at run-time and make the appropriate adaptation decisions. However, prior to system's deployment, engineers often cannot foresee the changes in the environment, requirements, and system's operational profile. Therefore, any analytical model used in this setting relies on underlying assumptions that if not held at run-time make the analysis and hence the adaptation decisions inaccurate. We present and evaluate FeatUre-oriented Self-adaptatION (FUSION) framework, which aims to solve this problem by learning the impact of adaptation decisions on the system's goals. The framework (1) allows for automatic online fine-tuning of the adaptation logic to unanticipated conditions, (2) reduces the upfront effort required for building such systems, and (3) makes the run-time analysis of such systems very efficient. © 2010 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/1882291.1882296},
  groups        = {acm, wiley},
  isbn          = {9781605587912},
  journal       = {Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  keywords      = {self-adaptation, learning, qos analysis, feature-orientation},
  location      = {Santa Fe, New Mexico, USA},
  numpages      = {10},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/1882291.1882296},
}

@InProceedings{Wang2017,
  author    = {Wang, Lu},
  title     = {Search-Based Adaptation Planning Framework for Self-Adaptive Systems},
  booktitle = {Proceedings of the 39th International Conference on Software Engineering Companion},
  year      = {2017},
  series    = {ICSE-C ’17},
  pages     = {465–466},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {Future-generation Self-Adaptive Systems (SASs) are required to adapt to the multiple, interrelated, and evolving changes. Current adaptation planning methods, which consider only one or two changes at a time and assume that changes are independent and the prioritization of them is static, need to be improved. Arguing that the adaptation planning is a search problem, this thesis highlights the feasibility and potential benefits of adopting Search-Based Optimization as an innovative planning method. A search-based adaptation planning framework is proposed to deal with these changes and make the best decisions for future-generation SASs.},
  doi       = {10.1109/ICSE-C.2017.21},
  groups    = {acm, wiley},
  isbn      = {9781538615898},
  keywords  = {self-adaptation planning, search-based optimization, search-based software engineering, self-adaptive systems},
  location  = {Buenos Aires, Argentina},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/ICSE-C.2017.21},
}

@InProceedings{Yuan2014,
  author        = {Yuan, Eric and Esfahani, Naeem and Malek, Sam},
  title         = {Automated Mining of Software Component Interactions for Self-Adaptation},
  booktitle     = {Proceedings of the 9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year          = {2014},
  series        = {SEAMS 2014},
  pages         = {27–36},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 11},
  abstract      = {A self-adaptive software system should be able to monitor and analyze its runtime behavior and make adaptation decisions accordingly to meet certain desirable objectives. Traditional software adaptation techniques and recent\models@runtime approaches usually require an a priori model for a system's dynamic behavior. Oftentimes the model is difficult to define and labor-intensive to maintain, and tends to get out of date due to adaptation and architecture decay. We propose an alternative approach that does not require defining the system's behavior model beforehand, but in-stead involves mining software component interactions from system execution traces to build a probabilistic usage model, which is in turn used to analyze, plan, and execute adaptations. Our preliminary evaluation of the approach against an Emergency Deployment System shows that the associations mining model can be used to effectively address a variety of adaptation needs, including (1) safely applying dynamic changes to a running software system without creating inconsistencies, (2) identifying potentially malicious (abnormal) behavior for self-protection, and (3) our ongoing research on improving deployment of software components in a distributed setting for performance self-optimization.},
  document_type = {Conference Paper},
  doi           = {10.1145/2593929.2593934},
  groups        = {acm, wiley},
  isbn          = {9781450328647},
  journal       = {9th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2014 - Proceedings},
  keywords      = {Self-Adaptation, Component-Based Software, Data Mining},
  location      = {Hyderabad, India},
  numpages      = {10},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2593929.2593934},
}

@InProceedings{Kashi2016,
  author        = {Kashi, Rajanikanth N. and D’Souza, Meenakshi and Baghel, S. Kumar and Kulkarni, Nitin},
  title         = {Formal Verification of Avionics Self Adaptive Software: A Case Study},
  booktitle     = {Proceedings of the 9th India Software Engineering Conference},
  year          = {2016},
  volume        = {18-20-February-2016},
  series        = {ISEC ’16},
  pages         = {163–169},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 4},
  abstract      = {We model avionics self-adaptive software as a multi-agent system using the BDI (Belief Desire Intention) model of agency. Such a model sufficiently represents several properties of avionics self-adaptive software. We illustrate formal verification of functional requirements related to safety of such software using Boolean predicate abstractions and model checking. Our proposed approach is illustrated using a case study involving BDI model of a flight management system with a proto-type involving appropriate tools. © 2016 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2856636.2856658},
  groups        = {acm, wiley},
  isbn          = {9781450340182},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {model checking, adaptive flight planning, self-adaptive software, Avionics, BDI model},
  location      = {Goa, India},
  numpages      = {7},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2856636.2856658},
}

@InProceedings{Bashari2013,
  author        = {Bashari, Mahdi and Bagheri, Ebrahim},
  title         = {Engineering Self-Adaptive Systems and Dynamic Software Product Line},
  booktitle     = {Proceedings of the 17th International Software Product Line Conference},
  year          = {2013},
  series        = {SPLC ’13},
  pages         = {285},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 1},
  abstract      = {Self-adaptive systems are a class of software applications, which are able to dynamically transform their internal structure and hence their behavior in response to internal or external stimuli. The transformation may provide the basis for new functionalities or improve or maintain non-functional properties in order to match the application better to its operational requirements and standards. Software Product Line Engineering has rich methods and techniques in variability modeling and management which is one of the main issues in developing self-adaptive systems. Dynamic software product lines (DSPL) have been proposed to exploit the knowledge acquired in SPLE to develop self-adaptive software systems. In this tutorial, we portray the problem of developing self-adaptive systems. Then we investigate how the idea of dynamic software product line could help to deal with the challenges that we face in developing efficient self-adaptive software. We also offer insight into the different approaches that use dynamic software product line engineering for developing self-adaptive systems focusing on practical approaches by showing how the approaches are applied to real case studies and also methods for evaluating these approaches. This tutorial also discuss how DSPL could be used some relevant areas to self-adaptive systems and challenges which still exist in the area. © 2013 Authors.},
  document_type = {Conference Paper},
  doi           = {10.1145/2491627.2493906},
  groups        = {acm, wiley},
  isbn          = {9781450319683},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {dynamic software product line, self-adaptive systems},
  location      = {Tokyo, Japan},
  numpages      = {1},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2491627.2493906},
}

@InProceedings{Mirandola2014,
  author        = {Mirandola, Raffaela and Perez-Palacin, Diego},
  title         = {Software QoS Enhancement through Self-Adaptation and Formal Models},
  booktitle     = {Proceedings of the 10th International ACM Sigsoft Conference on Quality of Software Architectures},
  year          = {2014},
  series        = {QoSA ’14},
  pages         = {145–146},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 0},
  abstract      = {Modern software operates in highly dynamic and often unpredictable environments that can degrade its quality of service. Therefore, it is increasingly important having systems able to adapt their behavior to the environment where they execute at any moment. Nevertheless, software with self-adaptive capabilities is difficult to develop. To make easier its development, different architectural frameworks have been proposed during the last years. A shared characteristic among most frameworks is that they define applications that make an internal use of models, which are analyzed to discover the configurations that better fit in the changing environments. In this context, this tutorial presents the current research advances on architectural frameworks for building self-adaptive software that meets its Quality of Service (QoS). We discuss architectures that use self-adaption to improve the QoS and whose adaptations are planned as a result of the analysis of formal models. We also describe a set of current research challenges that are still preventing the complete automatic control of dependable self-adaptive software. Copyright © 2014 ACM 978-1-4503-2577-6/14/06 ...$15.00.},
  document_type = {Conference Paper},
  doi           = {10.1145/2602576.2611459},
  groups        = {acm, wiley},
  isbn          = {9781450325769},
  journal       = {QoSA 2014 - Proceedings of the 10th International ACM SIGSOFT Conference on Quality of Software Architectures (Part of CompArch 2014)},
  keywords      = {quality of service, models, self-adaptive software},
  location      = {Marcq-en-Bareul, France},
  numpages      = {2},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2602576.2611459},
}

@InProceedings{Denaro2007,
  author    = {Denaro, Giovanni and Pezz\`{e}, Mauro and Shehory, Onn},
  title     = {SOQUA 2007 4th International Workshop on Software Quality Assurance},
  booktitle = {The 6th Joint Meeting on European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering: Companion Papers},
  year      = {2007},
  series    = {ESEC-FSE companion ’07},
  pages     = {615–616},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  abstract  = {SOQUA 2007 aims to bring together researchers, engineers, and practitioners to discuss and evaluate latest challenges, breakthroughs and experiences in the field of software quality assurance, and to identify open issues and future trends in this area. Among the many quality assurance topics, SOQUA 2007 puts special focus on the role that emerging self-adaptive and self-healing solutions can play in quality assurance. The program committee had the difficult task to select 17 papers out of 27 high-quality submissions from all over the world. The selected papers cover 11 countries and 5 continents, and many aspects of software quality assurance, including: self-healing and self-adaptive solutions, testing, quality assurance processes, process modeling, failure analysis and anticipation, quality of requirements, and variability modeling. These papers represent a significant contribution to the state of the art in the field. The workshop program consists of 1 keynote address given by Wilhelm Schäfer, 5 paper sessions hosting the authors' presentations, and 2 discussion sessions on hot-topics in the field.},
  doi       = {10.1145/1295014.1295059},
  groups    = {acm, wiley},
  isbn      = {9781595938121},
  keywords  = {self-adaptive and self-healing approaches, software testing, processes and standards for software quality assurance, metrics, tools, automation, formal methods},
  location  = {Dubrovnik, Croatia},
  numpages  = {2},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1145/1295014.1295059},
}

@InProceedings{Hurtado2011,
  author        = {Hurtado, Santiago and Sen, Sagar and Casallas, Rubby},
  title         = {Reusing Legacy Software in a Self-Adaptive Middleware Framework},
  booktitle     = {Adaptive and Reflective Middleware on Proceedings of the International Workshop},
  year          = {2011},
  series        = {ARM ’11},
  pages         = {29–35},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 3},
  abstract      = {Software that adapts its behavior to an operational context and/or feedback from within is self-adaptive. For instance, a computer vision system to detect people may change its behavior due to change in context such as nightfall. This may entail automatic change in architecture, software components and their parameters at runtime. Legacy software components do not possess this ability. Therefore we ask, can legacy software be successfully cast into a self-adaptive middleware framework? We present Tekio, a self-adaptive middleware platform to dynamically compose legacy software behavior. Tekio is based on dynamic component loading available in a Java implementation of Open Service Gateway Interface (OSGi). Tekio contains generic components to capture context/feedback, plan an adaptation strategy, and reconfigure domain-specific components. The domainspecific components encapsulate legacy behavior implemented possibly in native languages such as C/C++. We implement a self-adaptive vision system in Tekio as a case study. We perform experiments to validate that the self-adaptive layer based on OSGi has negligible effects on the performance of the legacy library namely OpenCV. We also demonstrate that the self-adaptive middleware can handle about 30 adaptations in a span of 2 seconds while producing meaningful output. © 2011 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2088876.2088881},
  groups        = {acm, wiley},
  isbn          = {9781450310703},
  journal       = {Proceedings of the International Workshop on Adaptive and Reflective Middleware, ARM 2011, Co-located with ACM/IFIP/USENIX International Middleware Conference},
  keywords      = {OSGi, middleware, framework, self-adaptive software, software reuse, legacy software},
  location      = {Lisbon, Portugal},
  numpages      = {7},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2088876.2088881},
}

@InProceedings{Stavru2011,
  author        = {Stavru, Stavros},
  title         = {Managing Change in Self-Adaptive Software Systems},
  booktitle     = {Proceedings of the 12th International Conference on Computer Systems and Technologies},
  year          = {2011},
  volume        = {578},
  series        = {CompSysTech ’11},
  pages         = {647–652},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 1},
  abstract      = {Self-adaptive software systems are expected to deal with change during their execution with limited or no human interaction. Therefore a better understanding of change and how it could be managed is a crucial step for achieving self-adaptation. Most of the research in self-adaptive software systems is focused on managing change, which is critical for the system in terms of sustaining its efficiency and operation. The work in this paper takes new direction and introduces the idea of exploratory change, heavily used in many other disciplines to successfully achieve self-adaptation. It proposes a new classification model of change in self-adaptive software systems, which extends the existing taxonomies in the research literature with five new criteria: change motif, change trigger, change adoption, change frequency and change speed. The purpose of this classification model is to aid the distinction between three different approaches for self-adaptation: exploitative, exploratory and mixed approaches. © 2011 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2023607.2023715},
  groups        = {acm, wiley},
  isbn          = {9781450309172},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {evolutionary biology, self-adaptive software systems, strategic management},
  location      = {Vienna, Austria},
  numpages      = {6},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2023607.2023715},
}

@Article{Vogel2014,
  author        = {Vogel, Thomas and Giese, Holger},
  title         = {Model-Driven Engineering of Self-Adaptive Software with EUREMA},
  journal       = {ACM Trans. Auton. Adapt. Syst.},
  year          = {2014},
  volume        = {8},
  number        = {4},
  month         = jan,
  issn          = {1556-4665},
  note          = {cited By 81},
  abstract      = {The development of self-adaptive software requires the engineering of an adaptation engine that controls the underlying adaptable software by feedback loops. The engine often describes the adaptation by runtime models representing the adaptable software and by activities such as analysis and planning that use these models. To systematically address the interplay between runtime models and adaptation activities, runtime megamodels have been proposed. A runtime megamodel is a specific model capturing runtime models and adaptation activities. In this article, we go one step further and present an executable modeling language for ExecUtable RuntimE MegAmodels (EUREMA) that eases the development of adaptation engines by following a model-driven engineering approach. We provide a domain-specific modeling language and a runtime interpreter for adaptation engines, in particular feedback loops. Megamodels are kept alive at runtime and by interpreting them, they are directly executed to run feedback loops. Additionally, they can be dynamically adjusted to adapt feedback loops. Thus, EUREMA supports development by making feedback loops explicit at a higher level of abstraction and it enables solutions where multiple feedback loops interact or operate on top of each other and self-adaptation co-exists with offline adaptation for evolution. © 2014 ACM.},
  address       = {New York, NY, USA},
  art_number    = {18},
  articleno     = {18},
  document_type = {Conference Paper},
  doi           = {10.1145/2555612},
  groups        = {acm, wiley},
  issue_date    = {January 2014},
  keywords      = {Model-driven engineering, model interpreter, modeling language, software evolution, layered architecture, feedback loops, self-adaptive software, models at runtime},
  numpages      = {33},
  publisher     = {Association for Computing Machinery},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2555612},
}

@InProceedings{Bastide2008,
  author        = {Bastide, Gautier and Seriai, Abdelhak and Oussalah, Mourad},
  title         = {A Self-Adaptation of Software Component Structures in Ubiquitous Environments},
  booktitle     = {Proceedings of the 5th International Conference on Pervasive Services},
  year          = {2008},
  series        = {ICPS ’08},
  pages         = {173–176},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 6},
  abstract      = {The creation of applications able to be executed in ubiquitous environments, involves a better consideration of the execution context in order to ensure service continuity. In component-based software engineering, applications are built by assembling existing components. For deploying such applications in ubiquitous environments, its components must be able to adapt themselves to the current context. To deal with this issue, we propose in this paper an approach aiming at reconfiguring the component structure to allow a flexible deployment of its services according to its use context. This adaptation focusing on the service continuity, consists of determining a structure adapted to the execution context. Then, the current structure is automatically reconfigured and the generated components are redeployed. Copyright 2008 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/1387269.1387299},
  groups        = {acm, wiley},
  isbn          = {9781605581354},
  journal       = {Proceedings of the 5th International Conference on Pervasive Services, ICPS 2008},
  keywords      = {software component, ubiquitous systems, restructuring, clustering, self-adaptation, deployment, context-awareness},
  location      = {Sorrento, Italy},
  numpages      = {4},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/1387269.1387299},
}

@InProceedings{Almeida2011,
  author        = {Almeida, Raquel and Vieira, Marco},
  title         = {Benchmarking the Resilience of Self-Adaptive Software Systems: Perspectives and Challenges},
  booktitle     = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year          = {2011},
  series        = {SEAMS ’11},
  pages         = {190–195},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 12},
  abstract      = {Self-adaptive systems are widely recognized as the future of computer systems. Due to their dynamic and evolving nature, the characterization of self-adaptation and resilience attributes is of utmost importance, but also presents itself as a huge challenge. In fact, currently there is no practical way to characterize self-adaptation capabilities, especially when comparing alternative systems concerning resilience. In this position paper we discuss the problem of resilience benchmarking of self-adaptive software systems. We identify a set of key challenges and propose a roadmap to tackle those challenges. At the same time, we present some perspectives on the development of such a benchmark, taking Autonomic Database Management Systems (ADBMS) as an illustrative case. © 2011 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/1988008.1988035},
  groups        = {acm, wiley},
  isbn          = {9781450305754},
  journal       = {Proceedings - International Conference on Software Engineering},
  keywords      = {resilience, autonomic database management systems, benchmarking, self-adaptive},
  location      = {Waikiki, Honolulu, HI, USA},
  numpages      = {6},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/1988008.1988035},
}

@Article{Diguet2011,
  author        = {Diguet, Jean-Philippe and Eustache, Yvan and Gogniat, Guy},
  title         = {Closed-Loop--Based Self-Adaptive Hardware/Software-Embedded Systems: Design Methodology and Smart Cam Case Study},
  journal       = {ACM Trans. Embed. Comput. Syst.},
  year          = {2011},
  volume        = {10},
  number        = {3},
  month         = may,
  issn          = {1539-9087},
  note          = {cited By 21},
  abstract      = {This article presents our methodology for implementing self-adaptivness within an OS-based and reconfigurable embedded system according to objectives such as quality of service, performance, or power consumption. We detail our approach to separate application-specific decisions and hardware/software- implementation decisions at system level. The former are related to the efficiency control of applications and based on the knowledge of application engineers. The latter are generic and address the choice between various hardware and software implementations according to user objectives. The decision management is implemented as an adaptive closed-loop model. We describe how each design step may be implemented and especially how we solved the issue of stability. Finally, we present a video-tracking application implemented on a FPGA to demonstrate the effectiveness of our solution, results are given for a system built around a NIOS soft-core withμ.COS II RTOS and new services for managing hardware and software tasks transparently. © 2011 ACM.},
  address       = {New York, NY, USA},
  art_number    = {38},
  articleno     = {38},
  document_type = {Article},
  doi           = {10.1145/1952522.1952531},
  groups        = {acm, wiley},
  issue_date    = {April 2011},
  keywords      = {control-theory, HW/SW codesign, Self-adaptive embedded systems, RTOS, QoS, image processing},
  numpages      = {28},
  publisher     = {Association for Computing Machinery},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/1952522.1952531},
}

@InProceedings{Yang2010,
  author        = {Yang, Qiliang and L\"{u}, Jian and Li, Juelong and Ma, Xiaoxing and Song, Wei and Zou, Yang},
  title         = {Toward a Fuzzy Control-Based Approach to Design of Self-Adaptive Software},
  booktitle     = {Proceedings of the Second Asia-Pacific Symposium on Internetware},
  year          = {2010},
  series        = {Internetware ’10},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 7},
  abstract      = {Self-adaptive software is expected to adjust itself attributes or structures at runtime in response to changes. Aiming at addressing some challenging problems such as difficult mathematically modeling software using the current control theoretical methods, we propose a novel fuzzy-control-based approach to achieve self-adaptive software, which is presented as framework of fuzzy self-adaptive software (FFSAS). In this framework, the general model, the implementation architecture, and the design methodology are put forward and discussed in detail. The fuzzy-control-based approach is evaluated with a news-website case study.},
  art_number    = {15},
  articleno     = {15},
  document_type = {Conference Paper},
  doi           = {10.1145/2020723.2020738},
  groups        = {acm, wiley},
  isbn          = {9781450306942},
  journal       = {Proceedings of the 2nd Asia-Pacific Symposium on Internetware, Internetware 2010},
  keywords      = {control theory, software methodology, fuzzy control, self-adaptive software, software engineering},
  location      = {Suzhou, China},
  numpages      = {4},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2020723.2020738},
}

@Article{Salvaneschi2013,
  author        = {Salvaneschi, Guido and Ghezzi, Carlo and Pradella, Matteo},
  title         = {An Analysis of Language-Level Support for Self-Adaptive Software},
  journal       = {ACM Trans. Auton. Adapt. Syst.},
  year          = {2013},
  volume        = {8},
  number        = {2},
  month         = jul,
  issn          = {1556-4665},
  note          = {cited By 20},
  abstract      = {Self-adaptive software has become increasingly important to address the new challenges of complex computing systems. To achieve adaptation, software must be designed and implemented by following suitable criteria, methods, and strategies. Past research has been mostly addressing adaptation by developing solutions at the software architecture level. This work, instead, focuses on finer-grain programming language-level solutions. We analyze three main linguistic approaches: metaprogramming, aspect-oriented programming, and context-oriented programming. The first two are general-purpose linguistic mechanisms, whereas the third is a specific and focused approach developed to support context-aware applications. This paradigm provides specialized language-level abstractions to implement dynamic adaptation and modularize behavioral variations in adaptive systems. The article shows how the three approaches can support the implementation of adaptive systems and compares the pros and cons offered by each solution. © 2013 ACM.},
  address       = {New York, NY, USA},
  art_number    = {7},
  articleno     = {7},
  document_type = {Article},
  doi           = {10.1145/2491465.2491466},
  groups        = {acm, wiley},
  issue_date    = {July 2013},
  keywords      = {context-oriented programming, self-adaptive software, Context, autonomic computing},
  numpages      = {29},
  publisher     = {Association for Computing Machinery},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2491465.2491466},
}

@InProceedings{Wang2017a,
  author        = {Wang, Lu},
  title         = {Using Search-Based Software Engineering to Handle the Changes with Uncertainties for Self-Adaptive Systems},
  booktitle     = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
  year          = {2017},
  volume        = {Part F130154},
  series        = {ESEC/FSE 2017},
  pages         = {1014–1017},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 2},
  abstract      = {The changes confronting contemporary Self-Adaptive Systems (SASs) are characterized by uncertainties. To generate adaptation strategies for handling these changes, existing adaptation planning methods, which ignore these uncertainties, must be improved. This thesis explores the possibilities of using Search-Based Software Engineering (SBSE) to establish a search-based planning method capable of handling multiple changes in an uncertain context without defining their priorities. Meanwhile, both the assurance approach and the selection approach are proposed to solve emerging research questions that arise when such planning method is applied in actual SASs. From this experience, we are able to derive innovative methods for the designers of SASs as a reference, which may observably promote the widespread use of SBSE in SASs. © 2017 Copyright held by the owner/author(s).},
  document_type = {Conference Paper},
  doi           = {10.1145/3106237.3119871},
  groups        = {acm, wiley},
  isbn          = {9781450351058},
  journal       = {Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  keywords      = {Self-adaptive systems, Self-adaptation planning, Search-based software engineering, Multi-object optimization},
  location      = {Paderborn, Germany},
  numpages      = {4},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/3106237.3119871},
}

@InProceedings{Lee2017,
  author        = {Lee, Euijong and Kim, Young-Gab and Seo, Young-Duk and Seol, Kwangsoo and Baik, Doo-Kwon},
  title         = {Runtime Verification Method for Self-Adaptive Software Using Reachability of Transition System Model},
  booktitle     = {Proceedings of the Symposium on Applied Computing},
  year          = {2017},
  volume        = {Part F128005},
  series        = {SAC ’17},
  pages         = {65–68},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 3},
  abstract      = {Self-adaptive software can change its own behavior in order to achieve an intended objective in a changing environment. Consequently, self-adaptive software requires practical runtime verification and validation. We propose an approach for runtime verification of self-adaptive software by using a designed transition system model. The proposed approach consists of two phases: pre-computing phase and runtime phase. In the precomputing phase, we assume that the self-adaptive software is designed as a transition system. In this phase, the proposed approach translates the designed transition system into equations for runtime verification. For translation, we suggest an algorithm based on state elimination and reachability. After the pre-computing phase, the results of the translated equations are verified in the runtime phase. In order to demonstrate the suitability of our proposed approach, we performed experiments to evaluate the performance of the pre-processing phase and the runtime phase. In comparison with other model-checking tools, our approach achieved excellent results. Copyright 2017 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/3019612.3019851},
  groups        = {acm, wiley},
  isbn          = {9781450344869},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  keywords      = {model checking, transition system, self-adaptive software},
  location      = {Marrakech, Morocco},
  numpages      = {4},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/3019612.3019851},
}

@InProceedings{Derin2009a,
  author        = {Derin, Onur and Ferrante, Alberto},
  title         = {Simulation of a Self-Adaptive Run-Time Environment with Hardware and Software Components},
  booktitle     = {Proceedings of the 2009 ESEC/FSE Workshop on Software Integration and Evolution @ Runtime},
  year          = {2009},
  series        = {SINTER ’09},
  pages         = {37–40},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 3},
  abstract      = {In this paper we describe a new way for simulating self-adaptive systems developed by relying on a component-based approach, this approach proves to be useful both in easing self-adaptivity and in providing the ability to mix hardware and software elements. Our simulation method is based on SACRE (Self-Adaptive Component Run-time Environment), a framework we have defined in Java for simulating self-adaptive systems. Copyright 2009 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/1596495.1596507},
  groups        = {acm, wiley},
  isbn          = {9781605586816},
  journal       = {SINTER'09 - Proceedings of the 2009 ESEC/FSE Workshop on Software Integration and Evolution at Runtime},
  keywords      = {simulation, component-based design, hw/sw co-design, self-adaptive systems},
  location      = {Amsterdam, The Netherlands},
  numpages      = {4},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/1596495.1596507},
}

@InProceedings{Elkhodary2010a,
  author        = {Elkhodary, Ahmed},
  title         = {A Learning-Based Approach for Engineering Feature-Oriented Self-Adaptive Software Systems},
  booktitle     = {Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  year          = {2010},
  series        = {FSE ’10},
  pages         = {345–348},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1145/1882291.1882343},
  groups        = {acm, wiley},
  isbn          = {9781605587912},
  journal       = {Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  keywords      = {feature-orientation, qos analysis, learning, self-adaptation},
  location      = {Santa Fe, New Mexico, USA},
  numpages      = {4},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/1882291.1882343},
}

@InProceedings{Rahnama2011,
  author        = {Rahnama, Hossein and Kramaric, Petar and Sadeghian, Alireza and Shepard, Alan},
  title         = {Self-Adaptive Middleware for the Design of Context-Aware Software Applications in Public Transit Systems},
  booktitle     = {Proceedings of the 13th International Conference on Ubiquitous Computing},
  year          = {2011},
  series        = {UbiComp ’11},
  pages         = {491–492},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 4},
  abstract      = {Ubiquitous software applications can be more responsive if they can adapt to their surrounding situation without relying on users' continuous commitment. In dynamic environments such as public transit settings, where information is rapidly changing and passengers' demography are not uniform, an adaptive mobile application to navigate passengers based on their profile and context may be a good example of an emerging self-adaptive and context-aware mobile application. In this paper we demonstrated the use of an open source framework to develop a travel assistant application to help passengers with special needs in public transit environments. © 2011 Authors.},
  document_type = {Conference Paper},
  doi           = {10.1145/2030112.2030186},
  groups        = {acm, wiley},
  isbn          = {9781450306300},
  journal       = {UbiComp'11 - Proceedings of the 2011 ACM Conference on Ubiquitous Computing},
  keywords      = {self-adaptive software, public transit, intelligent transport systems, context awareness, ubiquitous computing},
  location      = {Beijing, China},
  numpages      = {2},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2030112.2030186},
}

@InProceedings{Zhao2013,
  author        = {Zhao, Tianqi and Zhao, Haiyan and Zhang, Wei},
  title         = {A Preliminary Study on Requirements Modeling Methods for Self-Adaptive Software Systems},
  booktitle     = {Proceedings of the 5th Asia-Pacific Symposium on Internetware},
  year          = {2013},
  series        = {Internetware ’13},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 2},
  abstract      = {Internetware denotes a kind of complex distributed software system, which executes in an open, uncertain and dynamic environment, and adapts itself to changes in the environment. An important problem related to the development of Internetware applications is how to define their requirements. Traditional requirements modeling methods work well with software applications deployed in predictable environment, but cannot deal with Internetware applications, which have to identify and adapt themselves to the unpredictable situations of their environment. The self-adaptation characteristic of Internetware applications introduces challenges to the effective modeling of the requirements of Internetware applications. In this paper, we carry out a preliminary study on requirements modeling methods for self-adaptive software systems. In particular, we focus on how existing requirements modeling methods address the challenges caused by self-adaptation and what are the advantages and disadvantages of their solutions. By doing this study, we aim to identify the essential capabilities or properties that a requirements modeling method should possess so as to support the requirements modeling of self-adaptive software systems like Internetware. Categories and Subject Descriptors D.2.1 [Software Engineering]: Requirements/Specifications-Languages, Methodologies General Terms Languages, Theory, Verification.},
  art_number    = {3},
  articleno     = {3},
  document_type = {Conference Paper},
  doi           = {10.1145/2532443.2532448},
  groups        = {acm, wiley},
  isbn          = {9781450323697},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {self-adaptive system, requirement modeling method, requirement verification, requirement representation, requirement evolution},
  location      = {Changsha, China},
  numpages      = {10},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2532443.2532448},
}

@InProceedings{Kashi2017,
  author        = {Kashi, Rajanikanth N. and D’Souza, Meenakshi and Kishore, Koyalkar Raman},
  title         = {Incorporating Formal Methods and Measures Obtained through Analysis, Simulation Testing for Dependable Self-Adaptive Software in Avionics Systems},
  booktitle     = {Proceedings of the 10th Annual ACM India Compute Conference},
  year          = {2017},
  series        = {Compute ’17},
  pages         = {137–142},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 3},
  abstract      = {An Area1rich with challenges is that of self-adaptive avionics software, with considerable thrust in both the American and European airspace modernization programs.Verifying functional requirements for such a system, ultimately leading to certification poses a unique set of problems, since these systems are required to be dependable. Also inherent is the subject of eliciting measures of adaptability which help evaluate the system in the context of non-functional requirements qualified by self-∗properties. We illustrate our approach for such a verification and evaluation exercise by proposing a combination of formal methods verification techniques and simulation based testing. The test bed is a representative self-adaptive software of a small UAS (Unmanned Aircraft System) avionics modeled as a multiagent BDI (Belief Desire Intention) system with evolutionary and reactive behaviours, illustrating important aspects of verification. © 2017 Association for Computing Machinery.},
  document_type = {Conference Paper},
  doi           = {10.1145/3140107.3140128},
  groups        = {acm, wiley},
  isbn          = {9781450353236},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {BDI, Q-Learning, Self-Adaptive Software, Multi-agent Systems, Model Checking, Measures of Self-properties, Formal Methods},
  location      = {Bhopal, India},
  numpages      = {6},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/3140107.3140128},
}

@Article{Chen2018b,
  author        = {Chen, Tao and Li, Ke and Bahsoon, Rami and Yao, Xin},
  title         = {FEMOSAA: Feature-Guided and Knee-Driven Multi-Objective Optimization for Self-Adaptive Software},
  journal       = {ACM Trans. Softw. Eng. Methodol.},
  year          = {2018},
  volume        = {27},
  number        = {2},
  month         = jun,
  issn          = {1049-331X},
  note          = {cited By 5},
  abstract      = {Self-Adaptive Software (SAS) can reconfigure itself to adapt to the changing environment at runtime, aiming to continually optimize conflicted nonfunctional objectives (e.g., response time, energy consumption, throughput, cost, etc.). In this article, we present Feature-guided and knEe-driven Multi-Objective optimization for Self-Adaptive softwAre (FEMOSAA), a novel framework that automatically synergizes the feature model and Multi-Objective Evolutionary Algorithm (MOEA) to optimize SAS at runtime. FEMOSAA operates in two phases: at design time, FEMOSAA automatically transposes the engineers' design of SAS, expressed as a feature model, to fit the MOEA, creating new chromosome representation and reproduction operators. At runtime, FEMOSAA utilizes the feature model as domain knowledge to guide the search and further extend the MOEA, providing a larger chance for finding better solutions. In addition, we have designed a new method to search for the knee solutions, which can achieve a balanced tradeoff. We comprehensively evaluated FEMOSAA on two running SAS: One is a highly complex SAS with various adaptable real-world software under the realistic workload trace; another is a service-oriented SAS that can be dynamically composed from services. In particular, we compared the effectiveness and overhead of FEMOSAA against four of its variants and three other search-based frameworks for SAS under various scenarios, including three commonly applied MOEAs, two workload patterns, and diverse conflicting quality objectives. The results reveal the effectiveness of FEMOSAA and its superiority over the others with high statistical significance and nontrivial effect sizes. © ACM.},
  address       = {New York, NY, USA},
  art_number    = {5},
  articleno     = {5},
  document_type = {Article},
  doi           = {10.1145/3204459},
  groups        = {acm, wiley},
  issue_date    = {July 2018},
  keywords      = {multi-objective optimization, multi-objective evolutionary algorithm, performance engineering, search-based software engineering, Feature model, self-adaptive system},
  numpages      = {50},
  publisher     = {Association for Computing Machinery},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/3204459},
}

@InProceedings{Muccini2016,
  author        = {Muccini, Henry and Sharaf, Mohammad and Weyns, Danny},
  title         = {Self-Adaptation for Cyber-Physical Systems: A Systematic Literature Review},
  booktitle     = {Proceedings of the 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year          = {2016},
  series        = {SEAMS ’16},
  pages         = {75–81},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 55},
  abstract      = {Context: Cyber-physical systems (CPS) seamlessly integrate computational and physical components. Adaptability, realized through feedback loops, is a key requirement to deal with uncertain operating conditions in CPS. Objective: We aim at assessing state-of-art approaches to handle self-adaptation in CPS at the architectural level. Method: We conducted a systematic literature review by searching four major scientific data bases, resulting in 1103 candidate studies and eventually retaining 42 primary studies included for data collection after applying inclusion and exclusion criteria. Results: The primary concerns of adaptation in CPS are performance, flexibility, and reliability. 64% of the studies apply adaptation at the application layer and 24% at the middleware layer. MAPE (Monitor-Analyze-Plan-Execute) is the dominant adaptation mechanism (60%), followed by agents and self-organization (both 29%). Remarkably, 36% of the studies combine different mechanisms to realize adaptation; 17% combine MAPE with agents. The dominating application domain is energy (24%). Conclusions: Our findings show that adaptation in CPS is a cross-layer concern, where solutions combine different adaptation mechanisms within and across layers. This raises challenges for future research both in the field of CPS and self-adaptation, including: how to map concerns to layers and adaptation mechanisms, how to coordinate adaptation mechanisms within and across layers, and how to ensure system-wide consistency of adaptation. © 2016 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2897053.2897069},
  groups        = {acm, wiley},
  isbn          = {9781450341875},
  journal       = {Proceedings - 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2016},
  keywords      = {cyber physical systems, systematic study, self-adaptiveness},
  location      = {Austin, Texas},
  numpages      = {7},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2897053.2897069},
}

@InProceedings{Sharaf2018,
  author        = {Sharaf, Mohammad and Muccini, Henry and Sahay, Apurvanand},
  title         = {A Comparative Analysis of Self-Adaptive Patterns in Cyber-Physical Systems},
  booktitle     = {Proceedings of the 12th European Conference on Software Architecture: Companion Proceedings},
  year          = {2018},
  series        = {ECSA ’18},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 0},
  abstract      = {Architecting Cyber-Physical Systems (CPS) is cumbersome, as these systems must handle changes during operations. One of the possible solution to deal with the changes in these systems is using patterns. Three patterns for self-adaptive cyber-physical systems (CPS) have been presented in previous work: Synthesis Utilize Pattern, Synthesis Command Pattern, and Collect Organize Pattern. To determine the energy efficency and data traffic generated by those CPS patterns, we run a simulation of the three CPS patterns where results are collected, discussed, and generalized. The result shows that the Synthesis Command Pattern requires less energy consumption when compared to the other two patterns. The Collect Organize Pattern, instead, results to be the most efficient in terms of distributing logic. Thee architecture reveals about the accuracy in the solution drawn from the Synthesis Utilize Pattern which is higher than that of the other two, due to the presence of duplicate data transfer in real time from different components. The Synthesis Utilize and Collect Organize Patterns seem to be the more suitable for engineering autonomous systems where the components can be self-organized according to embedded logic or different sensors associated with the components. © 2018 ACM.},
  art_number    = {a46},
  articleno     = {46},
  document_type = {Conference Paper},
  doi           = {10.1145/3241403.3241451},
  groups        = {acm, wiley},
  isbn          = {9781450364836},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {self-adaptation, patterns, software architecture, cyber-physical systems},
  location      = {Madrid, Spain},
  numpages      = {7},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/3241403.3241451},
}

@InProceedings{Svae2017,
  author        = {Svae, Alexander and Taherkordi, Amir and Herrmann, Peter and Blech, Jan Olaf},
  title         = {Self-Adaptive Control in Cyber-Physical Systems: The Autonomous Train Experiment},
  booktitle     = {Proceedings of the Symposium on Applied Computing},
  year          = {2017},
  volume        = {Part F128005},
  series        = {SAC ’17},
  pages         = {1436–1443},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 1},
  abstract      = {Autonomous systems have become more and more important in today's transport sector. They often operate in dynamic environments in which unpredictable events may occur at any time. These events may affect the safe operation of vehicles, calling for highly efficient control software technologies to reason about and react on their appearance. A crucial efficiency parameter is timeliness as vehicles often operate under high speed. The contribution of this paper is the presentation and analysis of design aspects of dynamic control software in the context of an autonomous train experiment. This is achieved through a self-adaptation software framework intended for autonomous trains and built on a demonstrator using Lego Mindstorms. The main mission of the framework is to collect context information, reason about it, and adapt the train behavior accordingly. The adaptation framework is implemented using the development tool Reactive Blocks and tested on the demonstrator. The evaluation results provide useful insights into the performance of the framework, particularly about the time needed to reason about the context and to carry out reconfigurations. Copyright 2017 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/3019612.3019651},
  groups        = {acm, wiley},
  isbn          = {9781450344869},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  keywords      = {timeliness, cyber-physical systems, autonomous trains, self-adaptation},
  location      = {Marrakech, Morocco},
  numpages      = {8},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/3019612.3019651},
}

@InProceedings{Jamshidi2019,
  author    = {Jamshidi, Pooyan and C\'{a}mara, Javier and Schmerl, Bradley and K\"{a}stner, Christian and Garlan, David},
  title     = {Machine Learning Meets Quantitative Planning: Enabling Self-Adaptation in Autonomous Robots},
  booktitle = {Proceedings of the 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2019},
  series    = {SEAMS ’19},
  pages     = {39–50},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {Modern cyber-physical systems (e.g., robotics systems) are typically composed of physical and software components, the characteristics of which are likely to change over time. Assumptions about parts of the system made at design time may not hold at run time, especially when a system is deployed for long periods (e.g., over decades). Self-adaptation is designed to find reconfigurations of systems to handle such run-time inconsistencies. Planners can be used to find and enact optimal reconfigurations in such an evolving context. However, for systems that are highly configurable, such planning becomes intractable due to the size of the adaptation space. To overcome this challenge, in this paper we explore an approach that (a) uses machine learning to find Pareto-optimal configurations without needing to explore every configuration and (b) restricts the search space to such configurations to make planning tractable. We explore this in the context of robot missions that need to consider task timeliness and energy consumption. An independent evaluation shows that our approach results in high-quality adaptation plans in uncertain and adversarial environments.},
  doi       = {10.1109/SEAMS.2019.00015},
  groups    = {acm, wiley},
  issn      = {2157-2321},
  keywords  = {quantitative planning, machine learning, self-adaptive systems, robotics systems, artificial intelligence},
  location  = {Montreal, Quebec, Canada},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2019.00015},
}

@InProceedings{Abbas2015,
  author        = {Abbas, Nadeem and Andersson, Jesper},
  title         = {Harnessing Variability in Product-Lines of Self-Adaptive Software Systems},
  booktitle     = {Proceedings of the 19th International Conference on Software Product Line},
  year          = {2015},
  volume        = {20-24-July-2015},
  series        = {SPLC ’15},
  pages         = {191–200},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 5},
  abstract      = {This work studies systematic reuse in the context of self-adaptive software systems. In our work, we realized that managing variability for such platforms is different compared to traditional platforms, primarily due to the run-time variability and system uncertainties. Motivated by the fact that recent trends show that self-adaptation will be used more often in future system generation and that software reuse state-of-practice or research do not provide sufficient support, we have investigated the problems and possibly resolutions in this context. We have analyzed variability for these systems, using a systematic reuse prism, and identified a research gap in variability management. The analysis divides variability handling into four activities: (1) identify variability, (2) constrain variability, (3) implement variability, and (4) manage variability. Based on the findings we envision a reuse framework for the specific domain and present an example framework that addresses some of the identified challenges. We argue that it provides basic support for engineering self-adaptive software systems with systematic reuse. We discuss some important avenues of research for achieving the vision. © 2015 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2791060.2791089},
  groups        = {acm, wiley},
  isbn          = {9781450336130},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {self-adaptive software systems, variability analysis, software reuse},
  location      = {Nashville, Tennessee},
  numpages      = {10},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2791060.2791089},
}

@InProceedings{Provoost2019,
  author    = {Provoost, Michiel and Weyns, Danny},
  title     = {DingNet: A Self-Adaptive Internet-of-Things Exemplar},
  booktitle = {Proceedings of the 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2019},
  series    = {SEAMS ’19},
  pages     = {195–201},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {Recent efforts have shown that research on self-adaptive systems can benefit from exemplars to evaluate and compare new methods, techniques and tools. One highly relevant application domain for self-adaptation is the Internet-of-Things (IoT). While some initial exemplars have been proposed for IoT, these exemplars are limited in scope to support research in realistic IoT domains, such as smart cities. To address this limitation, we introduce the DingNet exemplar, a reference implementation for research on self-adaptation in the domain of IoT. DingNet offers a simulator that maps directly to a physical IoT system that is deployed in the area of Leuven, Belgium. DingNet models a set of geographically distributed gateways, which are connected to a user application that is deployed at a front-end server. The gateways can interact over a LoRaWAN network with local stationary and mobile motes that can be equipped with sensors and actuators. The exemplar comes with a set of scenarios for comparing the effectiveness of different self-adaptive solutions. We illustrate how the exemplar is used for a typical adaptation problem of smart city IoT application, where mobile motes dynamically have to adapt their communication settings to ensure reliable and energy efficient communication.},
  doi       = {10.1109/SEAMS.2019.00033},
  groups    = {acm, wiley},
  issn      = {2157-2321},
  keywords  = {exemplar, internet-of-things, self-adaptation},
  location  = {Montreal, Quebec, Canada},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2019.00033},
}

@InProceedings{Iftikhar2017,
  author    = {Iftikhar, M. Usman and Ramachandran, Gowri Sankar and Bollans\'{e}e, Pablo and Weyns, Danny and Hughes, Danny},
  title     = {DeltaIoT: A Self-Adaptive Internet of Things Exemplar},
  booktitle = {Proceedings of the 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2017},
  series    = {SEAMS ’17},
  pages     = {76–82},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {Internet of Things (IoT) consists of networked tiny embedded computers (motes) that are capable of monitoring and controlling the physical world. Examples range from building security monitoring to smart factories. A central problem of IoT is minimising the energy consumption of the motes, while guaranteeing high packet delivery performance, regardless of uncertainties such as sudden changes in traffic load and communication interference. Traditionally, to deal with uncertainties the network settings are either hand-tuned or over-provisioned, resulting in continuous network maintenance or inefficiencies. Enhancing the IoT network with self-adaptation can automate these tasks. This paper presents DeltaIoT, an exemplar that enables researchers to evaluate and compare new methods, techniques and tools for self-adaptation in IoT. DeltaIoT is the first exemplar for research on self-adaptation that provides both a simulator for offline experimentation and a physical setup that can be accessed remotely for real-world experimentation.},
  doi       = {10.1109/SEAMS.2017.21},
  groups    = {acm, wiley},
  isbn      = {9781538615508},
  keywords  = {exemplar, internet-of-things, self-adaptation},
  location  = {Buenos Aires, Argentina},
  numpages  = {7},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2017.21},
}

@Article{Filieri2017,
  author        = {Filieri, Antonio and Maggio, Martina and Angelopoulos, Konstantinos and D’ippolito, Nicol\'{a}s and Gerostathopoulos, Ilias and Hempel, Andreas Berndt and Hoffmann, Henry and Jamshidi, Pooyan and Kalyvianaki, Evangelia and Klein, Cristian and Krikava, Filip and Misailovic, Sasa and Papadopoulos, Alessandro V. and Ray, Suprio and Sharifloo, Amir M. and Shevtsov, Stepan and Ujma, Mateusz and Vogel, Thomas},
  title         = {Control Strategies for Self-Adaptive Software Systems},
  journal       = {ACM Trans. Auton. Adapt. Syst.},
  year          = {2017},
  volume        = {11},
  number        = {4},
  month         = feb,
  issn          = {1556-4665},
  note          = {cited By 16},
  abstract      = {The pervasiveness and growing complexity of software systems are challenging software engineering to design systems that can adapt their behavior to withstand unpredictable, uncertain, and continuously changing execution environments. Control theoretical adaptation mechanisms have received growing interest from the software engineering community in the last few years for their mathematical grounding, allowing formal guarantees on the behavior of the controlled systems. However, most of these mechanisms are tailored to specific applications and can hardly be generalized into broadly applicable software design and development processes. This article discusses a reference control design process, from goal identification to the verification and validation of the controlled system. A taxonomy of the main control strategies is introduced, analyzing their applicability to software adaptation for both functional and nonfunctional goals. A brief extract on how to deal with uncertainty complements the discussion. Finally, the article highlights a set of open challenges, both for the software engineering and the control theory research communities. © 2017 ACM.},
  address       = {New York, NY, USA},
  art_number    = {24},
  articleno     = {24},
  document_type = {Review},
  doi           = {10.1145/3024188},
  groups        = {acm, wiley},
  issue_date    = {February 2017},
  keywords      = {Self-adaptive software, control theory, formal methods, non-functional properties},
  numpages      = {31},
  publisher     = {Association for Computing Machinery},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/3024188},
}

@InProceedings{D’Angelo2019,
  author    = {D’Angelo, Mirko and Gerasimou, Simos and Ghahremani, Sona and Grohmann, Johannes and Nunes, Ingrid and Pournaras, Evangelos and Tomforde, Sven},
  title     = {On Learning in Collective Self-Adaptive Systems: State of Practice and a 3D Framework},
  booktitle = {Proceedings of the 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year      = {2019},
  series    = {SEAMS ’19},
  pages     = {13–24},
  month     = {May},
  publisher = {IEEE Press},
  abstract  = {Collective self-adaptive systems (CSAS) are distributed and interconnected systems composed of multiple agents that can perform complex tasks such as environmental data collection, search and rescue operations, and discovery of natural resources. By providing individual agents with learning capabilities, CSAS can cope with challenges related to distributed sensing and decision-making and operate in uncertain environments. This unique characteristic of CSAS enables the collective to exhibit robust behaviour while achieving system-wide and agent-specific goals. Although learning has been explored in many CSAS applications, selecting suitable learning models and techniques remains a significant challenge that is heavily influenced by expert knowledge. We address this gap by performing a multifaceted analysis of existing CSAS with learning capabilities reported in the literature. Based on this analysis, we introduce a 3D framework that illustrates the learning aspects of CSAS considering the dimensions of autonomy, knowledge access, and behaviour, and facilitates the selection of learning techniques and models. Finally, using example applications from this analysis, we derive open challenges and highlight the need for research on collaborative, resilient and privacy-aware mechanisms for CSAS.},
  doi       = {10.1109/SEAMS.2019.00012},
  groups    = {acm, wiley},
  issn      = {2157-2321},
  keywords  = {distributed systems, multi-agent systems, learning, self-adaptive systems, taxonomy, autonomic systems},
  location  = {Montreal, Quebec, Canada},
  numpages  = {12},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/SEAMS.2019.00012},
}

@InProceedings{Palmerino2019,
  author    = {Palmerino, Jeffrey and Yu, Qi and Desell, Travis and Krutz, Daniel E.},
  title     = {Improving the Decision-Making Process of Self-Adaptive Systems by Accounting for Tactic Volatility},
  booktitle = {Proceedings of the 34th IEEE/ACM International Conference on Automated Software Engineering},
  year      = {2019},
  series    = {ASE ’19},
  pages     = {949–961},
  month     = {Nov},
  publisher = {IEEE Press},
  abstract  = {When self-adaptive systems encounter changes withintheir surrounding environments, they enacttacticsto performnecessary adaptations. For example, a self-adaptive cloud-basedsystem may have a tactic that initiates additional computingresources when response time thresholds are surpassed, or theremay be a tactic to activate a specific security measure when anintrusion is detected. In real-world environments, these tacticsfrequently experiencetactic volatilitywhich is variable behaviorduring the execution of the tactic.Unfortunately, current self-adaptive approaches do not accountfor tactic volatility in their decision-making processes, and merelyassume that tactics do not experience volatility. This limitationcreates uncertainty in the decision-making process and mayadversely impact the system's ability to effectively and efficientlyadapt. Additionally, many processes do not properly account forvolatility that may effect the system's Service Level Agreement(SLA). This can limit the system's ability to act proactively, especially when utilizing tactics that contain latency.To address the challenge of sufficiently accounting for tacticvolatility, we propose aTactic Volatility Aware(TVA) solution.Using Multiple Regression Analysis (MRA), TVA enables self-adaptive systems to accurately estimate the cost and timerequired to execute tactics. TVA also utilizesAutoregressiveIntegrated Moving Average(ARIMA) for time series forecasting, allowing the system to proactively maintain specifications.},
  doi       = {10.1109/ASE.2019.00092},
  groups    = {acm, wiley},
  isbn      = {9781728125084},
  issn      = {2643-1572},
  keywords  = {self-adaptation, machine learning, artificial intelligence},
  location  = {San Diego, California},
  numpages  = {13},
  url       = {https://doi-org.eaccess.ub.tum.de/10.1109/ASE.2019.00092},
}

@InProceedings{Shevtsov2016a,
  author        = {Shevtsov, Stepan},
  title         = {Developing a Reusable Control-Based Approach to Build Self-Adaptive Software Systems with Formal Guarantees},
  booktitle     = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  year          = {2016},
  volume        = {13-18-November-2016},
  series        = {FSE 2016},
  pages         = {1060–1062},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 1},
  abstract      = {An increasingly important concern of software engineers is handling uncertainty at runtime. Over the last decade researchers have applied architecture-based self-Adaptation approaches to address this concern. However, providing guarantees required by current software systems has shown to be challenging with these approaches. To tackle this challenge, we study the application of control theory to realize self-Adaptation and develop novel control-based adaptation mechanisms that guarantee desired system properties. Results are validated on systems with strict requirements. © 2016 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2950290.2983949},
  groups        = {acm, wiley},
  isbn          = {9781450342186},
  journal       = {Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  keywords      = {software, self-adaptive, control theory, guarantees},
  location      = {Seattle, WA, USA},
  numpages      = {3},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2950290.2983949},
}

@InProceedings{Moghaddam2017,
  author        = {Moghaddam, Fahimeh Alizadeh and Deckers, Robert and Procaccianti, Giuseppe and Grosso, Paola and Lago, Patricia},
  title         = {A Domain Model for Self-Adaptive Software Systems},
  booktitle     = {Proceedings of the 11th European Conference on Software Architecture: Companion Proceedings},
  year          = {2017},
  volume        = {Part F130530},
  series        = {ECSA ’17},
  pages         = {16–22},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 0},
  abstract      = {Modern software systems operate in a continuously changing environment. To keep up with these changes, they can benefit from self-Adaptation mechanisms. A number of modeling frameworks have been introduced to realize self-Adaptive software systems. However, they usually focus either on runtime adaptation or on designing self-Adaptability. As a consequence, they do not provide a clear link between architecture-level and system-level concepts. Without this link, we cannot ensure that the realized system will deliver the designed-for self-Adaptability. In this paper, we address this problem by introducing a domain model for self-Adaptive software systems that encompasses both levels. Our model can be used to facilitate both architecture design (e.g. making better-informed design decisions) and system engineering (e.g. guiding self-Adaptation at runtime). We show the application of our model in a case example from the literature where self-Adaptation aims at energy efficiency. © 2017 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/3129790.3129824},
  groups        = {acm, wiley},
  isbn          = {9781450352178},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {self-adaptive software, domain model, software architecture, seamless adaptation},
  location      = {Canterbury, United Kingdom},
  numpages      = {7},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/3129790.3129824},
}

@InProceedings{Esfahani2011,
  author        = {Esfahani, Naeem and Kouroshfar, Ehsan and Malek, Sam},
  title         = {Taming Uncertainty in Self-Adaptive Software},
  booktitle     = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
  year          = {2011},
  series        = {ESEC/FSE ’11},
  pages         = {234–244},
  address       = {New York, NY, USA},
  publisher     = {Association for Computing Machinery},
  note          = {cited By 90},
  abstract      = {Self-adaptation endows a software system with the ability to satisfy certain objectives by automatically modifying its behavior. While many promising approaches for the construction of self-adaptive software systems have been developed, the majority of them ignore the uncertainty underlying the adaptation decisions. This has been one of the key obstacles to wide-spread adoption of self-adaption techniques in risk-averse real-world settings. In this paper, we describe an approach, called POssIbilistic SElf-aDaptation (POISED), for tackling the challenge posed by uncertainty in making adaptation decisions. POISED builds on possibility theory to assess both the positive and negative consequences of uncertainty. It makes adaptation decisions that result in the best range of potential behavior. We demonstrate POISED's application to the problem of improving a software system's quality of service via runtime reconfiguration of its customizable software components. We have extensively evaluated POISED using a prototype of a robotic software system. © 2011 ACM.},
  document_type = {Conference Paper},
  doi           = {10.1145/2025113.2025147},
  groups        = {acm, wiley},
  isbn          = {9781450304436},
  journal       = {SIGSOFT/FSE 2011 - Proceedings of the 19th ACM SIGSOFT Symposium on Foundations of Software Engineering},
  keywords      = {software architecture, uncertainty, self-adaptation},
  location      = {Szeged, Hungary},
  numpages      = {11},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/2025113.2025147},
}

@Article{Salehie2009,
  author        = {Salehie, Mazeiar and Tahvildari, Ladan},
  title         = {Self-Adaptive Software: Landscape and Research Challenges},
  journal       = {ACM Trans. Auton. Adapt. Syst.},
  year          = {2009},
  volume        = {4},
  number        = {2},
  month         = may,
  issn          = {1556-4665},
  note          = {cited By 809},
  abstract      = {Software systems dealing with distributed applications in changing environments normally require human supervision to continue operation in all conditions. These (re-)configuring, troubleshooting, and in general maintenance tasks lead to costly and time-consuming procedures during the operating phase. These problems are primarily due to the open-loop structure often followed in software development. Therefore, there is a high demand for management complexity reduction, management automation, robustness, and achieving all of the desired quality requirements within a reasonable cost and time range during operation. Self-adaptive software is a response to these demands; it is a closed-loop system with a feedback loop aiming to adjust itself to changes during its operation. These changes may stem from the software system's self (internal causes, e.g., failure) or context (external events, e.g., increasing requests from users). Such a system is required to monitor itself and its context, detect significant changes, decide how to react, and act to execute such decisions. These processes depend on adaptation properties (called self-* properties), domain characteristics (context information or models), and preferences of stakeholders. Noting these requirements, it is widely believed that new models and frameworks are needed to design self-adaptive software. This survey article presents a taxonomy, based on concerns of adaptation, that is, how, what, when and where, towards providing a unified view of this emerging area. Moreover, as adaptive systems are encountered in many disciplines, it is imperative to learn from the theories and models developed in these other areas. This survey article presents a landscape of research in self-adaptive software by highlighting relevant disciplines and some prominent research projects. This landscape helps to identify the underlying research gaps and elaborates on the corresponding challenges. © 2009 ASM.},
  address       = {New York, NY, USA},
  art_number    = {14},
  articleno     = {14},
  document_type = {Article},
  doi           = {10.1145/1516533.1516538},
  groups        = {acm, wiley},
  issue_date    = {May 2009},
  keywords      = {research challenges, Adaptation processes, self-properties, self-adaptive software, survey},
  numpages      = {42},
  publisher     = {Association for Computing Machinery},
  source        = {Scopus},
  url           = {https://doi-org.eaccess.ub.tum.de/10.1145/1516533.1516538},
}

@InProceedings{Kit2015a,
  author        = {M. {Kit} and I. {Gerostathopoulos} and T. {Bures} and P. {Hnetynka} and F. {Plasil}},
  title         = {An Architecture Framework for Experimentations with Self-Adaptive Cyber-physical Systems},
  booktitle     = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year          = {2015},
  pages         = {93-96},
  month         = {May},
  note          = {cited By 17},
  abstract      = {Recent advances in embedded devices capabilities and wireless networks paved the way for creating ubiquitous Cyber-Physical Systems (CPS) grafted with self-configuring and self-adaptive capabilities. As these systems need to strike a balance between dependability, open-endedness and adaptability, and operate in dynamic and opportunistic environments, their design and development is particularly challenging. We take an architecture-based approach to this problem and advocate the use of component-based abstractions and related machinery to engineer self-adaptive CPS. Our approach is structured around DEECo -- a component framework that introduces the concept of component ensembles to deal with the dynamicity of CPS at the middleware level. DEECo provides the architecture abstractions of autonomous components and component ensembles on top of which different adaptation techniques can be deployed. This makes DEECo a vehicle for seamless experiments with self-adaptive systems where the physical distribution and mobility of nodes, and the limited data availability play an important role.},
  art_number    = {7194662},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAMS.2015.28},
  groups        = {ieee, wiley},
  issn          = {2157-2321},
  journal       = {Proceedings - 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2015},
  keywords      = {middleware;object-oriented programming;software architecture;self-adaptive cyber-physical system;self-configuring;dependability;open endedness;adaptability;dynamic environments;opportunistic environments;architecture-based approach;component-based abstraction;DEECo;CPS;middleware;architecture abstractions;autonomous components;component ensembles;Vehicles;Computers;Software engineering;Adaptive systems;Indexes;Knowledge engineering;Vehicle dynamics;framework;self-adaptation;cyber-physical systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84953218659&doi=10.1109%2fSEAMS.2015.28&partnerID=40&md5=413c60f26d422f5eefa1d03d5d6e9200},
}

@InProceedings{Safi2010,
  author        = {G. {Safi} and S. {Mirian-Hosseinabadi}},
  title         = {A Service Based Approach to Self-Adaptive Software Systems Based on Constructing a Group of Autonomic Elements},
  booktitle     = {2010 Seventh IEEE International Conference and Workshops on Engineering of Autonomic and Autonomous Systems},
  year          = {2010},
  pages         = {101-105},
  month         = {March},
  note          = {cited By 3},
  abstract      = {As requirements and environments become much more complex, the need for self-adaptive and self-healing software system grows. There are several existing works which present such systems by using different approaches. Using alternative solutions to provide a service or requirement is one of the most important approaches among existing works. In this paper an alternative-based approach for adding self-adaptive capabilities to software systems is proposed. In this approach a group of autonomic elements will be constructed based on different design or implementations that could be considered for a specific service or requirement. By using this approach, a highly adaptive software system could be built based on autonomic elements, so that it needs much less memory and processing resources in comparison to similar existing works.},
  art_number    = {5457814},
  document_type = {Conference Paper},
  doi           = {10.1109/EASe.2010.20},
  groups        = {ieee, wiley},
  issn          = {2168-1872},
  journal       = {Proceedings of the 7th IEEE International Conference and Workshop on Engineering of Autonomic and Autonomous Systems, EASe 2010},
  keywords      = {software fault tolerance;self-adaptive software systems;autonomic elements;self-healing software system;Software systems;Pervasive computing;Conferences;Software quality;Adaptive systems;Collaborative work;Distributed computing;Software design;Machine learning;Software safety;Self-adaptive Software systems;Autonomic Elements;Software Services},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77953195900&doi=10.1109%2fEASe.2010.20&partnerID=40&md5=16a2dd7f64bdb64c997005f7586ddd8b},
}

@InProceedings{Marimuthu2016,
  author        = {C. {Marimuthu} and K. {Chandrasekaran}},
  title         = {Feature-Oriented Domain Analysis Framework for Energy-Aware Self-Adaptive Software},
  booktitle     = {2016 IEEE International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)},
  year          = {2016},
  pages         = {773-776},
  month         = {Dec},
  note          = {cited By 1},
  abstract      = {Energy-aware software is self-adaptive in nature which dynamically changes its behaviour to save energy. Context information plays a major role in developing such self-adaptive and energy-aware software. Any changes in context information may exhibit different number of operating conditions at run-time. The software should be efficiently developed to be more energy-efficient under different operating conditions through well defined dynamic adaptation policies. Developing such energy-aware adaptive behavior is a challenging task with current programming methods. We employed feature-oriented software development (FOSD) for developing such energy-aware self-adaptive software. In this paper, as first step, domain analysis framework for energy-aware self-adaptive software is proposed. The proposed framework uses feature models to explicitly specify the energy-aware features and context information. An illustrative example is presented to show the usefulness of the proposed domain analysis framework.},
  art_number    = {7917191},
  document_type = {Conference Paper},
  doi           = {10.1109/iThings-GreenCom-CPSCom-SmartData.2016.163},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2016 IEEE International Conference on Internet of Things; IEEE Green Computing and Communications; IEEE Cyber, Physical, and Social Computing; IEEE Smart Data, iThings-GreenCom-CPSCom-Smart Data 2016},
  keywords      = {power aware computing;software engineering;feature-oriented domain analysis framework;energy-aware self-adaptive software;feature-oriented software development;FOSD;Context;Context modeling;Software;Adaptation models;Batteries;Electronic mail;Energy consumption;Feature-oriented domain analysis;energy-awareness;self-adaptive software},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85020170895&doi=10.1109%2fiThings-GreenCom-CPSCom-SmartData.2016.163&partnerID=40&md5=5aa9167afa1ccf6f05059d6f17ff6393},
}

@InProceedings{Seriai2008,
  author        = {A. {Seriai}},
  title         = {SASE 2008: First Workshop on Self-Adaptive Software Engineering},
  booktitle     = {2008 12th European Conference on Software Maintenance and Reengineering},
  year          = {2008},
  pages         = {340-341},
  month         = {April},
  note          = {cited By 0},
  abstract      = {The goal of this workshop is to exchange opinions, advance ideas, and discuss the state of the art of approaches and results among researchers and practitioners who investigate software engineering concepts, methodologies, and tools to design and evolve self-adaptive software. Adaptability is considered as a critical enabling capability for many software-based systems, which must adapt themselves to changing conditions in both the supporting computing and communication infrastructure, as well as in the surrounding physical environment.},
  art_number    = {4493347},
  document_type = {Conference Paper},
  doi           = {10.1109/CSMR.2008.4493347},
  groups        = {ieee, wiley},
  issn          = {1534-5351},
  journal       = {Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR},
  keywords      = {software architecture;software prototyping;software tools;self-adaptive software engineering;dynamic software architecture;software lifecycle;software methodology;software tools;software design},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-50249134420&doi=10.1109%2fCSMR.2008.4493347&partnerID=40&md5=6250438591c4798a44c89f78ef9e6b38},
}

@Article{Esfahani2013,
  author        = {N. {Esfahani} and A. {Elkhodary} and S. {Malek}},
  title         = {A Learning-Based Framework for Engineering Feature-Oriented Self-Adaptive Software Systems},
  journal       = {IEEE Transactions on Software Engineering},
  year          = {2013},
  volume        = {39},
  number        = {11},
  pages         = {1467-1493},
  month         = {Nov},
  issn          = {1939-3520},
  note          = {cited By 51},
  abstract      = {Self-adaptive software systems are capable of adjusting their behavior at runtime to achieve certain functional or quality-of-service goals. Often a representation that reflects the internal structure of the managed system is used to reason about its characteristics and make the appropriate adaptation decisions. However, runtime conditions can radically change the internal structure in ways that were not accounted for during their design. As a result, unanticipated changes at runtime that violate the assumptions made about the internal structure of the system could degrade the accuracy of the adaptation decisions. We present an approach for engineering self-adaptive software systems that brings about two innovations: 1) a feature-oriented approach for representing engineers' knowledge of adaptation choices that are deemed practical, and 2) an online learning-based approach for assessing and reasoning about adaptation decisions that does not require an explicit representation of the internal structure of the managed software system. Engineers' knowledge, represented in feature-models, adds structure to learning, which in turn makes online learning feasible. We present an empirical evaluation of the framework using a real-world self-adaptive software system. Results demonstrate the framework's ability to accurately learn the changing dynamics of the system while achieving efficient analysis and adaptation.},
  art_number    = {6574860},
  document_type = {Article},
  doi           = {10.1109/TSE.2013.37},
  groups        = {ieee, wiley},
  keywords      = {inference mechanisms;learning (artificial intelligence);quality of service;software engineering;feature-models;adaptation decision reasoning;adaptation decision assessment;online learning-based approach;runtime conditions;quality-of-service goals;engineering feature-oriented self-adaptive software systems;learning-based framework;Software systems;Runtime;Adaptation models;Quality of service;Authentication;Measurement;Self-adaptive software;autonomic computing;feature-orientation;machine learning},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887877241&doi=10.1109%2fTSE.2013.37&partnerID=40&md5=4db6d5240b9aba7f072c906e69a1473f},
}

@InProceedings{Cha2016,
  author        = {J. {Cha} and J. {Kim} and Y. {Jeong}},
  title         = {Architecture Based Approaches Supporting Flexible Design of Self-Adaptive Software},
  booktitle     = {2016 International Conference on Computational Science and Computational Intelligence (CSCI)},
  year          = {2016},
  pages         = {1424-1425},
  month         = {Dec},
  note          = {cited By 0},
  abstract      = {It is difficult to solve an optimization problem in smart devices software due to a trade-off relation between quality conditions and performance properties. Furthermore, development cost of complicated software is on the increase by fragmentation of devices into the small size. In this paper, we propose the design processes and methods reflecting diverse of flexible elements including physical features such as low-power and high-performance, co-design of hardware and software, and restricted resources usage. Our methods can establish the optimized self-adaptive design by reflecting the quality properties and performance requirements for applications working on systems, monitoring system's states in real-time, and customizing with the most proper design properties.},
  art_number    = {7881573},
  document_type = {Conference Paper},
  doi           = {10.1109/CSCI.2016.0280},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2016 International Conference on Computational Science and Computational Intelligence, CSCI 2016},
  keywords      = {software architecture;architecture based approach;self-adaptive software design;flexible design;smart devices;Software;Metadata;Smart devices;Computer architecture;Hardware;Performance evaluation;Adaptive systems;Self-Adaptive Software;Flexible Design;Architecture Based Approaches},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85017303440&doi=10.1109%2fCSCI.2016.0280&partnerID=40&md5=2402f371dd7a234816d85567794ff58d},
}

@InProceedings{Maia2015,
  author        = {M. E. F. {Maia} and R. M. d. C. {Andrade}},
  title         = {System Support for Self-Adaptive Cyber-Physical Systems},
  booktitle     = {2015 International Conference on Distributed Computing in Sensor Systems},
  year          = {2015},
  pages         = {214-215},
  month         = {June},
  note          = {cited By 1},
  abstract      = {As the number of interacting devices and the complexity of cyber-physical systems increases, self-adaptation is a natural solution to address challenges faced by software developers. To provide a systematic and unified solution to support the development and execution of cyber-physical systems, this doctoral thesis proposes the creation of an environment that offers mechanisms to facilitate the technology-independent communication and uncoupled interoperable coordination between interacting entities of the system, as well as the flexible and adaptable execution of the functionalities specified for each application. The outcome is a set of modules to help developers to face the challenges of cyber-physical systems.},
  art_number    = {7165045},
  document_type = {Conference Paper},
  doi           = {10.1109/DCOSS.2015.33},
  groups        = {ieee, wiley},
  issn          = {2325-2944},
  journal       = {Proceedings - IEEE International Conference on Distributed Computing in Sensor Systems, DCOSS 2015},
  keywords      = {security of data;self-adaptive cyber-physical systems;software developers;doctoral thesis;technology-independent communication;uncoupled interoperable coordination;flexible execution;adaptable execution;system support;interacting devices;Context;Computer architecture;Middleware;Actuators;Medical services;Cyber-Physical Systems;Middleware;Self-Adaptation},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945968041&doi=10.1109%2fDCOSS.2015.33&partnerID=40&md5=34dcdbcfba05260ed214c94d3378d5e0},
}

@InProceedings{JaeSunKim2004,
  author        = {{Jae Sun Kim} and {Sooyong Park}},
  title         = {Self adaptive software technology for robotics},
  booktitle     = {11th Asia-Pacific Software Engineering Conference},
  year          = {2004},
  pages         = {740-741},
  month         = {Nov},
  note          = {cited By 1},
  abstract      = {Software systems are operating in an environment that is not well defined or predictable. Therefore, the software systems should be robustly performed to meet various user requirements in the complex and often hostile environment. The problem is significant in robot applications. The robot has to serve without human's interrupt without trouble caused by unexpected situations. Thus, this paper at first presents a self adaptive approach for software robustness and proposes the research framework for self adaptive robot.},
  document_type = {Conference Paper},
  doi           = {10.1109/APSEC.2004.92},
  groups        = {ieee, wiley},
  issn          = {1530-1362},
  journal       = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  keywords      = {robot programming;software architecture;self adaptive software technology;robotics;software robustness;software architecture;Computer architecture;Robustness;Application software;Intelligent robots;Software systems;Software performance;Runtime environment;Computer languages;Learning systems;Sun},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-18944364142&doi=10.1109%2fAPSEC.2004.92&partnerID=40&md5=b44c3eb35b749e58f2b402057729292e},
}

@InProceedings{Cheng2019,
  author        = {W. {Cheng} and Q. {Li} and L. {Wang}},
  title         = {A Monitor Method based on Adaptive Frequency for Self-Adaptive Software},
  booktitle     = {2019 IEEE 10th International Conference on Software Engineering and Service Science (ICSESS)},
  year          = {2019},
  volume        = {2019-October},
  pages         = {149-152},
  month         = {Oct},
  note          = {cited By 0},
  abstract      = {Self-Adaptive Systems (SASs) are required to adapt to the complex changes with different characteristics by frequent monitor. The problem with gathering and updating changes information frequently at runtime is that it may cause computing and communication overhead, which affects the real-time of SASs. However, if the frequencies are reduced, it is difficult to ensure the accuracy of changes identifying. So it is necessary to solve the trade-off between the accuracy and expensive overhead. Existing methods based on data processing improve accuracy by reducing potential uncertainties. Other methods based on adaptive frequency lack quantification and are difficult to ensure accuracy. We expect to combine them and break through the latter. To this purpose, this paper proposes a method based on adaptive frequency for SASs. The method can ensure the accuracy of adaptive adjustment by comprehensively analyzing the influencing factors of monitoring frequency, and can quantify the monitoring frequency in real time by calculating these factors according to the monitoring data. Finally, we exemplify these methods with an e-commerce System.},
  art_number    = {9040738},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSESS47205.2019.9040738},
  groups        = {ieee, wiley},
  issn          = {2327-0594},
  journal       = {Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS},
  keywords      = {adaptive systems;electronic commerce;self-adjusting systems;software engineering;frequent monitor;communication overhead;SAS;adaptive frequency lack quantification;monitor method;self-adaptive software;Self-Adaptive Systems;e-commerce system;Self-Adaptive Systems;Monitor Method;Accuracy and Overhead;Adaptive Frequency},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85082870098&doi=10.1109%2fICSESS47205.2019.9040738&partnerID=40&md5=229630b6b3454ed869d5522a741c6479},
}

@InProceedings{Che2009,
  author        = {K. {Che} and L. {Li} and X. {Niu} and S. {Xing}},
  title         = {Research of software development methodology based on self-adaptive multi-agent systems},
  booktitle     = {2009 IEEE International Symposium on IT in Medicine Education},
  year          = {2009},
  volume        = {1},
  pages         = {235-240},
  month         = {Aug},
  note          = {cited By 6},
  abstract      = {Along with uninterrupted progress of computer network technology, the application of Internet is increasingly abroad. Due to the variety of Internet environment, the corresponding software systems are more complex, and present many new characteristics. The development of complex software systems has not applied the development mode of object-oriented and component-oriented. Therefore people bring forward agent-oriented software engineering (AOSE) and software development methodology based on self-adaptive multi-agent systems. AOSE adopts the software engineering mechanism and method, including high level abstract, natural modeling, system organization and problem decompounding, etc. It can manage and control the complexity of software system, and is a kind of novel software development pattern. The paper discusses the self-adaptive mechanism of self-adaptive multi-agent systems, the software development process of self-adaptive multi-agent systems, the modeling method of self-adaptive agent modeling language and agent UML. Taking "International Conference Management System" as a case, and describes the development process of self-adaptive multi-agent systems.},
  art_number    = {5236426},
  document_type = {Conference Paper},
  doi           = {10.1109/ITIME.2009.5236426},
  groups        = {ieee, wiley},
  journal       = {ITME2009 - Proceedings 2009 IEEE International Symposium on IT in Medicine and Education},
  keywords      = {Internet;multi-agent systems;object-oriented methods;object-oriented programming;software agents;software development management;software development methodology;self-adaptive multi-agent systems;computer network technology;Internet;software systems;object-oriented system;component-oriented system;agent-oriented software engineering;software engineering;high level abstract;natural modeling;system organization;problem decompounding;software development pattern;self-adaptive agent modeling language;agent UML;International Conference Management System;Programming;Multiagent systems;Software systems;Object oriented modeling;Software engineering;Computer networks;Application software;IP networks;Internet;Software development management},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77950123294&doi=10.1109%2fITIME.2009.5236426&partnerID=40&md5=ca88573737f30968767d996f9eac383e},
}

@InProceedings{Yang2011,
  author        = {Q. {Yang} and J. {Lu} and J. {Xing} and X. {Tao} and H. {Hu} and Y. {Zou}},
  title         = {Fuzzy Control-Based Software Self-Adaptation: A Case Study in Mission Critical Systems},
  booktitle     = {2011 IEEE 35th Annual Computer Software and Applications Conference Workshops},
  year          = {2011},
  pages         = {13-18},
  month         = {July},
  note          = {cited By 12},
  abstract      = {Self-adaptation ability is particularly desirable for mission critical software (MCS). This paper proposes a fuzzy control-based approach to provide a systematic, engineering, and intuitive way for programmers to achieve software self adaptation. This approach uses fuzzy logic to handle uncertainty in software, uses natural-language style to describe self-adaptation logic, and makes control visible in software. These greatly shorten the knowledge and semantics gap between control engineering and software engineering, and reduce the realization difficulty of software self-adaptation. We illustrate our approach through the development of an adaptive MCS application in process control systems.},
  art_number    = {6032203},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSACW.2011.13},
  groups        = {ieee, wiley},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {control engineering computing;fuzzy control;process control;production engineering computing;software engineering;fuzzy control;software self-adaptation;mission critical software;fuzzy logic;self-adaptation logic;control engineering;software engineering;process control systems;Servers;Sensors;Pragmatics;Actuators;Software systems;Mission critical systems;software self-adaptation;fuzzy control;mission critical software},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-80055003207&doi=10.1109%2fCOMPSACW.2011.13&partnerID=40&md5=ab73ce497fab5341547333b09ca05749},
}

@InProceedings{Petrovska2019,
  author        = {A. {Petrovska} and A. {Pretschner}},
  title         = {Learning Approach for Smart Self-Adaptive Cyber-Physical Systems},
  booktitle     = {2019 IEEE 4th International Workshops on Foundations and Applications of Self* Systems (FAS*W)},
  year          = {2019},
  pages         = {234-236},
  month         = {June},
  note          = {cited By 0},
  abstract      = {Modern Cyber-Physical Systems (CPSs) need to be able to operate efficiently and reliably within continually changing, uncertain, and unanticipated environments. Namely, these systems should be capable of learning, automatically reconfiguring themselves, and be able to cooperate and collaborate with other CPSs. In a nutshell, exhibit human-like, smart capabilities in an autonomic manner. However, engineering such systems is all but trivial, primarily because we need to develop systems at design-time that are capable of autonomously coping with the uncertainty and change at runtime. Therefore, not only the importance of self-adaptivity as a system's feature increases, but it becomes a fundamental approach for the systems to continue meeting their functional specifications, fulfilling their business objectives while preserving the performance-despite all the runtime changes that the system may encounter. To tackle these challenges, this paper proposes the initial research vision and agenda with the envisioned contributions towards an approach for self-adaptation of cooperative, smart CPSs through shared knowledge and learning.},
  art_number    = {8791990},
  document_type = {Conference Paper},
  doi           = {10.1109/FAS-W.2019.00061},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2019 IEEE 4th International Workshops on Foundations and Applications of Self* Systems, FAS*W 2019},
  keywords      = {learning (artificial intelligence);security of data;software architecture;software fault tolerance;autonomic manner;smart CPSs;human-like capabilities;smart capabilities;smart self-adaptive cyber-physical systems;Uncertainty;Robot sensing systems;Adaptation models;Runtime;Monitoring;Synthetic aperture sonar;Self-Adaptive Cyber-Physical Systems;Context;Change and Uncertainty;Awareness;Learning;Performance},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85071432872&doi=10.1109%2fFAS-W.2019.00061&partnerID=40&md5=4812125e6856ecd1f838d35ef5f5bb28},
}

@InProceedings{daSilva2009,
  author        = {C. E. {da Silva} and R. {de Lemos}},
  title         = {Towards the use of dynamic workflows for coordinating self-adaptation of software systems},
  booktitle     = {2009 31st International Conference on Software Engineering - Companion Volume},
  year          = {2009},
  pages         = {383-386},
  month         = {May},
  note          = {cited By 1},
  abstract      = {The self-adaptation of software system is a complex process that depends on several factors that may change during the system operational lifetime. Hence, the process for coordinating the self-adaptation should also be adaptable to changes that may occur during run-time. As the means for coordinating the self-adaptation process of software systems, we are applying workflows that are dynamically generated for dealing with the variability associated with the self-adaptation process. In this context, this research aims to define and develop techniques for automatically generate workflows for coordinating the self-adaptation of software systems. For demonstrating the feasibility of the proposed approach, architectural reconfiguration of software systems is used as an example, whereby the reconfiguration is managed by workflows that are dynamically generated depending on the availability of resources.},
  art_number    = {5071027},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSE-COMPANION.2009.5071027},
  groups        = {ieee, wiley},
  journal       = {2009 31st International Conference on Software Engineering - Companion Volume, ICSE 2009},
  keywords      = {program diagnostics;workflow management software;self-adaptative software system;dynamic workflow generation;software change;Software systems;Runtime;Technology management;Control systems;Scholarships;Software architecture;Concrete;Laboratories;Resource management;Availability},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-70349660006&doi=10.1109%2fICSE-COMPANION.2009.5071027&partnerID=40&md5=ab203afad1d6460cf5eddde907be745d},
}

@InProceedings{Cheng2010,
  author        = {F. {Cheng}},
  title         = {A Self-adaptive Interoperable Classification Framework for Software Component},
  booktitle     = {2010 Third International Conference on Information and Computing},
  year          = {2010},
  volume        = {1},
  pages         = {43-46},
  month         = {June},
  note          = {cited By 1},
  abstract      = {In software engineering research area, component-based software development has been the core technology of it. But, management of software component repository is a challenge, which will restrict the development of this technology. Especially, the current component registry and repository framework can not be adapted to the complicated information structure of component repository and high demands of construction, management and reuse of it. To solve it, a simple, open and self-adaptive framework for registry and classification of software component - classification meta framework - is proposed in the paper according to the current international standards and their commonness based on the meta modeling method. First, problems in the current frameworks for registry and classification of software component are analyzed. Then the structure diagrams and the using examples of the framework are provided. Last, performance analysis and comparison are given to prove that the framework can solve the existing problems to some degree.},
  art_number    = {5514239},
  document_type = {Conference Paper},
  doi           = {10.1109/ICIC.2010.17},
  groups        = {ieee, wiley},
  issn          = {2160-7451},
  journal       = {ICIC 2010 - 3rd International Conference on Information and Computing},
  keywords      = {object-oriented programming;open systems;self-adaptive interoperable classification framework;software engineering;component-based software development;software component repository;component registry;information structure;classification meta framework;international standard;meta modeling;structure diagram;Software systems;Databases;Business communication;Software standards;Electronic mail;Software engineering;Programming;Software development management;Technology management;Performance analysis;Meta model;Software component repository;Classfication meta framework;self-adaptive;Standard},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77955784926&doi=10.1109%2fICIC.2010.17&partnerID=40&md5=3ad5e15118fffc04d22cdbeccf1bb947},
}

@InProceedings{ShanTang2016,
  author        = {{Shan Tang} and {Liping Li} and {Xiaolin Cao}},
  title         = {Research on building trustworthy software system by self-adaptation},
  booktitle     = {2016 7th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
  year          = {2016},
  volume        = {0},
  pages         = {1068-1071},
  month         = {Aug},
  note          = {cited By 0},
  abstract      = {The execution context of today's software systems changes continually, which makes systems have to cope with changing environments while at the same time facing high non-functional requirements such as flexibility and dependability. Runtime adaptation technology can modify behaviors and structures in response to changes in the system itself or in its environment and thus improve dependability at run time. This leads to a more flexible and effective way to build dependable software system. However, current works address adaptation often remain a neglected gap between the architecture model and the system state. To solve this problem, we present a systematic process that covers requirements modeling, architecture and system modeling of trustworthy software based on a runtime self-adaptation perspective.},
  art_number    = {7883250},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSESS.2016.7883250},
  groups        = {ieee, wiley},
  issn          = {2327-0594},
  journal       = {Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS},
  keywords      = {formal specification;software architecture;trusted computing;trustworthy software system;nonfunctional requirements;runtime adaptation technology;systematic process;requirements modeling;runtime self-adaptation perspective;architecture model;Adaptation models;Systems modeling;Multimedia communication;reliable requirements;goal;software architecture;self-adaptation;runtime system},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85017010097&doi=10.1109%2fICSESS.2016.7883250&partnerID=40&md5=e8fe29b5174c0d841f861387af875666},
}

@InProceedings{Laddaga2006,
  author        = {R. {Laddaga}},
  title         = {Self Adaptive Software Problems and Projects},
  booktitle     = {2006 Second International IEEE Workshop on Software Evolvability (SE'06)},
  year          = {2006},
  pages         = {3-10},
  month         = {Sep.},
  note          = {cited By 21},
  abstract      = {Self adaptive software is a relatively new approach to dynamic self management of software based systems. This paper discusses the concepts, history and applications of self adaptive software over the past ten years. It also presents a set of crucial research problems for the next ten years of research in this area},
  art_number    = {4032441},
  document_type = {Conference Paper},
  doi           = {10.1109/SOFTWARE-EVOLVABILITY.2006.10},
  groups        = {ieee, wiley},
  journal       = {Proceedings - Second International IEEE Workshop on Software Evolvability, SE'06},
  keywords      = {project management;software management;self adaptive software;dynamic self management;software based systems;Software performance;Runtime;Application software;Synthetic aperture sonar;Software systems;History;Software testing;Project management;Technology management;IEEE news},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-38949092458&doi=10.1109%2fSOFTWARE-EVOLVABILITY.2006.10&partnerID=40&md5=c4efb6cd764141aa8a9fa0b854d9f77f},
}

@InProceedings{Wan2017,
  author        = {J. {Wan} and Q. {Li} and L. {Wang} and L. {He} and Y. {Li}},
  title         = {A self-adaptation framework for dealing with the complexities of software changes},
  booktitle     = {2017 8th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
  year          = {2017},
  volume        = {2017-November},
  pages         = {521-524},
  month         = {Nov},
  note          = {cited By 0},
  abstract      = {Software Self-adaption (SA) is a promising technology to reduce the cost of software maintenance. However, the complexities of software changes such as various and producing different effects, interrelated and occurring in an unpredictable context challenge the SA. The current methods may be insufficient to provide the required self-adaptation abilities to handle all the existent complexities of changes. Thus, this paper presents a self-adaptation framework which can provide a multi-agent system for self-adaptation control to equip software system with the required adaptation abilities. we employ the hybrid control mode and construct a two-layer MAPE control structure to deal with changes hierarchically. Multi-Objective Evolutionary Algorithm and Reinforcement Learning are applied to plan an adequate strategy for these changes. Finally, in order to validate the framework, we exemplify these ideas with a meta-Search system and confirm the required self-adaptive ability.},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSESS.2017.8342969},
  groups        = {ieee, wiley},
  issn          = {2327-0594},
  journal       = {Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS},
  keywords      = {evolutionary computation;learning (artificial intelligence);multi-agent systems;software maintenance;SA;Multi-Objective Evolutionary Algorithm;Reinforcement Learning;meta-Search system;software maintenance;software Self-adaption;required self-adaptive ability;two-layer MAPE control structure;hybrid control mode;required adaptation abilities;software system;self-adaptation control;multiagent system;self-adaptation framework;existent complexities;required self-adaptation abilities;current methods;unpredictable context challenge;software changes;Planning;Google;Learning (artificial intelligence);Servers;Task analysis;Complexity theory;Software;Self-adaptive systems;Search-based software engineering;Multi-agent systems;Reinforcement Learning;Multi-Objective Evolutionary Algorithm},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85046993609&doi=10.1109%2fICSESS.2017.8342969&partnerID=40&md5=b5d33fbd46b8c7796af933bcdd033f25},
}

@InProceedings{Salehie2007,
  author        = {M. {Salehie} and L. {Tahvildari}},
  title         = {A Quality-Driven Approach to Enable Decision-Making in Self-Adaptive Software},
  booktitle     = {29th International Conference on Software Engineering (ICSE'07 Companion)},
  year          = {2007},
  pages         = {103-104},
  month         = {May},
  note          = {cited By 7},
  abstract      = {Self-adaptive software is a closed-loop system aims at altering itself in response to changes at runtime. Such a system, normally, requires monitoring, detecting (analyzing), deciding (planning), and acting (effecting) processes to fulfill adaptation requirements. This research mainly focuses on developing a quality-driven framework to facilitate realizing the deciding process. The framework is required to capture goals of adaptation, utility information, and domain characteristics in a knowledge-base.},
  art_number    = {4222701},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSECOMPANION.2007.13},
  groups        = {ieee, wiley},
  journal       = {Proceedings - International Conference on Software Engineering},
  keywords      = {closed loop systems;decision making;knowledge based systems;software quality;quality-driven approach;decision-making;self-adaptive software;closed-loop system;adaptation requirements;utility information;knowledge-base system;Decision making;Software quality;Logic;Runtime;Engines;Application software;Costs;Computerized monitoring;Process planning;Large-scale systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-34548704832&doi=10.1109%2fICSECOMPANION.2007.13&partnerID=40&md5=c8622867b7e14ff79acaa872305c9c23},
}

@InProceedings{Wang2016,
  author        = {L. {Wang} and Q. {Li}},
  title         = {A Multiagent-Based Framework for Self-Adaptive Software with Search-Based Optimization},
  booktitle     = {2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  year          = {2016},
  pages         = {621-625},
  month         = {Oct},
  note          = {cited By 5},
  abstract      = {Planning a suitable solution to adapt to software changes is the most important and fundamental ability of self-adaptive software (SAS). However, with the increasing complexities of managed resources, context and user preferences, existing self-adaptive planning approaches need to be improved to deal with the complex changes which are multiple, interrelated and evolving. Search-based optimization (SBO) is well-suited to deal with multiple and complex problems. Hence, using SBO as a new self-adaptive planning approach may be a particularly promising research trajectory. This paper proposes a multi-agent framework for SAS with SBO to deal with complex changes, reduce maintenance time and cost, and enhance software quality. This framework defines a special software architecture of SAS to choose different planning approaches, uses the SBO to plan solutions for complex changes, and supports the online planning by multi agents. In addition, a corresponding workbench is being established to develop SAS according to this framework.},
  art_number    = {7816529},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSME.2016.16},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2016 IEEE International Conference on Software Maintenance and Evolution, ICSME 2016},
  keywords      = {multi-agent systems;optimisation;planning (artificial intelligence);software architecture;software maintenance;software quality;multiagent-based framework;self-adaptive software;SAS;search-based optimization;SBO;self-adaptive planning;software quality;software architecture;software maintenance;Synthetic aperture sonar;Planning;Software;Search problems;Software architecture;Context;Optimization;Self-adaptive systems;Search-based software engineering;Multi-agent systems;Self-adaptive planning approaches;Search-based optimization},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013059693&doi=10.1109%2fICSME.2016.16&partnerID=40&md5=7f15f78ccd9eca80b17409e5983689dc},
}

@InProceedings{Madni2010,
  author        = {A. M. {Madni} and H. {Rahnama} and A. {Sadeghian}},
  title         = {Invited paper: Self-adaptive middleware for the design of context-aware software applications in public transit systems},
  booktitle     = {2010 4th International Symposium on Communications, Control and Signal Processing (ISCCSP)},
  year          = {2010},
  pages         = {1-4},
  month         = {March},
  note          = {cited By 0},
  abstract      = {Ubiquitous software applications can become more responsive if they can adapt to their surrounding situation without relying on users' continuous commitment. In dynamic environments such as public transit settings, where information is rapidly changing and passengers' demography are not uniform, an adaptive mobile application to navigate passengers based on their profile and context may be a good example of emerging self-adaptive and context-aware mobile application. In this paper we have demonstrated the use of an open source framework to develop a travel assistant application to help passengers with special needs in public transit environments.},
  art_number    = {5463384},
  document_type = {Conference Paper},
  doi           = {10.1109/ISCCSP.2010.5463384},
  groups        = {ieee, wiley},
  journal       = {Final Program and Abstract Book - 4th International Symposium on Communications, Control, and Signal Processing, ISCCSP 2010},
  keywords      = {middleware;public domain software;traffic engineering computing;transportation;ubiquitous computing;self adaptive middleware;context aware software design;public transit systems;ubiquitous software applications;adaptive mobile application;open source framework;travel assistant application;Special issues and sections;Middleware;Software design;Application software;Context Awareness;Ubiquitous Computing;Intelligent Transport Systems;Public Transit;Self-Adaptive Software},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77953859394&doi=10.1109%2fISCCSP.2010.5463384&partnerID=40&md5=53936c742b6a37d1e0571ff9e2d3fe96},
}

@InProceedings{Esfahani2010,
  author        = {N. {Esfahani} and S. {Malek}},
  title         = {Social computing networks: a new paradigm for engineering self-adaptive pervasive software systems},
  booktitle     = {2010 ACM/IEEE 32nd International Conference on Software Engineering},
  year          = {2010},
  volume        = {2},
  pages         = {159-162},
  month         = {May},
  note          = {cited By 8},
  abstract      = {Software systems are increasingly permeating a variety of domains including medical, industrial automation, and emergency response. The advances in portable and embedded computing devices and the recent advances in wireless network connectivity have paved the way for the proliferation of smart spaces in such domains. At the same time, the emergence of service-oriented technology (e.g., web services [10]) and interoperability standards (e.g., WSDL [11], UDDI [5]) has made it possible to develop pervasive software systems intended for execution in smart spaces that were not even conceivable a few years back.},
  document_type = {Conference Paper},
  doi           = {10.1145/1810295.1810319},
  groups        = {ieee, wiley},
  issn          = {1558-1225},
  journal       = {Proceedings - International Conference on Software Engineering},
  keywords      = {open systems;service-oriented architecture;software engineering;ubiquitous computing;social computing;self-adaptive pervasive software systems engineering;portable computing devices;embedded computing devices;wireless network connectivity;smart spaces;service-oriented technology;interoperability standards;Social network services;Software systems;Synthetic aperture sonar;Monitoring;Ontologies;Biomedical monitoring},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77954730894&doi=10.1145%2f1810295.1810319&partnerID=40&md5=9ba9f5f62ae4852ddb05e1838f7a6960},
}

@InProceedings{Stavru2011a,
  author        = {S. {Stavru} and S. {Ilieva}},
  title         = {Exploratory Self-Adaptation in Software Systems},
  booktitle     = {2011 IEEE Fifth International Conference on Self-Adaptive and Self-Organizing Systems},
  year          = {2011},
  pages         = {221-222},
  month         = {Oct},
  note          = {cited By 0},
  abstract      = {This paper applies the concept of exploratory change to self-adaptive software systems and proposes and briefly specifies a new paradigm for self-adaptation named exploratory self-adaptation. In exploratory self-adaptation exploratory changes are continuously introduced into the software system as hypothetical improvements of its functional characteristics or quality attributes. Once introduced, these changes are evaluated: if the evaluation is positive, they remain and the system has self-adapted, otherwise the changes are rolled back.},
  art_number    = {6063510},
  document_type = {Conference Paper},
  doi           = {10.1109/SASO.2011.36},
  groups        = {ieee, wiley},
  issn          = {1949-3681},
  journal       = {Proceedings - 2011 5th IEEE International Conference on Self-Adaptive and Self-Organizing Systems, SASO 2011},
  keywords      = {biocomputing;software quality;self adaptive software systems;exploratory self adaptation;quality attributes;functional characteristics;Software systems;Taxonomy;Adaptive systems;Control systems;Communities;Monitoring;Self-Adaptive Software Systems;Bio-Inspired Computing;Software Evolution},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-81255190741&doi=10.1109%2fSASO.2011.36&partnerID=40&md5=e1ea0f48762e383a617ad4eda978fe38},
}

@InProceedings{YiweiLei2015,
  author        = {{Yiwei Lei} and {Kerong Ben} and {Zhiyong He}},
  title         = {A model driven agent-oriented self-adaptive software development method},
  booktitle     = {2015 12th International Conference on Fuzzy Systems and Knowledge Discovery (FSKD)},
  year          = {2015},
  pages         = {2242-2246},
  month         = {Aug},
  note          = {cited By 7},
  abstract      = {Software running in dynamic open environments needs to be able to autonomously adapt to changing contexts, which challenges traditional software development methods. Based on the existing work, we present a model-driven agent-oriented adaptive software development method. During the requirement analysis phase, we extend the Tropos goal model with external context conditions and internal event conditions, which can be utilized to specify adaptive software variations. In the design phase, we present an architecture design method based on model transformations, and provide a solution to map the requirement model to the design model. During the implementation phase, we design an integrated development environment which combines the Jadex platform and the JADE middleware, and propose a detailed implementation process based on the integrated environment.},
  art_number    = {7382301},
  document_type = {Conference Paper},
  doi           = {10.1109/FSKD.2015.7382301},
  groups        = {ieee, wiley},
  journal       = {2015 12th International Conference on Fuzzy Systems and Knowledge Discovery, FSKD 2015},
  keywords      = {middleware;object-oriented programming;software architecture;model driven agent-oriented self-adaptive software development method;Tropos goal model;external context conditions;internal event conditions;requirement analysis phase;adaptive software variation;architecture design method;model transformation;JADE middleware;Jadex platform;Adaptation models;Fires;Software;Context;Unified modeling language;Object oriented modeling;Context modeling;model-driven development;self-adaptive software;BDI agent;model transformation},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966642061&doi=10.1109%2fFSKD.2015.7382301&partnerID=40&md5=0c423f19d4d5eca22cd34ab6b7352796},
}

@InProceedings{Rammig2014,
  author        = {F. J. {Rammig} and S. {Gr?sbrink} and K. {Stahl} and Y. {Zhao}},
  title         = {Designing Self-Adaptive Embedded Real-Time Software -- Towards System Engineering of Self-Adaptation},
  booktitle     = {2014 Brazilian Symposium on Computing Systems Engineering},
  year          = {2014},
  volume        = {2015-April},
  pages         = {37-42},
  month         = {Nov},
  note          = {cited By 1},
  abstract      = {Upcoming interlinked embedded systems will be confronted with unexpectedly changing environments, which makes online adaptation without manual interference necessary. There is a need for appropriate system architectures and novel design approaches. In this paper, we discuss general concepts of self-adaptive real-time systems. Furthermore, specific system engineering techniques solving two important aspects of such a paradigm are presented. We discuss how the necessity for adaptation can be identified using Online Model Checking and how self-adapting safety guards can be designed by means of Artificial Immune Systems. Finally, we present an approach to integrating these techniques into an underlying platform architecture based on mixed-criticality virtualization.},
  art_number    = {7091163},
  document_type = {Conference Paper},
  doi           = {10.1109/SBESC.2014.15},
  groups        = {ieee, wiley},
  issn          = {2324-7894},
  journal       = {Brazilian Symposium on Computing System Engineering, SBESC},
  keywords      = {artificial immune systems;embedded systems;formal verification;software architecture;virtualisation;self-adaptive embedded real-time software design;self-adaptation system engineering;interlinked embedded systems;online model checking;self-adapting safety guards;artificial immune systems;platform architecture;mixed-criticality virtualization;system architectures;design approach;Real-time systems;Model checking;Virtualization;Adaptation models;Safety;Embedded systems;Cyber Physical Systems;Self-adapting Software;Online Model Checking;Artificial Immune Systems;Danger Theory;System Virtualization;Mixed-criticality Systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946733137&doi=10.1109%2fSBESC.2014.15&partnerID=40&md5=af57798a9b9a0ea9072d0d77d077ecba},
}

@Article{Cooray2013,
  author        = {D. {Cooray} and E. {Kouroshfar} and S. {Malek} and R. {Roshandel}},
  title         = {Proactive Self-Adaptation for Improving the Reliability of Mission-Critical, Embedded, and Mobile Software},
  journal       = {IEEE Transactions on Software Engineering},
  year          = {2013},
  volume        = {39},
  number        = {12},
  pages         = {1714-1735},
  month         = {Dec},
  issn          = {1939-3520},
  note          = {cited By 14},
  abstract      = {Embedded and mobile software systems are marked with a high degree of unpredictability and dynamism in the execution context. At the same time, such systems are often mission-critical, meaning that they need to satisfy strict reliability requirements. Most current software reliability analysis approaches are not suitable for these types of software systems, as they do not take the changes in the execution context of the system into account. We propose an approach geared to such systems which continuously furnishes refined reliability predictions at runtime by incorporating various sources of information, including the execution context of the system. The reliability predictions are leveraged to proactively place the software in the (near-)optimal configuration with respect to changing conditions. Our approach considers two representative architectural reconfiguration decisions that impact the system's reliability: reallocation of components to processes and changing the number of component replicas. We have realized the approach as part of a framework intended for mission-critical settings, called REsilient SItuated SofTware system (RESIST), and evaluated it using a mobile emergency response system.},
  art_number    = {6574866},
  document_type = {Article},
  doi           = {10.1109/TSE.2013.36},
  groups        = {ieee, wiley},
  keywords      = {embedded systems;mobile computing;software architecture;software reliability;proactive self-adaptation;mission-critical software;embedded software;mobile software;unpredictability degree;dynamism degree;execution context;reliability requirements;software reliability analysis approach;architectural reconfiguration decisions;component reallocation;component replicas;RESIST approach;resilient situated software system;mobile emergency response system;Mobile communication;Software reliability;Context awareness;Reliability engineering;Software architecture;Computer architecture;Context awareness;software architecture;self-adaptive systems;reliability;mobility},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84890048535&doi=10.1109%2fTSE.2013.36&partnerID=40&md5=abdfa6ad56115494e088af382ae37c8b},
}

@Article{Brun2015,
  author        = {Y. {Brun} and J. y. {Bang} and G. {Edwards} and N. {Medvidovic}},
  title         = {Self-Adapting Reliability in Distributed Software Systems},
  journal       = {IEEE Transactions on Software Engineering},
  year          = {2015},
  volume        = {41},
  number        = {8},
  pages         = {764-780},
  month         = {Aug},
  issn          = {1939-3520},
  note          = {cited By 10},
  abstract      = {Developing modern distributed software systems is difficult in part because they have little control over the environments in which they execute. For example, hardware and software resources on which these systems rely may fail or become compromised and malicious. Redundancy can help manage such failures and compromises, but when faced with dynamic, unpredictable resources and attackers, the system reliability can still fluctuate greatly. Empowering the system with self-adaptive and self-managing reliability facilities can significantly improve the quality of the software system and reduce reliance on the developer predicting all possible failure conditions. We present iterative redundancy, a novel approach to improving software system reliability by automatically injecting redundancy into the system's deployment. Iterative redundancy self-adapts in three ways: (1) by automatically detecting when the resource reliability drops, (2) by identifying unlucky parts of the computation that happen to deploy on disproportionately many compromised resources, and (3) by not relying on a priori estimates of resource reliability. Further, iterative redundancy is theoretically optimal in its resource use: Given a set of resources, iterative redundancy guarantees to use those resources to produce the most reliable version of that software system possible; likewise, given a desired increase in the system's reliability, iterative redundancy guarantees achieving that reliability using the least resources possible. Iterative redundancy handles even the Byzantine threat model, in which compromised resources collude to attack the system. We evaluate iterative redundancy in three ways. First, we formally prove its self-adaptation, efficiency, and optimality properties. Second, we simulate it at scale using discrete event simulation. Finally, we modify the existing, open-source, volunteer-computing BOINC software system and deploy it on the globally-distributed PlanetLab testbed network to empirically evaluate that iterative redundancy is self-adaptive and more efficient than existing techniques.},
  art_number    = {7058381},
  document_type = {Article},
  doi           = {10.1109/TSE.2015.2412134},
  groups        = {ieee, wiley},
  keywords      = {discrete event simulation;distributed processing;public domain software;resource allocation;security of data;software quality;software reliability;system recovery;self-adapting reliability;distributed software systems;hardware resources;software resources;failure management;compromise management;dynamic unpredictable resources;system reliability;self-adaptive reliability;self-managing reliability;software system quality;failure condition;iterative redundancy;resource reliability estimate;Byzantine threat model;compromised resource collusion;optimality property;discrete event simulation;open-source volunteer-computing BOINC software system;globally-distributed PlanetLab testbed network;Redundancy;Software reliability;Software systems;Computational modeling;Servers;Reliability engineering;Redundancy;reliability;fault-tolerance;iterative redundancy;self-adaptation;optimal redundancy;Redundancy;reliability;fault-tolerance;iterative redundancy;self-adaptation;optimal redundancy},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939519819&doi=10.1109%2fTSE.2015.2412134&partnerID=40&md5=f331170b138eba98c8c25120c099f51f},
}

@InProceedings{SeungminLee2016,
  author        = {{Seungmin Lee} and Y. B. {Park} and S. {Park}},
  title         = {A case study of Self-adaptive Software in the dynamic reconfiguration of IT Ecosystem},
  booktitle     = {2016 International Conference on Big Data and Smart Computing (BigComp)},
  year          = {2016},
  pages         = {513-516},
  month         = {Jan},
  note          = {cited By 2},
  abstract      = {As new technologies such as IoT, Cloud Computing appeared, the paradigm shift of system operation is occurring. Many researches that see a system as a group of systems like IT Ecosystem is being going on according to the paradigm shift. In addition, the research of Self-adaptive software to fulfill the users' goal and expectation is progressed. The existing Self-adaptive Software proposes ways to control various environments for a system to adapt to the environment change. However, it does not propose ways to control the system in Assembly system environments. A meta model in the base of O-MaSE which changes the system operating according to the changing environment was proposed to solve this problem. This paper proposed optimum scheduling scenario of environmental change to verify the expandability of the proposed model, and verified the proposed scenario by applying it to the meta model.},
  art_number    = {7425982},
  document_type = {Conference Paper},
  doi           = {10.1109/BIGCOMP.2016.7425982},
  groups        = {ieee, wiley},
  issn          = {2375-9356},
  journal       = {2016 International Conference on Big Data and Smart Computing, BigComp 2016},
  keywords      = {cloud computing;program assemblers;scheduling;software fault tolerance;environmental change;O-MaSE;assembly system environments;paradigm shift;system operation paradigm shift;cloud computing;IoT;IT ecosystem;dynamic reconfiguration;self-adaptive software;Ecosystems;Software;Modeling;Roads;Adaptation models;Collaboration;Dynamic Reconfiguration;IT Ecosystem;Self-adaptive Software},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964588141&doi=10.1109%2fBIGCOMP.2016.7425982&partnerID=40&md5=60b5f1a977d5aed81725fc6c4b4a145e},
}

@InProceedings{Chu2018,
  author        = {N. {Chu} and H. {Liu} and B. {Ding} and W. {Li}},
  title         = {Constructing Self-Adaptive Software in Ubiquitous Computing Space},
  booktitle     = {2018 IEEE International Conference on Computer and Communication Engineering Technology (CCET)},
  year          = {2018},
  pages         = {254-259},
  month         = {Aug},
  note          = {cited By 1},
  abstract      = {Self-adaptation endows software with the ability to adjust its behavior according to the changes in its environment. It is an effective approach to deal with dynamic environments, such as ubiquitous computing spaces. However, adaptability will significantly complicate software implementation and bring great challenges to software engineering practices. This paper presents an engineering approach for self-adaptive software, which systematically enables the reuse of software adaptation on both software architecture and development process. We propose a novel conceptual model as the foundation of our work at first, in which each software entity can imitate the reacting/joining behavior pattern of the individuals in natural adaptive systems. And then, mainly based on the enhancement of component technology, we map this conceptual model into a practical and reusable software architecture. A software factory with a model-driven process is presented as well. Several applications have been developed to validate the effectiveness and generality of our approach.},
  art_number    = {8542198},
  document_type = {Conference Paper},
  doi           = {10.1109/CCET.2018.8542198},
  groups        = {ieee, wiley},
  journal       = {2018 IEEE International Conference on Computer and Communication Engineering Technology, CCET 2018},
  keywords      = {software architecture;software engineering;software reusability;ubiquitous computing;self-adaptive software;ubiquitous computing space;software implementation;software engineering practices;engineering approach;software adaptation;development process;software entity;natural adaptive systems;software factory;software architecture;software self-adaptation;Software;Adaptation models;Computational modeling;Ubiquitous computing;Adaptive systems;Computer architecture;Production facilities;ubiquitous computing;adaptability;software architecture;software factory},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85059772495&doi=10.1109%2fCCET.2018.8542198&partnerID=40&md5=6619af99be593d567aa1669529c6eb2f},
}

@InProceedings{Arcaini2019,
  author        = {P. {Arcaini} and R. {Mirandola} and E. {Riccobene} and P. {Scandurra}},
  title         = {A Pattern-Oriented Design Framework for Self-Adaptive Software Systems},
  booktitle     = {2019 IEEE International Conference on Software Architecture Companion (ICSA-C)},
  year          = {2019},
  pages         = {166-169},
  month         = {March},
  note          = {cited By 3},
  abstract      = {Multiple interacting MAPE-K loops, structured according to specific interaction patterns, have been introduced to design the adaptation logic in case of decentralized self-adaptive software systems. Designing such complex systems requires the availability of tools where MAPE patterns can be easily instantiated to provide fast architectural solutions, and the encoding towards specific domains is facilitated by automatic mapping of such pattern instantiations in domain-specific languages; validation and verification must be also supported to assure correct development of reliable systems. In this paper, we present a pattern-oriented framework, based on the MSL (MAPE Specification Language) modeling language, for the design of self-adaptive systems. The framework supports: (i) explicit modeling of the adaptation logic in terms of patterns of interactive MAPE-K loops; (ii) ability to tailor MSL models for a specific application domain and synthesize from them other modeling artifacts/code according to a target implementation context and scope (e.g., OpenHAB); (iii) ability to perform validation and verification of MSL models by means of the ASMETA formal framework.},
  art_number    = {8712366},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSA-C.2019.00037},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2019 IEEE International Conference on Software Architecture - Companion, ICSA-C 2019},
  keywords      = {object-oriented programming;program verification;software architecture;software reliability;specification languages;pattern-oriented design framework;adaptation logic;decentralized self-adaptive software systems;complex systems;MAPE patterns;automatic mapping;domain-specific languages;validation;verification;reliable systems;pattern-oriented framework;MSL modeling language;self-adaptive systems;MSL models;ASMETA formal framework;interactive MAPE-K loops;MAPE specification language;interaction patterns;Adaptation models;Unified modeling language;Analytical models;Context modeling;Heating systems;Smart homes;Temperature sensors;Pattern-oriented design;self-adaptation;MAPE-K loops;MAPE patterns;ASMETA;OpenHAB},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85066466944&doi=10.1109%2fICSA-C.2019.00037&partnerID=40&md5=0ace2d7bdfc7bb741b1170512919fcdc},
}

@Article{Calinescu2018a,
  author        = {R. {Calinescu} and D. {Weyns} and S. {Gerasimou} and M. U. {Iftikhar} and I. {Habli} and T. {Kelly}},
  title         = {Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases},
  journal       = {IEEE Transactions on Software Engineering},
  year          = {2018},
  volume        = {44},
  number        = {11},
  pages         = {1039-1069},
  month         = {Nov},
  issn          = {1939-3520},
  note          = {cited By 24},
  abstract      = {Building on concepts drawn from control theory, self-adaptive software handles environmental and internal uncertainties by dynamically adjusting its architecture and parameters in response to events such as workload changes and component failures. Self-adaptive software is increasingly expected to meet strict functional and non-functional requirements in applications from areas as diverse as manufacturing, healthcare and finance. To address this need, we introduce a methodology for the systematic ENgineering of TRUstworthy Self-adaptive sofTware (ENTRUST). ENTRUST uses a combination of (1) design-time and runtime modelling and verification, and (2) industry-adopted assurance processes to develop trustworthy self-adaptive software and assurance cases arguing the suitability of the software for its intended application. To evaluate the effectiveness of our methodology, we present a tool-supported instance of ENTRUST and its use to develop proof-of-concept self-adaptive software for embedded and service-based systems from the oceanic monitoring and e-finance domains, respectively. The experimental results show that ENTRUST can be used to engineer self-adaptive software systems in different application domains and to generate dynamic assurance cases for these systems.},
  art_number    = {8008800},
  document_type = {Article},
  doi           = {10.1109/TSE.2017.2738640},
  groups        = {ieee, wiley},
  keywords      = {embedded systems;formal verification;software architecture;trusted computing;self-adaptive software handles;nonfunctional requirements;ENTRUST;industry-adopted assurance processes;engineering trustworthy;control theory;engineering of trustworthy self-adaptive software systems;service-based systems;oceanic monitoring;e-finance domains;embedded software;software architecture;Software systems;Control systems;Runtime;Monitoring;Computer architecture;Adaptive systems;Self-adaptive software systems;software engineering methodology;assurance evidence;assurance cases},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85029184307&doi=10.1109%2fTSE.2017.2738640&partnerID=40&md5=e0a3da551bc0d9ac0711b140b2183925},
}

@InProceedings{Liu2012,
  author        = {C. {Liu} and W. {Zhang} and H. {Zhao} and Z. {Jin}},
  title         = {A Problem Oriented Approach to Modeling Feedback Loops for Self-Adaptive Software Systems},
  booktitle     = {2012 19th Asia-Pacific Software Engineering Conference},
  year          = {2012},
  volume        = {1},
  pages         = {440-445},
  month         = {Dec},
  note          = {cited By 4},
  abstract      = {Self-adaptive software systems can adjust their behaviors at runtime to respond to the context changes. To operationalize the adaptive mechanism, feedback loops have been advocated in many works. However, most of existing works focus on the architecture design to realize the feedback loops. How to model the required feedback loops remains an issue. In this paper, we propose a problem oriented approach for this issue. This approach models the system composed by the self-adaptive software and its context as an adaptive control system which is equipped with two kinds of feedback loops: context-aware feedback loops and requirements-aware feedback loops. To model the feedback loops, we identify five classes of software problems to address the different concerns of the adaptive requirements behind the feedback loops. We illustrate our idea by applying it to a cruise control system.},
  art_number    = {6462692},
  document_type = {Conference Paper},
  doi           = {10.1109/APSEC.2012.77},
  groups        = {ieee, wiley},
  issn          = {1530-1362},
  journal       = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  keywords      = {adaptive control;software architecture;systems analysis;ubiquitous computing;problem oriented approach;feedback loop modeling;self-adaptive software system;adaptive mechanism;architecture design;adaptive control system;context-aware feedback loop;requirements-aware feedback loop;adaptive requirement;cruise control system;Context;Vehicles;Monitoring;Feedback loop;Software;Control systems;Adaptation models;self-adaptive software;software requirements;feedback loop;context-aware;requirements-aware},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874590074&doi=10.1109%2fAPSEC.2012.77&partnerID=40&md5=1e5071f077451123ea279612ac170d45},
}

@Article{Zeadally2019,
  author        = {S. {Zeadally} and T. {Sanislav} and G. D. {Mois}},
  title         = {Self-Adaptation Techniques in Cyber-Physical Systems (CPSs)},
  journal       = {IEEE Access},
  year          = {2019},
  volume        = {7},
  pages         = {171126-171139},
  issn          = {2169-3536},
  note          = {cited By 0},
  abstract      = {Cyber-Physical Systems (CPSs) are large-scale complex systems that monitor and control physical processes by using computer algorithms tightly integrated with networking and their users. Monitoring and controlling the physical environment is a hot topic for today's researchers and engineers in academia and industry. Within this realm, an important feature of current and future Information and Communications Technology (ICT) systems is self-adaptation-yet there is a shortage of information focusing on this characteristic in the literature, particularly as it relates to CPSs. Here, we investigate current state-of-the-art research on CPSs from this perspective, and evaluate the main self-adaptive approaches proposed in the literature, along with their results, strengths, and weaknesses. We also discuss appropriate techniques for enabling self-adaptation capabilities within CPSs at different architectural layers. Overcoming the challenges associated with designing and implementing self-adaptive mechanisms in CPSs will provide a path for bolstering a new generation of CPSs with greater robustness and reliability.},
  art_number    = {8913497},
  document_type = {Article},
  doi           = {10.1109/ACCESS.2019.2956124},
  groups        = {ieee, wiley},
  keywords      = {cyber-physical systems;software architecture;ICT systems;information and communications technology;self-adaptive mechanisms;self-adaptation capabilities;self-adaptive approaches;large-scale complex systems;cyber-physical systems;self-adaptation techniques;CPSs;Reliability;Cyber-physical systems;Monitoring;Software;Scalability;Computer architecture;Security;Adaptive systems;cyber-physical systems;self-adaptation},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85078403794&doi=10.1109%2fACCESS.2019.2956124&partnerID=40&md5=ac0ad13602e57ff214eb6867f0bbfc4a},
}

@InProceedings{Lei2015,
  author        = {Y. {Lei} and K. {Ben} and Z. {He}},
  title         = {A Framework for Self-Adaptive Software Based on Extended Tropos Goal Model},
  booktitle     = {2015 7th International Conference on Intelligent Human-Machine Systems and Cybernetics},
  year          = {2015},
  volume        = {2},
  pages         = {533-536},
  month         = {Aug},
  note          = {cited By 4},
  abstract      = {Software variation modeling is essential to the requirements modeling of self-adaptive software. However, traditional Tropos goal model cannot specify the software variations. In order to address this problem, we incorporate the context conditions and internal event conditions into the Tropos goal model. For the problem that adaption strategies are difficult to modify when adaptive software is compiled, we propose a framework for adaptive software based on the extended Tropos goal model. The adaption logic layer of the framework has a double control loop, which takes the goal model as a reference. The dual control loop is responsible for monitoring the running status and context variations of the business logic layer, and adapting to variations according to the goal model. Such a loose coupling of adaption logic and business logic facilitates the modification of adaption strategies. We also design several adaption algorithms relative to the framework to control and cope with the internal events and context variations.},
  art_number    = {7335029},
  document_type = {Conference Paper},
  doi           = {10.1109/IHMSC.2015.65},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2015 7th International Conference on Intelligent Human-Machine Systems and Cybernetics, IHMSC 2015},
  keywords      = {formal specification;formal verification;software variation modeling;requirements modeling;self-adaptive software;extended Tropos goal model;adaption logic layer;double control loop;running status monitoring;context variations;business logic layer;internal events;context variations;Software;Context;Adaptation models;Fires;Context modeling;Unified modeling language;Object oriented modeling;goal model;self-adaptive software;goal oriented requirements engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954442083&doi=10.1109%2fIHMSC.2015.65&partnerID=40&md5=cdd66a0710347a61786aebc5a6b0952e},
}

@InProceedings{Han2016,
  author        = {D. {Han} and J. {Xing} and Q. {Yang} and J. {Li} and H. {Wang}},
  title         = {Handling Uncertainty in Self-Adaptive Software Using Self-Learning Fuzzy Neural Network},
  booktitle     = {2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC)},
  year          = {2016},
  volume        = {2},
  pages         = {540-545},
  month         = {June},
  note          = {cited By 2},
  abstract      = {Uncertainty has posed great challenges to the development and application of self-adaptive software (SAS). To handle uncertainty underneath SAS, the technique of fuzzy control method has been employed to model and develop SASs. Practices prove that fuzzy logic is powerful to handle uncertainty, especially fuzzy uncertainty, within SAS. However, fuzzy control based SAS needs software developers to set fuzzy rules of the system, which is rather experience-dependent and heavily increases development burden of software engineers. To some extent, the effect of handling uncertainty depends on experiences of software engineers. Besides, fuzzy control based SAS realizes self-adaptation logic using fixed fuzzy rules, lacking the ability to adapt to large changes (e.g., scenario switches). In order to make up the above shortages of fuzzy control based SAS, we present the Fuzzy-Learning SAS, attempting to construct self-adaptation logic using self-learning fuzzy neural network. By incorporating the model of fuzzy neural network, Fuzzy-Learning models SAS with two feedback loops, i.e., the self-adaptation loop and the self-learning loop, enabling SASs with the ability of adapting to dynamic changes and the ability of automatically constructing self-adaptation logic. We have experimentally evaluated effectiveness and efficiency of Fuzzy-Learning SAS with a motivating example. The experiment results confirmed that Fuzzy-Learning SAS can improve the effect of handling uncertainty and alleviate the development burden of software engineers with ill knowledge of fuzzy control. Besides, Fuzzy-Learning SAS can adapt to large changes (e.g., scenario switches) with the self-learning ability.},
  art_number    = {7552269},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSAC.2016.125},
  groups        = {ieee, wiley},
  issn          = {0730-3157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {feedback;fuzzy control;fuzzy neural nets;learning (artificial intelligence);software engineering;uncertainty handling;uncertainty handling;self-adaptive software;self-learning fuzzy neural network;fuzzy control method;fixed fuzzy rules;feedback loops;self-adaptation loop;self-learning loop;fuzzy-learning SAS;Synthetic aperture sonar;Software;Uncertainty;Fuzzy control;Fuzzy neural networks;Fuzzy logic;Marine vehicles;Uncertainty;software self-adaptation;self-adaptive software;fuzzy neural network;self-learning},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988035744&doi=10.1109%2fCOMPSAC.2016.125&partnerID=40&md5=5f4cc7a8cf787e0234568202fbf5b3a1},
}

@InProceedings{Beigi-Mohammadi2017,
  author        = {N. {Beigi-Mohammadi} and M. {Litoiu}},
  title         = {Engineering Self-Adaptive Applications on Cloud with Software Defined Networks},
  booktitle     = {2017 IEEE International Conference on Cloud Engineering (IC2E)},
  year          = {2017},
  pages         = {9-12},
  month         = {April},
  note          = {cited By 0},
  abstract      = {Self-adaptive applications are engineered to adapt to operation conditions to continuously meet application requirements at run-time. Before the emergence of Software Defined Networking (SDN) and new network virtualization technologies, the common run-time adaptation actions were limited to changes in computing and storage resources (i.e., scaling in/out). However, SDN creates new avenues for adaptation strategies that complement or solves issues associated with computing adaptations. Hence, in this thesis, we propose to use SDN and network virtualization techniques to build self-adaptive applications. The research goal is to build applications that are self-protecting, self-managing and self-optimizing using both computing and networking adaptations. We design, implement and verify such self-adaptive applications on real cloud environment.},
  art_number    = {7923781},
  document_type = {Conference Paper},
  doi           = {10.1109/IC2E.2017.43},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2017 IEEE International Conference on Cloud Engineering, IC2E 2017},
  keywords      = {cloud computing;software defined networking;engineering self-adaptive applications;software defined network;SDN;network virtualization technologies;cloud environment;Cloud computing;Computer crime;Bandwidth;Adaptation models;Computational modeling;Analytical models;Time factors;Adaptive applications;Software defined networking;Overlay networks;SLA;Bandwidth adaptation},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85020162367&doi=10.1109%2fIC2E.2017.43&partnerID=40&md5=1010d0812932a5c376bdb3e31075216c},
}

@InProceedings{Wang2010,
  author        = {M. {Wang} and H. {Mei} and W. {Jiao} and J. {Jie} and J. {Ma}},
  title         = {A Self-Adaptive Mechanism for Software Configuration Based on Case-based Reasoning and Policy},
  booktitle     = {2010 International Conference on Artificial Intelligence and Computational Intelligence},
  year          = {2010},
  volume        = {3},
  pages         = {250-255},
  month         = {Oct},
  note          = {cited By 0},
  abstract      = {Self-adaptive software expects the system to adapt its behaviors to environment changes. One main challenge is how to improve self-adaptation efficiency. In this paper case-based reasoning method is used to support the self-configuration case reuse which results in the configuration efficiency improvement. If there is no case to reuse directly, the policy-based technique is utilized to achieve the self-configuring plan. Moreover, the new generated configuration plan will be stored to the case repository for later reuse. This self-adaptive mechanism is more flexible and efficient which also is applicable to the self-optimizing, self-healing and self-protecting etc. It has proved to be available and very helpful in software system self-configuration.},
  art_number    = {5655393},
  document_type = {Conference Paper},
  doi           = {10.1109/AICI.2010.290},
  groups        = {ieee, wiley},
  journal       = {Proceedings - International Conference on Artificial Intelligence and Computational Intelligence, AICI 2010},
  keywords      = {case-based reasoning;configuration management;software fault tolerance;software reusability;self adaptive mechanism;software configuration;case based reasoning;software reusability;policy based technique;Petroleum;Cognition;Software;Monitoring;Computer architecture;Object recognition;Concrete;self-adaptive;case-based reasoning;policy},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-78651425792&doi=10.1109%2fAICI.2010.290&partnerID=40&md5=d9aaa8e8861eabcc15ee43e0fd0f59fb},
}

@InProceedings{Weyns2018,
  author        = {D. {Weyns}},
  title         = {Engineering Self-Adaptive Software Systems �C An Organized Tour},
  booktitle     = {2018 IEEE 3rd International Workshops on Foundations and Applications of Self* Systems (FAS*W)},
  year          = {2018},
  pages         = {1-2},
  month         = {Sep.},
  note          = {cited By 0},
  abstract      = {Engineering software that is subject to uncertainties that are difficult to anticipate before deployment is challenging. Self-adaptation extends a software system with an external feedback loop system that monitors the system and adapts its configuration or architecture to ensure that its qualities are met under uncertain operating conditions. In this tutorial, we provide a particular perspective on the evolution of the field of self-adaptation in six waves. These waves put complementary aspects of engineering self-adaptive systems in focus that synergetically have contributed to the current body of knowledge in the field.},
  art_number    = {8599519},
  document_type = {Conference Paper},
  doi           = {10.1109/FAS-W.2018.00012},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2018 IEEE 3rd International Workshops on Foundations and Applications of Self* Systems, FAS*W 2018},
  keywords      = {feedback;self-adjusting systems;software architecture;organized tour;external feedback loop system;uncertain operating conditions;engineering self-adaptive software systems;Uncertainty;Adaptation models;Software;Runtime;Computer architecture;Adaptive systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061545355&doi=10.1109%2fFAS-W.2018.00012&partnerID=40&md5=6bae838dcf328741a1fd154013d4644a},
}

@InProceedings{Settanni2018,
  author        = {G. {Settanni} and F. {Skopik} and A. {Karaj} and M. {Wurzenberger} and R. {Fiedler}},
  title         = {Protecting cyber physical production systems using anomaly detection to enable self-adaptation},
  booktitle     = {2018 IEEE Industrial Cyber-Physical Systems (ICPS)},
  year          = {2018},
  pages         = {173-180},
  month         = {May},
  note          = {cited By 10},
  abstract      = {The industrial world is going through its fourth revolution also known as Industry 4.0. Modern industrial processes leverage advanced IT technologies to increase productivity and often combine multiple system concepts such as Internet of Things (IoT), Cyber Physical Systems (CPS) and Cloud Computing. Cyber Physical Production Systems (CPPS) are key enablers of this revolution. In CPPS, raw materials, machines, and operations are interconnected to form a sophisticated network. Protecting them against advanced cyber-threats is a priority concern for the future implementation of Industry 4.0 applications. Any impairment of such systems can lead, in fact, to catastrophic damages resulting in a substantial financial loss for governments, companies, as well as endanger the safety of the society. The need for high availability and reliability of these systems is therefore the pillar guiding our research. This paper proposes the adoption of anomaly detection as a method to support self-adaptation in CPPS and to ensure flexibility, reliability, and protection of industrial environments against modern cyber threats. An anomaly detection mechanism can be employed to monitor, and learn the normal behavior of an industrial system, and to generate alerts when the observed events indicate abnormal activities. On this concept we base our work, and we demonstrate how timely identifying critical security events can enable, through the self-adaptation (e.g., triggering automatic configuration changes), an efficient protection of the CPPS against advanced threats, and an effective containment of their effects.},
  document_type = {Conference Paper},
  doi           = {10.1109/ICPHYS.2018.8387655},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2018 IEEE Industrial Cyber-Physical Systems, ICPS 2018},
  keywords      = {cloud computing;cyber-physical systems;Internet of Things;production engineering computing;security of data;self-adjusting systems;anomaly detection mechanism;productivity;IoT;Internet of Things;CPPS self-adaptation;Industry 4.0;cyber physical production systems protection;cloud computing;industrial processes;fourth industrial revolution;financial loss;cyber-threats;Security;Monitoring;Anomaly detection;Measurement;Industries;Sensors;Planning;Cyber Physical Production Systems;Self-adaptation;Anomaly Detection;Industry 4.0},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85048920786&doi=10.1109%2fICPHYS.2018.8387655&partnerID=40&md5=3bcea84f2e3e5b473e71af5305fd0e13},
}

@InProceedings{Pham2000,
  author        = {T. Q. {Pham} and K. R. {Dixon} and P. K. {Khosla}},
  title         = {Software systems facilitating self-adaptive control software},
  booktitle     = {Proceedings. 2000 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS 2000) (Cat. No.00CH37113)},
  year          = {2000},
  volume        = {2},
  pages         = {1094-1100 vol.2},
  month         = {Oct},
  note          = {cited By 8},
  abstract      = {Self-adaptive control software is a new paradigm to create robust, fault-tolerant mobile robots. This type of software analyzes its performance and dynamically modifies itself to operate better in adverse and rapidly changing conditions. We have created two systems that facilitate the creation of self-adaptive control software: PB3A and RAVE. PB3A, the Port-Based Adaptable Agent Architecture, is a mobile, agent-based framework that allows software to adapt itself at all levels. RAVE, the Real And Virtual Environment, is a mixed-reality simulation environment for mobile robots. Together these two systems allow for the creation, testing, and analysis of self-adaptive control software by on- and off-line simulation. We give brief overviews of PB3A and RAVE and present applications that demonstrate robotic systems using self-adaptive control software.},
  document_type = {Article},
  doi           = {10.1109/IROS.2000.893165},
  groups        = {ieee, wiley},
  journal       = {IEEE International Conference on Intelligent Robots and Systems},
  keywords      = {mobile robots;multi-agent systems;virtual reality;digital simulation;self-adjusting systems;software engineering;program testing;software tools;software systems;self-adaptive control software;robust fault-tolerant mobile robots;rapidly changing conditions;adverse conditions;PB3A;RAVE;Port-Based Adaptable Agent Architecture;mobile agent-based framework;Real And Virtual Environment;mixed-reality simulation environment;off-line simulation;online simulation;Software systems;Control systems;Mobile robots;Robust control;Fault tolerance;Software performance;Performance analysis;Computer architecture;Virtual environment;Virtual reality},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0034447485&doi=10.1109%2fIROS.2000.893165&partnerID=40&md5=9225d1663d393d93fae6fed2c756d83e},
}

@InProceedings{Zhang2010,
  author        = {X. {Zhang} and C. {Lung}},
  title         = {Improving Software Performance and Reliability with an Architecture-Based Self-Adaptive Framework},
  booktitle     = {2010 IEEE 34th Annual Computer Software and Applications Conference},
  year          = {2010},
  pages         = {72-81},
  month         = {July},
  note          = {cited By 7},
  abstract      = {Modern computer systems for distributed service computing become highly complex and difficult to manage. A self-adaptive approach that integrates monitoring, analyzing, and actuation functionalities has the potential to accommodate to a dynamically changing environment. The main objective of this paper is to develop an architecture-based self-adaptive framework to improve performance and resource efficiency of a server while maintaining reliable services. The target problem is distributed and concurrent systems. This paper proposes a Self-Adaptive Framework for Concurrency Architecture (SAFCA) that includes multiple concurrency architectural patterns or alternatives. The framework has monitoring and managing capabilities that can invoke another architectural alternative at run-time to cope with increasing demands or for reliability purpose. Two control mechanisms have been developed: SAFCA-Q and SAFCA-R. With SAFCA-Q, the system does not need to be statically configured for the highest workloads; hence, resource usage becomes more efficient in normal conditions and the system still is able to handle busty demands. SAFCA-R is used to improve reliability in the case of a failure by conducting a switchover to another software architecture. Experiment results demonstrate that the performance of SAFCA-Q is better than systems using only standalone concurrency architecture and resources are also better utilized. SAFCA-R also shows fast recovery in the face of a failure.},
  art_number    = {5676339},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSAC.2010.68},
  groups        = {ieee, wiley},
  issn          = {0730-3157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {distributed processing;fault tolerant computing;software architecture;software maintenance;software performance evaluation;software reliability;software performance;software reliability;architecture based selfadaptive framework;computer system;distributed service computing;dynamically changing environment;resource efficiency;reliable service maintainance;distributed system;concurrency architectural pattern;SAFCA-R;SAFCA-Q;resource usage;software architecture;Computer architecture;Concurrent computing;Servers;Instruction sets;Reliability;Monitoring;Lead;autonomic computing;software architecture;performance;reliability;distributed and concurrent architecture},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-78751698008&doi=10.1109%2fCOMPSAC.2010.68&partnerID=40&md5=6831d09b8143070ab29f0eebba2a8afb},
}

@InProceedings{Gonzalez-Sanchez2013,
  author        = {J. {Gonzalez-Sanchez}},
  title         = {Toward a software product line for affective-driven self-adaptive systems},
  booktitle     = {2013 35th International Conference on Software Engineering (ICSE)},
  year          = {2013},
  pages         = {1381-1384},
  month         = {May},
  note          = {cited By 0},
  abstract      = {One expected characteristic in modern systems is self-adaptation, the capability of monitoring and reacting to changes into the environment. A particular case of self-adaptation is affective-driven self-adaptation. Affective-driven self-adaptation is about having consciousness of user's affects (emotions) and drive self-adaptation reacting to changes in those affects. Most of the previous work around self-adaptive systems deals with performance, resources, and error recovery as variables that trigger a system reaction. Moreover, most effort around affect recognition has been put towards offline analysis of affect, and to date only few applications exist that are able to infer user's affect in real-time and trigger self-adaptation mechanisms. In response to this deficit, this work proposes a software product line approach to jump-start the development of affect-driven self-adaptive systems by offering the definition of a domain-specific architecture, a set of components (organized as a framework), and guidelines to tailor those components. Study cases with systems for learning and gaming will confirm the capability of the software product line to provide desired functionalities and qualities.},
  art_number    = {6606722},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSE.2013.6606722},
  groups        = {ieee, wiley},
  issn          = {1558-1225},
  journal       = {Proceedings - International Conference on Software Engineering},
  keywords      = {emotion recognition;product development;software architecture;software reusability;affective-driven self-adaptive systems;user affect recognition;user emotions;offline affect analysis;software product line approach;domain-specific architecture;learning systems;gaming systems;Computer architecture;Software;Emotion recognition;Guidelines;Adaptation models;Adaptive systems;Sensors;Affective Computing;Self-Adaptation;Software Product Line;Framework;Patterns;Software Architecture},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886379353&doi=10.1109%2fICSE.2013.6606722&partnerID=40&md5=f4f47f2211b614f6c13ebcd7cb56b32a},
}

@InProceedings{Wang2012,
  author        = {L. {Wang} and Y. {Gao} and C. {Cao} and L. {Wang}},
  title         = {Towards a General Supporting Framework for Self-Adaptive Software Systems},
  booktitle     = {2012 IEEE 36th Annual Computer Software and Applications Conference Workshops},
  year          = {2012},
  pages         = {158-163},
  month         = {July},
  note          = {cited By 4},
  abstract      = {When confronted with their internal and environmental dynamics, various software systems increasingly require self-adaptation capabilities. The vision above requires the self-adaptation approach to tackle these challenges and some software systems have their own specific implementations. However, in this paper a general supporting framework is proposed for software systems to self-adapt with running environmental dynamics and meanwhile fulfill various user requirements. Three key issues are covered in the framework: 1) the overall control architecture, which adopts the double closed-loop style and respectively includes the self-adaptation loop and the self-learning loop; 2) a general descriptive language, which is a application-independent and unified language to represent self-adaptation knowledge about target systems; 3) three implementation mechanisms, including forward reasoning, planning and reinforcement learning using feedback, which are supported by the above descriptive language and executed at runtime in different modules. Finally, one scenario of on-demand services of massive data mining tasks is selected and the case study demonstrates how the framework is customized as required and how the approach works.},
  art_number    = {6341568},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSACW.2012.38},
  groups        = {ieee, wiley},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {data mining;inference mechanisms;software engineering;unsupervised learning;self-adaptive software system;environmental dynamics;general supporting framework;overall control architecture;self-adaptation loop;self-learning loop;general descriptive language;self-adaptation knowledge;forward reasoning;reinforcement learning;on-demand service;data mining;Software systems;Planning;Monitoring;Computer architecture;Cognition;Adaptation models;Learning;Self-Adaptive System;Self-Adaptive Supporting Framework;Double Closed-loop Control Arthitecture;General Descriptive Language;Hierarchical Task Network;Rete Algorithm},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870801132&doi=10.1109%2fCOMPSACW.2012.38&partnerID=40&md5=036aaf69b1a7c0f6c77995f79a58b336},
}

@Article{Chen2017,
  author        = {T. {Chen} and R. {Bahsoon}},
  title         = {Self-Adaptive and Online QoS Modeling for Cloud-Based Software Services},
  journal       = {IEEE Transactions on Software Engineering},
  year          = {2017},
  volume        = {43},
  number        = {5},
  pages         = {453-475},
  month         = {May},
  issn          = {1939-3520},
  note          = {cited By 16},
  abstract      = {In the presence of scale, dynamism, uncertainty and elasticity, cloud software engineers faces several challenges when modeling Quality of Service (QoS) for cloud-based software services. These challenges can be best managed through self-adaptivity because engineers' intervention is difficult, if not impossible, given the dynamic and uncertain QoS sensitivity to the environment and control knobs in the cloud. This is especially true for the shared infrastructure of cloud, where unexpected interference can be caused by co-located software services running on the same virtual machine; and co-hosted virtual machines within the same physical machine. In this paper, we describe the related challenges and present a fully dynamic, self-adaptive and online QoS modeling approach, which grounds on sound information theory and machine learning algorithms, to create QoS model that is capable to predict the QoS value as output over time by using the information on environmental conditions, control knobs and interference as inputs. In particular, we report on in-depth analysis on the correlations of selected inputs to the accuracy of QoS model in cloud. To dynamically selects inputs to the models at runtime and tune accuracy, we design self-adaptive hybrid dual-learners that partition the possible inputs space into two sub-spaces, each of which applies different symmetric uncertainty based selection techniques; the results of sub-spaces are then combined. Subsequently, we propose the use of adaptive multi-learners for building the model. These learners simultaneously allow several learning algorithms to model the QoS function, permitting the capability for dynamically selecting the best model for prediction on the fly. We experimentally evaluate our models in the cloud environment using RUBiS benchmark and realistic FIFA 98 workload. The results show that our approach is more accurate and effective than state-of-the-art modelings.},
  art_number    = {7572219},
  document_type = {Article},
  doi           = {10.1109/TSE.2016.2608826},
  groups        = {ieee, wiley},
  keywords      = {cloud computing;learning (artificial intelligence);quality of service;virtual machines;cloud-based software services;quality of service;self-adaptivity;uncertain QoS sensitivity;cloud infrastructure;colocated software service;virtual machine;fully dynamic self-adaptive online QoS modeling;information theory;machine learning algorithm;environmental conditions;control knobs;self-adaptive hybrid dual-learners;input space partitioning;symmetric uncertainty based selection technique;QoS function;cloud environment;RUBiS benchmark;FIFA 98 workload;Quality of service;Cloud computing;Interference;Adaptation models;Sensitivity;Uncertainty;Software quality;search-based software engineering;self-adaptive systems;machine learning;cloud computing;performance modeling},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85021774962&doi=10.1109%2fTSE.2016.2608826&partnerID=40&md5=dc87b86b8381696bc49b0a53a1af488e},
}

@InProceedings{Tang2013,
  author        = {S. {Tang} and Q. {Liu}},
  title         = {Supporting Integration of COTS Components from a Perspective of Self-Adaptive Software Architecture},
  booktitle     = {2013 IEEE 37th Annual Computer Software and Applications Conference},
  year          = {2013},
  pages         = {706-713},
  month         = {July},
  note          = {cited By 0},
  abstract      = {Component-Based Software Development (CBSD) provides a high efficient and low cost way to construct software systems by integrating reusable software components. Although CBSD has already become a widely accepted paradigm, it is still beyond possibility to assemble components easily from commercial-off-the-shelf (COTS) components into one application system. A variety of mismatches between components often impede the integration of COTS components, and component adaptation is becoming a key problem in Component-Based Software Engineering (CBSE). Aiming at this requirement, this paper presents a self-adaptive software architecture (model-based) approach for supporting seamless integration of COTS components. Specifically, we first propose a self-adaptive software architecture model, and then we discuss and exemplify how to eliminate the mismatches between heterogeneous COTS components based on this model. A simplified on-line shopping system is referred throughout the paper to illustrate our approach.},
  art_number    = {6649901},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSAC.2013.112},
  groups        = {ieee, wiley},
  issn          = {0730-3157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {object-oriented programming;software architecture;software reusability;COTS components;self-adaptive software architecture model;component-based software development;CBSD;software systems;reusable software components;commercial-off-the-shelf components;component-based software engineering;CBSE;simplified on-line shopping system;Ports (Computers);Connectors;Software;Protocols;Semantics;Adaptation models;Ontologies;COTS components;behavioral protocol;adaptor;port;semantic},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891287312&doi=10.1109%2fCOMPSAC.2013.112&partnerID=40&md5=af29732c719d83d668502ffdb2f278f5},
}

@InProceedings{JunrongShen2004,
  author        = {{Junrong Shen} and {Qianxiang Wang} and {Hong Mei}},
  title         = {Self-adaptive software: cybernetic perspective and an application server supported framework},
  booktitle     = {Proceedings of the 28th Annual International Computer Software and Applications Conference, 2004. COMPSAC 2004.},
  year          = {2004},
  volume        = {2},
  pages         = {92-95 vol.2},
  month         = {Sep.},
  note          = {cited By 11},
  abstract      = {With emerging areas such as Web services, pervasive computing, wireless sensor networks and so on, self-adaptive software is becoming more and more important and topical. As a new emerging discipline, self-adaptive software has strong background in control theory. This work analyses the similarity between software self-adaptation technologies and control theory, and shows that self-adaptive software could be studied from software cybernetic perspective. Based on this standpoint, we also present three software adaptive models derived from open-loop control, feedback control and adaptive control. The application server based implementations of these three models are introduced.},
  document_type = {Conference Paper},
  doi           = {10.1109/CMPSAC.2004.1342684},
  groups        = {ieee, wiley},
  issn          = {0730-3157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {software architecture;cybernetics;open systems;object-oriented programming;self-adaptive software;cybernetics;application server;pervasive computing;wireless sensor network;open-loop control;feedback control;adaptive control;Cybernetics;Application software;Control theory;Adaptive control;Network servers;Web services;Pervasive computing;Wireless sensor networks;Programmable control;Open loop systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-18844449202&doi=10.1109%2fCMPSAC.2004.1342684&partnerID=40&md5=493c17c0df9c612eb84f2daa011e625f},
}

@InProceedings{Dafflon2018,
  author        = {B. {Dafflon} and N. {Moalla} and Y. {Ouzrout}},
  title         = {Cyber-Physical Systems network to support decision making for self-adaptive production system},
  booktitle     = {2018 12th International Conference on Software, Knowledge, Information Management Applications (SKIMA)},
  year          = {2018},
  volume        = {2018-December},
  pages         = {1-8},
  month         = {Dec},
  note          = {cited By 0},
  abstract      = {Nowadays, recent trends and challenges around industry focus on new enablers for distributed control of manufacturing products and processes. They aim to cope with transition from full parts quality control to continue manufacturing operations control on the part and the resources as well. The objective in this paper is to propose a new self-adaptive Cyber-Physical System enabling control on manufacturing operations. The research problem is to face the gap between the need to support production data changeability and the evolution of manufacturing resources properties and performances.The proposed contribution promotes the Cyber-Physical Systems as a collective decision making support for self-adaptive production systems. Multi Agent Systems are deployed as new layer to take advantage of the decentralized CPSs physical abilities to monitor their environment. This solution makes it possible to integrate real-time workshop status information into the decision-making process. The originality of the contribution consists in involving servitized Cyber-Physical Systems in the decision making process.},
  art_number    = {8631512},
  document_type = {Conference Paper},
  doi           = {10.1109/SKIMA.2018.8631512},
  groups        = {ieee, wiley},
  issn          = {2573-3214},
  journal       = {International Conference on Software, Knowledge Information, Industrial Management and Applications, SKIMA},
  keywords      = {cyber-physical systems;decision making;distributed control;multi-agent systems;process control;production control;production engineering computing;quality control;production data changeability;collective decision making support;self-adaptive production system;decentralized CPSs physical abilities;distributed control;manufacturing products;quality control;multiagent systems;cyber-physical systems;Internet of Things;Dynamic scheduling;Decision making;Manufacturing;Process control;Monitoring;Cyber-physical systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85062725733&doi=10.1109%2fSKIMA.2018.8631512&partnerID=40&md5=484720fbd660c3e1bcd56434dfed8a4e},
}

@InProceedings{Roopa2016,
  author        = {Y. M. {Roopa} and A. R. {Reddy}},
  title         = {Cost optimization component selection approach for component based self-adaptive software architecture using component repository},
  booktitle     = {2016 International Conference on Communication and Electronics Systems (ICCES)},
  year          = {2016},
  pages         = {1-6},
  month         = {Oct},
  note          = {cited By 0},
  abstract      = {Now a days Ubiquitous computing plays major role in the adaptable software development. The ubiquitous computing works on the principle of context awareness. Context awareness is the methodology which recognizes and monitors the environment and adapt to the environment where they have been introduced. The self-adaptive software architecture is developed based on component based software engineering, which concentrates on the reusability of the software components to achieve better productivity. The proposed architecture uses component repository to adapt the changes to the architecture. The component repository is introduced where it contains the predefined and reusable components and their services for adaptation. The optimized algorithm applied for the component selection in the component repository. The GRASP algorithm is used to optimize the system architecture. The experimental results are validated based on real time environments and compare the results with other existing methods. The proposed models show the superiority in terms of performance.},
  art_number    = {7889859},
  document_type = {Conference Paper},
  doi           = {10.1109/CESYS.2016.7889859},
  groups        = {ieee, wiley},
  journal       = {Proceedings of the International Conference on Communication and Electronics Systems, ICCES 2016},
  keywords      = {optimisation;software architecture;software reliability;ubiquitous computing;cost optimization component selection approach;self-adaptive software architecture;component repository;ubiquitous computing;software development;context awareness;software components;reusable components;optimized algorithm;Context;Monitoring;Computer architecture;Software;Servers;Adaptation models;component;self-adaptive software;software architecture;optimization approach;GRASP. Introduction},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018422731&doi=10.1109%2fCESYS.2016.7889859&partnerID=40&md5=bebf5a80032545e8902d5da8bf437b4d},
}

@InProceedings{JinChen2003,
  author        = {J. C. {Jin Chen} and Q. W. {Qiang Wu} and J. B. {Jinian Bian} and H. X. {Hongxi Xue}},
  title         = {SGA - a self-adaptable granularity approach for hardware/software co-design},
  booktitle     = {ASIC, 2003. Proceedings. 5th International Conference on},
  year          = {2003},
  volume        = {1},
  pages         = {365-368 Vol.1},
  month         = {Oct},
  note          = {cited By 0},
  abstract      = {In hardware/software co-design for SOC, the granularity selected during hardware/software partitioning has great impact on the quality of the final implementation. Different approaches determining the partitioning granularity have been developed in recent years. However, previous all approaches have fixed clustering metrics and granularity evaluation function in design process. In this paper, a self-adaptable flexible granularity approach for software/hardware co-design is presented.},
  art_number    = {05733750},
  document_type = {Conference Paper},
  doi           = {10.1109/ICASIC.2003.1277563},
  groups        = {ieee, wiley},
  issn          = {1523-553X},
  journal       = {IEEE International Symposium on Semiconductor Manufacturing Conference Proceedings},
  keywords      = {hardware-software codesign;system-on-chip;SGA;SOC;clustering metrics;granularity evaluation function;hardware/software codesign;hardware/software partitioning;self adaptable flexible granularity;system on chip},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085489753&doi=10.1109%2fICASIC.2003.1277563&partnerID=40&md5=13ef31569d824874d401b312dd71af7b},
}

@InProceedings{Salama2015,
  author        = {M. {Salama}},
  title         = {Stability of Self-Adaptive Software Architectures},
  booktitle     = {2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  year          = {2015},
  pages         = {886-889},
  month         = {Nov},
  note          = {cited By 0},
  abstract      = {Stakeholders and organisations are increasingly looking for long-lived software. As architectures have a profound effect on the operational life-time of the software and the quality of the service provision, architectural stability could be considered a primary criterion towards achieving the long-livety of the software. Architectural stability is envisioned as the next step in quality attributes, combining many inter-related qualities. This research suggests the notion of behavioural stability as a primary criterion for evaluating whether the architecture maintains achieving the expected quality attributes, maintaining architecture robustness, and evaluating how well the architecture accommodates run-time evolutionary changes. The research investigates the notion of architecture stability at run-time in the context of self-adaptive software architectures. We expect to define, characterise and analyse this intuitive concept, as well as identify the consequent trade-offs to be dynamically managed and enhance the self-adaptation process for a long-lived software.},
  art_number    = {7372085},
  document_type = {Conference Paper},
  doi           = {10.1109/ASE.2015.93},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2015 30th IEEE/ACM International Conference on Automated Software Engineering, ASE 2015},
  keywords      = {software architecture;software quality;stability;self-adaptive software architecture;architectural stability;software operational life-time;service provision quality;Computer architecture;Stability criteria;Software;Software architecture;Adaptation models;Robustness},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963820969&doi=10.1109%2fASE.2015.93&partnerID=40&md5=f13c329e42fadd181ec88ec8ce9a3147},
}

@InProceedings{Affonso2013,
  author        = {F. J. {Affonso} and E. Y. {Nakagawa}},
  title         = {A Reference Architecture Based on Reflection for Self-Adaptive Software},
  booktitle     = {2013 VII Brazilian Symposium on Software Components, Architectures and Reuse},
  year          = {2013},
  pages         = {129-138},
  month         = {Sep.},
  note          = {cited By 9},
  abstract      = {Self-adaptive Software (SaS) presents specific characteristics compared to traditional ones, as it makes possible adaptations to be incorporated at runtime. These adaptations, when manually performed, normally become an onerous, error-prone activity. In this scenario, automated approaches have been proposed to support such adaptations; however, the development of SaS is not a trivial task. In parallel, reference architectures are reusable artifacts that aggregate the knowledge of architectures of software systems in specific domains. They have facilitated the development, standardization, and evolution of systems of those domains. In spite of their relevance, in the SaS domain, reference architectures that could support a more systematic development of SaS are not found yet. Considering this context, the main contribution of this paper is to present a reference architecture based on reflection for SaS, named RA4SaS (Reference Architecture for SaS). Its main purpose is to support the development of SaS that presents adaptations at runtime. To show the viability of this reference architecture, a case study is presented. As result, it has been observed that RA4SaS has presented good perspective to efficiently contribute to the area of SaS.},
  art_number    = {6685798},
  document_type = {Conference Paper},
  doi           = {10.1109/SBCARS.2013.24},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 7th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARs 2013 - In Conjunction with CBSoft 2013 - 4th Brazilian Conference on Software: Theory and Practice},
  keywords      = {software architecture;software reusability;self-adaptive software;error-prone activity;reusable artifacts;software systems architectures;RA4SaS;reference architecture for SaS;Computer architecture;Unified modeling language;Software systems;Runtime;Computational modeling;Guidelines;Self-adaptive Software;Reference Architecture;Reflection;Java},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893224163&doi=10.1109%2fSBCARS.2013.24&partnerID=40&md5=1c5e39802820440b00dfcfb02d273f01},
}

@Article{Ding2016,
  author        = {Z. {Ding} and Y. {Zhou} and M. {Zhou}},
  title         = {Modeling Self-Adaptive Software Systems With Learning Petri Nets},
  journal       = {IEEE Transactions on Systems, Man, and Cybernetics: Systems},
  year          = {2016},
  volume        = {46},
  number        = {4},
  pages         = {483-498},
  month         = {April},
  issn          = {2168-2232},
  note          = {cited By 39},
  abstract      = {Traditional models unable to model adaptive software systems since they deal with fixed requirements only, but cannot handle the behaviors that change at runtime in response to environmental changes. In this paper, an adaptive Petri net (APN) is proposed to model a self-adaptive software system. It is an extension of hybrid Petri nets by embedding a neural network algorithm into them at some special transitions. The proposed net has the following advantages: 1) it can model a runtime environment; 2) the components in the model can collaborate to make adaption decisions while the system is running; and 3) the computation is done at the local component, while the adaption is for the whole system. We illustrate the proposed APN by modeling a manufacturing system.},
  art_number    = {7115165},
  document_type = {Conference Paper},
  doi           = {10.1109/TSMC.2015.2433892},
  groups        = {ieee, wiley},
  keywords      = {learning (artificial intelligence);neural nets;Petri nets;software engineering;self-adaptive software systems modeling;Petri nets learning;adaptive Petri net;APN;neural network algorithm;adaption decision;manufacturing system;Adaptation models;Petri nets;Biological neural networks;Neurons;Software systems;Runtime;Production facilities;Adaptive Petri net (APN);adaptive software system;neural network;requirement modeling;Adaptive Petri net (APN);adaptive software system;neural network;requirement modeling},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963853253&doi=10.1109%2fTSMC.2015.2433892&partnerID=40&md5=3ea9cd1a638ae963a2372c915c3168ad},
}

@InProceedings{Cugini2015,
  author        = {F. {Cugini} and F. {Fresi} and F. {Paolucci} and G. {Meloni} and L. {Pot��} and N. {Sambo} and A. {D'Errico} and P. {Castoldi}},
  title         = {Towards plug-and-play software-defined EONs: Field trial of self-adaptation carrier spacing},
  booktitle     = {2015 European Conference on Optical Communication (ECOC)},
  year          = {2015},
  volume        = {2015-November},
  pages         = {1-3},
  month         = {Sep.},
  note          = {cited By 3},
  abstract      = {Adaptation techniques in Elastic Optical Networks (EONs) are first discussed, highlighting the need for automatic configuration procedures. Then, a novel software defined technique for effective self-adaptation of carrier spacing is proposed and demonstrated in a field trial.},
  art_number    = {7341669},
  document_type = {Conference Paper},
  doi           = {10.1109/ECOC.2015.7341669},
  groups        = {ieee, wiley},
  journal       = {European Conference on Optical Communication, ECOC},
  keywords      = {optical fibre networks;software defined networking;plug-and-play software-defined EON;self-adaptation carrier spacing;elastic optical networks;automatic configuration procedures;software defined technique;field trial;Optical fiber networks;Forward error correction;Bandwidth;Optical switches;Frequency control;Iterative decoding},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957812773&doi=10.1109%2fECOC.2015.7341669&partnerID=40&md5=19e284d97ca11b3950c7ca9ba6fdb50a},
}

@Article{Zhang2017,
  author        = {Y. {Zhang} and C. {Qian} and J. {Lv} and Y. {Liu}},
  title         = {Agent and Cyber-Physical System Based Self-Organizing and Self-Adaptive Intelligent Shopfloor},
  journal       = {IEEE Transactions on Industrial Informatics},
  year          = {2017},
  volume        = {13},
  number        = {2},
  pages         = {737-747},
  month         = {April},
  issn          = {1941-0050},
  note          = {cited By 109},
  abstract      = {The increasing demand of customized production results in huge challenges to the traditional manufacturing systems. In order to allocate resources timely according to the production requirements and to reduce disturbances, a framework for the future intelligent shopfloor is proposed in this paper. The framework consists of three primary models, namely the model of smart machine agent, the self-organizing model, and the self-adaptive model. A cyber-physical system for manufacturing shopfloor based on the multiagent technology is developed to realize the above-mentioned function models. Gray relational analysis and the hierarchy conflict resolution methods were applied to achieve the self-organizing and self-adaptive capabilities, thereby improving the reconfigurability and responsiveness of the shopfloor. A prototype system is developed, which has the adequate flexibility and robustness to configure resources and to deal with disturbances effectively. This research provides a feasible method for designing an autonomous factory with exception-handling capabilities.},
  art_number    = {7593295},
  document_type = {Article},
  doi           = {10.1109/TII.2016.2618892},
  groups        = {ieee, wiley},
  keywords      = {cyber-physical systems;exception handling;grey systems;manufacturing systems;multi-agent systems;production engineering computing;production management;self-adjusting systems;agent based shopfloor;cyber-physical system based self-organizing shopfloor;self-adaptive intelligent shopfloor;customized production;traditional manufacturing systems;resource allocation;production requirements;disturbance reduction;intelligent shopfloor framework;smart machine agent;manufacturing shopfloor;multiagent technology;gray relational analysis;hierarchy conflict resolution methods;shopfloor reconfigurability;shopfloor responsiveness;autonomous factory designing;exception-handling capabilities;Real-time systems;Task analysis;Manufacturing systems;Computer architecture;Radiofrequency identification;Cyber-physical system (CPS);intelligent shopfloor;self-adaptation;self-organization;smart machine agent (SMA)},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85014892131&doi=10.1109%2fTII.2016.2618892&partnerID=40&md5=8ccefe673bacd9549f0824f97c3855a5},
}

@InProceedings{Li2018,
  author        = {S. {Li} and L. {Chen} and Y. {Zhao}},
  title         = {Reconfigurable Active-RC LPF with Self-Adaptive Bandwidth Calibration for Software-Defined Radio in 130 nm CMOS},
  booktitle     = {2018 14th IEEE International Conference on Solid-State and Integrated Circuit Technology (ICSICT)},
  year          = {2018},
  pages         = {1-3},
  month         = {Oct},
  note          = {cited By 0},
  abstract      = {This paper presents a 5th-order reconfigurable active-RC LPF for Software-Defined Radio (SDR) in 130 nm CMOS. A novel RC clock generator, an error compensation logic, and self-adaptive bandwidth calibration are presented to dynamically improve bandwidth precision against process offset and temperature variation. The filter covers bandwidth range from 3.5 MHz to 35 MHz, and gain range from -6 dB to 24 dB with 6 dB step. Measurement result shows that the bandwidth precision is improved from more than 30% to less than 3% before and after the self-adaptive calibration. The working current of the filter is about 15 mA under 2.8 V core supply and the area is less than 0.3 mm2.},
  art_number    = {8564865},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSICT.2018.8564865},
  groups        = {ieee, wiley},
  journal       = {2018 14th IEEE International Conference on Solid-State and Integrated Circuit Technology, ICSICT 2018 - Proceedings},
  keywords      = {calibration;clocks;CMOS integrated circuits;radio receivers;RC circuits;software radio;130 nm CMOS;Software-Defined Radio;error compensation logic;self-adaptive bandwidth calibration;bandwidth precision;bandwidth range;RC clock generator;5th-order reconfigurable active-RC LPF;noise figure -6.0 dB to 24.0 dB;size 130.0 nm;voltage 2.8 V;bandwidth 3.5 MHz to 35.0 MHz;Bandwidth;Calibration;Clocks;Temperature measurement;Generators;Low pass filters;Frequency measurement},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060285340&doi=10.1109%2fICSICT.2018.8564865&partnerID=40&md5=e9f37138216a6e98d904f77f29833143},
}

@Article{Karsai1999,
  author        = {G. {Karsai} and J. {Sztipanovits}},
  title         = {A model-based approach to self-adaptive software},
  journal       = {IEEE Intelligent Systems and their Applications},
  year          = {1999},
  volume        = {14},
  number        = {3},
  pages         = {46-53},
  month         = {May},
  issn          = {2374-9423},
  note          = {cited By 37},
  abstract      = {The authors' model based approach to self adaptive software systems uses domain specific models and components to restore flexibility and adaptability to software systems running in dynamic environments. The model-integrated approach to self adaptive software, decomposes the problem into two major issues: the issues of representation and that of the reconfiguration mechanism. The goal of the work is to facilitate a performance/spl rarr/evolution/spl rarr/architecture modification/spl rarr/modified performance cycle in which the application's performance is continuously monitored, with the results used to modify the architectural model. The modification is then followed by a partial or complete regeneration of the executable system. We have implemented and tested some aspects of our approach in applications; other aspects are part of our ongoing investigation in various research projects.},
  document_type = {Article},
  doi           = {10.1109/5254.769884},
  groups        = {ieee, wiley},
  keywords      = {adaptive systems;software fault tolerance;software architecture;self-adaptive software;model based approach;self adaptive software systems;domain specific models;adaptability;dynamic environments;model-integrated approach;reconfiguration mechanism;architecture modification;modified performance cycle;application performance monitoring;architectural model;executable system;research projects;Software systems;Information systems;Computer architecture;Real time systems;Embedded software;Process design;System testing;Costs;Impedance;Modems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0032627874&doi=10.1109%2f5254.769884&partnerID=40&md5=08f30355c0cd556a57694cad9e10e0b1},
}

@InProceedings{HonglongChen2010,
  author        = {{Honglong Chen} and {Renfa Li} and {Rui Li} and {Edwin Sha}},
  title         = {A component assignment method based on Self-Adaptive software architecture model},
  booktitle     = {2010 2nd International Conference on Computer Engineering and Technology},
  year          = {2010},
  volume        = {4},
  pages         = {V4-682-V4-686},
  month         = {April},
  note          = {cited By 0},
  abstract      = {The research on Self-Adaptive evolution software is one of the new focuses in the domain of software engineering and the mechanism that makes software adapt to the architecture Meta information catches more attention. It makes full use of architecture information as meta-information in running system to decouple the object's invocation, so as to make system dynamic evolution flexibly. This also introduces the problem of assignment between base-component and meta-component. We make some research on this problem of component assignment in this paper, and first propose the component assignment model and prove the problem is NP, and then find a heuristic algorithm to solve it. Finally, the experiments show that compared with Greedy and ILP, the proposed algorithm has some advantages.},
  art_number    = {5485311},
  document_type = {Conference Paper},
  doi           = {10.1109/ICCET.2010.5485311},
  groups        = {ieee, wiley},
  journal       = {ICCET 2010 - 2010 International Conference on Computer Engineering and Technology, Proceedings},
  keywords      = {computational complexity;object-oriented programming;software architecture;component assignment method;self-adaptive software architecture;self-adaptive evolution software;base-component;meta-component;component assignment problem;heuristic algorithm;Software architecture;Computer architecture;Pervasive computing;Computer networks;Distributed computing;Embedded computing;Runtime;Heuristic algorithms;Embedded software;IP networks;self-Adaptive software;online evolution;software architecture model;component assignment},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77958073971&doi=10.1109%2fICCET.2010.5485311&partnerID=40&md5=ee34c06e042732690c909a6f92dbd5c4},
}

@Article{Barati2019,
  author        = {S. {Barati} and F. A. {Bartha} and S. {Biswas} and R. {Cartwright} and A. {Duracz} and D. {Fussell} and H. {Hoffmann} and C. {Imes} and J. {Miller} and N. {Mishra} and {Arvind} and D. {Nguyen} and K. V. {Palem} and Y. {Pei} and K. {Pingali} and R. {Sai} and A. {Wright} and Y. {Yang} and S. {Zhang}},
  title         = {Proteus: Language and Runtime Support for Self-Adaptive Software Development},
  journal       = {IEEE Software},
  year          = {2019},
  volume        = {36},
  number        = {2},
  pages         = {73-82},
  month         = {March},
  issn          = {1937-4194},
  note          = {cited By 2},
  abstract      = {Our software framework, Proteus, treats adaptation as a first-class object, enabling rapid development of robust, adaptive applications. Proteus developers specify their programs' intent and adaptable components (or knobs). A control-theoretic runtime continually monitors the running application, adjusting knobs so that the specified intent is met.},
  art_number    = {8648805},
  document_type = {Review},
  doi           = {10.1109/MS.2018.2884864},
  groups        = {ieee, wiley},
  keywords      = {object-oriented programming;software architecture;runtime support;self-adaptive software development;software framework;control-theoretic runtime;Proteus software framework;Agile software development;Software reliability;Software development},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85062223138&doi=10.1109%2fMS.2018.2884864&partnerID=40&md5=411c67a34b1115d0cee2fe5f0e60dc34},
}

@InProceedings{Salehie2007a,
  author        = {M. {Salehie} and L. {Tahvildari}},
  title         = {A Weighted Voting Mechanism for Action Selection Problem in Self-Adaptive Software},
  booktitle     = {First International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2007)},
  year          = {2007},
  pages         = {328-331},
  month         = {July},
  note          = {cited By 6},
  abstract      = {Self-adaptive software is a closed-loop system which aims at adjusting itself in response to changes at runtime. Such a system is required to monitor domain events, detect significant changes, decide how to react, and act in order to execute the decisions. This paper focuses on the deciding process particularly for application-level adaptation actions. For this purpose, a weighted voting mechanism has been proposed which makes decisions based on a Goal-Action- Attribute Model (GAAM). The decision-making algorithm traverses GAAM, determines activated goals and feasible actions for voting, and ultimately selects an action as the social choice. The proposed mechanism and GAAM are evaluated within a simulated model of a news web site.},
  art_number    = {4274924},
  document_type = {Conference Paper},
  doi           = {10.1109/SASO.2007.4},
  groups        = {ieee, wiley},
  issn          = {1949-3681},
  journal       = {First International Conference on Self-Adaptive and Self-Organizing Systems, SASO 2007},
  keywords      = {adaptive systems;knowledge representation;weighted voting mechanism;action selection;self-adaptive software;closed-loop system;domain event monitoring;application-level adaptation;goal-action-attribute model;decision making;social choice;Voting;Decision making;Runtime;Navigation;Engines;Software engineering;Autonomous agents;Computerized monitoring;Event detection;Costs},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-37049024515&doi=10.1109%2fSASO.2007.4&partnerID=40&md5=6833218154513558c67c9e0e09938690},
}

@InProceedings{H?nsel2015,
  author        = {J. {H?nsel} and T. {Vogel} and H. {Giese}},
  title         = {A Testing Scheme for Self-Adaptive Software Systems with Architectural Runtime Models},
  booktitle     = {2015 IEEE International Conference on Self-Adaptive and Self-Organizing Systems Workshops},
  year          = {2015},
  pages         = {134-139},
  month         = {Sep.},
  note          = {cited By 6},
  abstract      = {Self-adaptive software systems (SASS) are equipped with feedback loops to adapt autonomously to changes of the software or environment. In established fields, such as embedded software, sophisticated approaches have been developed to systematically study feedback loops early during the development. In order to cover the particularities of feedback, techniques like one-way and in-the-loop simulation and testing have been included. However, a related approach to systematically test SASS is currently lacking. In this paper we therefore propose a systematic testing scheme for SASS that allows engineers to test the feedback loops early in the development by exploiting architectural runtime models. These models that are available early in the development are commonly used by the activities of a feedback loop at runtime and they provide a suitable high-level abstraction to describe test inputs as well as expected test results. We further outline our ideas with some initial evaluation results by means of a small case study.},
  art_number    = {7306570},
  document_type = {Conference Paper},
  doi           = {10.1109/SASOW.2015.27},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2015 IEEE 9th International Conference on Self-Adaptive and Self-Organizing Systems Workshops, SASOW 2015},
  keywords      = {program testing;software architecture;self-adaptive software systems;architectural runtime models;feedback loops;embedded software;in-the-loop simulation;one-way simulation;systematic testing scheme;high-level abstraction;Adaptation models;Testing;Software;Runtime;Feedback loop;Monitoring;Analytical models},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962160803&doi=10.1109%2fSASOW.2015.27&partnerID=40&md5=cddfcbf5db690601307f6483647b7fe1},
}

@InProceedings{Bershadsky2018,
  author        = {A. M. {Bershadsky} and A. S. {Bozhday} and Y. I. {Evseeva} and A. A. {Gudkov}},
  title         = {The Mathematical Model of Reflection for Self-Adaptive Software},
  booktitle     = {2018 9th International Conference on Information, Intelligence, Systems and Applications (IISA)},
  year          = {2018},
  pages         = {1-5},
  month         = {July},
  note          = {cited By 1},
  abstract      = {The article deals with the problem of creating a mathematical apparatus for implementing self-adaptive properties of applied software systems. Self-adaptability is the ability of software to modify its own srtucture and behavior under the influence of external factors (unforeseen at compile stage) by forming new system feedbacks on the basis of internal and external data flows. The key issue here is the mathematical description of possible options for structural and behavioural system changes. The proposed mathematical model is based on the author's concept of reflection according to which a software system is able to generate and embed in its structure new feedbacks due to mining own behavioral information. Software that use this self-adaptive mechanism named reflective systems.},
  art_number    = {8633631},
  document_type = {Conference Paper},
  doi           = {10.1109/IISA.2018.8633631},
  groups        = {ieee, wiley},
  journal       = {2018 9th International Conference on Information, Intelligence, Systems and Applications, IISA 2018},
  keywords      = {feedback;self-adjusting systems;software architecture;mathematical description;mathematical model;software system;behavioral information;reflective systems;self-adaptive software;mathematical apparatus;applied software systems;system feedbacks;data flows;structural system;behavioural system;Software systems;Reflection;Adaptation models;Adaptive systems;Mathematical model;reflective self-adaptive software systems;self-adaptability;reflection;variability model;hypergraphs;software feature diagram},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85062890614&doi=10.1109%2fIISA.2018.8633631&partnerID=40&md5=c43f8a8013bfca84d88eb1cf2383bb6c},
}

@InProceedings{Esfahani2011a,
  author        = {N. {Esfahani}},
  title         = {A framework for managing uncertainty in self-adaptive software systems},
  booktitle     = {2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
  year          = {2011},
  pages         = {646-650},
  month         = {Nov},
  note          = {cited By 5},
  abstract      = {Self-adaptation endows a software system with the ability to satisfy certain objectives by automatically modifying its behavior. While many promising approaches for the construction of self-adaptive software systems have been developed, the majority of them ignore the uncertainty underlying the adaptation decisions. This has been one of the key inhibitors to widespread adoption of self-adaption techniques in risk-averse real-world settings. In this research abstract I outline my ongoing effort in the development of a framework for managing uncertainty in self-adaptation. This framework employs state-of-the-art mathematical approaches to model and assess uncertainty in adaptation decisions. Preliminary results show that knowledge about uncertainty allows self-adaptive software systems to make better decisions.},
  art_number    = {6100147},
  document_type = {Conference Paper},
  doi           = {10.1109/ASE.2011.6100147},
  groups        = {ieee, wiley},
  issn          = {1938-4300},
  journal       = {2011 26th IEEE/ACM International Conference on Automated Software Engineering, ASE 2011, Proceedings},
  keywords      = {software engineering;self-adaptive software systems;uncertainty management framework;self-adaption techniques;software engineering;Uncertainty;Software systems;Robots;Analytical models;Runtime;uncertainty;self-adaptation;software architecture},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84855426468&doi=10.1109%2fASE.2011.6100147&partnerID=40&md5=533885e28768537181405e23010b4a6c},
}

@InProceedings{Gioiosa2014,
  author        = {R. {Gioiosa} and G. {Kestor} and D. J. {Kerbyson} and A. {Hoisie}},
  title         = {Cross-Layer Self-Adaptive/Self-Aware System Software for Exascale Systems},
  booktitle     = {2014 IEEE 26th International Symposium on Computer Architecture and High Performance Computing},
  year          = {2014},
  pages         = {326-333},
  month         = {Oct},
  note          = {cited By 2},
  abstract      = {The extreme level of parallelism coupled with the limited available power budget expected in the exascale era brings unprecedented challenges that demand optimization of performance, power and resiliency in unison. Scalability on such systems is of paramount importance, while power and reliability issues may change the execution environment in which a parallel application runs. To solve these challenges exascale systems will require an introspective system software that combines system and application observations across all system stack layers with online feedback and adaptation mechanisms. In this paper we propose the design of a novel self-aware, selfadaptive system software in which a kernel-level Monitor, which continuously inspects the evolution of the target system through observation of Sensors, is combined with a user-level Controller, which reacts to changes in the execution environment, explores opportunities to increase performance, save power and adapts applications to new execution scenarios. We show that the monitoring system accurately monitors the evolution of parallel applications with a runtime overhead below 1-2%. As a test case, we design and implement a runtime system that aims at optimizing application's performance and system power consumption on complex hierarchical architectures. Our results show that our adaptive system reaches 98% of performance efficiency of manually-tuned applications.},
  art_number    = {6970681},
  document_type = {Conference Paper},
  doi           = {10.1109/SBAC-PAD.2014.29},
  groups        = {ieee, wiley},
  issn          = {1550-6533},
  journal       = {Proceedings - Symposium on Computer Architecture and High Performance Computing},
  keywords      = {parallel processing;power aware computing;self-adjusting systems;sensors;software fault tolerance;software performance evaluation;manually-tuned applications;complex hierarchical architectures;system power consumption;parallel applications;execution environment;user-level controller;sensors;kernel-level monitoring;adaptation mechanisms;online feedback;introspective system software;parallel application;reliability issues;performance demand optimization;exascale systems;cross-layer self-aware system software;cross-layer self-adaptive system software;Monitoring;Runtime;Temperature sensors;Power demand;Hardware;Temperature measurement},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919443750&doi=10.1109%2fSBAC-PAD.2014.29&partnerID=40&md5=b3479f655c7966fc2395e80873421448},
}

@InProceedings{Wang2010a,
  author        = {H. {Wang} and Z. {Zheng}},
  title         = {Self-adaptive Method Based on Software Architecture by Inspecting Uncertainty},
  booktitle     = {2010 International Conference on Artificial Intelligence and Computational Intelligence},
  year          = {2010},
  volume        = {3},
  pages         = {208-214},
  month         = {Oct},
  note          = {cited By 2},
  abstract      = {A recent common approach to monitor and adapt system behavior at runtime is to decouple one or more external modules and self-adaptive mechanisms from the target system. The non-invasive manners have the main advantage of realizing separation of concerns. However, some uncertainty aspects emerge while utilizing these separate control units. The unanticipated inherence and complexity of upcoming services and applications make proactive self-adaptation essential. In this work, the specification of software architecture is extended using CHAM (Chemical Abstract Machine) by inspecting uncertainty. Software architecture guides the topology of the constituent computational elements (such as components and connectors) of the system under consideration. The proposed self-adaptive model is novel as it leverages standard software architecture models, and quantifies behaviors of the system in terms of relevant architectural elements. Experiment results show the effectiveness of the proposed method.},
  art_number    = {5654770},
  document_type = {Conference Paper},
  doi           = {10.1109/AICI.2010.282},
  groups        = {ieee, wiley},
  journal       = {Proceedings - International Conference on Artificial Intelligence and Computational Intelligence, AICI 2010},
  keywords      = {program compilers;software architecture;software fault tolerance;uncertainty handling;self adaptive method;software architecture;uncertainty inspection;noninvasive manner;CHAM;chemical abstract machine;computational element;Software architecture;Uncertainty;Hidden Markov models;Software;Connectors;Adaptation model;Cost accounting;self-adaptive;software architecture;uncertainty;chemical abstract machine},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-78651451423&doi=10.1109%2fAICI.2010.282&partnerID=40&md5=c970baa860b76a473d5810f14ce77e76},
}

@InProceedings{Filieri2011a,
  author        = {A. {Filieri} and C. {Ghezzi} and A. {Leva} and M. {Maggio}},
  title         = {Self-adaptive software meets control theory: A preliminary approach supporting reliability requirements},
  booktitle     = {2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
  year          = {2011},
  pages         = {283-292},
  month         = {Nov},
  note          = {cited By 57},
  abstract      = {This paper investigates a novel approach to derive self-adaptive software by automatically modifying the model of the application using a control-theoretical approach. Self adaptation is achieved at the model level to assure that the model-which lives alongside the application at run-time- continues to satisfy its reliability requirements, despite changes in the environment that might lead to a violation. We assume that the model is given in terms of a Discrete Time Markov Chain (DTMC). DTMCs can express reliability concerns by modeling possible failures through transitions to failure states. Reliability requirements may be expressed as reachability properties that constrain the probability to reach certain states, denoted as failure states. We assume that DTMCs describe possible variant behaviors of the adaptive system through transitions exiting a given state that represent alternative choices, made according to certain probabilities. Viewed from a control-theory standpoint, these probabilities correspond to the input variables of a controlled system-i.e., in the control theory lexicon, "control variables". Adopting the same lexicon, such variables are continuously modified at run-time by a feedback controller so as to ensure continuous satisfaction of the requirements despite disturbances, i.e., changes in the environment. Changes at the model level may then be automatically transferred to changes in the running implementation. The approach is methodologically described by providing a translation scheme from DTMCs to discrete-time dynamic systems, the formalism in which the controllers are derived. An initial empirical assessment is described for a case study. Conjectures for extensions to other models and other requirements.},
  art_number    = {6100064},
  document_type = {Conference Paper},
  doi           = {10.1109/ASE.2011.6100064},
  groups        = {ieee, wiley},
  issn          = {1938-4300},
  journal       = {2011 26th IEEE/ACM International Conference on Automated Software Engineering, ASE 2011, Proceedings},
  keywords      = {discrete time systems;feedback;formal verification;Markov processes;probability;reachability analysis;self-adjusting systems;software reliability;self-adaptive software;reliability requirement;discrete time Markov chain;failure modeling;reachability properties;probability;DTMC;control theory lexicon;control variable;feedback controller;discrete time dynamic system;Software;Mathematical model;Control systems;Adaptation models;Software reliability;Equations;Adaptive software;control theory;dynamic systems;non-functional requirements;reliability;run-time verification},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84855465057&doi=10.1109%2fASE.2011.6100064&partnerID=40&md5=ce3262c1f3cfce6e1c55f8aafd8eb0b5},
}

@InProceedings{Han2014,
  author        = {D. {Han} and Q. {Yang} and J. {Xing}},
  title         = {Extending UML for the modeling of fuzzy self-adaptive software systems},
  booktitle     = {The 26th Chinese Control and Decision Conference (2014 CCDC)},
  year          = {2014},
  pages         = {2400-2406},
  month         = {May},
  note          = {cited By 3},
  abstract      = {Fuzzy self-adaptive software systems are a kind of fuzzy-control-based systems that are proposed to deal with the emerging uncertainty problem in the software self-adaptation process. The construction of such systems has shown to be significantly more challenging than traditional systems as a lack of appropriate modeling tools. To address this problem, we introduce a modeling approach, entitled Fuzzy self-Adaptation ModEling Profile (FAME Profile), which is based on the extension mechanisms of UML. FAME Profile consists of a set of new stereotypes that correspond to the key concepts within fuzzy self-adaptive software systems, and three kinds of diagrams that provide analysis view, structural view and behavioral view respectively. The FAME Profile can considerably ease the modeling of fuzzy self-adaptive software systems and can be easily incorporated into main stream UML development environments. We illustrate the complete modeling process through a fuzzy self-adaptive software system called FuzzyLon893OPCServer System.},
  art_number    = {6852575},
  document_type = {Conference Paper},
  doi           = {10.1109/CCDC.2014.6852575},
  groups        = {ieee, wiley},
  issn          = {1948-9447},
  journal       = {26th Chinese Control and Decision Conference, CCDC 2014},
  keywords      = {adaptive systems;fuzzy control;fuzzy logic;fuzzy systems;software engineering;Unified Modeling Language;UML extension mechanisms;fuzzy self-adaptive software system modeling;fuzzy-control-based systems;software self-adaptation process;fuzzy self-adaptation modeling profile;FAME Profile;UML development environments;FuzzyLon893OPCServer System;Unified modeling language;Object oriented modeling;Software systems;Uncertainty;Semantics;Monitoring;software engineering;UML Profile;fuzzy self-adaptive software;modeling;fuzzy logic},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905234236&doi=10.1109%2fCCDC.2014.6852575&partnerID=40&md5=2f0df6ae5382bcd887b9ca5521c07698},
}

@InProceedings{Bershadsky2019,
  author        = {A. {Bershadsky} and A. {Bozhday} and Y. {Evseeva} and A. {Gudkov}},
  title         = {Integrated Approach to the Self Adaptive Software Development Based on Reflection and Observation of the Information Environment},
  booktitle     = {2019 Actual Problems of Systems and Software Engineering (APSSE)},
  year          = {2019},
  pages         = {109-115},
  month         = {Nov},
  note          = {cited By 0},
  abstract      = {The approach proposed by the authors for building self-adaptive software systems is based on the joint use of two concepts: reflexive self-adaptation and observation of the information environment. The first concept involves the analysis of information circulating within the system and the identification of patterns in it. The restructuring of the program will be carried out in the process of implementation on the basis of the found patterns. The central idea of the second concept is the analysis of information entering the system from outside (for example, in the form of user reviews), and the subsequent restructuring of the system. The implementation of both concepts is based on the application of two technologies: technology of dynamic lines of software products used to build a universal behavioral structure of an adaptive software application, and data mining technology, which is used to implement the process of self-adaptation. The study was carried out with the financial support of the Russian Foundation for Basic Research in the framework of the research project No. 18-07-00408.},
  art_number    = {8943813},
  document_type = {Conference Paper},
  doi           = {10.1109/APSSE47353.2019.00021},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2019 Actual Problems of Systems and Software Engineering, APSSE 2019},
  keywords      = {data mining;software engineering;universal behavioral structure;Russian Foundation for Basic Research;dynamic lines;data mining technology;adaptive software application;software products;self-adaptive software systems;information environment;reflection;self adaptive software development;integrated approach;software self-adaptation, feature model, latent semantic analysis},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85078200742&doi=10.1109%2fAPSSE47353.2019.00021&partnerID=40&md5=079b49193c2345423c2f81c00a5e7a59},
}

@InProceedings{Incerto2017,
  author        = {E. {Incerto} and M. {Tribastone} and C. {Trubiani}},
  title         = {Software performance self-adaptation through efficient model predictive control},
  booktitle     = {2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  year          = {2017},
  pages         = {485-496},
  month         = {Oct},
  note          = {cited By 12},
  abstract      = {A key challenge in software systems that are exposed to runtime variabilities, such as workload fluctuations and service degradation, is to continuously meet performance requirements. In this paper we present an approach that allows performance self-adaptation using a system model based on queuing networks (QNs), a well-assessed formalism for software performance engineering. Software engineers can select the adaptation knobs of a QN (routing probabilities, service rates, and concurrency level) and we automatically derive a Model Predictive Control (MPC) formulation suitable to continuously configure the selected knobs and track the desired performance requirements. Previous MPC approaches have two main limitations: i) high computational cost of the optimization, due to nonlinearity of the models; ii) focus on long-run performance metrics only, due to the lack of tractable representations of the QN's time-course evolution. As a consequence, these limitations allow adaptations with coarse time granularities, neglecting the system's transient behavior. Our MPC adaptation strategy is efficient since it is based on mixed integer programming, which uses a compact representation of a QN with ordinary differential equations. An extensive evaluation on an implementation of a load balancer demonstrates the effectiveness of the adaptation and compares it with traditional methods based on probabilistic model checking.},
  art_number    = {8115660},
  document_type = {Conference Paper},
  doi           = {10.1109/ASE.2017.8115660},
  groups        = {ieee, wiley},
  journal       = {ASE 2017 - Proceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering},
  keywords      = {differential equations;integer programming;predictive control;probability;queueing theory;resource allocation;software performance evaluation;model predictive control;mixed integer programming;ordinary differential equations;probabilistic model checking;MPC adaptation strategy;concurrency level;service rates;routing probabilities;adaptation knobs;software performance engineering;queuing networks;system model;service degradation;workload fluctuations;runtime variabilities;software systems;software performance self-adaptation;Adaptation models;Optimization;Runtime;Quality of service;Concurrent computing;Computational modeling;Throughput;Adaptive software;Control-theory;Model predictive control;Performance requirements},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041436312&doi=10.1109%2fASE.2017.8115660&partnerID=40&md5=429cf6ce178f9b207136848fa3b61534},
}

@InProceedings{Luckey2013,
  author        = {M. {Luckey} and G. {Engels}},
  title         = {High-quality specification of self-adaptive software systems},
  booktitle     = {2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year          = {2013},
  pages         = {143-152},
  month         = {May},
  note          = {cited By 32},
  abstract      = {Today' software systems have to cope with changing environments while at the same time facing high non-functional requirements such as flexibility and dependability. Recently, these non-functional requirements are addressed using self-adaptivity features, that is, the system monitors its environment and adjusts its structure or behavior in reaction to changes. In classical model-driven software engineering approaches, self-adaptivity introduces additional complexity since self-adaptation features are distributed in a cross-cutting manner at various different locations in the models, resulting in a tightly interwoven model landscape that is hard to understand and maintain. A particular solution to cope with this problem is the separation of concerns (SoC) to focus on the specific concern of self-adaptivity and allow in-depth analyses. Applying SoC requires suitable development processes, languages, and techniques, e.g., for quality assurance, to be available. In this paper, we present a method for the specification of self-adaptive software systems using a UML based concern-specific modeling language called Adapt Case Modeling Language (ACML) that allows the separated and explicit specification of self-adaptivity concerns. Based on formal semantics we show how to apply quality assurance techniques to the modeled self-adaptive system, which enable the provisioning of hard guarantees concerning self-adaptivity characteristics such as adaptation rule set stability and deadlock freedom. Further, we show how the language and techniques integrate with existing software development processes.},
  art_number    = {6595501},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAMS.2013.6595501},
  groups        = {ieee, wiley},
  issn          = {2157-2321},
  journal       = {ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  keywords      = {formal specification;software quality;Unified Modeling Language;high-quality software specification;self-adaptive software system;software flexibility requirement;software dependability requirement;nonfunctional software requirement;model-driven software engineering;separation-of-concerns;UML based concern-specific modeling language;adapt case modeling language;Unified Modeling Language;formal semantics;quality assurance technique;software development process;Unified modeling language;Adaptation models;Servers;Monitoring;Semantics;Sensors;Business},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885008159&doi=10.1109%2fSEAMS.2013.6595501&partnerID=40&md5=e2d0b0680dab4b1e3fd265e5dddbaf35},
}

@Article{Demmel2005,
  author        = {J. {Demmel} and J. {Dongarra} and V. {Eijkhout} and E. {Fuentes} and A. {Petitet} and R. {Vuduc} and R. C. {Whaley} and K. {Yelick}},
  title         = {Self-Adapting Linear Algebra Algorithms and Software},
  journal       = {Proceedings of the IEEE},
  year          = {2005},
  volume        = {93},
  number        = {2},
  pages         = {293-312},
  month         = {Feb},
  issn          = {1558-2256},
  note          = {cited By 121},
  abstract      = {One of the main obstacles to the efficient solution of scientific problems is the problem of tuning software, both to the available architecture and to the user problem at hand. We describe approaches for obtaining tuned high-performance kernels and for automatically choosing suitable algorithms. Specifically, we describe the generation of dense and sparse Basic Linear Algebra Subprograms (BLAS) kernels, and the selection of linear solver algorithms. However, the ideas presented here extend beyond these areas, which can be considered proof of concept.},
  document_type = {Conference Paper},
  doi           = {10.1109/JPROC.2004.840848},
  groups        = {ieee, wiley},
  keywords      = {mathematics computing;linear algebra;operating system kernels;software packages;software libraries;self adapting linear algebra algorithms;self adapting linear algebra software;high performance kernels;BLAS;Basic Linear Algebra Subprograms;linear solver algorithms;software packages;software libraries;Linear algebra;Software algorithms;Kernel;Computer architecture;Hardware;Computer science;Software libraries;Laboratories;Iterative algorithms;Sparse matrices;Adaptive methods;Basic Linear Algebra Subprograms (BLAS);dense kernels;iterative methods;linear systems;matrix�Cmatrix product;matrix�Cvector product;performance optimization;preconditioners;sparse kernels},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-20744452904&doi=10.1109%2fJPROC.2004.840848&partnerID=40&md5=7527c3dc5b0b1472704f1d72083b1047},
}

@InProceedings{Wang2019,
  author        = {H. {Wang} and Y. {Ma} and X. {Zheng} and X. {Chen} and L. {Guo}},
  title         = {Self-Adaptive Resource Management Framework for Software Services in Cloud},
  booktitle     = {2019 IEEE Intl Conf on Parallel Distributed Processing with Applications, Big Data Cloud Computing, Sustainable Computing Communications, Social Computing Networking (ISPA/BDCloud/SocialCom/SustainCom)},
  year          = {2019},
  pages         = {1528-1529},
  month         = {Dec},
  note          = {cited By 0},
  abstract      = {The development of cloud computing makes it possible to dynamically adjust resources for software services on demand. However, different software services have different QoS requirements, and their external environment is changing all the time. Thus, self-adaptive ability is needed for software services because engineers manage is difficult in the cloud resources. This paper proposes a self-adaptive resource management framework for software services in Cloud. First, for a given software services, its iterative QoS model is trained on historical data, which is capable to predict a QoS value of one management operation by using the information on current running workload, allocated resources, real QoS value and an operation of resource allocation. Then, we employ PSO-based runtime decision algorithm together with the predicted QoS value to determine future resource allocation operations. Last, a feedback control loop is introduced to gradually allocate resource through feedback and iteration. The loops iterate until the PSO-based algorithm suggests no further improvement over the current resource allocation. Such self-adaptive management programs can adapt to the change in the outer environments and allocate cloud resource effectively.},
  art_number    = {9047458},
  document_type = {Conference Paper},
  doi           = {10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00223},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2019 IEEE Intl Conf on Parallel and Distributed Processing with Applications, Big Data and Cloud Computing, Sustainable Computing and Communications, Social Computing and Networking, ISPA/BDCloud/SustainCom/SocialCom 2019},
  keywords      = {cloud computing;feedback;particle swarm optimisation;quality of service;resource allocation;self-adaptive resource management framework;cloud computing;cloud resources;iterative QoS model;management operation;predicted QoS value;self-adaptive management programs;cloud resource allocation;software services;feedback control loop;PSO-based runtime decision algorithm;cloud computing;resource management;self adaptive},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085471892&doi=10.1109%2fISPA-BDCloud-SustainCom-SocialCom48970.2019.00223&partnerID=40&md5=d0674d21d67ee366709acd7c685d5a08},
}

@InProceedings{Chang2008,
  author        = {Z. {Chang} and X. {Mao} and Z. {Qi}},
  title         = {Formal Analysis of Architectural Policies of Self-Adaptive Software by Bigraph},
  booktitle     = {2008 The 9th International Conference for Young Computer Scientists},
  year          = {2008},
  pages         = {118-123},
  month         = {Nov},
  note          = {cited By 4},
  abstract      = {With the rapid spread of the Internet and user requirements for complex self-adaptive software systems, software often need be reconfigured based on pre-defined or online policies during runtime in open, dynamic environments in order to satisfy design objectives, which poses new problems such as, how to ensure the correction and consistency of the architectural policies? In this paper, we formalize reconfigurable architecture by bigraph, and build automata model for evolution of self-adaptive software architecture. Based on the automata model, we obtain an important theorem for extending the automata, and then present an algorithm which can check the correction and consistency of any self-adaptive software architectural policy.},
  art_number    = {4708959},
  document_type = {Conference Paper},
  doi           = {10.1109/ICYCS.2008.213},
  groups        = {ieee, wiley},
  journal       = {Proceedings of the 9th International Conference for Young Computer Scientists, ICYCS 2008},
  keywords      = {automata theory;formal verification;graph theory;software architecture;formal analysis;self-adaptive software architectural policy;bigraph;automata model;reconfigurable architecture;Bipartite graph;Automata;Software architecture;Computer architecture;Software systems;Reconfigurable architectures;Grid computing;Embedded software;Internet;Runtime;Self-adaptive software;architecture;bigraph},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-58349105589&doi=10.1109%2fICYCS.2008.213&partnerID=40&md5=1422b9a8e8725744cbaaacd24a8c58cb},
}

@InProceedings{Deniziak2020,
  author        = {S. {Deniziak} and L. {Ciopi��ski}},
  title         = {Synthesis of Self-Adaptable Software for Multicore Embedded Systems},
  booktitle     = {2020 23rd International Symposium on Design and Diagnostics of Electronic Circuits Systems (DDECS)},
  year          = {2020},
  pages         = {1-4},
  month         = {April},
  note          = {cited By 0},
  abstract      = {This paper presents a method of synthesis of realtime software for self-adaptive multicore systems. The method assumes that the system specification is given as a task graph. Then, tasks are scheduled on multicore architecture consisting of low-power and high-performance cores. We apply the developmental genetic programming to generate the self-adaptive scheduler and the initial schedule. The initial schedule is optimized taking into consideration the power consumption, the real-time constraints as well as the self-adaptivity. The scheduler modifies the schedule, during the system execution, whenever execution time of the recently finished task occurred other than assumed during initial scheduling. We propose two models of self-adaptivity: self-optimization of power consumption and self-adaptivity of real-time scheduling. We present some experimental results for standard benchmarks, showing the advantages of our method in comparison with the worst case design used in existing approaches.},
  art_number    = {9095745},
  document_type = {Conference Paper},
  doi           = {10.1109/DDECS50862.2020.9095745},
  groups        = {ieee, wiley},
  issn          = {2473-2117},
  journal       = {Proceedings - 2020 23rd International Symposium on Design and Diagnostics of Electronic Circuits and Systems, DDECS 2020},
  keywords      = {embedded systems;formal specification;genetic algorithms;multiprocessing systems;parallel processing;scheduling;real-time scheduling;self-adaptable software;realtime software;system specification;genetic programming;self-adaptive scheduler;self-adaptive multicore embedded systems;multicore architecture;distributed architecture;Manganese;self-adaptivity;embedded system;developmental genetic programing;multicore system},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085855869&doi=10.1109%2fDDECS50862.2020.9095745&partnerID=40&md5=f91b0d3e99a2404ec684ac5c69ca896a},
}

@InProceedings{Torres2017,
  author        = {R. {Torres} and M. {Aros} and J. F. {Calder��n}},
  title         = {Towards self-adaptation for cyber-physical systems using a distributed MAPE-K schema over XMPP},
  booktitle     = {2017 CHILEAN Conference on Electrical, Electronics Engineering, Information and Communication Technologies (CHILECON)},
  year          = {2017},
  volume        = {2017-January},
  pages         = {1-5},
  month         = {Oct},
  note          = {cited By 0},
  abstract      = {Cyber-Physical Systems (CPSs) may fail during runtime on supporting decision making if they are not capable of detecting and correcting their own failures. Thus, it has been proposed that CPSs should be self-aware, context-aware and goal-aware. In this paper we present preliminary results about how an architecture built over the Extensible Messaging and Presence Protocol (XMPP) may implement a distributed MAPE-K schema in order to support the implementation of the self-adaptation capability in CPSs. We present a basic example where failures on Things are simulated in order to test the self-adaptation capability.},
  document_type = {Conference Paper},
  doi           = {10.1109/CHILECON.2017.8229533},
  groups        = {ieee, wiley},
  journal       = {2017 CHILEAN Conference on Electrical, Electronics Engineering, Information and Communication Technologies, CHILECON 2017 - Proceedings},
  keywords      = {cyber-physical systems;decision making;Internet of Things;protocols;cyber-physical systems;distributed MAPE-K schema;XMPP;CPSs;decision making;self-adaptation capability;extensible messaging and presence protocol;Computer architecture;Servers;Runtime;Protocols;Adaptation models;Standards;Internet of Things;Internet of Things;self-adaptation;cyber-physical system},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85043266216&doi=10.1109%2fCHILECON.2017.8229533&partnerID=40&md5=6c03fe10883fbcfd06c450255d1895ba},
}

@InProceedings{Shen2012,
  author        = {L. {Shen} and X. {Peng} and W. {Zhao}},
  title         = {Software Product Line Engineering for Developing Self-Adaptive Systems: Towards the Domain Requirements},
  booktitle     = {2012 IEEE 36th Annual Computer Software and Applications Conference},
  year          = {2012},
  pages         = {289-296},
  month         = {July},
  note          = {cited By 4},
  abstract      = {Self-adaptive systems are now facing the anticipation of mass customization. Therefore, the Software Product Line (SPL) engineering for developing Self-Adaptive systems (SPL4SA) can be an effective way. At the first sight, SPL4SA is the straightforward combination of the two methodologies of SPL engineering and self-adaptive systems. However, the direct and unsystematic combination will bring difficulty in the domain requirements analysis and in the customization process. In this paper, in order to give a solution to the practical problems, we propose a domain requirements meta-model in SPL4SA. It is described with different point of views and the variability binding constraints inside are emphasized. Based on it, a guidance is concluded to support the consistent customization towards the domain model. In addition, an experimental study about a web-based business product line involving self-adaptation capability is conducted to evaluate the model.},
  art_number    = {6340158},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSAC.2012.40},
  groups        = {ieee, wiley},
  issn          = {0730-3157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {formal specification;product development;self-adjusting systems;software reusability;software product line engineering;self-adaptive system;SPL engineering;SPL4SA;domain requirements analysis;customization process;domain requirements meta-model;variability binding constraint;Web-based business product line;self-adaptation capability;Business;Adaptation models;Context;Runtime;Monitoring;Software;Context modeling;self-adaptative system;software product line;domain requirements},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870840595&doi=10.1109%2fCOMPSAC.2012.40&partnerID=40&md5=74c6785e7200a9a45e6ca44eb5b1cbde},
}

@InProceedings{Kashi2016a,
  author        = {R. N. {Kashi} and M. {D'Souza} and S. K. {Baghel} and N. {Kulkarni}},
  title         = {Incorporating adaptivity using learning in avionics self adaptive software: A case study},
  booktitle     = {2016 International Conference on Advances in Computing, Communications and Informatics (ICACCI)},
  year          = {2016},
  pages         = {220-229},
  month         = {Sep.},
  note          = {cited By 2},
  abstract      = {Self Adaptive software is forging its way into avionics. Such software, while being adaptive, needs to meet safety, determinism, and real time responsiveness, like all avionics systems. We model avionics self adaptive software as a multiagent system. Each agent uses a BDI (Belief Desire Intention) model for adaptiveness and also incorporates learning to address several constraints. We illustrate our approach using a case study of adaptive Flight Management System (FMS). Our BDI model of adaptive FMS in Netlogo is a model that is adaptive while being deterministic and also responds in real-time. We propose a learning algorithm that agents use to adapt themselves better and also a way of measuring their adaptivity that provides quantitative gains illustrating the system's adaptability.},
  art_number    = {7732051},
  document_type = {Conference Paper},
  doi           = {10.1109/ICACCI.2016.7732051},
  groups        = {ieee, wiley},
  journal       = {2016 International Conference on Advances in Computing, Communications and Informatics, ICACCI 2016},
  keywords      = {air safety;avionics;learning (artificial intelligence);multi-agent systems;avionics self adaptive software;air safety;software determinism;real time responsiveness;multiagent system;BDI model;belief desire intention model;flight management system;FMS;Netlogo;learning algorithm;quantitative gains;Adaptive systems;Aerospace electronics;Software;Adaptation models;Context;Aircraft;Safety;Avionics;Self Adaptive Software;Multiagent Systems;BDI Model;Reinforcement Learning;TD Learning;Measures for adaptibility},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007320003&doi=10.1109%2fICACCI.2016.7732051&partnerID=40&md5=990caf73277027848914ca6587e14669},
}

@InProceedings{Zhao2015,
  author        = {Z. {Zhao} and A. {Taal} and A. {Jones} and I. {Taylor} and V. {Stankovski} and I. G. {Vega} and F. J. {Hidalgo} and G. {Suciu} and A. {Ulisses} and P. {Ferreira} and C. d. {Laat}},
  title         = {A Software Workbench for Interactive, Time Critical and Highly Self-Adaptive Cloud Applications (SWITCH)},
  booktitle     = {2015 15th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing},
  year          = {2015},
  pages         = {1181-1184},
  month         = {May},
  note          = {cited By 23},
  abstract      = {Time critical applications have very high requirements on network and computing services, in particular on well-tuned software architecture with sophisticated optimisation on data communication. Their development is often customised to dedicated infrastructure, and system performance is difficult to maintain when infrastructure changes. This fatal weakness in existing architecture and software tools causes very high development costs, and makes it difficult to fully utilise the virtualised, programmable and quality-on-demand services provided by networked Clouds to improve the system productivity. The Software Workbench for Interactive, Time Critical and Highly self-adaptive Cloud applications (SWITCH) is a newly funded project by EU H2020 to address this urgent industrial need, it aims at improving the existing development and execution model of time critical applications by introducing a novel conceptual model called application-infrastructure co-programming and control model, in which application QoS/QoE together with the programmability and controllability of Cloud environments can be all included in the complete lifecycle of applications.},
  art_number    = {7152616},
  document_type = {Conference Paper},
  doi           = {10.1109/CCGrid.2015.73},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2015 IEEE/ACM 15th International Symposium on Cluster, Cloud, and Grid Computing, CCGrid 2015},
  keywords      = {cloud computing;quality of experience;quality of service;software architecture;software tools;software workbench for interactive-time critical and highly self-adaptive cloud applications;SWITCH;software architecture;data communication;system performance;software tools;quality-on-demand services;networked clouds;system productivity;application-infrastructure co-programming;control model;QoS-QoE;cloud environments;Switches;Runtime environment;Quality of service;Software;Time factors;Programming;Time critical applications;Cloud;self adaptability},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941198460&doi=10.1109%2fCCGrid.2015.73&partnerID=40&md5=390b5daf5ef7ffd6c26661ad6fe90723},
}

@InProceedings{Magableh2011,
  author        = {B. {Magableh} and S. {Barrett}},
  title         = {Model-Driven Productivity Evaluation for Self-Adaptive Context-Oriented Software Development},
  booktitle     = {2011 Fifth International Conference on Next Generation Mobile Applications, Services and Technologies},
  year          = {2011},
  pages         = {87-93},
  month         = {Sep.},
  note          = {cited By 4},
  abstract      = {Anticipating context changes using a model-based approach requires a formal procedure for analysing and modelling their context-dependent functionality, and a stable description of the architecture which supports dynamic decision-making and architecture evolution. This article demonstrates the capabilities of the context-oriented component-based application-model-driven architecture (COCA-MDA) to support the development of self-adaptive applications, we describe a state-of-the-art case study and evaluate the development effort involved in adopting the COCA-MDA in constructing the application. An intensive analysis of the application requirements simplified the process of modelling the application's behavioural model, therefore, instead of modelling several variation models, the developers modelled an extra-functionality model. COCA-MDA reduces the development effort because it maintains a clear separation of concerns and employs a decomposition mechanism to produce a context-oriented component model which decouples the applications' core functionality from the context-dependent functionality. Estimating the MDA approach's productivity can help the software developers to select the best MDA-based methodology from the available solutions proposed in the literature. Thus, counting the source line of code is not adequate for evaluating the development effort of the MDA-based methodology. Quantifying the maintenance adjustment factor of the new, adapted, and reused code is a better estimate of the development effort of the MDA approaches.},
  art_number    = {6082000},
  document_type = {Conference Paper},
  doi           = {10.1109/NGMAST.2011.25},
  groups        = {ieee, wiley},
  issn          = {2161-2897},
  journal       = {International Conference on Next Generation Mobile Applications, Services, and Technologies},
  keywords      = {formal specification;formal verification;object-oriented programming;software architecture;software maintenance;software reusability;ubiquitous computing;model-driven productivity evaluation;self-adaptive context-oriented software development;context change;model-based approach;context-dependent functionality;software architecture;dynamic decision making;architecture evolution;context-oriented component-based application-model-driven architecture;self-adaptive application;application requirements analysis;application behavioural model;decomposition mechanism;application core functionality;maintenance adjustment factor;code reuse;Context;Unified modeling language;Adaptation models;Computer architecture;Software;Context modeling;Analytical models;model-driven architecture;MDA productivity;COCOMO ii;self-adaptive application},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84255196253&doi=10.1109%2fNGMAST.2011.25&partnerID=40&md5=e116ca1489aaf482c5e316face7a9a95},
}

@Article{Ding2018,
  author        = {Z. {Ding} and Y. {Zhou} and M. {Zhou}},
  title         = {Modeling Self-Adaptive Software Systems by Fuzzy Rules and Petri Nets},
  journal       = {IEEE Transactions on Fuzzy Systems},
  year          = {2018},
  volume        = {26},
  number        = {2},
  pages         = {967-984},
  month         = {April},
  issn          = {1941-0034},
  note          = {cited By 14},
  abstract      = {A self-adaptive software system is one that can autonomously modify its behavior at runtime in response to changes in the system and its environment. It is a challenge to model such a kind of systems since it is hard to predict runtime environmental changes at the design phase. In this paper, a formal model called intelligent Petri net (I-PN) is proposed to model a self-adaptive software system. I-PN is formed by incorporating fuzzy rules to a regular Petri net. The proposed net has the following advantages. 1) Since fuzzy rules can express the behavior of a system in an interpretable way and their variables can be reconfigured by the runtime data, the proposed model can model runtime environment and system behavior. 2) Since a fuzzy inference system with well-defined semantics can be used in a complementary way with other model languages for the analysis, thus the proposed model can be analyzed, even though it is described in two different languages: component behaviors in Petri nets while logic control in fuzzy rules. 3) The proposed model has self-adaption ability and can make adaptive decisions at runtime with the help of fuzzy inference reasoning. We adopt a manufacturing system to show the feasibility of the proposed model.},
  document_type = {Article},
  doi           = {10.1109/TFUZZ.2017.2700286},
  groups        = {ieee, wiley},
  keywords      = {fuzzy reasoning;Petri nets;self-adjusting systems;software engineering;fuzzy rules;formal model;intelligent Petri net;regular Petri net;fuzzy inference system;component behaviors;fuzzy inference reasoning;manufacturing system;self-adaptive software systems;logic control;Adaptation models;Petri nets;Production facilities;Data models;Computational modeling;Raw materials;Software systems;Adaptive software system;fuzzy rule;Petri net (PN);requirement modeling},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85044996980&doi=10.1109%2fTFUZZ.2017.2700286&partnerID=40&md5=951f9762969dae9ece4b463c84d93c2b},
}

@InProceedings{Abbas2016,
  author        = {N. {Abbas} and J. {Andersson} and M. U. {Iftikhar} and D. {Weyns}},
  title         = {Rigorous Architectural Reasoning for Self-Adaptive Software Systems},
  booktitle     = {2016 Qualitative Reasoning about Software Architectures (QRASA)},
  year          = {2016},
  pages         = {11-18},
  month         = {April},
  note          = {cited By 3},
  abstract      = {Designing a software architecture requires architectural reasoning, i.e., activities that translate requirements to an architecture solution. Architectural reasoning is particularly challenging in the design of product-lines of self-adaptive systems, which involve variability both at development time and runtime. In previous work we developed an extended Architectural Reasoning Framework (eARF) to address this challenge. However, evaluation of the eARF showed that the framework lacked support for rigorous reasoning, ensuring that the design complies to the requirements. In this paper, we introduce an analytical framework that enhances eARF with such support. The framework defines a set of artifacts and a series of activities. Artifacts include templates to specify domain quality attribute scenarios, concrete models, and properties. The activities support architects with transforming requirement scenarios to architecture models that comply to required properties. Our focus in this paper is on architectural reasoning support for a single product instance. We illustrate the benefits of the approach by applying it to an example client-server system, and outline challenges for future work.},
  art_number    = {7484101},
  document_type = {Conference Paper},
  doi           = {10.1109/QRASA.2016.9},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 1st Workshop on Qualitative Reasoning about Software Architectures, QRASA 2016},
  keywords      = {reasoning about programs;software architecture;rigorous architectural reasoning;self-adaptive software systems;software architecture design;product-lines;self-adaptive systems;extended architectural reasoning framework;rigorous reasoning;domain quality attribute scenarios;client-server system;Cognition;Servers;Computer architecture;Analytical models;Time factors;Automata;Multimedia communication;architectural reasoning;self-adaptive software systems;formal methods},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978284867&doi=10.1109%2fQRASA.2016.9&partnerID=40&md5=467e03f6e9add142f38f69be4243e529},
}

@InProceedings{Dobson2014,
  author        = {C. {Dobson} and K. {Rooks} and P. {Athanas}},
  title         = {A power-efficient FPGA-based self-adaptive software defined radio},
  booktitle     = {2014 24th International Workshop on Power and Timing Modeling, Optimization and Simulation (PATMOS)},
  year          = {2014},
  pages         = {1-8},
  month         = {Sep.},
  note          = {cited By 3},
  abstract      = {The rapid rise in computational performance offered by computer systems has greatly increased the number of practical software defined radio applications. The addition of FPGAs to these flexible systems has resulted in platforms that can address a multitude of applications with performance levels that were once only known to ASICs. This work presents an embedded heterogeneous scalable cluster platform with software defined radio applications. The Xilinx Zynq chip provides a hybrid platform consisting of an efficient embedded ARM general-purpose processing core and a low-power FPGA. The ARM core provides all of the benefits and ease of use common to modern high-level software languages while the FPGA segment offers high performance for computationally intensive components of the application. Four of these chips were combined in a scalable cluster and a task mapper was written to automatically partition data flows across the FPGAs and ARM cores. The rapid reconfiguration software tFlow was used to dynamically build arbitrary FPGA images out of a library of pre-built modules.},
  art_number    = {6951901},
  document_type = {Conference Paper},
  doi           = {10.1109/PATMOS.2014.6951901},
  groups        = {ieee, wiley},
  journal       = {2014 24th International Workshop on Power and Timing Modeling, Optimization and Simulation, PATMOS 2014},
  keywords      = {application specific integrated circuits;field programmable gate arrays;high level languages;software radio;self-adaptive software defined radio;power-efficient FPGA;ASIC;embedded heterogeneous scalable cluster platform;Xilinx Zynq chip;hybrid platform;embedded ARM general-purpose processing core;low-power FPGA;modern high-level software languages;task mapper;data flows;rapid reconfiguration software tFlow;Field programmable gate arrays;Software;Software radio;Hardware;Engines;XML;Libraries},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84916898838&doi=10.1109%2fPATMOS.2014.6951901&partnerID=40&md5=b534b927d2b80370295cb1e92797fde9},
}

@Article{Oreizy1999,
  author        = {P. {Oreizy} and M. M. {Gorlick} and R. N. {Taylor} and D. {Heimhigner} and G. {Johnson} and N. {Medvidovic} and A. {Quilici} and D. S. {Rosenblum} and A. L. {Wolf}},
  title         = {An architecture-based approach to self-adaptive software},
  journal       = {IEEE Intelligent Systems and their Applications},
  year          = {1999},
  volume        = {14},
  number        = {3},
  pages         = {54-62},
  month         = {May},
  issn          = {2374-9423},
  note          = {cited By 628},
  abstract      = {Self-adaptive software requires high dependability robustness, adaptability, and availability. The article describes an infrastructure supporting two simultaneous processes in self-adaptive software: system evolution, the consistent application of change over time, and system adaptation, the cycle of detecting changing circumstances and planning and deploying responsive modifications.},
  document_type = {Article},
  doi           = {10.1109/5254.769885},
  groups        = {ieee, wiley},
  keywords      = {software fault tolerance;adaptive systems;management of change;software architecture;architecture based approach;self-adaptive software;dependability robustness;adaptability;availability;simultaneous processes;system evolution;system adaptation;changing circumstances;responsive modifications;change management;Application software;Monitoring;Costs;Unmanned aerial vehicles;Sensor systems;Software systems;Runtime;Traffic control;Disaster management;Environmental management},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0032665183&doi=10.1109%2f5254.769885&partnerID=40&md5=1bcfd2cbd5c86bb5c12a2078a32194c1},
}

@InProceedings{Mann2018b,
  author        = {Z. ��. {Mann} and A. {Metzger}},
  title         = {Auto-Adjusting Self-Adaptive Software Systems},
  booktitle     = {2018 IEEE International Conference on Autonomic Computing (ICAC)},
  year          = {2018},
  pages         = {181-186},
  month         = {Sep.},
  note          = {cited By 3},
  abstract      = {Self-adaptive systems can cope with changes in their operating environment by modifying their structure and behavior at run time. Different kinds of changes pose different requirements on how the software should adapt: some changes may require an immediate adaptation, whereas others do not, leaving more time to find the most suitable action. To address different kinds of changes, we introduce auto-adjustment, which works by quickly assessing changes in terms of the resulting requirements on the adaptation logic (e.g., their criticality or urgency), and adjusting the adaptation logic accordingly. Thereby, auto-adjustment allows dynamically considering the trade-off between adaptation speed and adaptation quality. Experiments with an autonomic cloud resource allocation system show that auto-adjustment leads to an improved trade-off between conflicting system goals: by allowing 0.3% higher energy consumption, the number of server overloads can be reduced by 68%.},
  art_number    = {8498141},
  document_type = {Conference Paper},
  doi           = {10.1109/ICAC.2018.00030},
  groups        = {ieee, wiley},
  issn          = {2474-0756},
  journal       = {Proceedings - 15th IEEE International Conference on Autonomic Computing, ICAC 2018},
  keywords      = {adaptive systems;cloud computing;resource allocation;self-adjusting systems;software fault tolerance;auto-adjusting self-adaptive software systems;operating environment;adaptation logic;adaptation quality;autonomic cloud resource allocation system;adaptation speed;Servers;Monitoring;Software;Switches;Cloud computing;Optimization;Data centers;self-adaptive systems, on line reconfiguration of the adaptation logic, cloud resource management},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061305591&doi=10.1109%2fICAC.2018.00030&partnerID=40&md5=4a94a1d5567c58f7c06337c272862fbe},
}

@InProceedings{Beckmann2009,
  author        = {B. E. {Beckmann} and L. M. {Grabowski} and P. K. {McKinley} and C. {Ofria}},
  title         = {Applying digital evolution to the design of self-adaptive software},
  booktitle     = {2009 IEEE Symposium on Artificial Life},
  year          = {2009},
  pages         = {100-107},
  month         = {March},
  note          = {cited By 2},
  abstract      = {As software developers, we strive to create computational systems that are as robust and versatile as biological organisms have evolved to be in nature. We propose a software development methodology capable of producing self-adaptive software, using digital evolution to discover behaviors and optimize solutions. Employing this methodology we present an example behavioral concept from inception to fruition on physical hardware, as a proof of concept of the approach. We evolve environmentally-aware motility behaviors through digital evolution, automatically translate the evolved programs into C code, and compile and load the programs onto mobile robots.},
  art_number    = {4937700},
  document_type = {Conference Paper},
  doi           = {10.1109/ALIFE.2009.4937700},
  groups        = {ieee, wiley},
  issn          = {2160-6382},
  journal       = {2009 IEEE Symposium on Artificial Life, ALIFE 2009 - Proceedings},
  keywords      = {mobile robots;robot programming;software engineering;self-adaptive software design;software development methodology;biological organisms;digital evolution;environmentally-aware motility behaviors;C code;mobile robots;Software design;Evolution (biology);Organisms;Programming;Optimization methods;Mobile robots;Biology computing;Robustness;Evolutionary computation;Computer science;digital evolution;evolutionary computation;autonomic computing;software development;self-*;cooperation;microrobot.},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-67650522874&doi=10.1109%2fALIFE.2009.4937700&partnerID=40&md5=1bbef827c284ec2070b108ca92bfbe0b},
}

@InProceedings{Zhang2016,
  author        = {X. {Zhang} and Q. {Yang} and J. {Xing} and D. {Han}},
  title         = {Recognizing Voice-Based Requirements to Drive Self-Adaptive Software Systems},
  booktitle     = {2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC)},
  year          = {2016},
  volume        = {2},
  pages         = {534-539},
  month         = {June},
  note          = {cited By 2},
  abstract      = {Traditional self-adaptive systems controlled by text-command and manual operations are slow and inefficient. However, with the rapid advances in the field of Voice Recognition, systems are easy to capture command and react to users requirements. Voice-facilities are expected to enhance the ability and performance of systems. In this paper, we argue how to incorporate voice-based requirements into self-adaptive systems, and to propose the framework of voice-based software fuzzy self-adaptation (V-SFSA) with fuzzy control-based method, attempting to handling ambiguity and implicitness in requirements underneath self-adaptive systems. Besides, we present a general implementation process to realize V-SFSA. Based on the platform of Turtlebot2, we construct the VoiceGuider system to validate our framework and approach, and the experiment results confirmed that V-SFSA can effectively recognize and handle voice-based fuzzy requirements (i.e. ambiguous and implicit requirements) within self-adaptive systems.},
  art_number    = {7552268},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSAC.2016.176},
  groups        = {ieee, wiley},
  issn          = {0730-3157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {fuzzy control;speech recognition;self-adaptive software systems;voice recognition;voice-based software fuzzy self-adaptation;V-SFSA;fuzzy control-based method;Turtlebot2 platform;VoiceGuider system;ambiguous requirement;implicit requirement;Synthetic aperture sonar;Speech recognition;Robot sensing systems;Software systems;Actuators;Fuzzy requirement;self-adaptive software;voice recognition},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988000587&doi=10.1109%2fCOMPSAC.2016.176&partnerID=40&md5=48d2966d78809472d0cd4daf7aa718ec},
}

@InProceedings{daSilva2009a,
  author        = {C. E. {da Silva} and R. {de Lemos}},
  title         = {Using dynamic workflows for coordinating self-adaptation of software systems},
  booktitle     = {2009 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year          = {2009},
  pages         = {86-95},
  month         = {May},
  note          = {cited By 7},
  abstract      = {The self-adaptation of a software system is a complex process that depends on the system requirements, its operational state and environment, which may change during the system operational lifetime. Hence, the process for coordinating the self-adaptation should also be adaptable to changes that may occur during run-time. As a means for coordinating the self-adaptation process of software systems, the proposed approach employs workflows that are dynamically generated for dealing with the variability associated with the self-adaptation process. In this context, our aim is to define and develop techniques for automatically generate workflows for coordinating the self-adaptation of software systems. For demonstrating the feasibility of the proposed approach, architectural reconfiguration of software systems is used as an example, whereby the reconfiguration is managed by workflows that are dynamically generated depending on the availability of resources.},
  art_number    = {5069077},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAMS.2009.5069077},
  groups        = {ieee, wiley},
  issn          = {2157-2321},
  journal       = {Proceedings of the 2009 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2009},
  keywords      = {data flow analysis;formal specification;programming environments;software architecture;dynamic workflows;self-adaptive software system;system requirement;system operational state;system environment;system operational lifetime;architectural reconfiguration;Software systems;Control systems;Technology management;Resource management;Availability;Runtime environment;Scholarships;Informatics;Environmental management;Feedback control},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-70349908101&doi=10.1109%2fSEAMS.2009.5069077&partnerID=40&md5=71c010cccbb2484a12436e9cc34140b1},
}

@InProceedings{Roopa2017,
  author        = {Y. M. {Roopa} and M. R. {Babu}},
  title         = {Self-test framework for self-adaptive software architecture},
  booktitle     = {2017 International conference of Electronics, Communication and Aerospace Technology (ICECA)},
  year          = {2017},
  volume        = {2},
  pages         = {669-674},
  month         = {April},
  note          = {cited By 1},
  abstract      = {As researchers and contributors of the IT enterprise move in the direction of a vision of computing structures that manage themselves, it's far imperative to research methods to dynamically validate these systems to keep away from the high cost of system failures. Although research continues to advance in lots of areas of self adaptive systems, there's a loss of development within the area of testing components of systems at runtime. Self-adaptive features in systems dynamically invoke changes to the structure and behavior of components which could already be operating in an unpredictable surroundings; similarly emphasizing the need for runtime testing. In this paper we propose a framework that dynamically validates modifications in self-adaptive systems. Our body-work extends the present day shape of self-adaptive systems to consist of self-testing as an implicit characteristic. We validate our framework by way of creating a prototype of an autonomic container that incorporates the capability to self-test.},
  document_type = {Conference Paper},
  doi           = {10.1109/ICECA.2017.8212749},
  groups        = {ieee, wiley},
  journal       = {Proceedings of the International Conference on Electronics, Communication and Aerospace Technology, ICECA 2017},
  keywords      = {program diagnostics;program testing;program verification;software architecture;self-adaptive software architecture;self adaptive systems;testing components;self-adaptive features;runtime testing;self-adaptive systems;self-test framework;Adaptive systems;Built-in self-test;Adaptation models;Software;Runtime;Aerospace electronics;self adaptive systems;component testing;Validation;safe adaptation},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85047149417&doi=10.1109%2fICECA.2017.8212749&partnerID=40&md5=f4acc9ae3cadf103bc653d864c90a13a},
}

@InProceedings{Patikirikorala2012,
  author        = {T. {Patikirikorala} and A. {Colman} and J. {Han} and L. {Wang}},
  title         = {A systematic survey on the design of self-adaptive software systems using control engineering approaches},
  booktitle     = {2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
  year          = {2012},
  pages         = {33-42},
  month         = {June},
  note          = {cited By 84},
  abstract      = {Control engineering approaches have been identified as a promising tool to integrate self-adaptive capabilities into software systems. Introduction of the feedback loop and controller into the management system potentially enables the software systems to achieve the runtime performance objectives and maintain the integrity of the system when they are operating in unpredictable and dynamic environments. There is a large body of literature that has proposed control engineering solutions for different application domains, handling different performance variables and control objectives. However, the relevant literature is scattered over different conference proceedings, journals and research communities. Consequently, conducting a survey to analyze and classify the existing literature is a useful, yet a challenging task. This paper presents the results of a systematic survey that includes classification and analysis of 161 papers in the existing literature. In order to capture the characteristics of the control solutions proposed in these papers we introduce a taxonomy as a basis for classification of all articles. Finally, survey results are presented, including quantitative, cross and trend analysis.},
  art_number    = {6224389},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAMS.2012.6224389},
  groups        = {ieee, wiley},
  issn          = {2157-2321},
  journal       = {ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  keywords      = {control engineering;fault tolerant computing;software engineering;self-adaptive software systems;control engineering approaches;self-adaptive capabilities;feedback loop;runtime performance objectives;taxonomy;Software systems;Taxonomy;Control engineering;Data mining;Systematics;Adaptation models},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865129982&doi=10.1109%2fSEAMS.2012.6224389&partnerID=40&md5=cb02c9da3217f8ce68c8394f21a00cb0},
}

@InProceedings{Andersson2009,
  author        = {J. {Andersson} and R. {de Lemos} and S. {Malek} and D. {Weyns}},
  title         = {Reflecting on self-adaptive software systems},
  booktitle     = {2009 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  year          = {2009},
  pages         = {38-47},
  month         = {May},
  note          = {cited By 41},
  abstract      = {Self-adaptability has been proposed as an effective approach to automate the complexity associated with the management of modern-day software systems. While over the past decade we have witnessed significant progress in the manner in which such systems are designed, constructed, and deployed, there is still a lack of consensus among the engineers on some of the fundamental underlying concepts. In this paper, we attempt to alleviate this issue by exploring the crucial role of computational reflection in the context of self-adaptive software systems. We show that computational reflection forms the foundation of a self-adaptive system, and an understanding of its properties is a prerequisite to intelligent and predictable construction of such systems. Examining several systems in light of computational reflection has helped us to identify a number of key challenges, which we report on and propose as avenues of future research.},
  art_number    = {5069072},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAMS.2009.5069072},
  groups        = {ieee, wiley},
  issn          = {2157-2321},
  journal       = {Proceedings of the 2009 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2009},
  keywords      = {software engineering;self-adaptive software systems;computational reflection;intelligent system construction;Software systems;Optical reflection;Computer science;Computational intelligence;Guidelines;Informatics;Design engineering;Adaptive systems;Logic programming;Computer languages},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-70349916403&doi=10.1109%2fSEAMS.2009.5069072&partnerID=40&md5=9150f3b4dd88220678fd7eb8be41d770},
}

@InProceedings{Wei?bach2017,
  author        = {M. {Wei?bach} and P. {Chrszon} and T. {Springer} and A. {Schill}},
  title         = {Decentrally Coordinated Execution of Adaptations in Distributed Self-Adaptive Software Systems},
  booktitle     = {2017 IEEE 11th International Conference on Self-Adaptive and Self-Organizing Systems (SASO)},
  year          = {2017},
  pages         = {111-120},
  month         = {Sep.},
  note          = {cited By 5},
  abstract      = {Software systems in domains like Smart Cities, the Internet of Things or autonomous cars are coined by a high degree of distribution across several independent computing devices and the requirement to be able to adjust themselves to varying situations in their operational environment. Self-adaptive software systems are a natural choice to implement such context-dependent software systems. A multitude of approaches already implement self-adaptive systems and some consider even distribution aspects.Yet, none of the existing solutions supports the coordination of adaptation operations spanning multiple independent nodes, which is necessary to ensure a consistent adaptation even in presence of network errors or node failures. In this paper, we tackle this challenge to execute adaptations in distributed self-adaptive software systems in a coordinated manner. We present a protocol that enables the self-adaptive software system to execute correlated adaptations on multiple nodes in a transactional manner ensuring an atomic and consistent transition of the distributed system from its source to the desired target configuration. The protocol is validated to be free of deadlocks for any given adaptation at any point in time using a model-checking approach. The performance of our approach is investigated in experiments that emulate the protocol's execution on real devices for different sizes of distributed applications and adaptation scenarios.},
  art_number    = {8064035},
  document_type = {Conference Paper},
  doi           = {10.1109/SASO.2017.20},
  groups        = {ieee, wiley},
  issn          = {1949-3681},
  journal       = {Proceedings - 11th IEEE International Conference on Self-Adaptive and Self-Organizing Systems, SASO 2017},
  keywords      = {adaptive systems;Internet of Things;self-adjusting systems;smart cities;distributed self-adaptive software systems;context-dependent software systems;decentrally coordinated execution;smart cities;Internet of Things;Software systems;Protocols;Adaptation models;Context modeling;Middleware;Concrete;Smart cities},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85035341625&doi=10.1109%2fSASO.2017.20&partnerID=40&md5=6c37546e4b842dc217aebbe73ffca1fc},
}

@Article{Dongarra2006,
  author        = {J. {Dongarra} and G. {Bosilca} and Z. {Chen} and V. {Eijkhout} and G. E. {Fagg} and E. {Fuentes} and J. {Langou} and P. {Luszczek} and J. {Pjesivac-Grbovic} and K. {Seymour} and H. {You} and S. S. {Vadhiyar}},
  title         = {Self-adapting numerical software (SANS) effort},
  journal       = {IBM Journal of Research and Development},
  year          = {2006},
  volume        = {50},
  number        = {2.3},
  pages         = {223-238},
  month         = {March},
  issn          = {0018-8646},
  note          = {cited By 25},
  abstract      = {The challenge for the development of next-generation software is the successful management of the complex computational environment while delivering to the scientist the full power of flexible compositions of the available algorithmic alternatives. Self-adapting numerical software (SANS) systems are intended to meet this significant challenge. The process of arriving at an efficient numerical solution of problems in computational science involves numerous decisions by a numerical expert. Attempts to automate such decisions distinguish three levels: algorithmic decision, management of the parallel environment, and processor-specific tuning of kernels. Additionally, at any of these levels we can decide to rearrange the user's data. In this paper we look at a number of efforts at the University of Tennessee to investigate these areas.},
  document_type = {Article},
  doi           = {10.1147/rd.502.0223},
  groups        = {ieee, wiley},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-33646078910&partnerID=40&md5=e0944e6f406b26da5d2d5b32bce827ff},
}

@InProceedings{Gu2018,
  author        = {T. {Gu} and M. {Lu} and L. {Li}},
  title         = {Runtime Models for Analysing and Evaluating Quality Attributes of Self-Adaptive Software: A Survey},
  booktitle     = {2018 12th International Conference on Reliability, Maintainability, and Safety (ICRMS)},
  year          = {2018},
  pages         = {52-61},
  month         = {Oct},
  note          = {cited By 0},
  abstract      = {Self-adaptive software has the capability to sense a change in its environment and its own behaviour, and then adjust itself accordingly during runtime to meet the desired requirements. Analysing and evaluating quality attributes is popular in self-adaptive software research. In recent years, several studies have proposed runtime models which analyse and evaluate quality attributes of self-adaptive software. This paper focuses on runtime models used for analysis and evaluation of quality attributes of self-adaptive software. Firstly, self-adaptive software, runtime models, analysis and evaluation of quality attributes based on runtime models, and related concepts are introduced. Studies describing runtime models are investigated and the meaning of runtime models used in analysis and evaluation of quality attributes of self-adaptive software is clarified. Two types of typical construction methods and their general construction processes are described. Runtime models were analysed and categorized considering multiple aspects, including type, modelling language, application scenarios, and relationship between runtime models and quality attributes. The extension mechanisms for runtime models were also analysed and extracted into two types. The weaknesses of current research are listed and analysed, with future research directions suggested.},
  art_number    = {8718940},
  document_type = {Conference Paper},
  doi           = {10.1109/ICRMS.2018.00020},
  groups        = {ieee, wiley},
  issn          = {2575-2642},
  journal       = {Proceedings - 12th International Conference on Reliability, Maintainability, and Safety, ICRMS 2018},
  keywords      = {self-adjusting systems;software quality;self-adaptive software;runtime models;quality attributes;construction method;general construction processes;modelling language;Runtime;Analytical models;Adaptation models;Synthetic aperture sonar;Software;Computational modeling;runtime models;self-adaptive software;quality attributes;analysis and evaluation;model extension mechanisms},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85066991072&doi=10.1109%2fICRMS.2018.00020&partnerID=40&md5=a148fdff27d6de3b74bbd8b24b9a93e4},
}

@InProceedings{Wang2007,
  author        = {H. {Wang} and J. {Ying}},
  title         = {Toward Runtime Self-adaptation Method in Software-Intensive Systems Based on Hidden Markov Model},
  booktitle     = {31st Annual International Computer Software and Applications Conference (COMPSAC 2007)},
  year          = {2007},
  volume        = {2},
  pages         = {601-606},
  month         = {July},
  note          = {cited By 6},
  abstract      = {To reduce the overload of human management, recently runtime self-adaptation is emerging as an important characteristic required by most intelligent software-intensive systems. Most methods are built upon the analysis of concepts of architecture and exploit some "craft" from the perspective of qualitative analysis. However, these methods are often incapable of reasoning about the history of requested services, hence it is difficult to improve more efficiently software efficiency and predictability. Quantitative analysis based on the theory of stochastic processes would be a better option to depict the runtime environment more accurately. This paper presents a demonstration of the idea. In this paper, we employ the mathematic characteristic of Hidden Markov Model to achieve self-adaptation at runtime by means of modeling the behavior of users' requests and the runtime context. After analyzing the history of requested services and reconstructing the request sequence, the model responds to requests in a more efficient and rapid fashion.},
  art_number    = {4291184},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSAC.2007.214},
  groups        = {ieee, wiley},
  issn          = {0730-3157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {hidden Markov models;software engineering;stochastic processes;runtime self-adaptation method;intelligent software-intensive systems;hidden Markov model;qualitative analysis;software efficiency;quantitative analysis;stochastic processes;request sequence;Hidden Markov models;History;Humans;Intelligent systems;Computer architecture;Stochastic processes;Runtime environment;Mathematics;Context modeling;Mathematical model},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-37349001573&doi=10.1109%2fCOMPSAC.2007.214&partnerID=40&md5=2e036b082b0b552e091c50644be04d96},
}

@InProceedings{Luo2006,
  author        = {W. {Luo} and H. {Ghenniwa} and W. {Shen} and Z. {Rao}},
  title         = {Capture Dynamic Aspects of Software Architecture for Distributed Self-Adaptive Environments},
  booktitle     = {2006 10th International Conference on Computer Supported Cooperative Work in Design},
  year          = {2006},
  pages         = {1-6},
  month         = {May},
  note          = {cited By 0},
  abstract      = {An architectural description to capture dynamic aspects of software architecture provides the fundamental information to the external adaptation mechanism for self-adaptive systems. This paper presents a dAcme framework for distributed self-adaptive systems and introduces an architecture description language to address the dynamism of software architecture. In dAcme, the traditional model layer is separated into model and instance layers. Multi-domain constraints and self-adaptive tactics are extended based on basic Acme syntax. These extensions turn the analyzing and planning phase of the adaptation life circle into searching a solution for distributed constraint satisfactory problems. A media distribution case study is presented to demonstrate the expressiveness of the proposed approach},
  art_number    = {4019130},
  document_type = {Conference Paper},
  doi           = {10.1109/CSCWD.2006.253213},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2006 10th International Conference on Computer Supported Cooperative Work in Design, CSCWD 2006},
  keywords      = {distributed processing;software architecture;specification languages;software architecture dynamism;distributed self-adaptive environment;dAcme framework;architecture description language;multidomain constraints;self-adaptive tactics;basic Acme syntax;analyzing phase;planning phase;adaptation life circle;distributed constraint satisfactory problems;Software architecture;Computer architecture;Computer aided manufacturing;Distributed computing;Collaborative work;Architecture description languages;Software systems;Software performance;Design engineering;Councils;Self-adaptive systems;Architectural-based Adaptation;ADL;Distributed Constraint Satisfactory},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-34547669010&doi=10.1109%2fCSCWD.2006.253213&partnerID=40&md5=55396590eb4afe827f398e74d9e7f339},
}

@InProceedings{Hallsteinsen2009,
  author        = {S. {Hallsteinsen} and R. T. {Sanders}},
  title         = {Software Architecture for Self-Adapting Sub-sea Sensor Networks: Work in Progress},
  booktitle     = {2009 Third International Conference on Sensor Technologies and Applications},
  year          = {2009},
  pages         = {306-309},
  month         = {June},
  note          = {cited By 1},
  abstract      = {Monitoring of the sub-sea environment requires advanced sensor networks with both stationary and mobile nodes on the surface and underwater, each node playing a different role. The combination of mobile and stationary nodes, the loss of nodes due to harsh conditions, the difficult conditions for wireless sub-sea communication and the need for nodes to collaborate are all factors that require new approaches to software architectures for such nodes and systems. This articles presents work in progress that sets out to address these issues by adapting approaches from software engineering solutions to ubiquitous computing.},
  art_number    = {5210903},
  document_type = {Conference Paper},
  doi           = {10.1109/SENSORCOMM.2009.54},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2009 3rd International Conference on Sensor Technologies and Applications, SENSORCOMM 2009},
  keywords      = {ad hoc networks;oceanographic techniques;ubiquitous computing;wireless sensor networks;subsea sensor networks;wireless subsea communication;software engineering;ubiquitous computing;Software architecture;Collaborative work;Ubiquitous computing;Mobile communication;Collaborative software;Collaboration;Mobile computing;Underwater communication;Application software;Wireless sensor networks;software architecture;underwater sensor networks;ubiquitous computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-70449466623&doi=10.1109%2fSENSORCOMM.2009.54&partnerID=40&md5=919d0007e37c6eae4f40dee697069795},
}

@InProceedings{FeiWang2008,
  author        = {{Fei Wang} and {Zeng-qiang Mi} and {Qi-xun Yang}},
  title         = {Sampling frequency self-adapting software algorithm in protection relay measure and control system},
  booktitle     = {2008 Third International Conference on Electric Utility Deregulation and Restructuring and Power Technologies},
  year          = {2008},
  pages         = {1889-1893},
  month         = {April},
  note          = {cited By 1},
  abstract      = {Frequency spectrum leakage caused by synchronous error in nonsynchronous sampling system reduces the accuracy of frequency spectrum analysis and harmonic measurement. A sampling frequency self-adapting software algorithm in protection relay measure and control system is presented in this paper. The sampling frequency self-adapting software algorithm obtained the actual signal frequency fairly accurately by calculating the sampling data from protection relay measure and control system, and adjusted the sampling time interval according to the frequency which was calculated by the self- adapting software algorithm. The process of the software algorithm design is introduced, simulation and analysis are discussed. The results of simulation and analysis show that this software algorithm can improve the accuracy of frequency spectrum analysis and harmonic measurement for power system signal, and the algorithm can be realized easily.},
  art_number    = {4523715},
  document_type = {Conference Paper},
  doi           = {10.1109/DRPT.2008.4523715},
  groups        = {ieee, wiley},
  journal       = {3rd International Conference on Deregulation and Restructuring and Power Technologies, DRPT 2008},
  keywords      = {power system analysis computing;power system harmonics;power system protection;relay protection;software engineering;frequency self-adapting software algorithm;protection relay;frequency spectrum leakage;nonsynchronous sampling system;harmonic measurement;power system measurement;Sampling methods;Software algorithms;Protection;Protective relaying;Frequency measurement;Software measurement;Control systems;Algorithm design and analysis;Harmonic analysis;Power system harmonics;Frequency spectrum leakage;harmonic analysis;protection relay measure and control system;sampling frequency;self-adapting;synchronous error},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-49649108477&doi=10.1109%2fDRPT.2008.4523715&partnerID=40&md5=c99cdaa57f01f16a073e94325161c97c},
}

@InProceedings{Buaon2017,
  author        = {P. {Buaon} and N. {Montree} and K. {Horapong}},
  title         = {A software defined radio receiver for ILS localizer signal-in-space parameters inspection using Chirp-Z transform and self-adaptive AGC},
  booktitle     = {2017 23rd Asia-Pacific Conference on Communications (APCC)},
  year          = {2017},
  volume        = {2018-January},
  pages         = {1-6},
  month         = {Dec},
  note          = {cited By 2},
  abstract      = {In aviation navigation, a localizer of Instrument Landing System (ILS) provides lateral guidance to keep aircrafts on a runway centerline during approaching and landing. A Very High Frequency (VHF) signal is transmitted on ILS localizer channel to allow the airborne avionics equipment to determine its position from the centerline. In compliance with International Civil Aviation Organization (ICAO) standards, this ILS localizer signal must be inspected to assess the transmitted signal-in-space parameters. In this paper, we have developed a Software Defined Radio (SDR) receiver for preflight inspection stage to assist ground personnel to inspect the ILS localizer signal. The SDR receiver uses a novel design to measure the ILS localizer signal. Firstly, chirp-z transform algorithm is proposed to estimate frequency magnitudes of the ILS localizer signal for modulation index calculation. This algorithm aims to enlarge the input spectrum around a selected center frequency for more accurate frequency magnitude estimation. Secondly, the iterative searching is presented to handle a signal level control of hardware front-end. This algorithm iteratively adjusts a software controllable gain of Automatic Gain Control (AGC) for more extensive range of SDR input power. In the experiments, performance evaluation was carried out through three commercial off-the-shelf (COTS) ILS generators and a COTS ILS receiver to benchmark our SDR-based receiver. Test results showed that our approach achieves accurate measurement and wide range of the received ILS localizer signal.},
  document_type = {Conference Paper},
  doi           = {10.23919/APCC.2017.8304003},
  groups        = {ieee, wiley},
  journal       = {2017 23rd Asia-Pacific Conference on Communications: Bridging the Metropolitan and the Remote, APCC 2017},
  keywords      = {radio receivers;software radio;telecommunication computing;SDR-based receiver;commercial off-the-shelf ILS generators;input spectrum;center frequency;frequency magnitude estimation;software controllable gain;Automatic Gain Control;preflight inspection stage;International Civil Aviation Organization standards;ILS localizer signal;International Civil Aviation Organization;Very High Frequency signal;received ILS localizer signal;COTS ILS receiver;ILS localizer channel;High Frequency signal;signal-in-space parameters inspection;software defined radio receiver;Frequency modulation;Receivers;Frequency estimation;Aircraft;Chirp;Gain control;Instrument Landing System (ILS);ILS Localizer Signal;Preflight Inspection;Chirp-Z Transform;Self-Adaptive Automatic Gain Control;Software Defined Radio (SDR)},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050612936&doi=10.23919%2fAPCC.2017.8304003&partnerID=40&md5=b1e02a3a9690a0cf17adeb716e3e8db6},
}

@InProceedings{Ming2008,
  author        = {H. {Ming} and K. {Oyama} and C. K. {Chang}},
  title         = {Human-Intention Driven Self Adaptive Software Evolvability in Distributed Service Environments},
  booktitle     = {2008 12th IEEE International Workshop on Future Trends of Distributed Computing Systems},
  year          = {2008},
  pages         = {51-57},
  month         = {Oct},
  note          = {cited By 11},
  abstract      = {Evolvability is essential to adapting to the dynamic and changing requirements in response to the feedback from context awareness systems. However, most of current context models have limited capability in exploring human intentions that often drive system evolution. To support service requirements analysis of real-world applications in distributed service environments, this paper focuses on human-intention driven software evolvability. In our approach, requirements analysis via an evolution cycle provides the means of speculating requirement changes, predicting possible new generations of system behaviors, and assessing the corresponding quality impacts. Furthermore, we also discuss evolvability metrics by observing intentions from user contexts.},
  art_number    = {4683114},
  document_type = {Conference Paper},
  doi           = {10.1109/FTDCS.2008.40},
  groups        = {ieee, wiley},
  issn          = {1071-0485},
  journal       = {Proceedings of the IEEE Computer Society Workshop on Future Trends of Distributed Computing Systems},
  keywords      = {distributed processing;human factors;software engineering;systems analysis;ubiquitous computing;human-intention driven self adaptive software evolvability;distributed service environments;context awareness systems;human intentions;service requirements analysis;Humans;Context modeling;Context-aware services;Ontologies;Context awareness;Software quality;Feedback;Design engineering;Conferences;Distributed computing;context-aware system;evolvability metrics;human intention;service requirements analysis;software evolvability;quality impacts},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-58049133860&doi=10.1109%2fFTDCS.2008.40&partnerID=40&md5=be53604dcb5e0ba4826dc5793deb5cd6},
}

@Article{Tangari2018,
  author        = {G. {Tangari} and D. {Tuncer} and M. {Charalambides} and Y. {Qi} and G. {Pavlou}},
  title         = {Self-Adaptive Decentralized Monitoring in Software-Defined Networks},
  journal       = {IEEE Transactions on Network and Service Management},
  year          = {2018},
  volume        = {15},
  number        = {4},
  pages         = {1277-1291},
  month         = {Dec},
  issn          = {1932-4537},
  note          = {cited By 5},
  abstract      = {The software-defined networking (SDN) paradigm can allow network management solutions to automatically and frequently reconfigure network resources. When developing SDN-based management architectures, it is of paramount importance to design a monitoring system that can provide timely and consistent updates to heterogeneous management applications. To support such applications operating with low latency requirements, the monitoring system should scale with increasing network size and provide precise network views with minimum overhead on the available resources. In this paper, we present a novel, self-adaptive, decentralized framework for resource monitoring in SDN. Our framework enables accurate statistics to be collected with limited burden on the network resources. This is realized through a self-tuning, adaptive monitoring mechanism that automatically adjusts its settings based on the traffic dynamics. We evaluate our proposal based on a realistic use case scenario, where a content distribution service and an on-demand gaming platform are deployed within an ISP network. The results show that reduced monitoring latencies are obtained with the proposed framework, thus enabling shorter reconfiguration control loops. In addition, the proposed adaptive monitoring method achieves significant gain in terms of monitoring overhead, while preserving the performance of the services considered.},
  art_number    = {8488488},
  document_type = {Article},
  doi           = {10.1109/TNSM.2018.2874813},
  groups        = {ieee, wiley},
  keywords      = {computer network management;IP networks;resource allocation;software defined networking;system monitoring;telecommunication traffic;adaptive decentralized monitoring;software-defined networking paradigm;network management solutions;network resources;monitoring system;heterogeneous management applications;low latency requirements;network size;precise network views;decentralized framework;resource monitoring;adaptive monitoring mechanism;ISP network;reduced monitoring latencies;adaptive monitoring method;monitoring overhead;SDN-based management architectures;Monitoring;Switches;Software defined networking;Synchronization;Resource management;Task analysis;Frequency measurement;Network monitoring;software-defined networks;self-adaptation},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85054662140&doi=10.1109%2fTNSM.2018.2874813&partnerID=40&md5=31cd311e59b1e8d27000c2836f3970b8},
}

@InProceedings{Zou2016,
  author        = {L. {Zou} and H. {Yang} and L. {Xu}},
  title         = {An Approach to Controlling Context by Combining Game Theory and Control Theory for Self-Adaptive Software in Creative Computing},
  booktitle     = {2016 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C)},
  year          = {2016},
  pages         = {311-317},
  month         = {Aug},
  note          = {cited By 0},
  abstract      = {Self-adaptive software is widely-use for users who need to output varies results after responding from changing environment. The results are normally followed by the Control Theory in order to be constructed in a rigid feedback loop. According to the Control Theory, the controller is designed to measure result errors for the purpose of re-inputs of edited results into the system. The research in the paper proposes an approach to improving the context-aware ability of controller by designing a controller that enhance the self-adaptive software to solve both certain and uncertain problems especially in business. The controller relies on both Control Theory based modules and combination based module, in order to generate outputs including but not limited to activities based on costs or balanced scorecards through adding business context sensors, and create feedback loop to test differences for each module. When the proposed controller is established in self-adaptive software, it is important to extract and filter business information due to user demands, and make software to react itself in a changing environment. In summary, a designed controller model will help self-adaptive software to understand users' need and requirements clearly, so that not only existing parameters could be changed, but also the self-adaptive software can be made to to gain the ability to modify the parameter itself, and more importantly, a good context-aware controlled self-adaptive software could save costs for organisations in addition to improving the effectiveness and efficiency for business in a creative way.},
  art_number    = {7573763},
  document_type = {Conference Paper},
  doi           = {10.1109/QRS-C.2016.48},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2016 IEEE International Conference on Software Quality, Reliability and Security-Companion, QRS-C 2016},
  keywords      = {control system analysis computing;control system synthesis;feedback;game theory;self-adjusting systems;ubiquitous computing;context control;game theory;self-adaptive software;creative computing;feedback loop;controller design;context-aware ability;control theory based modules;combination based module;users need;users requirements;Software;Context;Game theory;Control theory;Creativity;Context modeling;Game Theory;Control Theory;Context-Awareness;Decision Making;Semantic Web;Creative Computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991746033&doi=10.1109%2fQRS-C.2016.48&partnerID=40&md5=fe2e06cb9142408e03ce6809e82974b6},
}

@InProceedings{Kebir2012,
  author        = {S. {Kebir}},
  title         = {JACAC: An aspect oriented framework for the development of self-adaptive software systems},
  booktitle     = {2012 6th International Conference on Sciences of Electronics, Technologies of Information and Telecommunications (SETIT)},
  year          = {2012},
  pages         = {74-80},
  month         = {March},
  note          = {cited By 0},
  abstract      = {Current software systems are increasingly difficult to maintain and adapt to new needs. The Autonomic Computing aims to provide solutions to this problem by allowing systems to self-adapt their self. Software components greatly increase the degree of reuse and ease of development. Aspect oriented programming provides a separation between business concerns and crosscutting concerns. In this paper we propose a combined approach called JACAC based on aspects and components to enable autonomic capabilities in legacy systems.},
  art_number    = {6481893},
  document_type = {Conference Paper},
  doi           = {10.1109/SETIT.2012.6481893},
  groups        = {ieee, wiley},
  journal       = {2012 6th International Conference on Sciences of Electronics, Technologies of Information and Telecommunications, SETIT 2012},
  keywords      = {aspect-oriented programming;fault tolerant computing;software maintenance;JACAC;aspect oriented framework;self-adaptive software system development;autonomic computing;software components;aspect oriented programming;business concerns;crosscutting concerns;autonomic capabilities;legacy systems;Weaving;Indexes;Software systems;Monitoring;Runtime;Aging;Adaptation models},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875695333&doi=10.1109%2fSETIT.2012.6481893&partnerID=40&md5=e5c48f1cced028f4369c562cc232da7f},
}

@InProceedings{Wu2010,
  author        = {Y. {Wu} and Y. {Wu} and X. {Peng} and W. {Zhao}},
  title         = {Implementing Self-Adaptive Software Architecture by Reflective Component Model and Dynamic AOP: A Case Study},
  booktitle     = {2010 10th International Conference on Quality Software},
  year          = {2010},
  pages         = {288-293},
  month         = {July},
  note          = {cited By 2},
  abstract      = {Architecture-based method, which implements self-managing characteristics by dynamically configuring or reconfiguring the runtime architecture, has been widely accepted as a promising approach for self-adaptive systems. Some reflective architecture and component models like Fractal are proposed to support dynamic architecture adaptations through introspection and reconfiguration APIs. We believe dynamic AOP (Aspect-Oriented Programming) should also be employed as a complementary means for crosscutting adaptations. In this paper, we conduct a case study on implementing self-adaptive software architecture by reflective component model (Fractal) and dynamic AOP in an industrial Web-based system. With the case study, we hope to evaluate pros and cons of reflective component and dynamic AOP in implementing self-adaptive software architecture. In our case study, we identify four typical self-adaptation scenarios with the solutions. We also evaluate both approaches in terms of effectiveness, runtime efficiency and development/maintenance efforts. Our case study shows that reflective component model and dynamic AOP are effective for structural architecture adaptations, but have shortages in flexibility and do not support behavioral adaptation.},
  art_number    = {5562972},
  document_type = {Conference Paper},
  doi           = {10.1109/QSIC.2010.56},
  groups        = {ieee, wiley},
  issn          = {2332-662X},
  journal       = {Proceedings - International Conference on Quality Software},
  keywords      = {aspect-oriented programming;software architecture;self adaptive software architecture implementation;reflective component model;architecture-based method;aspect-oriented programming;AOP;industrial Web-based system;structural architecture adaptations;Fractals;Runtime;Computer architecture;Object oriented modeling;Adaptation model;Databases;Business;self-adaptive architecture;reflective component;Fractal;dynamic AOP},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-77958511057&doi=10.1109%2fQSIC.2010.56&partnerID=40&md5=680d0ac0e1be5a6a022f83b4ff024b44},
}

@InProceedings{Nogueira2019,
  author        = {R. {Nogueira} and J. {Reis} and R. {Pinto} and G. {Gon?alves}},
  title         = {Self-adaptive Cobots in Cyber-Physical Production Systems},
  booktitle     = {2019 24th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA)},
  year          = {2019},
  volume        = {2019-September},
  pages         = {521-528},
  month         = {Sep.},
  note          = {cited By 0},
  abstract      = {Absolute automation in certain industries, such as the automotive industry, has proven to be disadvantageous. Robots are fairly capable when performing tasks that are repetitive and demand precision. However, a hybrid solution comprised of the adaptability and resourcefulness of humans cooperating, in the same task, with the precision and efficiency of machines is the next step for automation. Manipulators, however, lack self-adaptability and true collaborative behaviour. And so, through the integration of vision systems, manipulators can perceive their environment and also understand complex interactions. In this paper, a vision-based collaborative proof-of-concept framework is proposed using the Kinect v2, a UR5 robotic manipulator and MATLAB. This framework implements 3 behavioural modes, 1) a Self-Adaptive mode for obstacle detection and avoidance, 2) a Collaborative mode for physical human-robot interaction and 3) a standby Safe mode. These modes are activated with recourse to gestures, by virtue of the body tracking and gesture recognition algorithm of the Kinect v2. Additionally, to allow self-recognition of the robot, the Region Growing segmentation is combined with the UR5's Forward Kinematics for precise, near real-time segmentation. Furthermore, self-adaptive reactive behaviour is implemented by using artificial repulsive action for the manipulator's end-effector. Reaction times were tested for all three modes, being that Collaborative and Safe mode would take up to 5 seconds to accomplish the movement, while Self-Adaptive mode could take up to 10 seconds between reactions.},
  art_number    = {8869165},
  document_type = {Conference Paper},
  doi           = {10.1109/ETFA.2019.8869165},
  groups        = {ieee, wiley},
  issn          = {1946-0759},
  journal       = {IEEE International Conference on Emerging Technologies and Factory Automation, ETFA},
  keywords      = {cyber-physical systems;end effectors;gesture recognition;image segmentation;manufacturing systems;robot vision;adaptive cobots;cyber-physical production systems;absolute automation;automotive industry;demand precision;hybrid solution;collaborative behaviour;vision systems;complex interactions;proof-of-concept framework;Kinect v2;UR5 robotic manipulator;behavioural modes;Self-Adaptive mode;obstacle detection;Collaborative mode;physical human-robot interaction;standby Safe mode;body tracking;gesture recognition algorithm;UR5's Forward Kinematics;self-adaptive reactive behaviour;region growing segmentation;near real-time segmentation;end-effector;time 5.0 s;time 10.0 s;Manipulators;Collaboration;Service robots;Task analysis;Collision avoidance;Cameras;Cobots;Collaborative Robotics;Gesture Control;Industry 4.0;Kinect v2;Obstacle Detection;Potential Fields;Self-adaptive;Universal Robots UR5;Vision-based robot},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074195193&doi=10.1109%2fETFA.2019.8869165&partnerID=40&md5=5afeda0b29810147455b56753eb0d88b},
}

@InProceedings{Bedhief2019,
  author        = {I. {Bedhief} and L. {Foschini} and P. {Bellavista} and M. {Kassar} and T. {Aguili}},
  title         = {Toward Self-Adaptive Software Defined Fog Networking Architecture for IIoT and Industry 4.0},
  booktitle     = {2019 IEEE 24th International Workshop on Computer Aided Modeling and Design of Communication Links and Networks (CAMAD)},
  year          = {2019},
  volume        = {2019-September},
  pages         = {1-5},
  month         = {Sep.},
  note          = {cited By 1},
  abstract      = {Industrial Internet of Things (IIoT) interconnects unconventional objects, such as sensors, actuators, robots, and control systems, with the information systems and the business processes to improve the operational efficiency and productivity. In IIoT, diverse, distributed and huge number of devices are collaborating and connecting over the Internet and the Cloud by generating a high and diverse data rate. In addition, industrial networks will be highly heterogeneous since it will connect heterogeneous devices through various communication technologies. Consequently, the industrial processes set new requirements such as reliability, scalability, and low latency that can not be managed by traditional technologies. The advent of Software Defined Networking (SDN) concept, by decoupling control and data planes, enables flexible and dynamic network architecture management by supporting horizontal scalability through distributed SDN controllers. Moreover, Fog computing is recently emerging as the best technology to provide local processing support with acceptable latency for IIoT devices. In this new rich evolving context, we propose an integration of SDN and Fog computing to provide a flexible and scalable solution granting low delays required by IIoT applications. More precisely, we present a novel architecture for IIoT based on SDN-Fog and then we detail the structure of our proposed Fog node enhanced by SDN. We also show some relevant experimental results that assess the performances of the proposed fog node in terms of latency and throughput.},
  art_number    = {8858499},
  document_type = {Conference Paper},
  doi           = {10.1109/CAMAD.2019.8858499},
  groups        = {ieee, wiley},
  issn          = {2378-4873},
  journal       = {IEEE International Workshop on Computer Aided Modeling and Design of Communication Links and Networks, CAMAD},
  keywords      = {cloud computing;data handling;information management;Internet of Things;production engineering computing;software defined networking;heterogeneous devices;data planes;dynamic network architecture management;distributed SDN controllers;IIoT devices;IIoT applications;SDN-Fog;control systems;information systems;business processes;operational efficiency;industrial networks;software defined networking concept;data rate;self-adaptive software defined fog networking architecture;fog computing;Industrial Internet of Things;Computer architecture;Edge computing;Internet of Things;Software;Network topology;Industries;Reliability;Industry 4.0;Fog computing;SDN;IoT;IIoT;Containerization},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073771738&doi=10.1109%2fCAMAD.2019.8858499&partnerID=40&md5=b6ea64e028673416e9f4ee1be7cc5a6f},
}

@InProceedings{Condori-Fernandez2017,
  author        = {N. {Condori-Fernandez} and F. S. {Lopez}},
  title         = {Using Emotions to Empower the Self-Adaptation Capability of Software Services},
  booktitle     = {2017 IEEE/ACM 2nd International Workshop on Emotion Awareness in Software Engineering (SEmotion)},
  year          = {2017},
  pages         = {15-21},
  month         = {May},
  note          = {cited By 3},
  abstract      = {Traditional self-adaptive systems research has focused on external contextual aspects such as performance, system reaction to environment. In this paper, we introduce the idea of measuring emotions in order to empower the adaptability of software services at runtime. We present two type of monitoring mechanisms and an adaptive adaptation strategy, which were implemented as part of the HAPPYNESS middleware. A preliminary test using data from the Empatica repository was carried out with the purpose of assessing the goodness of the controller (i.e. inference engine), a component of our middleware. The obtained results were consistent with the expected values. Moreover, we test also the connectivity and synchronization between E4-Wristband and an adaptive mobile application that were used by two volunteer users.},
  art_number    = {7961886},
  document_type = {Conference Paper},
  doi           = {10.1109/SEmotion.2017.8},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2017 IEEE/ACM 2nd International Workshop on Emotion Awareness in Software Engineering, SEmotion 2017},
  keywords      = {human factors;middleware;mobile computing;software engineering;adaptive mobile application;E4-Wristband;Empatica repository;HAPPYNESS middleware;adaptive adaptation strategy;self-adaptive systems;software services;self-adaptation capability;Monitoring;Biomedical monitoring;Stress;Temperature sensors;Temperature measurement;Middleware;physiological data;stress;(self) adaptive services;medication adherence;E4-Wristband},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85025843493&doi=10.1109%2fSEmotion.2017.8&partnerID=40&md5=d59ece7130d18397ba9be14866b5de4a},
}

@InProceedings{Silva2011,
  author        = {D. C. d. {Silva} and A. B. {Lopes} and J. C. {Leite} and F. A. P. {Pinto} and C. E. d. {Silva}},
  title         = {Definition of a Component Selection Process Based on QoS Criteria and Its Application to Self-adaptive Software Systems},
  booktitle     = {2011 Fifth Brazilian Symposium on Software Components, Architectures and Reuse},
  year          = {2011},
  pages         = {90-99},
  month         = {Sep.},
  note          = {cited By 1},
  abstract      = {Nowadays, self-adaptive systems use the concept of feedback loops. This approach is based on the selection of components that conform to the expected requirements. The selection became increasingly complex in such systems due to the variety of criteria. This paper proposes a process for dynamic selection of components using multi-attribute utility theory based on Quality of Service (QoS) criteria. Furthermore, it defines a model that can be used to represent the current needs of an application, and that is used by the proposed selection process for evaluating the candidate components. As a proof of concept, it's presented the AnaMoC module that performs the selection of components based on the proposed process.},
  art_number    = {6114545},
  document_type = {Conference Paper},
  doi           = {10.1109/SBCARS.2011.10},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 5th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARS 2011},
  keywords      = {object-oriented programming;quality of service;software engineering;component selection process;QoS criteria;self-adaptive software systems;feedback loops;multiattribute utility theory;quality of service;AnaMoC module;Unified modeling language;Quality of service;Monitoring;Utility theory;Context modeling;Feedback loop;Computational modeling;selection;model;strategy;dynamic adaptation},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84856590857&doi=10.1109%2fSBCARS.2011.10&partnerID=40&md5=9351dfd1c90ca91a4dcc11a7f0195ca0},
}

@InProceedings{Becker2008a,
  author        = {B. {Becker} and H. {Giese}},
  title         = {Incremental verification of inductive invariants for the run-time evolution of self-adaptive software-intensive systems},
  booktitle     = {2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops},
  year          = {2008},
  pages         = {33-40},
  month         = {Sep.},
  note          = {cited By 4},
  abstract      = {The safe run-time evolution of complex software-intensive systems requires that the impact of changes can be predicted at run-time. In this paper we consider the specific case of self-adaptive software-intensive systems using an example for the coordination of autonomous vehicles. We show how incremental run-time checks can verify that changes in the rule set which governs the distributed rule-based self-adaptive behavior provides the required safety properties. We demonstrate how an existing verification technique for invariant checking is turned into an incremental one. We discuss the theoretical complexity of the incremental verification checks and also present some first evaluation results.},
  art_number    = {4686291},
  document_type = {Conference Paper},
  doi           = {10.1109/ASEW.2008.4686291},
  groups        = {ieee, wiley},
  issn          = {2151-0849},
  journal       = {Aramis 2008 - 1st International Workshop on Automated engineeRing of Autonomous and runtiMe evolvIng Systems, and ASE2008 the 23rd IEEE/ACM Int. Conf. Automated Software Engineering},
  keywords      = {program verification;self-adaptive software-intensive systems;incremental verification;inductive invariants;run-time evolution;complex software-intensive systems;autonomous vehicles coordination;incremental run-time checks;distributed rule-based self-adaptive behavior;invariant checking;Runtime;Collaboration;Remotely operated vehicles;Mobile robots;Safety;Contracts;Unified modeling language;Predictive models;Vehicle dynamics;Formal verification},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-58049133805&doi=10.1109%2fASEW.2008.4686291&partnerID=40&md5=e243ece7052aa493ed08ba24bbc81d91},
}

@InProceedings{Ganguly2017,
  author        = {K. K. {Ganguly} and K. {Sakib}},
  title         = {Decentralization of Control Loop for Self-Adaptive Software through Reinforcement Learning},
  booktitle     = {2017 24th Asia-Pacific Software Engineering Conference Workshops (APSECW)},
  year          = {2017},
  volume        = {2018-January},
  pages         = {134-141},
  month         = {Dec},
  note          = {cited By 0},
  abstract      = {In a decentralized self-adaptive software, multiple control loops provide self-adaptation capabilities to the components these manage. For this, these control loops need to coordinate to continuously satisfy some local QoS goals of each managed component and global QoS goals concerning the whole system in a changing environment. This is accomplished by choosing variants of the managed system (component) that satisfy these goals. As goal conformance requires coordination, a control loop requires choosing the variant that leads to maximum goal conformance considering the variant selection strategies by other control loops. An overall goal conformance calculation mechanism is also needed that captures the local and global goal violations. This paper proposes a decentralized reinforcement learning-based self-adaptation technique considering these issues. A reinforcement learning technique, Q-learning helps to learn the maximum achievable goal conformance choosing a specific variant. The other control loop strategies are estimated by observing their variant selection and incorporated with Q-learning for better variant selection. An overall goal conformance calculation technique is also proposed that dynamically adjusts weights on the local and global goals to emphasize violated goals. The proposed approach was evaluated using a service-based Tele Assistance System. It was compared with two approaches - random variant selection and variant selection ignoring other control loop strategies. The proposed technique outperformed both with maximum overall goal conformance. The proposed dynamic weight update mechanism was compared with a static weight-based one. The dynamic technique outperformed the static one continuously satisfying all the goals.},
  document_type = {Conference Paper},
  doi           = {10.1109/APSECW.2017.26},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2017 24th Asia-Pacific Software Engineering Conference Workshops, APSECW 2017},
  keywords      = {decentralised control;learning (artificial intelligence);program control structures;quality of service;self-adjusting systems;decentralized self-adaptive software;self-adaptation capabilities;local QoS goals;managed component;global QoS goals;managed system;maximum goal conformance;variant selection strategies;global goal violations;maximum achievable goal conformance;control loop strategies;goal conformance calculation technique;local goals;global goals;violated goals;random variant selection;multiple control loops;overall goal conformance calculation mechanism;local goal violations;Q-learning;decentralized reinforcement learning-based self-adaptation technique;service-based tele assistance system;Software engineering;Conferences;Decentralization;self-adaptation;Q-learning},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050646719&doi=10.1109%2fAPSECW.2017.26&partnerID=40&md5=671450775344cfdf82f3a95257e238d0},
}

@InProceedings{Cui2017,
  author        = {Y. {Cui} and R. M. {Voyles} and X. {Zhao} and J. {Bao} and E. S. {Bond}},
  title         = {A software architecture supporting self-adaptation of wireless control networks},
  booktitle     = {2017 13th IEEE Conference on Automation Science and Engineering (CASE)},
  year          = {2017},
  volume        = {2017-August},
  pages         = {346-351},
  month         = {Aug},
  note          = {cited By 2},
  abstract      = {The programming of most robotic tasks is conceptually simple, but error recovery and the handling of unexpected events add enormous complexity to the programming burden. Furthermore, software is procedural, so the handling of scenarios unanticipated by the programmer is just not possible in most programs. The objective of this paper is to describe a software architecture for self-adaptive systems that guides systems engineers to conveniently build self-adaptive systems, reducing the workload necessary to program complex tasks. To this end, the ReFrESH self-adaptive framework is designed. The primary contributions of this work are: (1) illustrating the design philosophy of the layered architecture of ReFrESH; (2) demonstrating a module programming model to support self-adaptation in ReFrESH; (3) implementing a simplified task, ��line-up-blocks��, which is comprehensible, yet has sufficient complexity to present the effectiveness of programming a fault tolerant task utilizing the ReFrESH framework.},
  document_type = {Conference Paper},
  doi           = {10.1109/COASE.2017.8256127},
  groups        = {ieee, wiley},
  issn          = {2161-8089},
  journal       = {IEEE International Conference on Automation Science and Engineering},
  keywords      = {adaptive systems;fault tolerance;software architecture;systems engineering;design philosophy;layered architecture;module programming model;simplified task;fault tolerant task;ReFrESH framework;software architecture;wireless control networks;robotic tasks;error recovery;unexpected events;self-adaptive systems;systems engineers;complex tasks;self-adaptive framework;complexity;Computer architecture;Programming;Adaptation models;Monitoring;Software;Robots},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85044938509&doi=10.1109%2fCOASE.2017.8256127&partnerID=40&md5=f616c228659a1a29d0318a9849096acf},
}

@Article{Musliner1999,
  author        = {D. J. {Musliner} and R. P. {Goldman} and M. J. {Pelican} and K. D. {Krebsbach}},
  title         = {Self-adaptive software for hard real-time environments},
  journal       = {IEEE Intelligent Systems and their Applications},
  year          = {1999},
  volume        = {14},
  number        = {4},
  pages         = {23-29},
  month         = {July},
  issn          = {2374-9423},
  note          = {cited By 29},
  abstract      = {Researchers in the Automated Reasoning group at the Honeywell Technology Center and at the University of Michigan are developing adaptive intelligent software for high-risk situations. We are building a system called Self-Adaptive CIRCA (based on our cooperative intelligent real-time control architecture model) that combines the assurance of hard real-time systems with the self-modeling, self-monitoring, and self-modifying capabilities of self-adaptive software. The article describes elements of the system that are working now, as well as new components that we are still in the process of designing and building.},
  document_type = {Article},
  doi           = {10.1109/5254.784081},
  groups        = {ieee, wiley},
  keywords      = {self-adjusting systems;real-time systems;safety-critical software;self-adaptive software;hard real-time environments;adaptive intelligent software;high-risk situations;Self-Adaptive CIRCA;cooperative intelligent real-time control architecture model;self-modeling;self-monitoring;self-modification;Switches;Large Hadron Collider;Buildings;Logic;Size control;Intelligent systems;Intelligent control;Control systems;Safety;Robots},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0033359948&doi=10.1109%2f5254.784081&partnerID=40&md5=e127dd876fbc28ba93c9228388de14df},
}

@InProceedings{Martin2016,
  author        = {P. {Martin} and A. {Taal} and F. {Quevedo} and D. {Rogers} and K. {Evans} and A. {Jones} and V. {Stankovski} and S. {Taherizadeh} and J. {Trnkoczy} and G. {Suciu} and Z. {Zhao}},
  title         = {Information Modelling and Semantic Linking for a Software Workbench for Interactive, Time Critical and Self-Adaptive Cloud Applications},
  booktitle     = {2016 30th International Conference on Advanced Information Networking and Applications Workshops (WAINA)},
  year          = {2016},
  pages         = {127-132},
  month         = {March},
  note          = {cited By 2},
  abstract      = {Cloud environments can provide elastic, controllable on-demand services for supporting complex distributed applications. However the engineering methods and software tools used for developing, deploying and executing classical time-critical applications do not, as yet, account for the programmability and controllability that can be provided by clouds, and so time-critical applications do not yet benefit from the full potential of virtualisation technologies. A software workbench for developing, deploying and controlling time-critical applications in cloud environments can address this, but needs to be able to interoperate with existing cloud standards and services in a fashion that can still adapt to the continuing evolution of the field. Semantic linking can enhance interoperability by creating mappings between different vocabularies and specifications, allowing different technologies to be plugged together, which can then be used to buld such a workbench in a flexible manner. A semantic linking framework is presented that uses a multiple-viewpoint model of a cloud application workbench as a means to relate different cloud and quality of service standards in order to aid the development of time-critical applications. The foundations of such a model, developed as part of the H2020 project SWITCH, are also presented.},
  art_number    = {7471185},
  document_type = {Conference Paper},
  doi           = {10.1109/WAINA.2016.38},
  groups        = {ieee, wiley},
  journal       = {Proceedings - IEEE 30th International Conference on Advanced Information Networking and Applications Workshops, WAINA 2016},
  keywords      = {cloud computing;open systems;quality of service;software tools;SWITCH;H2020 project;time-critical application development;quality-of-service;multiple-viewpoint model;virtualisation technologies;controllability;programmability;software tools;self-adaptive cloud applications;semantic linking;information modelling;software workbench;Switches;Cloud computing;Standards;Unified modeling language;Quality of service;Semantics;Time factors;time critical applications;cloud;workbench;semantic linking;information model},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983548877&doi=10.1109%2fWAINA.2016.38&partnerID=40&md5=351ce7d196f20b7cc01b7f12725b40ea},
}

@InProceedings{Ingles-Romero2011,
  author        = {J. F. {Ingles-Romero} and C. {Vicente-Chicote} and B. {Morin} and O. {Barais}},
  title         = {Towards the Automatic Generation of Self-Adaptive Robotics Software: An Experience Report},
  booktitle     = {2011 IEEE 20th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises},
  year          = {2011},
  pages         = {79-86},
  month         = {June},
  note          = {cited By 9},
  abstract      = {This paper reports the progress on a previous work in which we described our experience in using the high-level models provided by the DiVA Framework to design the self-adaptive behavior of autonomous robots. The main objective of this work is to discuss how these models can be translated into a run-time self-adaptive architecture for resource-constrained robots. In order to achieve this goal, the models developed for the case study presented as part of the previous work (based on a Victim-Rescuer scenario) serve as the starting point to manually obtain a self-adaptive component-based architecture, which we have implemented using Cecilia (a C distribution of the Fractal component model) and deployed on two e-pucks (low-cost mobile robotics platform). Through this implementation, we try to identify the generic rules that will allow us to obtain (by means of an automated Model-to-Text transformation) self-adaptive robotics software from the DiVA design-time models. The lessons learned from this experience are reported at the end of the paper, leaving the way open for further improvements on self-adaptive robotics.},
  art_number    = {5990005},
  document_type = {Conference Paper},
  doi           = {10.1109/WETICE.2011.54},
  groups        = {ieee, wiley},
  issn          = {1524-4547},
  journal       = {Proceedings of the 2011 20th IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises, WETICE 2011},
  keywords      = {control engineering computing;mobile robots;program compilers;self-adjusting systems;self adaptive robotics software;DiVA framework;autonomous robots;resource constrained robots;run time self adaptive architecture;fractal component model;Cecilia;e-pucks;mobile robotics platform;automated model-to-text transformation;Adaptation models;Context;Robot sensing systems;Monitoring;Software;Model-Driven Engineering;Component-Based Software Architecture;Autonomous Robotics;Runtime Self-Adaptation;DiVA;Fractal;e-puck},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-80052620757&doi=10.1109%2fWETICE.2011.54&partnerID=40&md5=9b26426bac4bff5f3f5dea4faeae955d},
}

@Article{Zhou2019,
  author        = {P. {Zhou} and D. {Zuo} and K. {Hou} and Z. {Zhang} and J. {Dong}},
  title         = {Improving the Dependability of Self-Adaptive Cyber Physical System With Formal Compositional Contract},
  journal       = {IEEE Transactions on Reliability},
  year          = {2019},
  pages         = {1-17},
  issn          = {1558-1721},
  note          = {cited By 0},
  abstract      = {To adapt to the uncertain environment smartly and timely, cyber physical systems (CPSs) have to interact with the physical world in a decentralized but rigorous, organized way. Guaranteeing the timing reliability is key to achieve consensus on the order of distributed events, as well as dependable cooperative decision processing. Based on our hierarchically decentralized compositional self-adaptive framework, we propose a formal compositional reliability-contract-based solution to guarantee the timing reliability of event observation and decision processing in a large-scale, geographically distributed CPS. As the prophetic decision may not fit the local situation well because of the uncertainties, we propose a gradual contract optimization solution to refine the dependability, timeliness, and energy consumption. Following the seven proposed composition schemes, we employ the nondominated sorting genetic algorithm II (NSGA-II) algorithm to optimize arrangement of decision. Moreover, a topology-aware time reserving solution is applied to improve the resilience of processing time and to tolerance timing failures. Both simulation results and real-world testing are introduced to evaluate the efficacy of our proposal. We believe that the formal compositional contract will be a competitive CPS solution to analyze requirements and optimize the self-adaptation decision at runtime.},
  document_type = {Article},
  doi           = {10.1109/TR.2019.2930009},
  groups        = {ieee, wiley},
  keywords      = {Contracts;Timing;Actuators;Sensors;Runtime;Redundancy;Compositional contract;cyber physical systems (CPSs);model@run.time;NSGA-II;self-adaptation;timing reliability},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072520553&doi=10.1109%2fTR.2019.2930009&partnerID=40&md5=71ad07d8ab85240bf62c66e97cd188ec},
}

@InProceedings{Oboril2013,
  author        = {F. {Oboril} and I. {Sagar} and M. B. {Tahoori}},
  title         = {A-SOFT-AES: Self-adaptive software-implemented fault-tolerance for AES},
  booktitle     = {2013 IEEE 19th International On-Line Testing Symposium (IOLTS)},
  year          = {2013},
  pages         = {104-109},
  month         = {July},
  note          = {cited By 3},
  abstract      = {The Advanced Encryption Standard (AES) is one of the most widespread encryption techniques used by millions of users worldwide. Although AES was designed to withstand linear or differential attacks, the security of encrypted messages is not guaranteed. Bit flips occurring during the encryption due to runtime failures or purposely invoked by an attacker are a major security concern and can significantly jeopardize integrity, privacy, and confidentiality and hence the security of the system. Therefore, techniques to increase the reliability (fault-tolerance) and with it the security of cryptographic systems are necessary. This work proposes a self-adaptive software-implemented fault-tolerance methodology for AES (A-SOFT-AES) to enhance its fault-tolerance. This technique is based on a pool of software-implemented fault-tolerance techniques out of which it dynamically chooses the best one in terms of performance, cost, and fault-tolerance for a wide range of fault rates. Therefore, it provides superior flexibility over classic hardware-based implementations.},
  art_number    = {6604059},
  document_type = {Conference Paper},
  doi           = {10.1109/IOLTS.2013.6604059},
  groups        = {ieee, wiley},
  issn          = {1942-9401},
  journal       = {Proceedings of the 2013 IEEE 19th International On-Line Testing Symposium, IOLTS 2013},
  keywords      = {cryptography;data integrity;data privacy;software fault tolerance;A-SOFT-AES;advanced encryption standard;reliability;cryptographic system security;self-adaptive software-implemented fault-tolerance methodology;fault rates;linear attacks;differential attacks;encrypted message security;system confidentiality;system privacy;system integrity;Encryption;Runtime;Fault tolerance;Fault tolerant systems;Tunneling magnetoresistance},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885231013&doi=10.1109%2fIOLTS.2013.6604059&partnerID=40&md5=30bd431e5f158de0e4cc59d50998766a},
}

@InProceedings{Li2012,
  author        = {F. {Li} and H. {Lin} and S. {Li} and C. {Guo} and X. {Zhao}},
  title         = {Self-adapting task allocation approach for software outsourcing services},
  booktitle     = {Proceedings of 2012 IEEE International Conference on Service Operations and Logistics, and Informatics},
  year          = {2012},
  pages         = {479-484},
  month         = {July},
  note          = {cited By 1},
  abstract      = {Task allocation problem plays a key role in software outsourcing services. In this paper, a self-adapting task allocation approach is presented to provide optimal task assignment strategy in the project management of software outsourcing services. The approach is constituted by preparation, task allocation, evaluation, and evolution part. In the core part, task allocation, several mathematical models for different objectives are built to determine the optimal task allocation solutions, and heuristics are proposed to solve them. The proposed approach was proved by numerical examples to be efficient, practical and helpful for improving enterprise project management level and sources code quality.},
  art_number    = {6273584},
  document_type = {Conference Paper},
  doi           = {10.1109/SOLI.2012.6273584},
  groups        = {ieee, wiley},
  journal       = {Proceedings of 2012 IEEE International Conference on Service Operations and Logistics, and Informatics, SOLI 2012},
  keywords      = {business data processing;mathematical analysis;outsourcing;project management;software management;self-adapting task allocation approach;software outsourcing service;task allocation problem;optimal task assignment strategy;mathematical model;optimal task allocation solution;enterprise project management level;sources code quality;Silicon;Java;Prototypes;Computers;Resource management},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867205367&doi=10.1109%2fSOLI.2012.6273584&partnerID=40&md5=97418e4de4f382f8fefb3f2885debd03},
}

@Article{Li2019,
  author        = {Z. {Li} and Z. {Lu} and S. {Deng} and X. {Gao}},
  title         = {A Self-Adaptive Virtual Network Embedding Algorithm Based on Software-Defined Networks},
  journal       = {IEEE Transactions on Network and Service Management},
  year          = {2019},
  volume        = {16},
  number        = {1},
  pages         = {362-373},
  month         = {March},
  issn          = {1932-4537},
  note          = {cited By 11},
  abstract      = {Network virtualization provides a promising tool to allow multiple virtual networks (VNs) to run on a shared substrate network (SN) simultaneously. VN embedding (VNE) is one of the key technologies of network virtualization. The main goal of VNE is to effectively map VN requests to the SN, which is efficiently utilizes the network resources. The emergence of software defined networks provides a platform for network virtualization to be used and promoted. In a real environment, the resource requirements of tenants are generally different. A single VN mapping algorithm can not effectively handle the multi-demand problem of tenants. We propose a self-adaptive VNE algorithm. VN requests are divided into different types by an adaptive algorithm, we use an integer linear programming formulation to solve VNE problem. This paper considers three different types of VN requests. Type 1 VN requests for high bandwidth requirements, type 2 VN requests for low latency requirements, and type 3 VN requests for high bandwidth requirements and latency requirements. The simulation results show that the virtual network embedding algorithm proposed in this paper can make full use of the SN resources and improve the overall revenue, while effectively dealing with the multi-demand problem of tenants.},
  art_number    = {8496853},
  document_type = {Article},
  doi           = {10.1109/TNSM.2018.2876789},
  groups        = {ieee, wiley},
  keywords      = {integer programming;linear programming;software defined networking;virtualisation;self-adaptive virtual network embedding algorithm;network virtualization;multiple virtual networks;shared substrate network;network resources;software defined networks;single VN mapping algorithm;self-adaptive VNE algorithm;integer linear programming formulation;Substrates;Bandwidth;Virtualization;Delays;Indium phosphide;III-V semiconductor materials;Approximation algorithms;Network virtualization;virtual network embedding;self-adaptive;SDN;FlowN},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85055057981&doi=10.1109%2fTNSM.2018.2876789&partnerID=40&md5=27b47f6aae1cd0795660dbd602726e96},
}

@InProceedings{Torres2011,
  author        = {R. {Torres} and H. {Astudillo}},
  title         = {Externalizing the Autopoietic Part of Software to Achieve Self-Adaptability},
  booktitle     = {2011 IEEE World Congress on Services},
  year          = {2011},
  pages         = {107-114},
  month         = {July},
  note          = {cited By 1},
  abstract      = {The autopietic/allopietic duality has been proposed to address the fact that Software systems must look to their own survival besides their successful mission completion. To the best of our knowledge, there are no explicit computational models to operationalize and test this distinction. This article describes a framework to add autopietic capabilities to composite Software systems, by using an external self-organized market full of service providers willing to provide services for satisfying new requirements and recovering actions. The approach is exemplified when a QoS agreement violation occurs in a composite application system.},
  art_number    = {6012701},
  document_type = {Conference Paper},
  doi           = {10.1109/SERVICES.2011.69},
  groups        = {ieee, wiley},
  issn          = {2378-3818},
  journal       = {Proceedings - 2011 IEEE World Congress on Services, SERVICES 2011},
  keywords      = {multi-agent systems;service-oriented architecture;autopoietic part;allopietic duality;software system;service provider;QoS agreement violation;composite application system;Web services;Quality of service;Monitoring;Software;Computer architecture;Weather forecasting;Multiagent systems;Service oriented architectures;request for tender;Zeuthen strategy},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-80053422529&doi=10.1109%2fSERVICES.2011.69&partnerID=40&md5=a45cc3174410a727412af611431a6773},
}

@InProceedings{Cui2015a,
  author        = {Y. {Cui} and J. T. {Lane} and R. M. {Voyles}},
  title         = {Real-time software module design framework for building self-adaptive robotic systems},
  booktitle     = {2015 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},
  year          = {2015},
  volume        = {2015-December},
  pages         = {2597-2602},
  month         = {Sep.},
  note          = {cited By 1},
  abstract      = {We proposed ReFrESH in our previous publication. It is a self-adaptive infrastructure aimed at managing the performance of multi-robot systems through dynamically diagnosing and maintaining unexpected issues of modules. To integrate ReFrESH and robotic application-level software more conveniently, it is necessary to develop a module design framework to support implementation of self-adaptive real-time software. To this end, based on the port-based object abstraction and port-automation theory, we propose the Extended Port-Based Object (E-PBO). E-PBO has two main advantages: (1) it builds the basis of a programming model to provide specific, yet flexible, guidelines to robotics application engineers for creating and integrating software modules; (2) it forms the basis of a self-adaption model to provide specific methods for evaluating the running task configuration and estimating the new but non-running task configuration (if required) without interfering with the running configuration. E-PBO has been incorporated into the Port-Based Object Real-Time Operating System (PBO/RT) and applied to a visual servoing robotic application, which is demonstrated here.},
  art_number    = {7353731},
  document_type = {Conference Paper},
  doi           = {10.1109/IROS.2015.7353731},
  groups        = {ieee, wiley},
  journal       = {IEEE International Conference on Intelligent Robots and Systems},
  keywords      = {control engineering computing;multi-robot systems;object-oriented programming;operating systems (computers);real-time systems;robot programming;robot vision;self-adjusting systems;visual servoing;real-time software module design framework;self-adaptive robotic systems;ReFrESH;self-adaptive infrastructure;multirobot systems;robotic application-level software;port-based object abstraction;port-automation theory;extended port-based object;E-PBO;running task configuration;port-based object real-time operating system;PBO-RT;visual servoing robotic application;Ports (Computers);Real-time systems;Operating systems;Visual servoing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958159183&doi=10.1109%2fIROS.2015.7353731&partnerID=40&md5=1175fb78ed38a116c2eaabcb2d3ee6b9},
}

@InProceedings{Ramaswamy2015,
  author        = {A. {Ramaswamy} and B. {Monsuez} and A. {Tapus}},
  title         = {Model-driven self-adaptation of robotics software using probabilistic approach},
  booktitle     = {2015 European Conference on Mobile Robots (ECMR)},
  year          = {2015},
  pages         = {1-6},
  month         = {Sep.},
  note          = {cited By 1},
  abstract      = {A typical feature of robotic architectures are its reactivity and self-adaptivity. In practice, this is achieved by context-dependent dynamic invocation of software components in robotic architectures. In this paper, we specifically address how this self-adaptation capability can be formally defined and modeled in an architecture-independent way. We propose a probabilistic approach that facilitates system design and dynamic runtime adaptation satisfying the quality requirements. We also show how such techniques are incorporated in our model-driven framework: Self Adaptive Framework for Robotic Systems.},
  art_number    = {7324220},
  document_type = {Conference Paper},
  doi           = {10.1109/ECMR.2015.7324220},
  groups        = {ieee, wiley},
  journal       = {2015 European Conference on Mobile Robots, ECMR 2015 - Proceedings},
  keywords      = {object-oriented programming;probability;robot programming;model-driven robotics software self-adaptation;probabilistic approach;robotic architectures;context-dependent dynamic invocation;software components;dynamic runtime adaptation;quality requirements;model-driven framework;self adaptive framework;Computational modeling;Robots;Runtime;Logic gates;Analytical models;Adaptation models;Vehicles},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962279994&doi=10.1109%2fECMR.2015.7324220&partnerID=40&md5=5ce6f4ca9b96bf97949257183ab195ea},
}

@InProceedings{Zhang2014,
  author        = {X. {Zhang} and B. {Li} and J. {Zhu}},
  title         = {A Monitoring and Prediction Model of Workflow Based Self-Adaptive Software System},
  booktitle     = {2014 Second International Conference on Advanced Cloud and Big Data},
  year          = {2014},
  pages         = {115-121},
  month         = {Nov},
  note          = {cited By 3},
  abstract      = {It is critical of self-adaptive software system to monitor all kinds of information in real-time and obtain relevant data of the system to make the system can adjust automatically when necessary. In order to cope with the current market needs and rapidly changing environment, and combine the Web services with self-adaptive software systems perfectly, we proposed a monitoring and prediction model for workflow based self-adaptive system (WSAS for short) based on our previous work, which gives users more flexibility in expressing requirements on the model level, provides dynamic QoS value calculation and prediction at run time, and can both monitors operating status of system in real-time and monitor the context of the system, allowing software systems to better meet users' changing needs, and the operating environment changes. We also proposed ratio dependent and variable exponential smooth prediction method for QoS based on above model. Finally, through some experiment, it confirms that the prediction method of this paper is feasible and effective.},
  art_number    = {7176080},
  document_type = {Conference Paper},
  doi           = {10.1109/CBD.2014.22},
  groups        = {ieee, wiley},
  journal       = {Proceedings - 2014 2nd International Conference on Advanced Cloud and Big Data, CBD 2014},
  keywords      = {quality of service;Web services;workflow based self-adaptive software system;Web services;WSAS;dynamic QoS value calculation;dynamic QoS prediction;quality of service;Quality of service;Monitoring;Predictive models;Web services;Context;Data models;Prediction algorithms;Monitor;Self-adaptive System;QoS;Context;Exponential Smooth Predict},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959552207&doi=10.1109%2fCBD.2014.22&partnerID=40&md5=aa7bfbcf761c5b3ca530d18ddfd69127},
}

@Article{Abbas2020,
  author        = {Abbas, N. and Andersson, J. and Weyns, D.},
  title         = {ASPLe: A methodology to develop self-adaptive software systems with systematic reuse},
  journal       = {Journal of Systems and Software},
  year          = {2020},
  volume        = {167},
  pages         = {110626},
  issn          = {0164-1212},
  note          = {cited By 0},
  abstract      = {More than two decades of research have demonstrated an increasing need for software systems to be self-adaptive. Self-adaptation manages runtime dynamics, which are difficult to predict before deployment. A vast body of knowledge to develop Self-Adaptive Software Systems (SASS) has been established. However, we discovered a lack of process support to develop self-adaptive systems with reuse. The lack of process support may hinder knowledge transfer and quality design. To that end, we propose a domain-engineering based methodology, Autonomic Software Product Lines engineering (ASPLe), which provides step-by-step guidelines for developing families of SASS with systematic reuse. The evaluation results from a case study show positive effects on quality and reuse for self-adaptive systems designed using the ASPLe compared to state-of-the-art engineering practices. © 2020 The Author(s)},
  art_number    = {110626},
  document_type = {Article},
  doi           = {10.1016/j.jss.2020.110626},
  groups        = {scopus, wiley},
  keywords      = {Software reuse, Domain engineering, Self-Adaptation, Uncertainty, Variability, Software design},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85084955201&doi=10.1016%2fj.jss.2020.110626&partnerID=40&md5=26781baf75679b07712b33cfab41a69e},
}

@Article{Chen2020,
  author        = {Chen, X. and Wang, H. and Ma, Y. and Zheng, X. and Guo, L.},
  title         = {Self-adaptive resource allocation for cloud-based software services based on iterative QoS prediction model},
  journal       = {Future Generation Computer Systems},
  year          = {2020},
  volume        = {105},
  pages         = {287-296},
  issn          = {0167-739X},
  note          = {cited By 3},
  abstract      = {Emerging cloud-based software services have proposed request for self-adaptive resource allocation that provides to dynamically adjust resources on demand. Traditional self-adaptive resource allocation methods are rule-driven that they combine expert knowledge with a separate set of management rules for each software, leading to high implementation complexity and administrative cost. Recent researches on self-adaptive resource allocation mainly focus on machine learning and control theory. However, machine learning techniques require plenty training data, which in many cases is insufficient and leads to low accuracy of QoS prediction model as well as the ineffectiveness of resource allocation, while resource allocation based on control theory needs a large number of iterations, resulting in a high overhead such as frequent virtual machine switches. This paper proposes a self-adaptive resource allocation method that is actually a framework composed of feedback loops, each of which goes through our designed iterative QoS prediction model and PSO-based runtime decision algorithm. In contrast to previous QoS prediction models which predict a QoS value once and for all, ours improves the predicted QoS value in iterations towards the best one. In the prediction, we first use the workload, the allocated resource, the real QoS value and an operation of resource allocation to produce a QoS value. Then we employ PSO-based runtime decision algorithm together with the predicted QoS value to determine future resource allocation operations. The loops iterate until the PSO-based algorithm suggests no further improvement over the current resource allocation. We evaluate our approach on RUBiS benchmark, illustrating that based on the same historical data, our method can achieve a better QoS prediction accuracy that is 15% higher than the current state of the art. Moreover, it is also shown the effectiveness of cloud application resource allocation is improved by roughly 5%–6%. © 2019},
  document_type = {Article},
  doi           = {10.1016/j.future.2019.12.005},
  groups        = {scopus, wiley},
  keywords      = {Cloud computing, Self-adaptive resource allocation, QoS prediction model, Runtime decision algorithm},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076161568&doi=10.1016%2fj.future.2019.12.005&partnerID=40&md5=285f48475225975de0496f9090253a59},
}

@Article{Lee2018a,
  author        = {Lee, E. and Kim, Y.-G. and Seo, Y.-D. and Seol, K. and Baik, D.-K.},
  title         = {RINGA: Design and verification of finite state machine for self-adaptive software at runtime},
  journal       = {Information and Software Technology},
  year          = {2018},
  volume        = {93},
  pages         = {200-222},
  issn          = {0950-5849},
  note          = {cited By 10},
  abstract      = {Context In recent years, software environments such as the cloud and Internet of Things (IoT) have become increasingly sophisticated, and as a result, development of adaptable software has become very important. Self-adaptive software is appropriate for today's needs because it changes its behavior or structure in response to a changing environment at runtime. To adapt to changing environments, runtime verification is an important requirement, and research that integrates traditional verification with self-adaptive software is in high demand. Objective Model checking is an effective static verification method for software, but existing problems at runtime remain unresolved. In this paper, we propose a self-adaptive software framework that applies model checking to software to enable verification at runtime. Method The proposed framework consists of two parts: the design of self-adaptive software using a finite state machine and the adaptation of the software during runtime. For the first part, we propose two finite state machines for self-adaptive software called the self-adaptive finite state machine (SA-FSM) and abstracted finite state machine (A-FSM). For the runtime verification part, a self-adaptation process based on a MAPE (monitoring, analyzing, planning, and executing) loop is implemented. Results We performed an empirical evaluation with several model-checking tools (i.e., NuSMV and CadenceSMV), and the results show that the proposed method is more efficient at runtime. We also investigated a simple example application in six scenarios related to the IoT environment. We implemented Android and Arduino applications, and the results show the practical usability of the proposed self-adaptive framework at runtime. Conclusions We proposed a framework for integrating model checking with a self-adaptive software lifecycle. The results of our experiments showed that the proposed framework can achieve verify self-adaptation software at runtime. © 2017 Elsevier B.V.},
  document_type = {Article},
  doi           = {10.1016/j.infsof.2017.09.008},
  groups        = {scopus, wiley},
  keywords      = {Self-adaptive software, Model checking, Finite state machine, Runtime},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85029756817&doi=10.1016%2fj.infsof.2017.09.008&partnerID=40&md5=fcefec6dd1bceaae1f7d267fbcae2eb2},
}

@Article{Salama2017,
  author        = {Salama, M. and Bahsoon, R.},
  title         = {Analysing and modelling runtime architectural stability for self-adaptive software},
  journal       = {Journal of Systems and Software},
  year          = {2017},
  volume        = {133},
  pages         = {95-112},
  issn          = {0164-1212},
  note          = {cited By 3},
  abstract      = {With the increased dependence on software, there is a pressing need for engineering long-lived software. As architectures have a profound effect on the life-span of the software and the provisioned quality of service, stable architectures are significant assets. Architectural stability tends to reflect the success of the system in supporting continuous changes without phasing-out. For self-adaptive architectures, the behavioural aspect of stability is essential for seamless operation, to continuously keep the provision of quality requirements stable and prevent unnecessary adaptations that will risk degrading the system. In this paper, we introduce a systematic approach for analysing and modelling architectural stability. Specifically, we leverage architectural concerns and viewpoints to explicitly analyse stability attributes of the intended behaviour. Due to the probabilistic nature of systems’ behaviour, stability modelling is based on a probabilistic relational model for knowledge representation of stability multiple viewpoints. The model, empowered by the quantitative analysis of Bayesian networks, is capable to conduct runtime inference for reasoning about stability under runtime uncertainty. To illustrate the applicability and evaluate the proposed approach, we consider the case of cloud architectures. The results show that the approach increases the efficiency of the architecture in keeping the expected behaviour stable during runtime operation. © 2017 Elsevier Inc.},
  document_type = {Article},
  doi           = {10.1016/j.jss.2017.07.041},
  groups        = {scopus, wiley},
  keywords      = {Software architecture, Architectural stability, Self-adaptive architecture, Sustainability, Quality of service, Cloud architecture},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028078659&doi=10.1016%2fj.jss.2017.07.041&partnerID=40&md5=5f726689fadd0c17b6fd95d344a2c829},
}

@Article{Chen2017b,
  author        = {Chen, L. and Huang, L. and Li, C. and Wu, X.},
  title         = {Self-adaptive architecture evolution with model checking: A software cybernetics approach},
  journal       = {Journal of Systems and Software},
  year          = {2017},
  volume        = {124},
  pages         = {228-246},
  issn          = {0164-1212},
  note          = {cited By 5},
  abstract      = {The cloud computing era requires software architecture to be self-adaptive to the dynamic environment. This autonomous feature brings uncertainty and makes software behavior difficult to control. The uncontrollable behavior is caused by ill-defined architecture and might lead to system disruption. To address this problem, we propose a novel framework which applies software cybernetics to guide self-adaptive architecture evolution. In our framework, we formulate the architecture evolution process as a feedback control process. In the process, we take the self-adaptive architecture model and the model checking technique as the controlled object and controller, respectively. First, the self-adaptive architecture is specified by Breeze/ADL. Second, the framework leverages model checking to validate adaptive Breeze/ADL specifications. Third, a learning algorithm is designed to regulate validation results to generate feedback rules – Productions to guide the architecture evolution. A smart phone application example is chosen to demonstrate the feasibility of our framework. The results show that our framework facilitates architects to detect undesired states which are caused by error-prone adaptation rules. © 2016 Elsevier Inc.},
  document_type = {Article},
  doi           = {10.1016/j.jss.2016.03.010},
  groups        = {scopus, wiley},
  keywords      = {Self-adaptive software architecture, Model checking, Software cybernetics, Architecture evolution},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963795932&doi=10.1016%2fj.jss.2016.03.010&partnerID=40&md5=3b9b0fc06b21554a4b98afe5e536aa18},
}

@Article{Camara2016,
  author        = {Cámara, J. and Correia, P. and de Lemos, R. and Garlan, D. and Gomes, P. and Schmerl, B. and Ventura, R.},
  title         = {Incorporating architecture-based self-adaptation into an adaptive industrial software system},
  journal       = {Journal of Systems and Software},
  year          = {2016},
  volume        = {122},
  pages         = {507-523},
  issn          = {0164-1212},
  note          = {cited By 10},
  abstract      = {Complex software-intensive systems are increasingly relied upon for all kinds of activities in society, leading to the requirement that these systems should be resilient to changes that may occur to the system, its environment, or its goals. Traditionally, resilience has been achieved either through: (i) low-level mechanisms embedded in the implementation (e.g., exception handling, timeouts, redundancies), which are unable to detect subtle but important anomalies (e.g., progressive performance degradation); or (ii) human oversight, which is costly and unreliable. Architecture-based self-adaptation (ABSA) is regarded as a promising approach to improve the resilience and reduce the development/operation costs of such systems. Although researchers have illustrated the benefits of ABSA through a number of small-scale case studies, it remains to be seen whether ABSA is truly effective in handling changes at run-time in industrial-scale systems. In this paper, we report on our experience applying an ABSA framework (Rainbow) to a large-scale commercial software system, called Data Acquisition and Control Service (DCAS), which is used to monitor and manage highly populated networks of devices in renewable energy production plants. In the approach followed, we have replaced some of the existing adaptive mechanisms embedded in DCAS by those advocated by ABSA proponents. This has allowed us to assess the development costs associated with the reengineering of adaptive mechanisms when using an ABSA solution, and to make effective comparisons, in terms of operational performance, between a baseline industrial system and one that uses ABSA. Our results show that using the ABSA concepts as embodied in Rainbow enabled an independent team of developers to: (i) effectively implement the adaptation behavior required from such industrial systems; and (ii) obtain important benefits in terms of maintainability and extensibility of adaptation mechanisms. © 2015 Elsevier Inc.},
  document_type = {Article},
  doi           = {10.1016/j.jss.2015.09.021},
  groups        = {scopus, wiley},
  keywords      = {Architecture-based self-adaptation, Evolution, Rainbow},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992679340&doi=10.1016%2fj.jss.2015.09.021&partnerID=40&md5=286495d9c74007ccff1b50de1e2f6a7d},
}

@Article{Lung2016,
  author        = {Lung, C.-H. and Zhang, X. and Rajeswaran, P.},
  title         = {Improving software performance and reliability in a distributed and concurrent environment with an architecture-based self-adaptive framework},
  journal       = {Journal of Systems and Software},
  year          = {2016},
  volume        = {121},
  pages         = {311-328},
  issn          = {0164-1212},
  note          = {cited By 4},
  abstract      = {More and more, modern software systems in a distributed and parallel environment are becoming highly complex and difficult to manage. A self-adaptive approach that integrates monitoring, analyzing, and actuation functionalities has the potential to accommodate an ever dynamically changing environment. This paper proposes an architecture-level self-adaptive framework with the aim of improving performance and reliability. To meet such a goal, this paper presents a Self-Adaptive Framework for Concurrency Architectures (SAFCA) that consists of multiple well-documented architectural patterns in addition to monitoring and adaptive capabilities. With this framework, a system using an architectural alternative can activate another alternative at runtime to cope with increasing demands or to recover from failure. Five adaptation mechanisms have been developed for concept demonstration and evaluation; four focus on performance improvement and one deals with failover and reliability enhancement. We have performed a number of experiments with this framework. The experimental results demonstrate that the proposed adaptive framework can mitigate the over-provisioning method commonly used in practice. As a result, resource usage becomes more efficient for most normal conditions, while the system is still able to effectively handle bursty or growing demands using an adaptive mechanism. The performance of SAFCA is also better than systems using only standalone architectural alternatives without an adaptation scheme. Moreover, the experimental results show that a fast recovery can be realized in the case of failure by conducting an architecture switchover to maintain the desired service. © 2016 Elsevier Inc.},
  document_type = {Article},
  doi           = {10.1016/j.jss.2016.06.102},
  groups        = {scopus, wiley},
  keywords      = {Autonomic computing, Software architecture, Performance, Reliability, Patterns, Distributed and concurrent architecture, Elastic computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989809865&doi=10.1016%2fj.jss.2016.06.102&partnerID=40&md5=108cee85753b141144e48b4ac91f3cd6},
}

@Article{Han2016b,
  author        = {Han, D. and Yang, Q. and Xing, J. and Li, J. and Wang, H.},
  title         = {FAME: A UML-based framework for modeling fuzzy self-adaptive software},
  journal       = {Information and Software Technology},
  year          = {2016},
  volume        = {76},
  pages         = {118-134},
  issn          = {0950-5849},
  note          = {cited By 9},
  abstract      = {Context: Software Fuzzy Self-Adaptation (SFSA) is a fuzzy control-based software self-adaptation paradigm proposed to deal with the fuzzy uncertainty existing in self-adaptive software. However, as many software engineers lack fuzzy control knowledge, it is difficult for them to design and model this kind of fuzzy self-adaptive software (F-SAS). Therefore, efficient and effective modeling technologies and tools are needed for the SFSA framework. Objective: This paper aims to identify modeling requirements of F-SAS and to provide a modeling framework to specify, design and model F-SAS systems. Such a framework can simplify modeling process of F-SAS and improve the accessibility of software engineers to the SFSA paradigm. Method: This study proposes a modeling framework called Fuzzy self-Adaptation ModEling (FAME). By extending UML, FAME creates three types of modeling views. An analysis view called Fuzzy Case Diagram is created to specify the fuzzy self-adaptation goal and the realization processes of this goal. A structure view called Fuzzy Class Diagram is created to describe the fuzzy concepts and structural characteristics of F-SAS. A behavior view called Fuzzy Sequence Diagram is created to depict the dynamic behaviors of the F-SAS systems. The framework is implemented as a plug-in of Enterprise Architect. Results: We demonstrate the effectiveness and efficiency of the proposed approach by carrying out a subject-based empirical evaluation. The results show that FAME framework can improve modeling quality of F-SAS systems by 44.38% and shorten modeling time of F-SAS systems by 38.41% in comparison with traditional UML. Thus, FAME can considerably ease the modeling process of F-SAS systems. Conclusion: FAME framework incorporates the SFSA concepts into standard UML. Therefore, it provides a direct support to model SFSA characteristics and improves the accessibility of software engineers to the SFSA paradigm. Furthermore, it behaves a good example and provides good references for modeling domain-specific software systems. © 2016 Elsevier B.V. All rights reserved.},
  document_type = {Article},
  doi           = {10.1016/j.infsof.2016.04.014},
  groups        = {scopus, wiley},
  keywords      = {Software self-adaptation, Self-adaptive software modeling, SFSA, UML, Uncertainty},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84965159897&doi=10.1016%2fj.infsof.2016.04.014&partnerID=40&md5=d78ece3bf6f70023f9ae2ea492e184e9},
}

@Article{Abbas2015a,
  author        = {Abbas, N. and Andersson, J.},
  title         = {Architectural reasoning support for product-lines of self-adaptive software systems - A case study},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9278},
  pages         = {20-36},
  note          = {cited By 2},
  abstract      = {Software architecture serves as a foundation for the design and development of software systems. Designing an architecture requires extensive analysis and reasoning. The study presented herein focuses on the architectural analysis and reasoning in support of engineering selfadaptive software systems with systematic reuse. Designing self-adaptive software systems with systematic reuse introduces variability along three dimensions; adding more complexity to the architectural analysis and reasoning process. To this end, the study presents an extended Architectural Reasoning Framework with dedicated reasoning support for selfadaptive systems and reuse. To evaluate the proposed framework, we conducted an initial feasibility case study, which concludes that the proposed framework assists the domain architects to increase reusability, reduce fault density, and eliminate differences in skills and experiences among architects, which were our research goals and are decisive factors for a system’s overall quality. © Springer International Publishing Switzerland 2015.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-23727-5_2},
  groups        = {scopus, wiley},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975686953&doi=10.1007%2f978-3-319-23727-5_2&partnerID=40&md5=e31ae981f787aa02bfd633793b8bd08c},
}

@Article{2013,
  title         = {Software Engineering for Self-Adaptive Systems II - International Seminar, Revised Selected and Invited Papers},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7475 LNCS},
  note          = {cited By 5},
  abstract      = {The proceedings contain 15 papers. The topics discussed include: software engineering for self-adaptive systems: a second research roadmap; on patterns for decentralized control in self-adaptive systems; software engineering processes for self-adaptive systems; towards practical runtime verification and validation of self-adaptive software systems; awareness requirements; self-management of distributed systems using high-level goal policies; dealing with non-functional requirements for adaptive systems via dynamic software product-lines; uncertainty in self-adaptive software systems; a software lifecycle process to support consistent evolutions; DYNAMICO: a reference model for governing control objectives and context relevance in self-adaptive software systems; fault-adaptivity in hard real-time component-based software systems; hierarchical self-optimization of SaaS applications in clouds; and towards user tailoring of self-adaptation in ubiquitous computing.},
  document_type = {Conference Review},
  groups        = {scopus, wiley},
  page_count    = {393},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883584629&partnerID=40&md5=600e1ed1aff6ac115a07b5fcbc960975},
}

@Article{Salehie2012,
  author        = {Salehie, M. and Tahvildari, L.},
  title         = {Towards a goal-driven approach to action selection in self-adaptive software},
  journal       = {Software - Practice and Experience},
  year          = {2012},
  volume        = {42},
  number        = {2},
  pages         = {211-233},
  note          = {cited By 26},
  abstract      = {Self-adaptive software is a closed-loop system, since it continuously monitors its context (i.e. environment) and/or self (i.e. software entities) in order to adapt itself properly to changes. We believe that representing adaptation goals explicitly and tracing them at run-time are helpful in decision making for adaptation. While goal-driven models are used in requirements engineering, they have not been utilized systematically yet for run-time adaptation. To address this research gap, this article focuses on the deciding process in self-adaptive software, and proposes the Goal-Action-Attribute Model (GAAM). An action selection mechanism, based on cooperative decision making, is also proposed that uses GAAM to select the appropriate adaptation action(s). The emphasis is on building a light-weight and scalable run-time model which needs less design and tuning effort comparing with a typical rule-based approach. The GAAM and action selection mechanism are evaluated using a set of experiments on a simulated multi-tier enterprise application, and two sample ordinal and cardinal action preference lists. The evaluation is accomplished based on a systematic design of experiment and a detailed statistical analysis in order to investigate several research questions. The findings are promising, considering the obtained results, and other impacts of the approach on engineering self-adaptive software. Although, one case study is not enough to generalize the findings, and the proposed mechanism does not always outperform a typical rule-based approach, less effort, scalability, and flexibility of GAAM are remarkable. Copyright © 2011 John Wiley & Sons, Ltd.},
  document_type = {Article},
  doi           = {10.1002/spe.1066},
  eprint        = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.1066},
  groups        = {scopus, wiley},
  keywords      = {self-adaptive software, goal-driven model, run-time action selection},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84856237838&doi=10.1002%2fspe.1066&partnerID=40&md5=459a1d14b00d4f3260ed8efe78ca078b},
}

@Article{Huang2010,
  author        = {Huang, C.-H. and Shen, J.-S. and Hsiung, P.-A.},
  title         = {A self-adaptive hardware/software system architecture for ubiquitous computing applications},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2010},
  volume        = {6406 LNCS},
  pages         = {382-396},
  note          = {cited By 0},
  abstract      = {Within ubiquitous computing environments, services and devices can be dynamically adapted to changing conditions, and thus adaptivity becomes a key requirement in providing possibly better system performance. Most existing ubiquitous computing systems either support only software adaptation or manage reconfigurable hardware functions as conventional hardware devices. As a result, system adaptation and performance improvement are still restricted. To provide more robust system adaptation, we propose a self-adaptive hardware/software system architecture (SAHA) that consists of service suppliers, a hardware adapter, a system manager, an observer, and a reconfigurable hardware architecture. Further, SAHA supports both hardware preemption and hardware virtualization within a complete self-aware system adaptation mechanism such that the utilization of system resources is enhanced and better performance is provided for ubiquitous computing applications. Experiments with a ubiquitous computing service for information encryption demonstrate that SAHA can reduce the turnaround time by at least 11.9% of that required by using the conventional method. © 2010 Springer-Verlag.},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-16355-5-31},
  groups        = {scopus, wiley},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-78449232146&doi=10.1007%2f978-3-642-16355-5-31&partnerID=40&md5=66a828586e95b84355c296e7645ea34c},
}

@Article{Derin2009c,
  author        = {Derin, O. and Ferrante, A. and Taddeo, A.V.},
  title         = {Coordinated management of hardware and software self-adaptivity},
  journal       = {Journal of Systems Architecture},
  year          = {2009},
  volume        = {55},
  number        = {3},
  pages         = {170-179},
  issn          = {1383-7621},
  note          = {cited By 9},
  abstract      = {Self-adaptivity is the capability of a system to adapt itself dynamically to achieve its goals. Self-adaptive systems will be widely used in the future both to efficiently use system resources and to ease the management of complex systems. The frameworks for self-adaptivity developed so far usually concentrate either on self-adaptive software or on self-adaptive hardware, but not both. In this paper, we propose a model of self-adaptive systems and we describe how to manage self-adaptivity at all levels (both hardware and software) by means of a decentralized control algorithm. The key advantage of decentralized control is in the simplicity of the local controllers. Simulation results are provided to show the main characteristics of the model and to discuss it. © 2008 Elsevier B.V. All rights reserved.},
  document_type = {Article},
  doi           = {10.1016/j.sysarc.2008.07.002},
  groups        = {scopus, wiley},
  keywords      = {Self-adaptivity, Reconfigurable, Autonomic, Goal, Architecture, Model, Application, Hardware, Software, Run-time environment},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-61749101931&doi=10.1016%2fj.sysarc.2008.07.002&partnerID=40&md5=2d4c8d121f79acbdbede9c0611674a72},
}

@Book{Laddaga2006b,
  title         = {Self-Adaptive Software: Internalized Feedback},
  publisher     = {John Wiley \& Sons, Ltd},
  year          = {2006},
  author        = {Laddaga, R. and Robertson, P. and Shrobe, H.},
  isbn          = {9780470871829},
  note          = {cited By 1},
  abstract      = {Summary This chapter contains sections titled: Introduction Historical Perspective Self-Adaptive Software Applications of Self-Adaptive Software Conclusion References},
  booktitle     = {Software Evolution and Feedback},
  chapter       = {26},
  document_type = {Book Chapter},
  doi           = {10.1002/0470871822.ch26},
  eprint        = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/0470871822.ch26},
  groups        = {scopus, wiley},
  journal       = {Software Evolution and Feedback: Theory and Practice},
  keywords      = {self-adaptive software, software application evolution concept, self-adaptivity components, grounded reflective adaptive vision architecture (GRAVA), image segmentation and labeling program, patchwork parser - statistical 2D parser, principal component decomposition (PCD), recognizer schematic},
  pages         = {507-537},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889443261&doi=10.1002%2f0470871822.ch26&partnerID=40&md5=52d75586b48d8dc87a307910de0610fc},
}

@Article{Tziallas2004,
  author        = {Tziallas, G. and Theodoulidis, B.},
  title         = {A controller synthesis algorithm for building self-adaptive software},
  journal       = {Information and Software Technology},
  year          = {2004},
  volume        = {46},
  number        = {11},
  pages         = {719-727},
  issn          = {0950-5849},
  note          = {cited By 6},
  abstract      = {A novel approach for building self-adaptive software based on a controller synthesis algorithm is presented. Self-adaptive software is a relatively new idea aiming at producing applications that can readily adapt in the face of changing user needs, desires and environment. Self-adaptive software has multiple ways of accomplishing its purpose, enough knowledge of its construction and is capable of changing behaviour when it does not accomplish its goal or when better functionality or performance is possible. The presented approach for building self-adaptive software uses ontological models of software components, which represent the environment, the composition, the required behaviour, and the possible configurations for the self-adaptive software. Self-adaptation is based on a supervisory control algorithm that reconfigures and controls software components in order to achieve their required behaviour. © 2004 Elsevier B.V. All rights reserved.},
  document_type = {Article},
  doi           = {10.1016/j.infsof.2003.12.005},
  groups        = {scopus, wiley},
  keywords      = {Self-adaptive software, Ontological models, Supervisory control, Controller synthesis},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-2542479354&doi=10.1016%2fj.infsof.2003.12.005&partnerID=40&md5=cbc405b3a98d18a06b02bfab93c17700},
}

@Article{Chen2003a,
  author        = {Chen, Z. and Dongarra, J. and Luszczek, P. and Roche, K.},
  title         = {Self-adapting software for numerical linear algebra and LAPACK for clusters},
  journal       = {Parallel Computing},
  year          = {2003},
  volume        = {29},
  number        = {11-12 SPEC.ISS.},
  pages         = {1723-1743},
  issn          = {0167-8191},
  note          = {cited By 42},
  abstract      = {This article describes the context, design, and recent development of the LAPACK for clusters (LFC) project. It has been developed in the framework of Self-Adapting Numerical Software (SANS) since we believe such an approach can deliver the convenience and ease of use of existing sequential environments bundled with the power and versatility of highly tuned parallel codes that execute on clusters. Accomplishing this task is far from trivial as we argue in the paper by presenting pertinent case studies and possible usage scenarios. © 2003 Elsevier B.V. All rights reserved.},
  document_type = {Article},
  doi           = {10.1016/j.parco.2003.05.014},
  groups        = {scopus, wiley},
  keywords      = {High performance computing, LAPACK, Linear algebra, PBLAS, ScaLAPACK, Numerical parallel libraries, Self-adapting software},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0242658775&doi=10.1016%2fj.parco.2003.05.014&partnerID=40&md5=68097f1821744d3ef75d88f5e9524b45},
}

@Conference{Moreno2019b,
  author        = {Moreno, G. and Kinneer, C. and Pandey, A. and Garlan, D.},
  title         = {DARTSim: An exemplar for evaluation and comparison of self-adaptation approaches for smart cyber-physical systems},
  booktitle     = {Proceedings of the 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
  year          = {2019},
  volume        = {2019-May},
  series        = {SEAMS ’19},
  pages         = {181-187},
  month         = {May},
  publisher     = {IEEE Press},
  note          = {cited By 1},
  abstract      = {Motivated by the need for cyber-physical systems (CPS) to perform in dynamic and uncertain environments, smart CPS (sCPS) utilize self-adaptive capabilities to autonomously manage uncertainties at the intersection of the cyber and physical worlds. In this context, self-adaptation approaches face particular challenges, including (i) environment monitoring that is subject to sensing errors; (ii) adaptation actions that take time, sometimes due to physical movement; (iii) dire consequences for not adapting in a timely manner; and (iv) incomparable objectives that cannot be conflated into a single utility metric (e.g., avoiding an accident vs. providing good service). To enable researchers to evaluate and compare self-adaptation approaches aiming to address these unique challenges of sCPS, we introduce the DARTSim exemplar. DARTSim implements a high-level simulation of a team of unmanned air vehicles (UAVs) performing a reconnaissance mission in a hostile and unknown environment. Designed to be easily used by researchers, DARTSim provides a TCP-based interface for easy integration with external adaptation managers, documentation, and a fast simulation capability. © 2019 IEEE.},
  art_number    = {8787123},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAMS.2019.00031},
  groups        = {scopus, wiley},
  issn          = {2157-2321},
  journal       = {ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems},
  keywords      = {simulation, cyber-physical system, self-adaptation},
  location      = {Montreal, Quebec, Canada},
  numpages      = {7},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85071079019&doi=10.1109%2fSEAMS.2019.00031&partnerID=40&md5=f8fb299bcfd98fa12c7616694262cf9c},
}

@Article{Laddaga1999a,
  author        = {Laddaga, Robert},
  title         = {Creating robust software through self-adaptation},
  journal       = {IEEE Intelligent Systems and Their Applications},
  year          = {1999},
  volume        = {14},
  number        = {3},
  pages         = {26-29},
  month         = {May},
  issn          = {2374-9423},
  note          = {cited By 43},
  abstract      = {The self-adaptive software is a new method developed for improving efficiency and predictability. The goal of this method is the creation of technology to enable programs to understand, monitor, and modify themselves. With its significant features, self-adaptive software will identify, promote, and evaluate new models of code design and run-time support.},
  document_type = {Article},
  doi           = {10.1109/MIS.1999.769879},
  groups        = {scopus, wiley},
  keywords      = {Robustness;Software performance;Runtime;Software testing;Control systems;Communication system control;Software tools;Hardware;Shape control;Application software},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0032625886&partnerID=40&md5=80b7ab3559a14e3fe71f2d796c29489a},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: grouping:
0 AllEntriesGroup:;
1 StaticGroup:Markings\;2\;1\;\;\;\;;
2 StaticGroup:[guan:]\;2\;1\;\;\;\;;
2 StaticGroup:guan:6\;2\;1\;\;\;\;;
1 StaticGroup:acm\;0\;1\;0x0000ffff\;\;\;;
1 StaticGroup:ieee\;0\;1\;0xff0000ff\;\;\;;
1 StaticGroup:scopus\;0\;1\;0xffff00ff\;\;\;;
1 StaticGroup:sciencedirect\;0\;1\;0x008000ff\;\;\;;
1 StaticGroup:wiley\;0\;1\;0xffa500ff\;\;\;;
}
